{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Python\u8bed\u8a00\u57fa\u784050\u8bfe \u7531\u4e8e\u4e4b\u524d\u53d1\u5e03\u7684 Python \u5b66\u4e60\u9879\u76ee Python-100-Days \u5bf9\u521d\u5b66\u8005\u6765\u8bf4\u4e0a\u624b\u8fd8\u662f\u6709\u4e00\u5b9a\u96be\u5ea6\uff0c\u6240\u4ee5\u82b1\u4e86\u70b9\u4e4b\u95f4\u628a\u539f\u6765\u9879\u76ee\u4e2d Python \u8bed\u8a00\u57fa\u7840\u90e8\u5206\u5355\u72ec\u5265\u79bb\u51fa\u6765\uff0c\u505a\u6210\u4e86\u73b0\u5728\u8fd9\u4e2a\u540d\u4e3a\u201cPython\u8bed\u8a00\u57fa\u784050\u8bfe\u201d\u7684\u9879\u76ee\u3002\u73b0\u5728\u8fd9\u4e2a\u9879\u76ee\u7528\u66f4\u4e3a\u7b80\u5355\u901a\u4fd7\u7684\u65b9\u5f0f\u91cd\u5199\u4e86\u539f\u6765\u201cPython100\u5929\u201d\u9879\u76ee\u4e2d\u7b2c1\u5929\u5230\u7b2c15\u5929\u7684\u90e8\u5206\uff0c \u6709\u5220\u51cf\u4e5f\u6709\u8865\u5145 \uff0c\u529b\u6c42 \u5bf9\u521d\u5b66\u8005\u66f4\u52a0\u53cb\u597d \uff0c\u4e5f\u6b22\u8fce\u5927\u5bb6\u5173\u6ce8\u8fd9\u4e2a\u6301\u7eed\u66f4\u65b0\u4e2d\u7684\u9879\u76ee\u3002\u56fd\u5185\u7528\u6237\u5982\u679c\u8bbf\u95ee GitHub \u6bd4\u8f83\u6162\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5173\u6ce8\u6211\u7684\u77e5\u4e4e\u53f7 Python-Jack \u4e0a\u7684 \u201c\u4ece\u96f6\u5f00\u59cb\u5b66Python\u201d \u4e13\u680f\uff0c\u4e24\u8fb9\u540c\u6b65\u66f4\u65b0\u3002\u6709\u9700\u8981\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u5173\u6ce8\u6211\u5728\u77e5\u4e4e\u7684\u4e13\u680f\u3001\u6587\u7ae0\u548c\u56de\u7b54\uff0c\u5f53\u7136\uff0c\u4e5f\u6b22\u8fce\u5927\u5bb6\u8bc4\u8bba\u3001\u6536\u85cf\u548c\u70b9\u8d5e\u3002\u5982\u679c\u9700\u8981 \u89c6\u9891\u6559\u7a0b \uff0c\u53ef\u4ee5\u5230\u201cB\u7ad9\u201d\u4e0a\u641c\u7d22 \u300aPython\u96f6\u57fa\u7840\u5feb\u901f\u4e0a\u624b\u300b \u3002 \u6700\u8fd1\uff0c\u56fd\u5185\u8bbf\u95ee GitHub \u4f1a\u56e0\u4e3a DNS\uff08\u57df\u540d\u89e3\u6790\u670d\u52a1\uff09\u7684\u95ee\u9898\u51fa\u73b0 \u56fe\u7247\u65e0\u6cd5\u663e\u793a \u7684\u60c5\u51b5\uff0c\u5982\u679c\u4f60\u4e5f\u9047\u5230\u4e86\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7 \u4fee\u6539\u672c\u673a\u7684 hosts \u6587\u4ef6 \u76f4\u63a5\u5bf9 GitHub \u7684\u8d44\u6e90\u94fe\u63a5\u8fdb\u884c\u57df\u540d\u89e3\u6790\u6765\u52a0\u4ee5\u89e3\u51b3\u3002\u4f7f\u7528 macOS \u7cfb\u7edf\u7684\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003 \u300amacOS \u4e0b\u4e09\u79cd\u4fee\u6539 hosts \u6587\u4ef6\u7684\u65b9\u6cd5\u300b \u4e00\u6587\u6765\u4fee\u6539 hosts \u6587\u4ef6\uff1b\u4f7f\u7528 Windows \u7cfb\u7edf\u7684\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003 \u300a\u5728 Windows \u4e0a\u5982\u4f55\u7ba1\u7406 hosts \u6587\u4ef6\u300b \u4e00\u6587\u6765\u8fdb\u884c\u64cd\u4f5c\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u4e0b\u9762\u7684\u5185\u5bb9\u6dfb\u52a0\u5230 hosts \u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u89e3\u51b3 GitHub \u4e0a\u56fe\u7247\u65e0\u6cd5\u663e\u793a\u7684\u95ee\u9898\u3002 151.101.184.133 assets-cdn.github.com 151.101.184.133 raw.githubusercontent.com 151.101.184.133 gist.githubusercontent.com 151.101.184.133 cloud.githubusercontent.com 151.101.184.133 camo.githubusercontent.com \u89c6\u9891\u8d44\u6e90 \u300aPython\u96f6\u57fa\u7840\u6559\u7a0b\u5feb\u901f\u4e0a\u624b\u300b - Python\u57fa\u7840\u90e8\u5206\u7684\u89c6\u9891\uff0c\u56e0\u4e3a\u968f\u5802\u5f55\u5236\uff0c\u6709\u7684\u65f6\u5019\u58f0\u97f3\u4f1a\u6709\u70b9\u5c0f\uff0c\u70b9\u8d5e\u8fc73000\u5c31\u4e3a\u5927\u5bb6\u91cd\u65b0\u5f55\u5236\u4e00\u5957\u58f0\u97f3\u548c\u753b\u9762\u90fd\u66f4\u597d\u7684\u7cbe\u8bb2\u7248\u89c6\u9891\u3002 \u300aPython\u96f6\u57fa\u7840\u6570\u636e\u5e93\u53ef\u89c6\u5316\u6559\u7a0b\u300b - \u6570\u636e\u5e93\u90e8\u5206\u7684\u89c6\u9891\uff0c\u968f\u5802\u5f55\u5236\uff0c\u6570\u636e\u5e93\u90e8\u5206\u8bb2\u5f97\u6bd4\u8f83\u7b80\u5355\uff0c\u540e\u9762\u8fd8\u8bb2\u4e86\u4e00\u4e9b\u505a\u6570\u636e\u53ef\u89c6\u5316\u7cfb\u7edf\u7684\u5185\u5bb9\uff0c\u6211\u81ea\u5df1\u5bf9\u8fd9\u5957\u89c6\u9891\u4e0d\u662f\u5f88\u6ee1\u610f\uff0c\u70b9\u8d5e\u8fc72000\u4e4b\u540e\u5c31\u91cd\u65b0\u505a\u4e00\u5957\u9762\u5411\u6570\u636e\u5206\u6790\u5e08\u7cbe\u8bb2\u6570\u636e\u5e93\u7684\u89c6\u9891\uff0c\u91cd\u70b9\u653e\u5728SQL\u548c\u4e1a\u52a1\u67e5\u8be2\u77e5\u8bc6\u4e0a\uff0c\u89e3\u51b3\u6570\u636e\u5206\u6790\u5e08\u65e5\u5e38\u63d0\u6570\u95ee\u9898\u3002 \u300aScrapy\u722c\u866b\u6846\u67b6\u6559\u5b66\u300b - \u722c\u866b\u6846\u67b6Scrapy\u6559\u5b66\u89c6\u9891\uff0c\u968f\u5802\u5f55\u5236\uff0c\u8bb2\u89e3\u4e86\u4e00\u4e2a\u722c\u53d6\u6dd8\u5b9d\u5546\u54c1\u4fe1\u606f\u7684\u9879\u76ee\uff0c\u6709\u4e00\u70b9\u5b9e\u7528\u4ef7\u503c\uff0c\u722c\u866b\u672c\u8eab\u5e76\u4e0d\u662f\u6211\u611f\u5174\u8da3\u7684\u5185\u5bb9\uff0c\u5c31\u5c06\u5c31\u770b\u770b\u5427\u3002 \u6587\u4ef6\u8d44\u6e90 \u6559\u7a0b\u548c\u89c6\u9891\u4e2d\u7528\u5230\u7684\u6587\u4ef6\u3001\u4ee3\u7801\u7b49\u5185\u5bb9\uff0c\u8bf7\u7edf\u4e00\u8bbf\u95ee\u767e\u5ea6\u7f51\u76d8\u83b7\u53d6\u3002 \u94fe\u63a5\uff1a https://pan.baidu.com/s/1NhWtYcpFzF72cxcsoDoXjQ?pwd=swg1 \uff0c\u63d0\u53d6\u7801\uff1aswg1\u3002 \u4ea4\u6d41\u5927\u7fa4 \u4e0b\u9762\u662f\u6211\u521b\u5efa\u7684\u5b66\u4e60\u4ea4\u6d41\u7fa4\uff0c\u6b22\u8fce\u52a0\u5165\u4e00\u8d77\u5b66\u4e60\u5171\u540c\u8fdb\u6b65\u3002 \u9a86\u660a\u7684Python\u5b66\u4e60\u7fa4-1\uff0c\u7fa4\u53f7\uff1a789050736\uff0c2000\u4eba\u5927\u7fa4\u3002 \u9a86\u660a\u7684Python\u5b66\u4e60\u7fa4-2\uff0c\u7fa4\u53f7\uff1a837590310\uff0c2000\u4eba\u5927\u7fa4\u3002 \u9a86\u660a\u7684Python\u5b66\u4e60\u7fa4-3\uff0c\u7fa4\u53f7\uff1a784430256\uff0c1000\u4eba\u5927\u7fa4\u3002","title":"\u9996\u9875"},{"location":"#python50","text":"\u7531\u4e8e\u4e4b\u524d\u53d1\u5e03\u7684 Python \u5b66\u4e60\u9879\u76ee Python-100-Days \u5bf9\u521d\u5b66\u8005\u6765\u8bf4\u4e0a\u624b\u8fd8\u662f\u6709\u4e00\u5b9a\u96be\u5ea6\uff0c\u6240\u4ee5\u82b1\u4e86\u70b9\u4e4b\u95f4\u628a\u539f\u6765\u9879\u76ee\u4e2d Python \u8bed\u8a00\u57fa\u7840\u90e8\u5206\u5355\u72ec\u5265\u79bb\u51fa\u6765\uff0c\u505a\u6210\u4e86\u73b0\u5728\u8fd9\u4e2a\u540d\u4e3a\u201cPython\u8bed\u8a00\u57fa\u784050\u8bfe\u201d\u7684\u9879\u76ee\u3002\u73b0\u5728\u8fd9\u4e2a\u9879\u76ee\u7528\u66f4\u4e3a\u7b80\u5355\u901a\u4fd7\u7684\u65b9\u5f0f\u91cd\u5199\u4e86\u539f\u6765\u201cPython100\u5929\u201d\u9879\u76ee\u4e2d\u7b2c1\u5929\u5230\u7b2c15\u5929\u7684\u90e8\u5206\uff0c \u6709\u5220\u51cf\u4e5f\u6709\u8865\u5145 \uff0c\u529b\u6c42 \u5bf9\u521d\u5b66\u8005\u66f4\u52a0\u53cb\u597d \uff0c\u4e5f\u6b22\u8fce\u5927\u5bb6\u5173\u6ce8\u8fd9\u4e2a\u6301\u7eed\u66f4\u65b0\u4e2d\u7684\u9879\u76ee\u3002\u56fd\u5185\u7528\u6237\u5982\u679c\u8bbf\u95ee GitHub \u6bd4\u8f83\u6162\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5173\u6ce8\u6211\u7684\u77e5\u4e4e\u53f7 Python-Jack \u4e0a\u7684 \u201c\u4ece\u96f6\u5f00\u59cb\u5b66Python\u201d \u4e13\u680f\uff0c\u4e24\u8fb9\u540c\u6b65\u66f4\u65b0\u3002\u6709\u9700\u8981\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u5173\u6ce8\u6211\u5728\u77e5\u4e4e\u7684\u4e13\u680f\u3001\u6587\u7ae0\u548c\u56de\u7b54\uff0c\u5f53\u7136\uff0c\u4e5f\u6b22\u8fce\u5927\u5bb6\u8bc4\u8bba\u3001\u6536\u85cf\u548c\u70b9\u8d5e\u3002\u5982\u679c\u9700\u8981 \u89c6\u9891\u6559\u7a0b \uff0c\u53ef\u4ee5\u5230\u201cB\u7ad9\u201d\u4e0a\u641c\u7d22 \u300aPython\u96f6\u57fa\u7840\u5feb\u901f\u4e0a\u624b\u300b \u3002 \u6700\u8fd1\uff0c\u56fd\u5185\u8bbf\u95ee GitHub \u4f1a\u56e0\u4e3a DNS\uff08\u57df\u540d\u89e3\u6790\u670d\u52a1\uff09\u7684\u95ee\u9898\u51fa\u73b0 \u56fe\u7247\u65e0\u6cd5\u663e\u793a \u7684\u60c5\u51b5\uff0c\u5982\u679c\u4f60\u4e5f\u9047\u5230\u4e86\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7 \u4fee\u6539\u672c\u673a\u7684 hosts \u6587\u4ef6 \u76f4\u63a5\u5bf9 GitHub \u7684\u8d44\u6e90\u94fe\u63a5\u8fdb\u884c\u57df\u540d\u89e3\u6790\u6765\u52a0\u4ee5\u89e3\u51b3\u3002\u4f7f\u7528 macOS \u7cfb\u7edf\u7684\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003 \u300amacOS \u4e0b\u4e09\u79cd\u4fee\u6539 hosts \u6587\u4ef6\u7684\u65b9\u6cd5\u300b \u4e00\u6587\u6765\u4fee\u6539 hosts \u6587\u4ef6\uff1b\u4f7f\u7528 Windows \u7cfb\u7edf\u7684\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003 \u300a\u5728 Windows \u4e0a\u5982\u4f55\u7ba1\u7406 hosts \u6587\u4ef6\u300b \u4e00\u6587\u6765\u8fdb\u884c\u64cd\u4f5c\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u4e0b\u9762\u7684\u5185\u5bb9\u6dfb\u52a0\u5230 hosts \u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u89e3\u51b3 GitHub \u4e0a\u56fe\u7247\u65e0\u6cd5\u663e\u793a\u7684\u95ee\u9898\u3002 151.101.184.133 assets-cdn.github.com 151.101.184.133 raw.githubusercontent.com 151.101.184.133 gist.githubusercontent.com 151.101.184.133 cloud.githubusercontent.com 151.101.184.133 camo.githubusercontent.com","title":"Python\u8bed\u8a00\u57fa\u784050\u8bfe"},{"location":"#_1","text":"\u300aPython\u96f6\u57fa\u7840\u6559\u7a0b\u5feb\u901f\u4e0a\u624b\u300b - Python\u57fa\u7840\u90e8\u5206\u7684\u89c6\u9891\uff0c\u56e0\u4e3a\u968f\u5802\u5f55\u5236\uff0c\u6709\u7684\u65f6\u5019\u58f0\u97f3\u4f1a\u6709\u70b9\u5c0f\uff0c\u70b9\u8d5e\u8fc73000\u5c31\u4e3a\u5927\u5bb6\u91cd\u65b0\u5f55\u5236\u4e00\u5957\u58f0\u97f3\u548c\u753b\u9762\u90fd\u66f4\u597d\u7684\u7cbe\u8bb2\u7248\u89c6\u9891\u3002 \u300aPython\u96f6\u57fa\u7840\u6570\u636e\u5e93\u53ef\u89c6\u5316\u6559\u7a0b\u300b - \u6570\u636e\u5e93\u90e8\u5206\u7684\u89c6\u9891\uff0c\u968f\u5802\u5f55\u5236\uff0c\u6570\u636e\u5e93\u90e8\u5206\u8bb2\u5f97\u6bd4\u8f83\u7b80\u5355\uff0c\u540e\u9762\u8fd8\u8bb2\u4e86\u4e00\u4e9b\u505a\u6570\u636e\u53ef\u89c6\u5316\u7cfb\u7edf\u7684\u5185\u5bb9\uff0c\u6211\u81ea\u5df1\u5bf9\u8fd9\u5957\u89c6\u9891\u4e0d\u662f\u5f88\u6ee1\u610f\uff0c\u70b9\u8d5e\u8fc72000\u4e4b\u540e\u5c31\u91cd\u65b0\u505a\u4e00\u5957\u9762\u5411\u6570\u636e\u5206\u6790\u5e08\u7cbe\u8bb2\u6570\u636e\u5e93\u7684\u89c6\u9891\uff0c\u91cd\u70b9\u653e\u5728SQL\u548c\u4e1a\u52a1\u67e5\u8be2\u77e5\u8bc6\u4e0a\uff0c\u89e3\u51b3\u6570\u636e\u5206\u6790\u5e08\u65e5\u5e38\u63d0\u6570\u95ee\u9898\u3002 \u300aScrapy\u722c\u866b\u6846\u67b6\u6559\u5b66\u300b - \u722c\u866b\u6846\u67b6Scrapy\u6559\u5b66\u89c6\u9891\uff0c\u968f\u5802\u5f55\u5236\uff0c\u8bb2\u89e3\u4e86\u4e00\u4e2a\u722c\u53d6\u6dd8\u5b9d\u5546\u54c1\u4fe1\u606f\u7684\u9879\u76ee\uff0c\u6709\u4e00\u70b9\u5b9e\u7528\u4ef7\u503c\uff0c\u722c\u866b\u672c\u8eab\u5e76\u4e0d\u662f\u6211\u611f\u5174\u8da3\u7684\u5185\u5bb9\uff0c\u5c31\u5c06\u5c31\u770b\u770b\u5427\u3002","title":"\u89c6\u9891\u8d44\u6e90"},{"location":"#_2","text":"\u6559\u7a0b\u548c\u89c6\u9891\u4e2d\u7528\u5230\u7684\u6587\u4ef6\u3001\u4ee3\u7801\u7b49\u5185\u5bb9\uff0c\u8bf7\u7edf\u4e00\u8bbf\u95ee\u767e\u5ea6\u7f51\u76d8\u83b7\u53d6\u3002 \u94fe\u63a5\uff1a https://pan.baidu.com/s/1NhWtYcpFzF72cxcsoDoXjQ?pwd=swg1 \uff0c\u63d0\u53d6\u7801\uff1aswg1\u3002","title":"\u6587\u4ef6\u8d44\u6e90"},{"location":"#_3","text":"\u4e0b\u9762\u662f\u6211\u521b\u5efa\u7684\u5b66\u4e60\u4ea4\u6d41\u7fa4\uff0c\u6b22\u8fce\u52a0\u5165\u4e00\u8d77\u5b66\u4e60\u5171\u540c\u8fdb\u6b65\u3002 \u9a86\u660a\u7684Python\u5b66\u4e60\u7fa4-1\uff0c\u7fa4\u53f7\uff1a789050736\uff0c2000\u4eba\u5927\u7fa4\u3002 \u9a86\u660a\u7684Python\u5b66\u4e60\u7fa4-2\uff0c\u7fa4\u53f7\uff1a837590310\uff0c2000\u4eba\u5927\u7fa4\u3002 \u9a86\u660a\u7684Python\u5b66\u4e60\u7fa4-3\uff0c\u7fa4\u53f7\uff1a784430256\uff0c1000\u4eba\u5927\u7fa4\u3002","title":"\u4ea4\u6d41\u5927\u7fa4"},{"location":"%E7%AC%AC01%E8%AF%BE%EF%BC%9A%E5%88%9D%E8%AF%86Python/","text":"\u7b2c01\u8bfe\uff1a\u521d\u8bc6Python Python\u7b80\u4ecb Python\u662f\u7531\u8377\u5170\u4eba\u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6\uff08Guido von Rossum\uff09\u53d1\u660e\u7684\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u662f\u76ee\u524d\u4e16\u754c\u4e0a\u6700\u53d7\u6b22\u8fce\u548c\u62e5\u6709\u6700\u591a\u7528\u6237\u7fa4\u4f53\u7684\u7f16\u7a0b\u8bed\u8a00\u3002 Python\u7684\u5386\u53f2 1989\u5e74\u5723\u8bde\u8282\uff1aGuido\u5f00\u59cb\u5199Python\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u3002 1991\u5e742\u6708\uff1a\u7b2c\u4e00\u4e2aPython\u89e3\u91ca\u5668\u8bde\u751f\uff0c\u5b83\u662f\u7528C\u8bed\u8a00\u5b9e\u73b0\u7684\uff0c\u53ef\u4ee5\u8c03\u7528C\u8bed\u8a00\u7684\u5e93\u51fd\u6570\u3002 1994\u5e741\u6708\uff1aPython 1.0\u6b63\u5f0f\u53d1\u5e03\u3002 2000\u5e7410\u6708\uff1aPython 2.0\u53d1\u5e03\uff0cPython\u7684\u6574\u4e2a\u5f00\u53d1\u8fc7\u7a0b\u66f4\u52a0\u900f\u660e\uff0c\u751f\u6001\u5708\u5f00\u59cb\u6162\u6162\u5f62\u6210\u3002 2008\u5e7412\u6708\uff1aPython 3.0\u53d1\u5e03\uff0c\u5f15\u5165\u4e86\u8bf8\u591a\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u7684\u65b0\u7279\u6027\uff0c\u4f46\u5e76\u4e0d\u5b8c\u5168\u517c\u5bb9\u4e4b\u524d\u7684Python\u4ee3\u7801\u3002 2020\u5e741\u6708\uff1a\u5728Python 2\u548cPython 3\u5171\u5b58\u4e8611\u5e74\u4e4b\u540e\uff0c\u5b98\u65b9\u505c\u6b62\u4e86\u5bf9Python 2\u7684\u66f4\u65b0\u548c\u7ef4\u62a4\uff0c\u5e0c\u671b\u7528\u6237\u5c3d\u5feb\u8fc7\u6e21\u5230Python 3\u3002 \u8bf4\u660e \uff1a\u5927\u591a\u6570\u8f6f\u4ef6\u7684\u7248\u672c\u53f7\u4e00\u822c\u5206\u4e3a\u4e09\u6bb5\uff0c\u5f62\u5982A.B.C\uff0c\u5176\u4e2dA\u8868\u793a\u5927\u7248\u672c\u53f7\uff0c\u5f53\u8f6f\u4ef6\u6574\u4f53\u91cd\u5199\u5347\u7ea7\u6216\u51fa\u73b0\u4e0d\u5411\u540e\u517c\u5bb9\u7684\u6539\u53d8\u65f6\uff0c\u624d\u4f1a\u589e\u52a0A\uff1bB\u8868\u793a\u529f\u80fd\u66f4\u65b0\uff0c\u51fa\u73b0\u65b0\u529f\u80fd\u65f6\u589e\u52a0B\uff1bC\u8868\u793a\u5c0f\u7684\u6539\u52a8\uff08\u4f8b\u5982\uff1a\u4fee\u590d\u4e86\u67d0\u4e2aBug\uff09\uff0c\u53ea\u8981\u6709\u4fee\u6539\u5c31\u589e\u52a0C\u3002 Python\u7684\u4f18\u7f3a\u70b9 Python\u7684\u4f18\u70b9\u5f88\u591a\uff0c\u7b80\u5355\u4e3a\u5927\u5bb6\u5217\u51fa\u51e0\u70b9\u3002 \u7b80\u5355\u660e\u786e\uff0c\u8ddf\u5176\u4ed6\u5f88\u591a\u8bed\u8a00\u76f8\u6bd4\uff0cPython\u66f4\u5bb9\u6613\u4e0a\u624b\u3002 \u80fd\u7528\u66f4\u5c11\u7684\u4ee3\u7801\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff0c\u63d0\u5347\u5f00\u53d1\u6548\u7387\u3002 \u5f00\u653e\u6e90\u4ee3\u7801\uff0c\u62e5\u6709\u5f3a\u5927\u7684\u793e\u533a\u548c\u751f\u6001\u5708\u3002 \u80fd\u591f\u505a\u7684\u4e8b\u60c5\u975e\u5e38\u591a\uff0c\u6709\u6781\u5f3a\u7684\u9002\u5e94\u6027\u3002 \u80fd\u591f\u5728Windows\u3001macOS\u3001Linux\u7b49\u5404\u79cd\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002 Python\u6700\u4e3b\u8981\u7684\u7f3a\u70b9\u662f\u6267\u884c\u6548\u7387\u4f4e\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u66f4\u770b\u91cd\u4ea7\u54c1\u7684\u5f00\u53d1\u6548\u7387\u800c\u4e0d\u662f\u6267\u884c\u6548\u7387\u7684\u65f6\u5019\uff0cPython\u5c31\u662f\u5f88\u597d\u7684\u9009\u62e9\u3002 Python\u7684\u5e94\u7528\u9886\u57df \u76ee\u524dPython\u5728Web\u670d\u52a1\u5668\u5e94\u7528\u5f00\u53d1\u3001\u4e91\u57fa\u7840\u8bbe\u65bd\u5f00\u53d1\u3001 \u7f51\u7edc\u6570\u636e\u91c7\u96c6 \uff08\u722c\u866b\uff09\u3001 \u6570\u636e\u5206\u6790 \u3001\u91cf\u5316\u4ea4\u6613\u3001 \u673a\u5668\u5b66\u4e60 \u3001 \u6df1\u5ea6\u5b66\u4e60 \u3001\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u81ea\u52a8\u5316\u8fd0\u7ef4\u7b49\u9886\u57df\u90fd\u6709\u7528\u6b66\u4e4b\u5730\u3002 \u5b89\u88c5Python\u73af\u5883 \u60f3\u8981\u5f00\u59cb\u4f60\u7684Python\u7f16\u7a0b\u4e4b\u65c5\uff0c\u9996\u5148\u5f97\u5728\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5Python\u73af\u5883\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u5f97\u5b89\u88c5\u8fd0\u884cPython\u7a0b\u5e8f\u7684\u5de5\u5177\uff0c\u901a\u5e38\u4e5f\u79f0\u4e4b\u4e3aPython\u89e3\u91ca\u5668\u3002\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u5927\u5bb6\u5b89\u88c5Python 3\u7684\u73af\u5883\uff0c\u5f88\u660e\u663e\u5b83\u662f\u76ee\u524d\u66f4\u597d\u7684\u9009\u62e9\u3002 Windows\u73af\u5883 \u53ef\u4ee5\u5728 Python\u5b98\u65b9\u7f51\u7ad9 \u627e\u5230\u4e0b\u8f7d\u94fe\u63a5\u5e76\u4e0b\u8f7dPython 3\u7684\u5b89\u88c5\u7a0b\u5e8f\u3002 \u5bf9\u4e8eWindows\u64cd\u4f5c\u7cfb\u7edf\uff0c\u53ef\u4ee5\u4e0b\u8f7d\u201cexecutable installer\u201d\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u5728Windows 7\u73af\u5883\u4e0b\u5b89\u88c5Python 3\uff0c\u9700\u8981\u5148\u5b89\u88c5Service Pack 1\u8865\u4e01\u5305\uff0c\u5927\u5bb6\u53ef\u4ee5\u5728Windows\u7684\u201c\u8fd0\u884c\u201d\u4e2d\u8f93\u5165 winver \u547d\u4ee4\uff0c\u4ece\u5f39\u51fa\u7684\u7a97\u53e3\u4e0a\u53ef\u4ee5\u770b\u5230\u4f60\u7684\u7cfb\u7edf\u662f\u5426\u5b89\u88c5\u4e86\u8be5\u8865\u4e01\u5305\u3002\u5982\u679c\u6ca1\u6709\u8be5\u8865\u4e01\u5305\uff0c\u4e00\u5b9a\u8981\u5148\u901a\u8fc7\u201cWindows Update\u201d\u6216\u8005\u7c7b\u4f3c\u201cCCleaner\u201d\u8fd9\u6837\u7684\u5de5\u5177\u81ea\u52a8\u5b89\u88c5\u8be5\u8865\u4e01\u5305\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\u901a\u5e38\u9700\u8981\u91cd\u542f\u4f60\u7684Windows\u7cfb\u7edf\uff0c\u7136\u540e\u518d\u5f00\u59cb\u5b89\u88c5Python\u73af\u5883\u3002 \u53cc\u51fb\u8fd0\u884c\u521a\u624d\u4e0b\u8f7d\u7684\u5b89\u88c5\u7a0b\u5e8f\uff0c\u4f1a\u6253\u5f00Python\u73af\u5883\u7684\u5b89\u88c5\u5411\u5bfc\u3002\u5728\u6267\u884c\u5b89\u88c5\u5411\u5bfc\u7684\u65f6\u5019\uff0c\u8bb0\u5f97\u52fe\u9009\u201cAdd Python 3.x to PATH\u201d\u9009\u9879\uff0c\u8fd9\u4e2a\u9009\u9879\u4f1a\u5e2e\u52a9\u6211\u4eec\u5c06Python\u7684\u89e3\u91ca\u5668\u6dfb\u52a0\u5230PATH\u73af\u5883\u53d8\u91cf\u4e2d\uff08\u4e0d\u7406\u89e3\u6ca1\u5173\u7cfb\uff0c\u7167\u505a\u5c31\u884c\uff09\uff0c\u5177\u4f53\u7684\u6b65\u9aa4\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u6253\u5f00Windows\u7684\u201c\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u201d\u5de5\u5177\uff08\u6216\u201cPowerShell\u201d\uff09\u5e76\u8f93\u5165 python --version \u6216 python -V \u6765\u68c0\u67e5\u5b89\u88c5\u662f\u5426\u6210\u529f\uff0c\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u53ef\u4ee5\u5728\u201c\u8fd0\u884c\u201d\u4e2d\u8f93\u5165 cmd \u6765\u6253\u5f00\u6216\u8005\u5728\u201c\u5f00\u59cb\u83dc\u5355\u201d\u7684\u9644\u4ef6\u4e2d\u627e\u5230\u5b83\u3002\u5982\u679c\u770b\u4e86Python\u89e3\u91ca\u5668\u5bf9\u5e94\u7684\u7248\u672c\u53f7\uff08\u5982\uff1aPython 3.7.8\uff09\uff0c\u8bf4\u660e\u4f60\u7684\u5b89\u88c5\u5df2\u7ecf\u6210\u529f\u4e86\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u8bf4\u660e \uff1a\u5982\u679c\u5b89\u88c5\u8fc7\u7a0b\u663e\u793a\u5b89\u88c5\u5931\u8d25\u6216\u6267\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u62a5\u9519\uff0c\u5f88\u6709\u53ef\u80fd\u662f\u56e0\u4e3a\u4f60\u7684Windows\u7cfb\u7edf\u7f3a\u5931\u4e86\u4e00\u4e9b\u52a8\u6001\u94fe\u63a5\u5e93\u6587\u4ef6\u6216C\u6784\u5efa\u5de5\u5177\u5bfc\u81f4\u7684\u95ee\u9898\u3002\u53ef\u4ee5\u5728 \u5fae\u8f6f\u5b98\u7f51 \u4e0b\u8f7dVisual C++ Redistributable for Visual Studio 2015\u6587\u4ef6\u8fdb\u884c\u4fee\u590d\uff0c64\u4f4d\u7684\u7cfb\u7edf\u9700\u8981\u4e0b\u8f7d\u6709x64\u6807\u8bb0\u7684\u5b89\u88c5\u6587\u4ef6\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u5730\u5740\u83b7\u53d6\u4fee\u590d\u5de5\u5177\uff0c\u8fd0\u884c\u4fee\u590d\u5de5\u5177\uff0c\u6309\u7167\u5982\u4e0b\u56fe\u6240\u793a\u7684\u65b9\u5f0f\u8fdb\u884c\u4fee\u590d\uff0c\u94fe\u63a5: https://pan.baidu.com/s/1iNDnU5UVdDX5sKFqsiDg5Q \u63d0\u53d6\u7801: cjs3\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u8fd8\u5e94\u8be5\u68c0\u67e5\u4e00\u4e0bPython\u7684\u5305\u7ba1\u7406\u5de5\u5177\u662f\u5426\u5df2\u7ecf\u53ef\u7528\uff0c\u5bf9\u5e94\u7684\u547d\u4ee4\u662f pip --version \u3002 macOS\u73af\u5883 macOS\u81ea\u5e26\u4e86Python 2\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u5b89\u88c5\u548c\u4f7f\u7528\u7684\u662fPython 3\u3002\u53ef\u4ee5\u901a\u8fc7Python\u5b98\u65b9\u7f51\u7ad9\u63d0\u4f9b\u7684 \u4e0b\u8f7d\u94fe\u63a5 \u627e\u5230\u9002\u5408macOS\u7684\u201cmacOS installer\u201d\u6765\u5b89\u88c5Python 3\uff0c\u5b89\u88c5\u8fc7\u7a0b\u57fa\u672c\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u52fe\u9009\uff0c\u76f4\u63a5\u70b9\u51fb\u201c\u4e0b\u4e00\u6b65\u201d\u5373\u53ef\u3002\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728macOS\u7684\u201c\u7ec8\u7aef\u201d\u5de5\u5177\u4e2d\u8f93\u5165 python3 \u547d\u4ee4\u6765\u8c03\u7528Python 3\u89e3\u91ca\u5668\uff0c\u56e0\u4e3a\u5982\u679c\u76f4\u63a5\u8f93\u5165 python \uff0c\u5c06\u4f1a\u8c03\u7528Python 2\u7684\u89e3\u91ca\u5668\u3002 \u603b\u7ed3 Python\u8bed\u8a00\u53ef\u4ee5\u505a\u5f88\u591a\u7684\u4e8b\u60c5\uff0c\u4e5f\u503c\u5f97\u6211\u4eec\u53bb\u5b66\u4e60\u3002\u8981\u4f7f\u7528Python\u8bed\u8a00\uff0c\u9996\u5148\u9700\u8981\u5728\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5Python\u73af\u5883\uff0c\u4e5f\u5c31\u662f\u8fd0\u884cPython\u7a0b\u5e8f\u7684Python\u89e3\u91ca\u5668\u3002","title":"\u7b2c01\u8bfe\uff1a\u521d\u8bc6Python"},{"location":"%E7%AC%AC01%E8%AF%BE%EF%BC%9A%E5%88%9D%E8%AF%86Python/#01python","text":"","title":"\u7b2c01\u8bfe\uff1a\u521d\u8bc6Python"},{"location":"%E7%AC%AC01%E8%AF%BE%EF%BC%9A%E5%88%9D%E8%AF%86Python/#python","text":"Python\u662f\u7531\u8377\u5170\u4eba\u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6\uff08Guido von Rossum\uff09\u53d1\u660e\u7684\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u662f\u76ee\u524d\u4e16\u754c\u4e0a\u6700\u53d7\u6b22\u8fce\u548c\u62e5\u6709\u6700\u591a\u7528\u6237\u7fa4\u4f53\u7684\u7f16\u7a0b\u8bed\u8a00\u3002","title":"Python\u7b80\u4ecb"},{"location":"%E7%AC%AC01%E8%AF%BE%EF%BC%9A%E5%88%9D%E8%AF%86Python/#python_1","text":"1989\u5e74\u5723\u8bde\u8282\uff1aGuido\u5f00\u59cb\u5199Python\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u3002 1991\u5e742\u6708\uff1a\u7b2c\u4e00\u4e2aPython\u89e3\u91ca\u5668\u8bde\u751f\uff0c\u5b83\u662f\u7528C\u8bed\u8a00\u5b9e\u73b0\u7684\uff0c\u53ef\u4ee5\u8c03\u7528C\u8bed\u8a00\u7684\u5e93\u51fd\u6570\u3002 1994\u5e741\u6708\uff1aPython 1.0\u6b63\u5f0f\u53d1\u5e03\u3002 2000\u5e7410\u6708\uff1aPython 2.0\u53d1\u5e03\uff0cPython\u7684\u6574\u4e2a\u5f00\u53d1\u8fc7\u7a0b\u66f4\u52a0\u900f\u660e\uff0c\u751f\u6001\u5708\u5f00\u59cb\u6162\u6162\u5f62\u6210\u3002 2008\u5e7412\u6708\uff1aPython 3.0\u53d1\u5e03\uff0c\u5f15\u5165\u4e86\u8bf8\u591a\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u7684\u65b0\u7279\u6027\uff0c\u4f46\u5e76\u4e0d\u5b8c\u5168\u517c\u5bb9\u4e4b\u524d\u7684Python\u4ee3\u7801\u3002 2020\u5e741\u6708\uff1a\u5728Python 2\u548cPython 3\u5171\u5b58\u4e8611\u5e74\u4e4b\u540e\uff0c\u5b98\u65b9\u505c\u6b62\u4e86\u5bf9Python 2\u7684\u66f4\u65b0\u548c\u7ef4\u62a4\uff0c\u5e0c\u671b\u7528\u6237\u5c3d\u5feb\u8fc7\u6e21\u5230Python 3\u3002 \u8bf4\u660e \uff1a\u5927\u591a\u6570\u8f6f\u4ef6\u7684\u7248\u672c\u53f7\u4e00\u822c\u5206\u4e3a\u4e09\u6bb5\uff0c\u5f62\u5982A.B.C\uff0c\u5176\u4e2dA\u8868\u793a\u5927\u7248\u672c\u53f7\uff0c\u5f53\u8f6f\u4ef6\u6574\u4f53\u91cd\u5199\u5347\u7ea7\u6216\u51fa\u73b0\u4e0d\u5411\u540e\u517c\u5bb9\u7684\u6539\u53d8\u65f6\uff0c\u624d\u4f1a\u589e\u52a0A\uff1bB\u8868\u793a\u529f\u80fd\u66f4\u65b0\uff0c\u51fa\u73b0\u65b0\u529f\u80fd\u65f6\u589e\u52a0B\uff1bC\u8868\u793a\u5c0f\u7684\u6539\u52a8\uff08\u4f8b\u5982\uff1a\u4fee\u590d\u4e86\u67d0\u4e2aBug\uff09\uff0c\u53ea\u8981\u6709\u4fee\u6539\u5c31\u589e\u52a0C\u3002","title":"Python\u7684\u5386\u53f2"},{"location":"%E7%AC%AC01%E8%AF%BE%EF%BC%9A%E5%88%9D%E8%AF%86Python/#python_2","text":"Python\u7684\u4f18\u70b9\u5f88\u591a\uff0c\u7b80\u5355\u4e3a\u5927\u5bb6\u5217\u51fa\u51e0\u70b9\u3002 \u7b80\u5355\u660e\u786e\uff0c\u8ddf\u5176\u4ed6\u5f88\u591a\u8bed\u8a00\u76f8\u6bd4\uff0cPython\u66f4\u5bb9\u6613\u4e0a\u624b\u3002 \u80fd\u7528\u66f4\u5c11\u7684\u4ee3\u7801\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff0c\u63d0\u5347\u5f00\u53d1\u6548\u7387\u3002 \u5f00\u653e\u6e90\u4ee3\u7801\uff0c\u62e5\u6709\u5f3a\u5927\u7684\u793e\u533a\u548c\u751f\u6001\u5708\u3002 \u80fd\u591f\u505a\u7684\u4e8b\u60c5\u975e\u5e38\u591a\uff0c\u6709\u6781\u5f3a\u7684\u9002\u5e94\u6027\u3002 \u80fd\u591f\u5728Windows\u3001macOS\u3001Linux\u7b49\u5404\u79cd\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002 Python\u6700\u4e3b\u8981\u7684\u7f3a\u70b9\u662f\u6267\u884c\u6548\u7387\u4f4e\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u66f4\u770b\u91cd\u4ea7\u54c1\u7684\u5f00\u53d1\u6548\u7387\u800c\u4e0d\u662f\u6267\u884c\u6548\u7387\u7684\u65f6\u5019\uff0cPython\u5c31\u662f\u5f88\u597d\u7684\u9009\u62e9\u3002","title":"Python\u7684\u4f18\u7f3a\u70b9"},{"location":"%E7%AC%AC01%E8%AF%BE%EF%BC%9A%E5%88%9D%E8%AF%86Python/#python_3","text":"\u76ee\u524dPython\u5728Web\u670d\u52a1\u5668\u5e94\u7528\u5f00\u53d1\u3001\u4e91\u57fa\u7840\u8bbe\u65bd\u5f00\u53d1\u3001 \u7f51\u7edc\u6570\u636e\u91c7\u96c6 \uff08\u722c\u866b\uff09\u3001 \u6570\u636e\u5206\u6790 \u3001\u91cf\u5316\u4ea4\u6613\u3001 \u673a\u5668\u5b66\u4e60 \u3001 \u6df1\u5ea6\u5b66\u4e60 \u3001\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u81ea\u52a8\u5316\u8fd0\u7ef4\u7b49\u9886\u57df\u90fd\u6709\u7528\u6b66\u4e4b\u5730\u3002","title":"Python\u7684\u5e94\u7528\u9886\u57df"},{"location":"%E7%AC%AC01%E8%AF%BE%EF%BC%9A%E5%88%9D%E8%AF%86Python/#python_4","text":"\u60f3\u8981\u5f00\u59cb\u4f60\u7684Python\u7f16\u7a0b\u4e4b\u65c5\uff0c\u9996\u5148\u5f97\u5728\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5Python\u73af\u5883\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u5f97\u5b89\u88c5\u8fd0\u884cPython\u7a0b\u5e8f\u7684\u5de5\u5177\uff0c\u901a\u5e38\u4e5f\u79f0\u4e4b\u4e3aPython\u89e3\u91ca\u5668\u3002\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u5927\u5bb6\u5b89\u88c5Python 3\u7684\u73af\u5883\uff0c\u5f88\u660e\u663e\u5b83\u662f\u76ee\u524d\u66f4\u597d\u7684\u9009\u62e9\u3002","title":"\u5b89\u88c5Python\u73af\u5883"},{"location":"%E7%AC%AC01%E8%AF%BE%EF%BC%9A%E5%88%9D%E8%AF%86Python/#windows","text":"\u53ef\u4ee5\u5728 Python\u5b98\u65b9\u7f51\u7ad9 \u627e\u5230\u4e0b\u8f7d\u94fe\u63a5\u5e76\u4e0b\u8f7dPython 3\u7684\u5b89\u88c5\u7a0b\u5e8f\u3002 \u5bf9\u4e8eWindows\u64cd\u4f5c\u7cfb\u7edf\uff0c\u53ef\u4ee5\u4e0b\u8f7d\u201cexecutable installer\u201d\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u5728Windows 7\u73af\u5883\u4e0b\u5b89\u88c5Python 3\uff0c\u9700\u8981\u5148\u5b89\u88c5Service Pack 1\u8865\u4e01\u5305\uff0c\u5927\u5bb6\u53ef\u4ee5\u5728Windows\u7684\u201c\u8fd0\u884c\u201d\u4e2d\u8f93\u5165 winver \u547d\u4ee4\uff0c\u4ece\u5f39\u51fa\u7684\u7a97\u53e3\u4e0a\u53ef\u4ee5\u770b\u5230\u4f60\u7684\u7cfb\u7edf\u662f\u5426\u5b89\u88c5\u4e86\u8be5\u8865\u4e01\u5305\u3002\u5982\u679c\u6ca1\u6709\u8be5\u8865\u4e01\u5305\uff0c\u4e00\u5b9a\u8981\u5148\u901a\u8fc7\u201cWindows Update\u201d\u6216\u8005\u7c7b\u4f3c\u201cCCleaner\u201d\u8fd9\u6837\u7684\u5de5\u5177\u81ea\u52a8\u5b89\u88c5\u8be5\u8865\u4e01\u5305\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\u901a\u5e38\u9700\u8981\u91cd\u542f\u4f60\u7684Windows\u7cfb\u7edf\uff0c\u7136\u540e\u518d\u5f00\u59cb\u5b89\u88c5Python\u73af\u5883\u3002 \u53cc\u51fb\u8fd0\u884c\u521a\u624d\u4e0b\u8f7d\u7684\u5b89\u88c5\u7a0b\u5e8f\uff0c\u4f1a\u6253\u5f00Python\u73af\u5883\u7684\u5b89\u88c5\u5411\u5bfc\u3002\u5728\u6267\u884c\u5b89\u88c5\u5411\u5bfc\u7684\u65f6\u5019\uff0c\u8bb0\u5f97\u52fe\u9009\u201cAdd Python 3.x to PATH\u201d\u9009\u9879\uff0c\u8fd9\u4e2a\u9009\u9879\u4f1a\u5e2e\u52a9\u6211\u4eec\u5c06Python\u7684\u89e3\u91ca\u5668\u6dfb\u52a0\u5230PATH\u73af\u5883\u53d8\u91cf\u4e2d\uff08\u4e0d\u7406\u89e3\u6ca1\u5173\u7cfb\uff0c\u7167\u505a\u5c31\u884c\uff09\uff0c\u5177\u4f53\u7684\u6b65\u9aa4\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u6253\u5f00Windows\u7684\u201c\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u201d\u5de5\u5177\uff08\u6216\u201cPowerShell\u201d\uff09\u5e76\u8f93\u5165 python --version \u6216 python -V \u6765\u68c0\u67e5\u5b89\u88c5\u662f\u5426\u6210\u529f\uff0c\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u53ef\u4ee5\u5728\u201c\u8fd0\u884c\u201d\u4e2d\u8f93\u5165 cmd \u6765\u6253\u5f00\u6216\u8005\u5728\u201c\u5f00\u59cb\u83dc\u5355\u201d\u7684\u9644\u4ef6\u4e2d\u627e\u5230\u5b83\u3002\u5982\u679c\u770b\u4e86Python\u89e3\u91ca\u5668\u5bf9\u5e94\u7684\u7248\u672c\u53f7\uff08\u5982\uff1aPython 3.7.8\uff09\uff0c\u8bf4\u660e\u4f60\u7684\u5b89\u88c5\u5df2\u7ecf\u6210\u529f\u4e86\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u8bf4\u660e \uff1a\u5982\u679c\u5b89\u88c5\u8fc7\u7a0b\u663e\u793a\u5b89\u88c5\u5931\u8d25\u6216\u6267\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u62a5\u9519\uff0c\u5f88\u6709\u53ef\u80fd\u662f\u56e0\u4e3a\u4f60\u7684Windows\u7cfb\u7edf\u7f3a\u5931\u4e86\u4e00\u4e9b\u52a8\u6001\u94fe\u63a5\u5e93\u6587\u4ef6\u6216C\u6784\u5efa\u5de5\u5177\u5bfc\u81f4\u7684\u95ee\u9898\u3002\u53ef\u4ee5\u5728 \u5fae\u8f6f\u5b98\u7f51 \u4e0b\u8f7dVisual C++ Redistributable for Visual Studio 2015\u6587\u4ef6\u8fdb\u884c\u4fee\u590d\uff0c64\u4f4d\u7684\u7cfb\u7edf\u9700\u8981\u4e0b\u8f7d\u6709x64\u6807\u8bb0\u7684\u5b89\u88c5\u6587\u4ef6\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u5730\u5740\u83b7\u53d6\u4fee\u590d\u5de5\u5177\uff0c\u8fd0\u884c\u4fee\u590d\u5de5\u5177\uff0c\u6309\u7167\u5982\u4e0b\u56fe\u6240\u793a\u7684\u65b9\u5f0f\u8fdb\u884c\u4fee\u590d\uff0c\u94fe\u63a5: https://pan.baidu.com/s/1iNDnU5UVdDX5sKFqsiDg5Q \u63d0\u53d6\u7801: cjs3\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u8fd8\u5e94\u8be5\u68c0\u67e5\u4e00\u4e0bPython\u7684\u5305\u7ba1\u7406\u5de5\u5177\u662f\u5426\u5df2\u7ecf\u53ef\u7528\uff0c\u5bf9\u5e94\u7684\u547d\u4ee4\u662f pip --version \u3002","title":"Windows\u73af\u5883"},{"location":"%E7%AC%AC01%E8%AF%BE%EF%BC%9A%E5%88%9D%E8%AF%86Python/#macos","text":"macOS\u81ea\u5e26\u4e86Python 2\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u5b89\u88c5\u548c\u4f7f\u7528\u7684\u662fPython 3\u3002\u53ef\u4ee5\u901a\u8fc7Python\u5b98\u65b9\u7f51\u7ad9\u63d0\u4f9b\u7684 \u4e0b\u8f7d\u94fe\u63a5 \u627e\u5230\u9002\u5408macOS\u7684\u201cmacOS installer\u201d\u6765\u5b89\u88c5Python 3\uff0c\u5b89\u88c5\u8fc7\u7a0b\u57fa\u672c\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u52fe\u9009\uff0c\u76f4\u63a5\u70b9\u51fb\u201c\u4e0b\u4e00\u6b65\u201d\u5373\u53ef\u3002\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728macOS\u7684\u201c\u7ec8\u7aef\u201d\u5de5\u5177\u4e2d\u8f93\u5165 python3 \u547d\u4ee4\u6765\u8c03\u7528Python 3\u89e3\u91ca\u5668\uff0c\u56e0\u4e3a\u5982\u679c\u76f4\u63a5\u8f93\u5165 python \uff0c\u5c06\u4f1a\u8c03\u7528Python 2\u7684\u89e3\u91ca\u5668\u3002","title":"macOS\u73af\u5883"},{"location":"%E7%AC%AC01%E8%AF%BE%EF%BC%9A%E5%88%9D%E8%AF%86Python/#_1","text":"Python\u8bed\u8a00\u53ef\u4ee5\u505a\u5f88\u591a\u7684\u4e8b\u60c5\uff0c\u4e5f\u503c\u5f97\u6211\u4eec\u53bb\u5b66\u4e60\u3002\u8981\u4f7f\u7528Python\u8bed\u8a00\uff0c\u9996\u5148\u9700\u8981\u5728\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5Python\u73af\u5883\uff0c\u4e5f\u5c31\u662f\u8fd0\u884cPython\u7a0b\u5e8f\u7684Python\u89e3\u91ca\u5668\u3002","title":"\u603b\u7ed3"},{"location":"%E7%AC%AC02%E8%AF%BE%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F/","text":"\u7b2c02\u8bfe\uff1a\u7b2c\u4e00\u4e2aPython\u7a0b\u5e8f \u5728\u4e0a\u4e00\u8bfe\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86Python\u8bed\u8a00\u5e76\u5b89\u88c5\u4e86\u8fd0\u884cPython\u7a0b\u5e8f\u6240\u9700\u7684\u73af\u5883\uff0c\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u8feb\u4e0d\u53ca\u5f85\u7684\u60f3\u5f00\u59cb\u81ea\u5df1\u7684Python\u7f16\u7a0b\u4e4b\u65c5\u4e86\u3002\u9996\u5148\u6211\u4eec\u6765\u770b\u770b\u5e94\u8be5\u5728\u54ea\u91cc\u7f16\u5199\u6211\u4eec\u7684Python\u7a0b\u5e8f\u3002 \u7f16\u5199\u4ee3\u7801\u7684\u5de5\u5177 \u4ea4\u4e92\u5f0f\u73af\u5883 \u6211\u4eec\u6253\u5f00Windows\u7684\u201c\u547d\u4ee4\u63d0\u793a\u7b26\u201d\u5de5\u5177\uff0c\u8f93\u5165\u547d\u4ee4 python \u7136\u540e\u56de\u8f66\u5c31\u53ef\u4ee5\u8fdb\u5165\u5230Python\u7684\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d\u3002\u6240\u8c13\u4ea4\u4e92\u5f0f\u73af\u5883\uff0c\u5c31\u662f\u6211\u4eec\u8f93\u5165\u4e00\u884c\u4ee3\u7801\u56de\u8f66\uff0c\u4ee3\u7801\u9a6c\u4e0a\u4f1a\u88ab\u6267\u884c\uff0c\u5982\u679c\u4ee3\u7801\u6709\u4ea7\u51fa\u7ed3\u679c\uff0c\u90a3\u4e48\u7ed3\u679c\u4f1a\u88ab\u663e\u793a\u5728\u7a97\u53e3\u4e2d\u3002\u4f8b\u5982\uff1a Python 3 .7.6 Type \"help\" , \"copyright\" , \"credits\" or \"license\" for more information. >>> 2 * 3 6 >>> 2 + 3 5 \u63d0\u793a \uff1a\u4f7f\u7528macOS\u7cfb\u7edf\u7684\u7528\u6237\u9700\u8981\u6253\u5f00\u201c\u7ec8\u7aef\u201d\u5de5\u5177\uff0c\u8f93\u5165 python3 \u8fdb\u5165\u4ea4\u4e92\u5f0f\u73af\u5883\u3002 \u5982\u679c\u5e0c\u671b\u9000\u51fa\u4ea4\u4e92\u5f0f\u73af\u5883\uff0c\u53ef\u4ee5\u5728\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d\u8f93\u5165 quit() \uff0c\u5982\u4e0b\u6240\u793a\u3002 >>> quit () \u66f4\u597d\u7684\u4ea4\u4e92\u5f0f\u73af\u5883 - IPython Python\u9ed8\u8ba4\u7684\u4ea4\u4e92\u5f0f\u73af\u5883\u7528\u6237\u4f53\u9a8c\u5e76\u4e0d\u600e\u4e48\u597d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528IPython\u6765\u66ff\u6362\u6389\u5b83\uff0c\u56e0\u4e3aIPython\u63d0\u4f9b\u4e86\u66f4\u4e3a\u5f3a\u5927\u7684\u7f16\u8f91\u548c\u4ea4\u4e92\u529f\u80fd\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Python\u7684\u5305\u7ba1\u7406\u5de5\u5177 pip \u6765\u5b89\u88c5IPython\uff0c\u5982\u4e0b\u6240\u793a\u3002 pip install ipython \u6e29\u99a8\u63d0\u793a \uff1a\u5728\u4f7f\u7528\u4e0a\u9762\u7684\u547d\u4ee4\u5b89\u88c5IPython\u4e4b\u524d\uff0c\u53ef\u4ee5\u5148\u901a\u8fc7 pip config set global.index-url https://pypi.doubanio.com/simple \u547d\u4ee4\u5c06 pip \u7684\u4e0b\u8f7d\u6e90\u4fee\u6539\u4e3a\u56fd\u5185\u7684\u8c46\u74e3\u7f51\uff0c\u5426\u5219\u4e0b\u8f7d\u5b89\u88c5\u7684\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u975e\u5e38\u7684\u7f13\u6162\u3002 \u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u542f\u52a8IPython\uff0c\u8fdb\u5165\u4ea4\u4e92\u5f0f\u73af\u5883\u3002 ipython \u6587\u672c\u7f16\u8f91\u5668 - Visual Studio Code Visual Studio Code\uff08\u901a\u5e38\u7b80\u79f0\u4e3aVSCode\uff09\u662f\u4e00\u4e2a\u7531\u5fae\u8f6f\u5f00\u53d1\u80fd\u591f\u5728Windows\u3001 Linux\u548cmacOS\u7b49\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u7f16\u8f91\u795e\u5668\u3002\u5b83\u652f\u6301\u8bed\u6cd5\u9ad8\u4eae\u3001\u81ea\u52a8\u8865\u5168\u3001\u591a\u70b9\u7f16\u8f91\u3001\u8fd0\u884c\u8c03\u8bd5\u7b49\u4e00\u7cfb\u5217\u4fbf\u6377\u529f\u80fd\uff0c\u800c\u4e14\u80fd\u591f\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u3002\u5982\u679c\u5927\u5bb6\u8981\u9009\u62e9\u4e00\u6b3e\u9ad8\u7ea7\u6587\u672c\u7f16\u8f91\u5de5\u5177\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528VSCode\u3002\u5173\u4e8eVSCode\u7684 \u4e0b\u8f7d \u3001\u5b89\u88c5\u548c\u4f7f\u7528\uff0c\u63a8\u8350\u5927\u5bb6\u9605\u8bfb\u4e00\u7bc7\u540d\u4e3a \u300aVScode\u5b89\u88c5\u4f7f\u7528\u300b \u7684\u6587\u7ae0\u3002 \u96c6\u6210\u5f00\u53d1\u73af\u5883 - PyCharm \u5982\u679c\u7528Python\u5f00\u53d1\u5546\u4e1a\u9879\u76ee\uff0c\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u66f4\u4e3a\u4e13\u4e1a\u7684\u5de5\u5177PyCharm\u3002PyCharm\u662f\u7531\u6377\u514b\u4e00\u5bb6\u540d\u4e3a JetBrains \u7684\u516c\u53f8\u5f00\u53d1\u7684\u7528\u4e8ePython\u9879\u76ee\u5f00\u53d1\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE)\u3002\u6240\u8c13\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff0c\u901a\u5e38\u662f\u6307\u5de5\u5177\u4e2d\u63d0\u4f9b\u4e86\u7f16\u5199\u4ee3\u7801\u3001\u8fd0\u884c\u4ee3\u7801\u3001\u8c03\u8bd5\u4ee3\u7801\u3001\u5206\u6790\u4ee3\u7801\u3001\u7248\u672c\u63a7\u5236\u7b49\u4e00\u7cfb\u5217\u529f\u80fd\uff0c\u56e0\u6b64\u7279\u522b\u9002\u5408\u5546\u4e1a\u9879\u76ee\u7684\u5f00\u53d1\u3002\u5728JetBrains\u7684\u5b98\u65b9\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u4e86PyCharm\u7684 \u4e0b\u8f7d\u94fe\u63a5 \uff0c\u5176\u4e2d\u793e\u533a\u7248\uff08Community\uff09\u662f\u514d\u8d39\u7684\u4f46\u529f\u80fd\u76f8\u5bf9\u5f31\u5c0f\uff08\u5176\u5b9e\u5df2\u7ecf\u8db3\u591f\u5f3a\u5927\u4e86\uff09\uff0c\u4e13\u4e1a\u7248\uff08Professional\uff09\u529f\u80fd\u975e\u5e38\u5f3a\u5927\uff0c\u4f46\u9700\u8981\u6309\u5e74\u6216\u6708\u4ed8\u8d39\u4f7f\u7528\uff0c\u65b0\u7528\u6237\u53ef\u4ee5\u8bd5\u752830\u5929\u65f6\u95f4\u3002 \u8fd0\u884cPyCharm\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u56fe\u6240\u793a\u7684\u6b22\u8fce\u754c\u9762\uff0c\u53ef\u4ee5\u9009\u62e9\u201cNew Project\u201d\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9879\u76ee\u3002 \u521b\u5efa\u9879\u76ee\u7684\u65f6\u5019\u9700\u8981\u6307\u5b9a\u9879\u76ee\u7684\u8def\u5f84\u5e76\u521b\u5efa\u8fd0\u884c\u9879\u76ee\u7684\u201d\u865a\u62df\u73af\u5883\u201c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u9879\u76ee\u521b\u5efa\u597d\u4ee5\u540e\u4f1a\u51fa\u73b0\u5982\u4e0b\u56fe\u6240\u793a\u7684\u753b\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0a\u70b9\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u9009\u62e9\u201cNew\u201d\u83dc\u5355\u4e0b\u7684\u201cPython File\u201d\u6765\u521b\u5efa\u4e00\u4e2aPython\u6587\u4ef6\uff0c\u521b\u5efa\u597d\u7684Python\u6587\u4ef6\u4f1a\u81ea\u52a8\u6253\u5f00\u8fdb\u5165\u53ef\u7f16\u8f91\u7684\u72b6\u6001\u3002 \u5199\u597d\u4ee3\u7801\u540e\uff0c\u53ef\u4ee5\u5728\u7f16\u8f91\u4ee3\u7801\u7684\u7a97\u53e3\u70b9\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u9009\u62e9\u201cRun\u201d\u83dc\u5355\u9879\u6765\u8fd0\u884c\u4ee3\u7801\uff0c\u4e0b\u9762\u7684\u201cRun\u201d\u7a97\u53e3\u4f1a\u663e\u793a\u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 PyCharm\u5e38\u7528\u7684\u5feb\u6377\u952e\u5982\u4e0b\u8868\u6240\u793a\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u201cFile\u201d\u83dc\u5355\u7684\u201cSettings\u201d\u4e2d\u5b9a\u5236PyCharm\u7684\u5feb\u6377\u952e\uff08macOS\u7cfb\u7edf\u662f\u5728\u201cPyCharm\u201d\u83dc\u5355\u7684\u201cPreferences\u201d\u4e2d\u5bf9\u5feb\u6377\u952e\u8fdb\u884c\u8bbe\u7f6e\uff09\u3002 \u88681. PyCharm\u5e38\u7528\u5feb\u6377\u952e\u3002 \u5feb\u6377\u952e \u4f5c\u7528 ctrl + j \u663e\u793a\u53ef\u7528\u7684\u4ee3\u7801\u6a21\u677f ctrl + b \u67e5\u770b\u51fd\u6570\u3001\u7c7b\u3001\u65b9\u6cd5\u7684\u5b9a\u4e49 ctrl + alt + l \u683c\u5f0f\u5316\u4ee3\u7801 alt + enter \u4e07\u80fd\u4ee3\u7801\u4fee\u590d\u5feb\u6377\u952e ctrl + / \u6ce8\u91ca/\u53cd\u6ce8\u91ca\u4ee3\u7801 shift + shift \u4e07\u80fd\u641c\u7d22\u5feb\u6377\u952e ctrl + d / ctrl + y \u590d\u5236/\u5220\u9664\u4e00\u884c\u4ee3\u7801 ctrl + shift + - / ctrl + shift + + \u6298\u53e0/\u5c55\u5f00\u6240\u6709\u4ee3\u7801 F2 \u5feb\u901f\u5b9a\u4f4d\u5230\u9519\u8bef\u4ee3\u7801 ctrl + alt + F7 \u67e5\u770b\u54ea\u4e9b\u5730\u65b9\u7528\u5230\u4e86\u6307\u5b9a\u7684\u51fd\u6570\u3001\u7c7b\u3001\u65b9\u6cd5 \u8bf4\u660e \uff1a\u4f7f\u7528macOS\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684 ctrl \u952e\u6362\u6210 command \u952e\uff0c\u5728macOS\u7cfb\u7edf\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528 ctrl + space \u7ec4\u5408\u952e\u6765\u83b7\u5f97\u4e07\u80fd\u63d0\u793a\uff0c\u5728Windows\u7cfb\u7edf\u4e0a\u4e0d\u80fd\u4f7f\u7528\u8be5\u5feb\u6377\u952e\uff0c\u56e0\u4e3a\u5b83\u8ddfWindows\u9ed8\u8ba4\u7684\u5207\u6362\u8f93\u5165\u6cd5\u7684\u5feb\u6377\u952e\u662f\u51b2\u7a81\u7684\uff0c\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e\u3002 hello, world \u6309\u7167\u884c\u4e1a\u60ef\u4f8b\uff0c\u6211\u4eec\u5b66\u4e60\u4efb\u4f55\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u5199\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u90fd\u662f\u8f93\u51fa hello, world \uff0c\u56e0\u4e3a\u8fd9\u6bb5\u4ee3\u7801\u662f\u4f1f\u5927\u7684\u4e39\u5c3c\u65af\u00b7\u91cc\u5947\uff08C\u8bed\u8a00\u4e4b\u7236\uff0c\u548c\u80af\u00b7\u6c64\u666e\u68ee\u4e00\u8d77\u5f00\u53d1\u4e86Unix\u64cd\u4f5c\u7cfb\u7edf\uff09\u548c\u5e03\u83b1\u6069\u00b7\u67ef\u5c3c\u6c49\uff08awk\u8bed\u8a00\u7684\u53d1\u660e\u8005\uff09\u5728\u4ed6\u4eec\u7684\u4e0d\u673d\u8457\u4f5c The C Programming Language \u4e2d\u5199\u7684\u7b2c\u4e00\u6bb5\u4ee3\u7801\u3002 print ( 'hello, world' ) \u8fd0\u884c\u7a0b\u5e8f \u5982\u679c\u4e0d\u4f7f\u7528PyCharm\u8fd9\u6837\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u547d\u540d\u4e3a hello.py \uff0c\u5bf9\u4e8eWindows\u64cd\u4f5c\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5728\u4f60\u4fdd\u5b58\u4ee3\u7801\u7684\u76ee\u5f55\u4e0b\u5148\u6309\u4f4f\u952e\u76d8\u4e0a\u7684 shift \u952e\u518d\u70b9\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u8fd9\u65f6\u5019\u9f20\u6807\u53f3\u952e\u83dc\u5355\u4e2d\u4f1a\u51fa\u73b0\u201c\u547d\u4ee4\u63d0\u793a\u7b26\u201d\u9009\u9879\uff0c\u70b9\u51fb\u8be5\u9009\u9879\u5c31\u53ef\u4ee5\u6253\u5f00\u201c\u547d\u4ee4\u63d0\u793a\u7b26\u201d\u5de5\u5177\uff0c\u6211\u4eec\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u3002 python hello.py \u63d0\u9192 \uff1a\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u6253\u5f00\u201c\u547d\u4ee4\u63d0\u793a\u7b26\u201d\uff0c\u7136\u540e\u5c06\u9700\u8981\u6267\u884c\u7684Python\u4ee3\u7801\u901a\u8fc7\u62d6\u62fd\u7684\u65b9\u5f0f\u62d6\u5165\u5230\u201c\u547d\u4ee4\u63d0\u793a\u7b26\u201d\u4e2d\uff0c\u8fd9\u6837\u76f8\u5f53\u4e8e\u6307\u5b9a\u4e86\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\u6765\u8fd0\u884c\u8be5\u6587\u4ef6\u4e2d\u7684Python\u4ee3\u7801\u3002\u518d\u6b21\u63d0\u9192\uff0cmacOS\u7cfb\u7edf\u8981\u901a\u8fc7 python3 \u547d\u4ee4\u6765\u8fd0\u884c\u8be5\u7a0b\u5e8f\u3002 \u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u4e0a\u9762\u7a0b\u5e8f\u5355\u5f15\u53f7\u4e2d\u7684 hello, world \u6362\u6210\u5176\u4ed6\u5185\u5bb9\uff1b\u4f60\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u7740\u591a\u5199\u51e0\u4e2a\u8fd9\u6837\u7684\u8bed\u53e5\uff0c\u770b\u770b\u4f1a\u8fd0\u884c\u51fa\u600e\u6837\u7684\u7ed3\u679c\u3002\u9700\u8981\u63d0\u9192\u5927\u5bb6\uff0c\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 print('hello, world') \u5c31\u662f\u4e00\u6761\u5b8c\u6574\u7684\u8bed\u53e5\uff0c\u6211\u4eec\u7528Python\u5199\u7a0b\u5e8f\uff0c\u6700\u597d\u6bcf\u4e00\u884c\u4ee3\u7801\u4e2d\u53ea\u6709\u4e00\u6761\u8bed\u53e5\u3002\u867d\u7136\u4f7f\u7528 ; \u5206\u9694\u7b26\u53ef\u4ee5\u5c06\u591a\u4e2a\u8bed\u53e5\u5199\u5728\u4e00\u884c\u4ee3\u7801\u4e2d\uff0c\u4f46\u662f\u6700\u597d\u4e0d\u8981\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u4ee3\u7801\u4f1a\u53d8\u5f97\u975e\u5e38\u96be\u770b\u3002 \u6ce8\u91ca\u4f60\u7684\u4ee3\u7801 \u6ce8\u91ca\u662f\u7f16\u7a0b\u8bed\u8a00\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u7528\u4e8e\u5728\u6e90\u4ee3\u7801\u4e2d\u89e3\u91ca\u4ee3\u7801\u7684\u4f5c\u7528\u4ece\u800c\u589e\u5f3a\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u6e90\u4ee3\u7801\u4e2d\u6682\u65f6\u4e0d\u9700\u8981\u8fd0\u884c\u7684\u4ee3\u7801\u6bb5\u901a\u8fc7\u6ce8\u91ca\u6765\u53bb\u6389\uff0c\u8fd9\u6837\u5f53\u4f60\u9700\u8981\u91cd\u65b0\u4f7f\u7528\u8fd9\u4e9b\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u53bb\u6389\u6ce8\u91ca\u7b26\u53f7\u5c31\u53ef\u4ee5\u4e86\u3002\u7b80\u5355\u7684\u8bf4\uff0c \u6ce8\u91ca\u4f1a\u8ba9\u4ee3\u7801\u66f4\u5bb9\u6613\u770b\u61c2\u4f46\u4e0d\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c \u3002 Python\u4e2d\u6709\u4e24\u79cd\u5f62\u5f0f\u7684\u6ce8\u91ca\uff1a \u5355\u884c\u6ce8\u91ca\uff1a\u4ee5 # \u548c\u7a7a\u683c\u5f00\u5934\uff0c\u53ef\u4ee5\u6ce8\u91ca\u6389\u4ece # \u5f00\u59cb\u540e\u9762\u4e00\u6574\u884c\u7684\u5185\u5bb9\u3002 \u591a\u884c\u6ce8\u91ca\uff1a\u4e09\u4e2a\u5f15\u53f7\u5f00\u5934\uff0c\u4e09\u4e2a\u5f15\u53f7\u7ed3\u5c3e\uff0c\u901a\u5e38\u7528\u4e8e\u6dfb\u52a0\u591a\u884c\u8bf4\u660e\u6027\u5185\u5bb9\u3002 \"\"\" \u7b2c\u4e00\u4e2aPython\u7a0b\u5e8f - hello, world Version: 0.1 Author: \u9a86\u660a \"\"\" # print('hello, world') print ( \"\u4f60\u597d\uff0c\u4e16\u754c\uff01\" ) \u603b\u7ed3 \u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5df2\u7ecf\u628a\u7b2c\u4e00\u4e2aPython\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u4e86\uff0c\u662f\u4e0d\u662f\u5f88\u6709\u6210\u5c31\u611f\uff1f\u53ea\u8981\u4f60\u575a\u6301\u5b66\u4e60\u4e0b\u53bb\uff0c\u518d\u8fc7\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528Python\u5236\u4f5c\u5c0f\u6e38\u620f\u3001\u7f16\u5199\u722c\u866b\u7a0b\u5e8f\u3001\u5b8c\u6210\u529e\u516c\u81ea\u52a8\u5316\u64cd\u4f5c\u7b49\u3002 \u5199\u7a0b\u5e8f\u672c\u8eab\u5c31\u662f\u4e00\u4ef6\u5f88\u9177\u7684\u4e8b\u60c5 \uff0c\u5728\u672a\u6765\u7f16\u7a0b\u5c31\u50cf\u82f1\u8bed\u4e00\u6837\uff0c \u5bf9\u5f88\u591a\u4eba\u6765\u8bf4\u6216\u90fd\u662f\u5fc5\u987b\u8981\u638c\u63e1\u7684\u6280\u80fd \u3002","title":"\u7b2c02\u8bfe\uff1a\u7b2c\u4e00\u4e2aPython\u7a0b\u5e8f"},{"location":"%E7%AC%AC02%E8%AF%BE%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F/#02python","text":"\u5728\u4e0a\u4e00\u8bfe\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86Python\u8bed\u8a00\u5e76\u5b89\u88c5\u4e86\u8fd0\u884cPython\u7a0b\u5e8f\u6240\u9700\u7684\u73af\u5883\uff0c\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u8feb\u4e0d\u53ca\u5f85\u7684\u60f3\u5f00\u59cb\u81ea\u5df1\u7684Python\u7f16\u7a0b\u4e4b\u65c5\u4e86\u3002\u9996\u5148\u6211\u4eec\u6765\u770b\u770b\u5e94\u8be5\u5728\u54ea\u91cc\u7f16\u5199\u6211\u4eec\u7684Python\u7a0b\u5e8f\u3002","title":"\u7b2c02\u8bfe\uff1a\u7b2c\u4e00\u4e2aPython\u7a0b\u5e8f"},{"location":"%E7%AC%AC02%E8%AF%BE%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F/#_1","text":"","title":"\u7f16\u5199\u4ee3\u7801\u7684\u5de5\u5177"},{"location":"%E7%AC%AC02%E8%AF%BE%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F/#_2","text":"\u6211\u4eec\u6253\u5f00Windows\u7684\u201c\u547d\u4ee4\u63d0\u793a\u7b26\u201d\u5de5\u5177\uff0c\u8f93\u5165\u547d\u4ee4 python \u7136\u540e\u56de\u8f66\u5c31\u53ef\u4ee5\u8fdb\u5165\u5230Python\u7684\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d\u3002\u6240\u8c13\u4ea4\u4e92\u5f0f\u73af\u5883\uff0c\u5c31\u662f\u6211\u4eec\u8f93\u5165\u4e00\u884c\u4ee3\u7801\u56de\u8f66\uff0c\u4ee3\u7801\u9a6c\u4e0a\u4f1a\u88ab\u6267\u884c\uff0c\u5982\u679c\u4ee3\u7801\u6709\u4ea7\u51fa\u7ed3\u679c\uff0c\u90a3\u4e48\u7ed3\u679c\u4f1a\u88ab\u663e\u793a\u5728\u7a97\u53e3\u4e2d\u3002\u4f8b\u5982\uff1a Python 3 .7.6 Type \"help\" , \"copyright\" , \"credits\" or \"license\" for more information. >>> 2 * 3 6 >>> 2 + 3 5 \u63d0\u793a \uff1a\u4f7f\u7528macOS\u7cfb\u7edf\u7684\u7528\u6237\u9700\u8981\u6253\u5f00\u201c\u7ec8\u7aef\u201d\u5de5\u5177\uff0c\u8f93\u5165 python3 \u8fdb\u5165\u4ea4\u4e92\u5f0f\u73af\u5883\u3002 \u5982\u679c\u5e0c\u671b\u9000\u51fa\u4ea4\u4e92\u5f0f\u73af\u5883\uff0c\u53ef\u4ee5\u5728\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d\u8f93\u5165 quit() \uff0c\u5982\u4e0b\u6240\u793a\u3002 >>> quit ()","title":"\u4ea4\u4e92\u5f0f\u73af\u5883"},{"location":"%E7%AC%AC02%E8%AF%BE%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F/#-ipython","text":"Python\u9ed8\u8ba4\u7684\u4ea4\u4e92\u5f0f\u73af\u5883\u7528\u6237\u4f53\u9a8c\u5e76\u4e0d\u600e\u4e48\u597d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528IPython\u6765\u66ff\u6362\u6389\u5b83\uff0c\u56e0\u4e3aIPython\u63d0\u4f9b\u4e86\u66f4\u4e3a\u5f3a\u5927\u7684\u7f16\u8f91\u548c\u4ea4\u4e92\u529f\u80fd\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Python\u7684\u5305\u7ba1\u7406\u5de5\u5177 pip \u6765\u5b89\u88c5IPython\uff0c\u5982\u4e0b\u6240\u793a\u3002 pip install ipython \u6e29\u99a8\u63d0\u793a \uff1a\u5728\u4f7f\u7528\u4e0a\u9762\u7684\u547d\u4ee4\u5b89\u88c5IPython\u4e4b\u524d\uff0c\u53ef\u4ee5\u5148\u901a\u8fc7 pip config set global.index-url https://pypi.doubanio.com/simple \u547d\u4ee4\u5c06 pip \u7684\u4e0b\u8f7d\u6e90\u4fee\u6539\u4e3a\u56fd\u5185\u7684\u8c46\u74e3\u7f51\uff0c\u5426\u5219\u4e0b\u8f7d\u5b89\u88c5\u7684\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u975e\u5e38\u7684\u7f13\u6162\u3002 \u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u542f\u52a8IPython\uff0c\u8fdb\u5165\u4ea4\u4e92\u5f0f\u73af\u5883\u3002 ipython","title":"\u66f4\u597d\u7684\u4ea4\u4e92\u5f0f\u73af\u5883 - IPython"},{"location":"%E7%AC%AC02%E8%AF%BE%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F/#-visual-studio-code","text":"Visual Studio Code\uff08\u901a\u5e38\u7b80\u79f0\u4e3aVSCode\uff09\u662f\u4e00\u4e2a\u7531\u5fae\u8f6f\u5f00\u53d1\u80fd\u591f\u5728Windows\u3001 Linux\u548cmacOS\u7b49\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u7f16\u8f91\u795e\u5668\u3002\u5b83\u652f\u6301\u8bed\u6cd5\u9ad8\u4eae\u3001\u81ea\u52a8\u8865\u5168\u3001\u591a\u70b9\u7f16\u8f91\u3001\u8fd0\u884c\u8c03\u8bd5\u7b49\u4e00\u7cfb\u5217\u4fbf\u6377\u529f\u80fd\uff0c\u800c\u4e14\u80fd\u591f\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u3002\u5982\u679c\u5927\u5bb6\u8981\u9009\u62e9\u4e00\u6b3e\u9ad8\u7ea7\u6587\u672c\u7f16\u8f91\u5de5\u5177\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528VSCode\u3002\u5173\u4e8eVSCode\u7684 \u4e0b\u8f7d \u3001\u5b89\u88c5\u548c\u4f7f\u7528\uff0c\u63a8\u8350\u5927\u5bb6\u9605\u8bfb\u4e00\u7bc7\u540d\u4e3a \u300aVScode\u5b89\u88c5\u4f7f\u7528\u300b \u7684\u6587\u7ae0\u3002","title":"\u6587\u672c\u7f16\u8f91\u5668 - Visual Studio Code"},{"location":"%E7%AC%AC02%E8%AF%BE%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F/#-pycharm","text":"\u5982\u679c\u7528Python\u5f00\u53d1\u5546\u4e1a\u9879\u76ee\uff0c\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u66f4\u4e3a\u4e13\u4e1a\u7684\u5de5\u5177PyCharm\u3002PyCharm\u662f\u7531\u6377\u514b\u4e00\u5bb6\u540d\u4e3a JetBrains \u7684\u516c\u53f8\u5f00\u53d1\u7684\u7528\u4e8ePython\u9879\u76ee\u5f00\u53d1\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE)\u3002\u6240\u8c13\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff0c\u901a\u5e38\u662f\u6307\u5de5\u5177\u4e2d\u63d0\u4f9b\u4e86\u7f16\u5199\u4ee3\u7801\u3001\u8fd0\u884c\u4ee3\u7801\u3001\u8c03\u8bd5\u4ee3\u7801\u3001\u5206\u6790\u4ee3\u7801\u3001\u7248\u672c\u63a7\u5236\u7b49\u4e00\u7cfb\u5217\u529f\u80fd\uff0c\u56e0\u6b64\u7279\u522b\u9002\u5408\u5546\u4e1a\u9879\u76ee\u7684\u5f00\u53d1\u3002\u5728JetBrains\u7684\u5b98\u65b9\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u4e86PyCharm\u7684 \u4e0b\u8f7d\u94fe\u63a5 \uff0c\u5176\u4e2d\u793e\u533a\u7248\uff08Community\uff09\u662f\u514d\u8d39\u7684\u4f46\u529f\u80fd\u76f8\u5bf9\u5f31\u5c0f\uff08\u5176\u5b9e\u5df2\u7ecf\u8db3\u591f\u5f3a\u5927\u4e86\uff09\uff0c\u4e13\u4e1a\u7248\uff08Professional\uff09\u529f\u80fd\u975e\u5e38\u5f3a\u5927\uff0c\u4f46\u9700\u8981\u6309\u5e74\u6216\u6708\u4ed8\u8d39\u4f7f\u7528\uff0c\u65b0\u7528\u6237\u53ef\u4ee5\u8bd5\u752830\u5929\u65f6\u95f4\u3002 \u8fd0\u884cPyCharm\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u56fe\u6240\u793a\u7684\u6b22\u8fce\u754c\u9762\uff0c\u53ef\u4ee5\u9009\u62e9\u201cNew Project\u201d\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9879\u76ee\u3002 \u521b\u5efa\u9879\u76ee\u7684\u65f6\u5019\u9700\u8981\u6307\u5b9a\u9879\u76ee\u7684\u8def\u5f84\u5e76\u521b\u5efa\u8fd0\u884c\u9879\u76ee\u7684\u201d\u865a\u62df\u73af\u5883\u201c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u9879\u76ee\u521b\u5efa\u597d\u4ee5\u540e\u4f1a\u51fa\u73b0\u5982\u4e0b\u56fe\u6240\u793a\u7684\u753b\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0a\u70b9\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u9009\u62e9\u201cNew\u201d\u83dc\u5355\u4e0b\u7684\u201cPython File\u201d\u6765\u521b\u5efa\u4e00\u4e2aPython\u6587\u4ef6\uff0c\u521b\u5efa\u597d\u7684Python\u6587\u4ef6\u4f1a\u81ea\u52a8\u6253\u5f00\u8fdb\u5165\u53ef\u7f16\u8f91\u7684\u72b6\u6001\u3002 \u5199\u597d\u4ee3\u7801\u540e\uff0c\u53ef\u4ee5\u5728\u7f16\u8f91\u4ee3\u7801\u7684\u7a97\u53e3\u70b9\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u9009\u62e9\u201cRun\u201d\u83dc\u5355\u9879\u6765\u8fd0\u884c\u4ee3\u7801\uff0c\u4e0b\u9762\u7684\u201cRun\u201d\u7a97\u53e3\u4f1a\u663e\u793a\u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 PyCharm\u5e38\u7528\u7684\u5feb\u6377\u952e\u5982\u4e0b\u8868\u6240\u793a\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u201cFile\u201d\u83dc\u5355\u7684\u201cSettings\u201d\u4e2d\u5b9a\u5236PyCharm\u7684\u5feb\u6377\u952e\uff08macOS\u7cfb\u7edf\u662f\u5728\u201cPyCharm\u201d\u83dc\u5355\u7684\u201cPreferences\u201d\u4e2d\u5bf9\u5feb\u6377\u952e\u8fdb\u884c\u8bbe\u7f6e\uff09\u3002 \u88681. PyCharm\u5e38\u7528\u5feb\u6377\u952e\u3002 \u5feb\u6377\u952e \u4f5c\u7528 ctrl + j \u663e\u793a\u53ef\u7528\u7684\u4ee3\u7801\u6a21\u677f ctrl + b \u67e5\u770b\u51fd\u6570\u3001\u7c7b\u3001\u65b9\u6cd5\u7684\u5b9a\u4e49 ctrl + alt + l \u683c\u5f0f\u5316\u4ee3\u7801 alt + enter \u4e07\u80fd\u4ee3\u7801\u4fee\u590d\u5feb\u6377\u952e ctrl + / \u6ce8\u91ca/\u53cd\u6ce8\u91ca\u4ee3\u7801 shift + shift \u4e07\u80fd\u641c\u7d22\u5feb\u6377\u952e ctrl + d / ctrl + y \u590d\u5236/\u5220\u9664\u4e00\u884c\u4ee3\u7801 ctrl + shift + - / ctrl + shift + + \u6298\u53e0/\u5c55\u5f00\u6240\u6709\u4ee3\u7801 F2 \u5feb\u901f\u5b9a\u4f4d\u5230\u9519\u8bef\u4ee3\u7801 ctrl + alt + F7 \u67e5\u770b\u54ea\u4e9b\u5730\u65b9\u7528\u5230\u4e86\u6307\u5b9a\u7684\u51fd\u6570\u3001\u7c7b\u3001\u65b9\u6cd5 \u8bf4\u660e \uff1a\u4f7f\u7528macOS\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684 ctrl \u952e\u6362\u6210 command \u952e\uff0c\u5728macOS\u7cfb\u7edf\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528 ctrl + space \u7ec4\u5408\u952e\u6765\u83b7\u5f97\u4e07\u80fd\u63d0\u793a\uff0c\u5728Windows\u7cfb\u7edf\u4e0a\u4e0d\u80fd\u4f7f\u7528\u8be5\u5feb\u6377\u952e\uff0c\u56e0\u4e3a\u5b83\u8ddfWindows\u9ed8\u8ba4\u7684\u5207\u6362\u8f93\u5165\u6cd5\u7684\u5feb\u6377\u952e\u662f\u51b2\u7a81\u7684\uff0c\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e\u3002","title":"\u96c6\u6210\u5f00\u53d1\u73af\u5883 - PyCharm"},{"location":"%E7%AC%AC02%E8%AF%BE%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F/#hello-world","text":"\u6309\u7167\u884c\u4e1a\u60ef\u4f8b\uff0c\u6211\u4eec\u5b66\u4e60\u4efb\u4f55\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u5199\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u90fd\u662f\u8f93\u51fa hello, world \uff0c\u56e0\u4e3a\u8fd9\u6bb5\u4ee3\u7801\u662f\u4f1f\u5927\u7684\u4e39\u5c3c\u65af\u00b7\u91cc\u5947\uff08C\u8bed\u8a00\u4e4b\u7236\uff0c\u548c\u80af\u00b7\u6c64\u666e\u68ee\u4e00\u8d77\u5f00\u53d1\u4e86Unix\u64cd\u4f5c\u7cfb\u7edf\uff09\u548c\u5e03\u83b1\u6069\u00b7\u67ef\u5c3c\u6c49\uff08awk\u8bed\u8a00\u7684\u53d1\u660e\u8005\uff09\u5728\u4ed6\u4eec\u7684\u4e0d\u673d\u8457\u4f5c The C Programming Language \u4e2d\u5199\u7684\u7b2c\u4e00\u6bb5\u4ee3\u7801\u3002 print ( 'hello, world' )","title":"hello, world"},{"location":"%E7%AC%AC02%E8%AF%BE%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F/#_3","text":"\u5982\u679c\u4e0d\u4f7f\u7528PyCharm\u8fd9\u6837\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u547d\u540d\u4e3a hello.py \uff0c\u5bf9\u4e8eWindows\u64cd\u4f5c\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5728\u4f60\u4fdd\u5b58\u4ee3\u7801\u7684\u76ee\u5f55\u4e0b\u5148\u6309\u4f4f\u952e\u76d8\u4e0a\u7684 shift \u952e\u518d\u70b9\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u8fd9\u65f6\u5019\u9f20\u6807\u53f3\u952e\u83dc\u5355\u4e2d\u4f1a\u51fa\u73b0\u201c\u547d\u4ee4\u63d0\u793a\u7b26\u201d\u9009\u9879\uff0c\u70b9\u51fb\u8be5\u9009\u9879\u5c31\u53ef\u4ee5\u6253\u5f00\u201c\u547d\u4ee4\u63d0\u793a\u7b26\u201d\u5de5\u5177\uff0c\u6211\u4eec\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u3002 python hello.py \u63d0\u9192 \uff1a\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u6253\u5f00\u201c\u547d\u4ee4\u63d0\u793a\u7b26\u201d\uff0c\u7136\u540e\u5c06\u9700\u8981\u6267\u884c\u7684Python\u4ee3\u7801\u901a\u8fc7\u62d6\u62fd\u7684\u65b9\u5f0f\u62d6\u5165\u5230\u201c\u547d\u4ee4\u63d0\u793a\u7b26\u201d\u4e2d\uff0c\u8fd9\u6837\u76f8\u5f53\u4e8e\u6307\u5b9a\u4e86\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\u6765\u8fd0\u884c\u8be5\u6587\u4ef6\u4e2d\u7684Python\u4ee3\u7801\u3002\u518d\u6b21\u63d0\u9192\uff0cmacOS\u7cfb\u7edf\u8981\u901a\u8fc7 python3 \u547d\u4ee4\u6765\u8fd0\u884c\u8be5\u7a0b\u5e8f\u3002 \u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u4e0a\u9762\u7a0b\u5e8f\u5355\u5f15\u53f7\u4e2d\u7684 hello, world \u6362\u6210\u5176\u4ed6\u5185\u5bb9\uff1b\u4f60\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u7740\u591a\u5199\u51e0\u4e2a\u8fd9\u6837\u7684\u8bed\u53e5\uff0c\u770b\u770b\u4f1a\u8fd0\u884c\u51fa\u600e\u6837\u7684\u7ed3\u679c\u3002\u9700\u8981\u63d0\u9192\u5927\u5bb6\uff0c\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 print('hello, world') \u5c31\u662f\u4e00\u6761\u5b8c\u6574\u7684\u8bed\u53e5\uff0c\u6211\u4eec\u7528Python\u5199\u7a0b\u5e8f\uff0c\u6700\u597d\u6bcf\u4e00\u884c\u4ee3\u7801\u4e2d\u53ea\u6709\u4e00\u6761\u8bed\u53e5\u3002\u867d\u7136\u4f7f\u7528 ; \u5206\u9694\u7b26\u53ef\u4ee5\u5c06\u591a\u4e2a\u8bed\u53e5\u5199\u5728\u4e00\u884c\u4ee3\u7801\u4e2d\uff0c\u4f46\u662f\u6700\u597d\u4e0d\u8981\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u4ee3\u7801\u4f1a\u53d8\u5f97\u975e\u5e38\u96be\u770b\u3002","title":"\u8fd0\u884c\u7a0b\u5e8f"},{"location":"%E7%AC%AC02%E8%AF%BE%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F/#_4","text":"\u6ce8\u91ca\u662f\u7f16\u7a0b\u8bed\u8a00\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u7528\u4e8e\u5728\u6e90\u4ee3\u7801\u4e2d\u89e3\u91ca\u4ee3\u7801\u7684\u4f5c\u7528\u4ece\u800c\u589e\u5f3a\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u6e90\u4ee3\u7801\u4e2d\u6682\u65f6\u4e0d\u9700\u8981\u8fd0\u884c\u7684\u4ee3\u7801\u6bb5\u901a\u8fc7\u6ce8\u91ca\u6765\u53bb\u6389\uff0c\u8fd9\u6837\u5f53\u4f60\u9700\u8981\u91cd\u65b0\u4f7f\u7528\u8fd9\u4e9b\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u53bb\u6389\u6ce8\u91ca\u7b26\u53f7\u5c31\u53ef\u4ee5\u4e86\u3002\u7b80\u5355\u7684\u8bf4\uff0c \u6ce8\u91ca\u4f1a\u8ba9\u4ee3\u7801\u66f4\u5bb9\u6613\u770b\u61c2\u4f46\u4e0d\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c \u3002 Python\u4e2d\u6709\u4e24\u79cd\u5f62\u5f0f\u7684\u6ce8\u91ca\uff1a \u5355\u884c\u6ce8\u91ca\uff1a\u4ee5 # \u548c\u7a7a\u683c\u5f00\u5934\uff0c\u53ef\u4ee5\u6ce8\u91ca\u6389\u4ece # \u5f00\u59cb\u540e\u9762\u4e00\u6574\u884c\u7684\u5185\u5bb9\u3002 \u591a\u884c\u6ce8\u91ca\uff1a\u4e09\u4e2a\u5f15\u53f7\u5f00\u5934\uff0c\u4e09\u4e2a\u5f15\u53f7\u7ed3\u5c3e\uff0c\u901a\u5e38\u7528\u4e8e\u6dfb\u52a0\u591a\u884c\u8bf4\u660e\u6027\u5185\u5bb9\u3002 \"\"\" \u7b2c\u4e00\u4e2aPython\u7a0b\u5e8f - hello, world Version: 0.1 Author: \u9a86\u660a \"\"\" # print('hello, world') print ( \"\u4f60\u597d\uff0c\u4e16\u754c\uff01\" )","title":"\u6ce8\u91ca\u4f60\u7684\u4ee3\u7801"},{"location":"%E7%AC%AC02%E8%AF%BE%EF%BC%9A%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F/#_5","text":"\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5df2\u7ecf\u628a\u7b2c\u4e00\u4e2aPython\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u4e86\uff0c\u662f\u4e0d\u662f\u5f88\u6709\u6210\u5c31\u611f\uff1f\u53ea\u8981\u4f60\u575a\u6301\u5b66\u4e60\u4e0b\u53bb\uff0c\u518d\u8fc7\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528Python\u5236\u4f5c\u5c0f\u6e38\u620f\u3001\u7f16\u5199\u722c\u866b\u7a0b\u5e8f\u3001\u5b8c\u6210\u529e\u516c\u81ea\u52a8\u5316\u64cd\u4f5c\u7b49\u3002 \u5199\u7a0b\u5e8f\u672c\u8eab\u5c31\u662f\u4e00\u4ef6\u5f88\u9177\u7684\u4e8b\u60c5 \uff0c\u5728\u672a\u6765\u7f16\u7a0b\u5c31\u50cf\u82f1\u8bed\u4e00\u6837\uff0c \u5bf9\u5f88\u591a\u4eba\u6765\u8bf4\u6216\u90fd\u662f\u5fc5\u987b\u8981\u638c\u63e1\u7684\u6280\u80fd \u3002","title":"\u603b\u7ed3"},{"location":"%E7%AC%AC03%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E5%8F%98%E9%87%8F/","text":"\u7b2c03\u8bfe\uff1aPython\u8bed\u8a00\u5143\u7d20\u4e4b\u53d8\u91cf \u4f5c\u4e3a\u4e00\u4e2a\u7a0b\u5e8f\u5458\uff0c\u53ef\u80fd\u7ecf\u5e38\u4f1a\u88ab\u5916\u884c\u95ee\u5230\u4e24\u4e2a\u95ee\u9898\uff0c\u5176\u4e00\u662f\u201c\u4ec0\u4e48\u662f\uff08\u8ba1\u7b97\u673a\uff09\u7a0b\u5e8f\u201d\uff0c\u5176\u4e8c\u662f\u201c\u5199\uff08\u8ba1\u7b97\u673a\uff09\u7a0b\u5e8f\u80fd\u505a\u4ec0\u4e48\u201d\uff0c\u8fd9\u91cc\u6211\u5148\u5bf9\u8fd9\u4e24\u4e2a\u95ee\u9898\u505a\u4e00\u4e2a\u56de\u7b54\u3002 \u7a0b\u5e8f\u662f\u6307\u4ee4\u7684\u96c6\u5408 \uff0c \u5199\u7a0b\u5e8f\u5c31\u662f\u7528\u6307\u4ee4\u63a7\u5236\u8ba1\u7b97\u673a\u505a\u6211\u4eec\u60f3\u8ba9\u5b83\u505a\u7684\u4e8b\u60c5 \u3002\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u8981\u7528Python\u8bed\u8a00\u6765\u5199\u7a0b\u5e8f\u5462\uff1f\u56e0\u4e3a Python\u8bed\u8a00\u7b80\u5355\u4f18\u96c5 \uff0c\u76f8\u6bd4C\u3001C++\u3001Java\u8fd9\u6837\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c Python\u5bf9\u521d\u5b66\u8005\u66f4\u52a0\u53cb\u597d \uff0c\u5f53\u7136\u8fd9\u5e76\u4e0d\u662f\u8bf4Python\u4e0d\u50cf\u5176\u4ed6\u8bed\u8a00\u90a3\u6837\u5f3a\u5927\uff0c Python\u51e0\u4e4e\u662f\u65e0\u6240\u4e0d\u80fd\u7684 \uff0c\u5728\u7b2c\u4e00\u8282\u8bfe\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u8bf4\u5230\u4e86Python\u53ef\u4ee5\u7528\u4e8e\u670d\u52a1\u5668\u7a0b\u5e8f\u5f00\u53d1\u3001\u4e91\u5e73\u53f0\u5f00\u53d1\u3001\u6570\u636e\u5206\u6790\u3001\u673a\u5668\u5b66\u4e60\u7b49\u5404\u4e2a\u9886\u57df\u3002\u5f53\u7136\uff0cPython\u8bed\u8a00\u8fd8\u53ef\u4ee5\u7528\u6765\u7c98\u5408\u5176\u4ed6\u8bed\u8a00\u5f00\u53d1\u7684\u7cfb\u7edf\uff0c\u6240\u4ee5\u4e5f\u7ecf\u5e38\u88ab\u620f\u79f0\u4e3a\u201c \u80f6\u6c34\u8bed\u8a00 \u201d\u3002 \u4e00\u4e9b\u8ba1\u7b97\u673a\u5e38\u8bc6 \u5728\u5f00\u59cb\u7cfb\u7edf\u7684\u5b66\u4e60\u7f16\u7a0b\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u79d1\u666e\u4e00\u4e9b\u8ba1\u7b97\u673a\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u8ba1\u7b97\u673a\u7684\u786c\u4ef6\u7cfb\u7edf\u901a\u5e38\u7531\u4e94\u5927\u90e8\u4ef6\u6784\u6210\uff0c\u5305\u62ec\uff1a \u8fd0\u7b97\u5668 \u3001 \u63a7\u5236\u5668 \u3001 \u5b58\u50a8\u5668 \u3001 \u8f93\u5165\u8bbe\u5907 \u548c \u8f93\u51fa\u8bbe\u5907 \u3002\u5176\u4e2d\uff0c\u8fd0\u7b97\u5668\u548c\u63a7\u5236\u5668\u653e\u5728\u4e00\u8d77\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684 \u4e2d\u592e\u5904\u7406\u5668 \uff0c\u5b83\u7684\u529f\u80fd\u662f\u6267\u884c\u5404\u79cd\u8fd0\u7b97\u548c\u63a7\u5236\u6307\u4ee4\u3002\u521a\u624d\u6211\u4eec\u63d0\u5230\u8fc7\u7a0b\u5e8f\u662f\u6307\u4ee4\u7684\u96c6\u5408\uff0c\u5199\u7a0b\u5e8f\u5c31\u662f\u5c06\u4e00\u7cfb\u5217\u7684\u6307\u4ee4\u6309\u7167\u67d0\u79cd\u65b9\u5f0f\u7ec4\u7ec7\u5230\u4e00\u8d77\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e9b\u6307\u4ee4\u53bb\u63a7\u5236\u8ba1\u7b97\u673a\u505a\u6211\u4eec\u60f3\u8ba9\u5b83\u505a\u7684\u4e8b\u60c5\u3002\u76ee\u524d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u57fa\u672c\u90fd\u662f\u201c\u51af\u00b7\u8bfa\u4f9d\u66fc\u4f53\u7cfb\u7ed3\u6784\u201d\u7684\u8ba1\u7b97\u673a\uff0c\u8fd9\u79cd\u8ba1\u7b97\u673a\u6709\u4e24\u4e2a\u5173\u952e\u70b9\uff1a\u4e00\u662f\u8981\u5c06 \u5b58\u50a8\u8bbe\u5907\u4e0e\u4e2d\u592e\u5904\u7406\u5668\u5206\u5f00 \uff1b\u4e8c\u662f\u5c06 \u6570\u636e\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u7f16\u7801 \u3002 \u4e8c\u8fdb\u5236\u662f\u4e00\u79cd\u201c\u9022\u4e8c\u8fdb\u4e00\u201d\u7684\u8ba1\u6570\u6cd5\uff0c\u8ddf\u6211\u4eec\u4eba\u7c7b\u4f7f\u7528\u7684\u201c\u9022\u5341\u8fdb\u4e00\u201d\u7684\u8ba1\u6570\u6cd5\u672c\u8d28\u662f\u4e00\u6837\u7684\u3002\u4eba\u7c7b\u56e0\u4e3a\u6709\u5341\u6839\u624b\u6307\u6240\u4ee5\u4f7f\u7528\u4e86\u5341\u8fdb\u5236\uff0c\u56e0\u4e3a\u5728\u8ba1\u6570\u65f6\u5341\u6839\u624b\u6307\u7528\u5b8c\u4e4b\u540e\u5c31\u53ea\u80fd\u7528\u8fdb\u4f4d\u7684\u65b9\u5f0f\u6765\u8868\u793a\u66f4\u5927\u7684\u6570\u503c\u3002\u5f53\u7136\u51e1\u4e8b\u90fd\u6709\u4f8b\u5916\uff0c\u739b\u96c5\u4eba\u53ef\u80fd\u662f\u56e0\u4e3a\u957f\u5e74\u5149\u7740\u811a\u7684\u539f\u56e0\uff0c\u628a\u811a\u8dbe\u5934\u4e5f\u90fd\u7528\u4e0a\u4e86\uff0c\u4e8e\u662f\u4ed6\u4eec\u4f7f\u7528\u4e86\u4e8c\u5341\u8fdb\u5236\u7684\u8ba1\u6570\u6cd5\u3002\u5728\u8fd9\u79cd\u8ba1\u6570\u6cd5\u7684\u6307\u5bfc\u4e0b\uff0c\u739b\u96c5\u4eba\u7684\u5386\u6cd5\u5c31\u4e0e\u6211\u4eec\u5e73\u5e38\u4f7f\u7528\u7684\u5386\u6cd5\u5e76\u4e0d\u76f8\u540c\u3002\u6309\u7167\u739b\u96c5\u4eba\u7684\u5386\u6cd5\uff0c2012\u5e74\u662f\u4e0a\u4e00\u4e2a\u6240\u8c13\u7684\u201c\u592a\u9633\u7eaa\u201d\u7684\u6700\u540e\u4e00\u5e74\uff0c\u800c2013\u5e74\u5219\u662f\u65b0\u7684\u201c\u592a\u9633\u7eaa\u201d\u7684\u5f00\u59cb\uff0c\u540e\u6765\u8fd9\u4ef6\u4e8b\u60c5\u88ab\u4ee5\u8bb9\u4f20\u8bb9\u7684\u65b9\u5f0f\u8bef\u4f20\u4e3a\u201d2012\u5e74\u662f\u739b\u96c5\u4eba\u9884\u8a00\u7684\u4e16\u754c\u672b\u65e5\u201c\u7684\u8352\u8bde\u8bf4\u6cd5\u3002\u4eca\u5929\u5f88\u591a\u4eba\u90fd\u5728\u731c\u6d4b\uff0c\u739b\u96c5\u6587\u660e\u4e4b\u6240\u4ee5\u53d1\u5c55\u7f13\u6162\u8ddf\u4f7f\u7528\u4e86\u4e8c\u5341\u8fdb\u5236\u662f\u6709\u5173\u7cfb\u7684\u3002\u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u4e8c\u8fdb\u5236\u5728\u7269\u7406\u5668\u4ef6\u4e0a\u6700\u5bb9\u6613\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u7528\u9ad8\u7535\u538b\u8868\u793a1\uff0c\u7528\u4f4e\u7535\u538b\u8868\u793a0\u3002\u4e0d\u662f\u6240\u6709\u5199\u7a0b\u5e8f\u7684\u4eba\u90fd\u9700\u8981\u77e5\u9053\u5341\u8fdb\u5236\u4e0e\u4e8c\u8fdb\u5236\u5982\u4f55\u8f6c\u6362\uff0c\u5927\u591a\u6570\u65f6\u5019\u6211\u4eec\u5373\u4fbf\u4e0d\u4e86\u89e3\u8fd9\u4e9b\u77e5\u8bc6\u4e5f\u80fd\u5199\u51fa\u7a0b\u5e8f\uff0c\u4f46\u662f\u6211\u4eec\u5fc5\u987b\u8981\u77e5\u9053 \u8ba1\u7b97\u673a\u662f\u4f7f\u7528\u4e8c\u8fdb\u5236\u8ba1\u6570\u7684 \uff0c\u4e0d\u7ba1\u4ec0\u4e48 \u6570\u636e\u5230\u4e86\u8ba1\u7b97\u673a\u5185\u5b58\u4e2d\u90fd\u662f\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b58\u5728\u7684 \u3002 \u53d8\u91cf\u548c\u7c7b\u578b \u8981\u60f3\u5728\u8ba1\u7b97\u673a\u5185\u5b58\u4e2d\u4fdd\u5b58\u6570\u636e\uff0c\u9996\u5148\u5c31\u5f97\u8bf4\u4e00\u8bf4\u53d8\u91cf\u8fd9\u4e2a\u6982\u5ff5\u3002\u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c \u53d8\u91cf\u662f\u6570\u636e\u7684\u8f7d\u4f53 \uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e00\u5757\u7528\u6765\u4fdd\u5b58\u6570\u636e\u7684\u5185\u5b58\u7a7a\u95f4\uff0c \u53d8\u91cf\u7684\u503c\u53ef\u4ee5\u88ab\u8bfb\u53d6\u548c\u4fee\u6539 \uff0c\u8fd9\u662f\u6240\u6709\u8ba1\u7b97\u548c\u63a7\u5236\u7684\u57fa\u7840\u3002\u8ba1\u7b97\u673a\u80fd\u5904\u7406\u7684\u6570\u636e\u6709\u5f88\u591a\u79cd\u7c7b\u578b\uff0c\u6700\u5e38\u89c1\u7684\u5c31\u662f\u6570\u503c\uff0c\u9664\u4e86\u6570\u503c\u4e4b\u5916\u8fd8\u6709\u6587\u672c\u3001\u56fe\u5f62\u3001\u97f3\u9891\u3001\u89c6\u9891\u7b49\u5404\u79cd\u5404\u6837\u7684\u6570\u636e\u3002\u867d\u7136\u6570\u636e\u5728\u8ba1\u7b97\u673a\u4e2d\u90fd\u662f\u4ee5\u4e8c\u8fdb\u5236\u5f62\u6001\u5b58\u5728\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u6765\u8868\u793a\u6570\u636e\u7c7b\u578b\u7684\u5dee\u5f02\u3002 Python\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u5f88\u591a \uff0c\u800c\u4e14\u4e5f \u5141\u8bb8\u6211\u4eec\u81ea\u5b9a\u4e49\u65b0\u7684\u6570\u636e\u7c7b\u578b \uff08\u8fd9\u4e00\u70b9\u5728\u540e\u9762\u4f1a\u8bb2\u5230\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u51e0\u79cd\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b\u3002 \u6574\u578b\uff08 int \uff09\uff1aPython\u4e2d\u53ef\u4ee5\u5904\u7406\u4efb\u610f\u5927\u5c0f\u7684\u6574\u6570\uff0c\u800c\u4e14\u652f\u6301\u4e8c\u8fdb\u5236\uff08\u5982 0b100 \uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f4\uff09\u3001\u516b\u8fdb\u5236\uff08\u5982 0o100 \uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f64\uff09\u3001\u5341\u8fdb\u5236\uff08 100 \uff09\u548c\u5341\u516d\u8fdb\u5236\uff08 0x100 \uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f256\uff09\u7684\u8868\u793a\u6cd5\u3002 \u6d6e\u70b9\u578b\uff08 float \uff09\uff1a\u6d6e\u70b9\u6570\u4e5f\u5c31\u662f\u5c0f\u6570\uff0c\u4e4b\u6240\u4ee5\u79f0\u4e3a\u6d6e\u70b9\u6570\uff0c\u662f\u56e0\u4e3a\u6309\u7167\u79d1\u5b66\u8bb0\u6570\u6cd5\u8868\u793a\u65f6\uff0c\u4e00\u4e2a\u6d6e\u70b9\u6570\u7684\u5c0f\u6570\u70b9\u4f4d\u7f6e\u662f\u53ef\u53d8\u7684\uff0c\u6d6e\u70b9\u6570\u9664\u4e86\u6570\u5b66\u5199\u6cd5\uff08\u5982 123.456 \uff09\u4e4b\u5916\u8fd8\u652f\u6301\u79d1\u5b66\u8ba1\u6570\u6cd5\uff08\u5982 1.23456e2 \uff09\u3002 \u5b57\u7b26\u4e32\u578b\uff08 str \uff09\uff1a\u5b57\u7b26\u4e32\u662f\u4ee5\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u4efb\u610f\u6587\u672c\uff0c\u6bd4\u5982 'hello' \u548c \"hello\" \u3002 \u5e03\u5c14\u578b\uff08 bool \uff09\uff1a\u5e03\u5c14\u503c\u53ea\u6709 True \u3001 False \u4e24\u79cd\u503c\uff0c\u8981\u4e48\u662f True \uff0c\u8981\u4e48\u662f False \u3002 \u53d8\u91cf\u547d\u540d \u5bf9\u4e8e\u6bcf\u4e2a\u53d8\u91cf\u6211\u4eec\u9700\u8981\u7ed9\u5b83\u53d6\u4e00\u4e2a\u540d\u5b57\uff0c\u5c31\u5982\u540c\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u540d\u5b57\u4e00\u6837\u3002\u5728Python\u4e2d\uff0c\u53d8\u91cf\u547d\u540d\u9700\u8981\u9075\u5faa\u4ee5\u4e0b\u8fd9\u4e9b\u89c4\u5219\uff0c\u8fd9\u4e9b\u89c4\u5219\u53c8\u5206\u4e3a\u5fc5\u987b\u9075\u5b88\u7684\u786c\u6027\u89c4\u5219\u548c\u5efa\u8bae\u9075\u5b88\u7684\u975e\u786c\u6027\u89c4\u5219\u3002 \u786c\u6027\u89c4\u5219\uff1a \u89c4\u52191\uff1a\u53d8\u91cf\u540d\u7531 \u5b57\u6bcd \u3001\u6570\u5b57\u548c \u4e0b\u5212\u7ebf \u6784\u6210\uff0c\u6570\u5b57\u4e0d\u80fd\u5f00\u5934\u3002\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u8fd9\u91cc\u8bf4\u7684\u5b57\u6bcd\u6307\u7684\u662fUnicode\u5b57\u7b26\uff0cUnicode\u79f0\u4e3a\u4e07\u56fd\u7801\uff0c\u56ca\u62ec\u4e86\u4e16\u754c\u4e0a\u5927\u90e8\u5206\u7684\u6587\u5b57\u7cfb\u7edf\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u4e2d\u6587\u3001\u65e5\u6587\u3001\u5e0c\u814a\u5b57\u6bcd\u7b49\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u53d8\u91cf\u540d\u4e2d\u7684\u5b57\u7b26\uff0c\u4f46\u662f\u50cf ! \u3001 @ \u3001 # \u8fd9\u4e9b\u7279\u6b8a\u5b57\u7b26\u662f\u4e0d\u80fd\u51fa\u73b0\u5728\u53d8\u91cf\u540d\u4e2d\u7684\uff0c\u800c\u4e14\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u5927\u5bb6 \u5c3d\u53ef\u80fd\u4f7f\u7528\u82f1\u6587\u5b57\u6bcd \u3002 \u89c4\u52192\uff1a \u5927\u5c0f\u5199\u654f\u611f \uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u5927\u5199\u7684 A \u548c\u5c0f\u5199\u7684 a \u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\u3002 \u89c4\u52193\uff1a\u53d8\u91cf\u540d \u4e0d\u8981\u8ddfPython\u8bed\u8a00\u7684\u5173\u952e\u5b57 \uff08\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\uff0c\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u548c \u4fdd\u7559\u5b57 \uff08\u5982\u5df2\u6709\u7684\u51fd\u6570\u3001\u6a21\u5757\u7b49\u7684\u540d\u5b57\uff09 \u53d1\u751f\u91cd\u540d\u7684\u51b2\u7a81 \u3002 \u975e\u786c\u6027\u89c4\u5219\uff1a \u89c4\u52191\uff1a\u53d8\u91cf\u540d\u901a\u5e38\u4f7f\u7528\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\uff0c\u591a\u4e2a\u5355\u8bcd\u7528\u4e0b\u5212\u7ebf\u8fdb\u884c\u8fde\u63a5\u3002 \u89c4\u52192\uff1a\u53d7\u4fdd\u62a4\u7684\u53d8\u91cf\u7528\u5355\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\u3002 \u89c4\u52193\uff1a\u79c1\u6709\u7684\u53d8\u91cf\u7528\u4e24\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\u3002 \u89c4\u52192\u548c\u89c4\u52193\u5927\u5bb6\u6682\u65f6\u4e0d\u7528\u7406\u89e3\uff0c\u540e\u9762\u81ea\u7136\u4f1a\u660e\u767d\u7684\u3002\u5f53\u7136\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u4e13\u4e1a\u7684\u7a0b\u5e8f\u5458\uff0c\u7ed9\u53d8\u91cf\uff08\u4e8b\u5b9e\u4e0a\u5e94\u8be5\u662f\u6240\u6709\u7684\u6807\u8bc6\u7b26\uff09\u547d\u540d\u65f6\u505a\u5230 \u89c1\u540d\u77e5\u610f \u4e5f\u975e\u5e38\u91cd\u8981\u3002 \u53d8\u91cf\u7684\u4f7f\u7528 \u4e0b\u9762\u901a\u8fc7\u4f8b\u5b50\u6765\u8bf4\u660e\u53d8\u91cf\u7684\u7c7b\u578b\u548c\u53d8\u91cf\u7684\u4f7f\u7528\u3002 \"\"\" \u4f7f\u7528\u53d8\u91cf\u4fdd\u5b58\u6570\u636e\u5e76\u8fdb\u884c\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97 Version: 0.1 Author: \u9a86\u660a \"\"\" a = 45 # \u53d8\u91cfa\u4fdd\u5b58\u4e8645 b = 12 # \u53d8\u91cfb\u4fdd\u5b58\u4e8612 print ( a + b ) # 57 print ( a - b ) # 33 print ( a * b ) # 540 print ( a / b ) # 3.75 \u5728Python\u4e2d\u53ef\u4ee5\u4f7f\u7528 type \u51fd\u6570\u5bf9\u53d8\u91cf\u7684\u7c7b\u578b\u8fdb\u884c\u68c0\u67e5\u3002\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u51fd\u6570\u7684\u6982\u5ff5\u8ddf\u6570\u5b66\u4e0a\u51fd\u6570\u7684\u6982\u5ff5\u57fa\u672c\u4e00\u81f4\uff0c\u6570\u5b66\u4e0a\u7684\u51fd\u6570\u76f8\u4fe1\u5927\u5bb6\u5e76\u4e0d\u964c\u751f\uff0c\u5b83\u5305\u62ec\u4e86\u51fd\u6570\u540d\u3001\u81ea\u53d8\u91cf\u548c\u56e0\u53d8\u91cf\u3002\u5982\u679c\u6682\u65f6\u4e0d\u7406\u89e3\u51fd\u6570\u8fd9\u4e2a\u6982\u5ff5\u4e5f\u4e0d\u8981\u7d27\uff0c\u6211\u4eec\u4f1a\u5728\u540e\u7eed\u7684\u5185\u5bb9\u4e2d\u4e13\u95e8\u8bb2\u89e3\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u4f7f\u7528\u3002 \"\"\" \u4f7f\u7528type()\u68c0\u67e5\u53d8\u91cf\u7684\u7c7b\u578b Version: 0.1 Author: \u9a86\u660a \"\"\" a = 100 b = 12.345 c = 'hello, world' d = True print ( type ( a )) # <class 'int'> print ( type ( b )) # <class 'float'> print ( type ( c )) # <class 'str'> print ( type ( d )) # <class 'bool'> \u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u901a\u8fc7Python\u7684\u5185\u7f6e\u51fd\u6570\u6765\u5b9e\u73b0\u3002 int() \uff1a\u5c06\u4e00\u4e2a\u6570\u503c\u6216\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\uff0c\u53ef\u4ee5\u6307\u5b9a\u8fdb\u5236\u3002 float() \uff1a\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6d6e\u70b9\u6570\u3002 str() \uff1a\u5c06\u6307\u5b9a\u7684\u5bf9\u8c61\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u53ef\u4ee5\u6307\u5b9a\u7f16\u7801\u3002 chr() \uff1a\u5c06\u6574\u6570\u8f6c\u6362\u6210\u8be5\u7f16\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff08\u4e00\u4e2a\u5b57\u7b26\uff09\u3002 ord() \uff1a\u5c06\u5b57\u7b26\u4e32\uff08\u4e00\u4e2a\u5b57\u7b26\uff09\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u7f16\u7801\uff08\u6574\u6570\uff09\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u4e3a\u5927\u5bb6\u6f14\u793a\u4e86Python\u4e2d\u7c7b\u578b\u8f6c\u6362\u7684\u64cd\u4f5c\u3002 \"\"\" Python\u4e2d\u7684\u7c7b\u578b\u8f6c\u6362\u64cd\u4f5c Version: 0.1 Author: \u9a86\u660a \"\"\" a = 100 b = 12.345 c = 'hello, world' d = True # \u6574\u6570\u8f6c\u6210\u6d6e\u70b9\u6570 print ( float ( a )) # 100.0 # \u6d6e\u70b9\u578b\u8f6c\u6210\u5b57\u7b26\u4e32 (\u8f93\u51fa\u5b57\u7b26\u4e32\u65f6\u4e0d\u4f1a\u770b\u5230\u5f15\u53f7\u54df) print ( str ( b )) # 12.345 # \u5b57\u7b26\u4e32\u8f6c\u6210\u5e03\u5c14\u578b (\u6709\u5185\u5bb9\u7684\u5b57\u7b26\u4e32\u90fd\u4f1a\u53d8\u6210True) print ( bool ( c )) # True # \u5e03\u5c14\u578b\u8f6c\u6210\u6574\u6570 (True\u4f1a\u8f6c\u62101\uff0cFalse\u4f1a\u8f6c\u62100) print ( int ( d )) # 1 # \u5c06\u6574\u6570\u53d8\u6210\u5bf9\u5e94\u7684\u5b57\u7b26 (97\u521a\u597d\u5bf9\u5e94\u5b57\u7b26\u8868\u4e2d\u7684\u5b57\u6bcda) print ( chr ( 97 )) # a # \u5c06\u5b57\u7b26\u8f6c\u6210\u6574\u6570 (Python\u4e2d\u5b57\u7b26\u548c\u5b57\u7b26\u4e32\u8868\u793a\u6cd5\u76f8\u540c) print ( ord ( 'a' )) # 97 \u603b\u7ed3 \u5728Python\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5 \u4f7f\u7528\u53d8\u91cf\u6765\u4fdd\u5b58\u6570\u636e \uff0c \u53d8\u91cf\u6709\u4e0d\u540c\u7684\u7c7b\u578b \uff0c \u53d8\u91cf\u53ef\u4ee5\u505a\u8fd0\u7b97 \uff08\u4e0b\u4e00\u8bfe\u4f1a\u6709\u8be6\u7ec6\u7684\u8bb2\u89e3\uff09\uff0c \u4e5f\u53ef\u4ee5\u901a\u8fc7\u5185\u7f6e\u51fd\u6570\u6765\u8f6c\u6362\u53d8\u91cf\u7c7b\u578b \u3002","title":"\u7b2c03\u8bfe\uff1aPython\u8bed\u8a00\u5143\u7d20\u4e4b\u53d8\u91cf"},{"location":"%E7%AC%AC03%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E5%8F%98%E9%87%8F/#03python","text":"\u4f5c\u4e3a\u4e00\u4e2a\u7a0b\u5e8f\u5458\uff0c\u53ef\u80fd\u7ecf\u5e38\u4f1a\u88ab\u5916\u884c\u95ee\u5230\u4e24\u4e2a\u95ee\u9898\uff0c\u5176\u4e00\u662f\u201c\u4ec0\u4e48\u662f\uff08\u8ba1\u7b97\u673a\uff09\u7a0b\u5e8f\u201d\uff0c\u5176\u4e8c\u662f\u201c\u5199\uff08\u8ba1\u7b97\u673a\uff09\u7a0b\u5e8f\u80fd\u505a\u4ec0\u4e48\u201d\uff0c\u8fd9\u91cc\u6211\u5148\u5bf9\u8fd9\u4e24\u4e2a\u95ee\u9898\u505a\u4e00\u4e2a\u56de\u7b54\u3002 \u7a0b\u5e8f\u662f\u6307\u4ee4\u7684\u96c6\u5408 \uff0c \u5199\u7a0b\u5e8f\u5c31\u662f\u7528\u6307\u4ee4\u63a7\u5236\u8ba1\u7b97\u673a\u505a\u6211\u4eec\u60f3\u8ba9\u5b83\u505a\u7684\u4e8b\u60c5 \u3002\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u8981\u7528Python\u8bed\u8a00\u6765\u5199\u7a0b\u5e8f\u5462\uff1f\u56e0\u4e3a Python\u8bed\u8a00\u7b80\u5355\u4f18\u96c5 \uff0c\u76f8\u6bd4C\u3001C++\u3001Java\u8fd9\u6837\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c Python\u5bf9\u521d\u5b66\u8005\u66f4\u52a0\u53cb\u597d \uff0c\u5f53\u7136\u8fd9\u5e76\u4e0d\u662f\u8bf4Python\u4e0d\u50cf\u5176\u4ed6\u8bed\u8a00\u90a3\u6837\u5f3a\u5927\uff0c Python\u51e0\u4e4e\u662f\u65e0\u6240\u4e0d\u80fd\u7684 \uff0c\u5728\u7b2c\u4e00\u8282\u8bfe\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u8bf4\u5230\u4e86Python\u53ef\u4ee5\u7528\u4e8e\u670d\u52a1\u5668\u7a0b\u5e8f\u5f00\u53d1\u3001\u4e91\u5e73\u53f0\u5f00\u53d1\u3001\u6570\u636e\u5206\u6790\u3001\u673a\u5668\u5b66\u4e60\u7b49\u5404\u4e2a\u9886\u57df\u3002\u5f53\u7136\uff0cPython\u8bed\u8a00\u8fd8\u53ef\u4ee5\u7528\u6765\u7c98\u5408\u5176\u4ed6\u8bed\u8a00\u5f00\u53d1\u7684\u7cfb\u7edf\uff0c\u6240\u4ee5\u4e5f\u7ecf\u5e38\u88ab\u620f\u79f0\u4e3a\u201c \u80f6\u6c34\u8bed\u8a00 \u201d\u3002","title":"\u7b2c03\u8bfe\uff1aPython\u8bed\u8a00\u5143\u7d20\u4e4b\u53d8\u91cf"},{"location":"%E7%AC%AC03%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E5%8F%98%E9%87%8F/#_1","text":"\u5728\u5f00\u59cb\u7cfb\u7edf\u7684\u5b66\u4e60\u7f16\u7a0b\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u79d1\u666e\u4e00\u4e9b\u8ba1\u7b97\u673a\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u8ba1\u7b97\u673a\u7684\u786c\u4ef6\u7cfb\u7edf\u901a\u5e38\u7531\u4e94\u5927\u90e8\u4ef6\u6784\u6210\uff0c\u5305\u62ec\uff1a \u8fd0\u7b97\u5668 \u3001 \u63a7\u5236\u5668 \u3001 \u5b58\u50a8\u5668 \u3001 \u8f93\u5165\u8bbe\u5907 \u548c \u8f93\u51fa\u8bbe\u5907 \u3002\u5176\u4e2d\uff0c\u8fd0\u7b97\u5668\u548c\u63a7\u5236\u5668\u653e\u5728\u4e00\u8d77\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684 \u4e2d\u592e\u5904\u7406\u5668 \uff0c\u5b83\u7684\u529f\u80fd\u662f\u6267\u884c\u5404\u79cd\u8fd0\u7b97\u548c\u63a7\u5236\u6307\u4ee4\u3002\u521a\u624d\u6211\u4eec\u63d0\u5230\u8fc7\u7a0b\u5e8f\u662f\u6307\u4ee4\u7684\u96c6\u5408\uff0c\u5199\u7a0b\u5e8f\u5c31\u662f\u5c06\u4e00\u7cfb\u5217\u7684\u6307\u4ee4\u6309\u7167\u67d0\u79cd\u65b9\u5f0f\u7ec4\u7ec7\u5230\u4e00\u8d77\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e9b\u6307\u4ee4\u53bb\u63a7\u5236\u8ba1\u7b97\u673a\u505a\u6211\u4eec\u60f3\u8ba9\u5b83\u505a\u7684\u4e8b\u60c5\u3002\u76ee\u524d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u57fa\u672c\u90fd\u662f\u201c\u51af\u00b7\u8bfa\u4f9d\u66fc\u4f53\u7cfb\u7ed3\u6784\u201d\u7684\u8ba1\u7b97\u673a\uff0c\u8fd9\u79cd\u8ba1\u7b97\u673a\u6709\u4e24\u4e2a\u5173\u952e\u70b9\uff1a\u4e00\u662f\u8981\u5c06 \u5b58\u50a8\u8bbe\u5907\u4e0e\u4e2d\u592e\u5904\u7406\u5668\u5206\u5f00 \uff1b\u4e8c\u662f\u5c06 \u6570\u636e\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u7f16\u7801 \u3002 \u4e8c\u8fdb\u5236\u662f\u4e00\u79cd\u201c\u9022\u4e8c\u8fdb\u4e00\u201d\u7684\u8ba1\u6570\u6cd5\uff0c\u8ddf\u6211\u4eec\u4eba\u7c7b\u4f7f\u7528\u7684\u201c\u9022\u5341\u8fdb\u4e00\u201d\u7684\u8ba1\u6570\u6cd5\u672c\u8d28\u662f\u4e00\u6837\u7684\u3002\u4eba\u7c7b\u56e0\u4e3a\u6709\u5341\u6839\u624b\u6307\u6240\u4ee5\u4f7f\u7528\u4e86\u5341\u8fdb\u5236\uff0c\u56e0\u4e3a\u5728\u8ba1\u6570\u65f6\u5341\u6839\u624b\u6307\u7528\u5b8c\u4e4b\u540e\u5c31\u53ea\u80fd\u7528\u8fdb\u4f4d\u7684\u65b9\u5f0f\u6765\u8868\u793a\u66f4\u5927\u7684\u6570\u503c\u3002\u5f53\u7136\u51e1\u4e8b\u90fd\u6709\u4f8b\u5916\uff0c\u739b\u96c5\u4eba\u53ef\u80fd\u662f\u56e0\u4e3a\u957f\u5e74\u5149\u7740\u811a\u7684\u539f\u56e0\uff0c\u628a\u811a\u8dbe\u5934\u4e5f\u90fd\u7528\u4e0a\u4e86\uff0c\u4e8e\u662f\u4ed6\u4eec\u4f7f\u7528\u4e86\u4e8c\u5341\u8fdb\u5236\u7684\u8ba1\u6570\u6cd5\u3002\u5728\u8fd9\u79cd\u8ba1\u6570\u6cd5\u7684\u6307\u5bfc\u4e0b\uff0c\u739b\u96c5\u4eba\u7684\u5386\u6cd5\u5c31\u4e0e\u6211\u4eec\u5e73\u5e38\u4f7f\u7528\u7684\u5386\u6cd5\u5e76\u4e0d\u76f8\u540c\u3002\u6309\u7167\u739b\u96c5\u4eba\u7684\u5386\u6cd5\uff0c2012\u5e74\u662f\u4e0a\u4e00\u4e2a\u6240\u8c13\u7684\u201c\u592a\u9633\u7eaa\u201d\u7684\u6700\u540e\u4e00\u5e74\uff0c\u800c2013\u5e74\u5219\u662f\u65b0\u7684\u201c\u592a\u9633\u7eaa\u201d\u7684\u5f00\u59cb\uff0c\u540e\u6765\u8fd9\u4ef6\u4e8b\u60c5\u88ab\u4ee5\u8bb9\u4f20\u8bb9\u7684\u65b9\u5f0f\u8bef\u4f20\u4e3a\u201d2012\u5e74\u662f\u739b\u96c5\u4eba\u9884\u8a00\u7684\u4e16\u754c\u672b\u65e5\u201c\u7684\u8352\u8bde\u8bf4\u6cd5\u3002\u4eca\u5929\u5f88\u591a\u4eba\u90fd\u5728\u731c\u6d4b\uff0c\u739b\u96c5\u6587\u660e\u4e4b\u6240\u4ee5\u53d1\u5c55\u7f13\u6162\u8ddf\u4f7f\u7528\u4e86\u4e8c\u5341\u8fdb\u5236\u662f\u6709\u5173\u7cfb\u7684\u3002\u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u4e8c\u8fdb\u5236\u5728\u7269\u7406\u5668\u4ef6\u4e0a\u6700\u5bb9\u6613\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u7528\u9ad8\u7535\u538b\u8868\u793a1\uff0c\u7528\u4f4e\u7535\u538b\u8868\u793a0\u3002\u4e0d\u662f\u6240\u6709\u5199\u7a0b\u5e8f\u7684\u4eba\u90fd\u9700\u8981\u77e5\u9053\u5341\u8fdb\u5236\u4e0e\u4e8c\u8fdb\u5236\u5982\u4f55\u8f6c\u6362\uff0c\u5927\u591a\u6570\u65f6\u5019\u6211\u4eec\u5373\u4fbf\u4e0d\u4e86\u89e3\u8fd9\u4e9b\u77e5\u8bc6\u4e5f\u80fd\u5199\u51fa\u7a0b\u5e8f\uff0c\u4f46\u662f\u6211\u4eec\u5fc5\u987b\u8981\u77e5\u9053 \u8ba1\u7b97\u673a\u662f\u4f7f\u7528\u4e8c\u8fdb\u5236\u8ba1\u6570\u7684 \uff0c\u4e0d\u7ba1\u4ec0\u4e48 \u6570\u636e\u5230\u4e86\u8ba1\u7b97\u673a\u5185\u5b58\u4e2d\u90fd\u662f\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b58\u5728\u7684 \u3002","title":"\u4e00\u4e9b\u8ba1\u7b97\u673a\u5e38\u8bc6"},{"location":"%E7%AC%AC03%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E5%8F%98%E9%87%8F/#_2","text":"\u8981\u60f3\u5728\u8ba1\u7b97\u673a\u5185\u5b58\u4e2d\u4fdd\u5b58\u6570\u636e\uff0c\u9996\u5148\u5c31\u5f97\u8bf4\u4e00\u8bf4\u53d8\u91cf\u8fd9\u4e2a\u6982\u5ff5\u3002\u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c \u53d8\u91cf\u662f\u6570\u636e\u7684\u8f7d\u4f53 \uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e00\u5757\u7528\u6765\u4fdd\u5b58\u6570\u636e\u7684\u5185\u5b58\u7a7a\u95f4\uff0c \u53d8\u91cf\u7684\u503c\u53ef\u4ee5\u88ab\u8bfb\u53d6\u548c\u4fee\u6539 \uff0c\u8fd9\u662f\u6240\u6709\u8ba1\u7b97\u548c\u63a7\u5236\u7684\u57fa\u7840\u3002\u8ba1\u7b97\u673a\u80fd\u5904\u7406\u7684\u6570\u636e\u6709\u5f88\u591a\u79cd\u7c7b\u578b\uff0c\u6700\u5e38\u89c1\u7684\u5c31\u662f\u6570\u503c\uff0c\u9664\u4e86\u6570\u503c\u4e4b\u5916\u8fd8\u6709\u6587\u672c\u3001\u56fe\u5f62\u3001\u97f3\u9891\u3001\u89c6\u9891\u7b49\u5404\u79cd\u5404\u6837\u7684\u6570\u636e\u3002\u867d\u7136\u6570\u636e\u5728\u8ba1\u7b97\u673a\u4e2d\u90fd\u662f\u4ee5\u4e8c\u8fdb\u5236\u5f62\u6001\u5b58\u5728\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u6765\u8868\u793a\u6570\u636e\u7c7b\u578b\u7684\u5dee\u5f02\u3002 Python\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u5f88\u591a \uff0c\u800c\u4e14\u4e5f \u5141\u8bb8\u6211\u4eec\u81ea\u5b9a\u4e49\u65b0\u7684\u6570\u636e\u7c7b\u578b \uff08\u8fd9\u4e00\u70b9\u5728\u540e\u9762\u4f1a\u8bb2\u5230\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u51e0\u79cd\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b\u3002 \u6574\u578b\uff08 int \uff09\uff1aPython\u4e2d\u53ef\u4ee5\u5904\u7406\u4efb\u610f\u5927\u5c0f\u7684\u6574\u6570\uff0c\u800c\u4e14\u652f\u6301\u4e8c\u8fdb\u5236\uff08\u5982 0b100 \uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f4\uff09\u3001\u516b\u8fdb\u5236\uff08\u5982 0o100 \uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f64\uff09\u3001\u5341\u8fdb\u5236\uff08 100 \uff09\u548c\u5341\u516d\u8fdb\u5236\uff08 0x100 \uff0c\u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f256\uff09\u7684\u8868\u793a\u6cd5\u3002 \u6d6e\u70b9\u578b\uff08 float \uff09\uff1a\u6d6e\u70b9\u6570\u4e5f\u5c31\u662f\u5c0f\u6570\uff0c\u4e4b\u6240\u4ee5\u79f0\u4e3a\u6d6e\u70b9\u6570\uff0c\u662f\u56e0\u4e3a\u6309\u7167\u79d1\u5b66\u8bb0\u6570\u6cd5\u8868\u793a\u65f6\uff0c\u4e00\u4e2a\u6d6e\u70b9\u6570\u7684\u5c0f\u6570\u70b9\u4f4d\u7f6e\u662f\u53ef\u53d8\u7684\uff0c\u6d6e\u70b9\u6570\u9664\u4e86\u6570\u5b66\u5199\u6cd5\uff08\u5982 123.456 \uff09\u4e4b\u5916\u8fd8\u652f\u6301\u79d1\u5b66\u8ba1\u6570\u6cd5\uff08\u5982 1.23456e2 \uff09\u3002 \u5b57\u7b26\u4e32\u578b\uff08 str \uff09\uff1a\u5b57\u7b26\u4e32\u662f\u4ee5\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u4efb\u610f\u6587\u672c\uff0c\u6bd4\u5982 'hello' \u548c \"hello\" \u3002 \u5e03\u5c14\u578b\uff08 bool \uff09\uff1a\u5e03\u5c14\u503c\u53ea\u6709 True \u3001 False \u4e24\u79cd\u503c\uff0c\u8981\u4e48\u662f True \uff0c\u8981\u4e48\u662f False \u3002","title":"\u53d8\u91cf\u548c\u7c7b\u578b"},{"location":"%E7%AC%AC03%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E5%8F%98%E9%87%8F/#_3","text":"\u5bf9\u4e8e\u6bcf\u4e2a\u53d8\u91cf\u6211\u4eec\u9700\u8981\u7ed9\u5b83\u53d6\u4e00\u4e2a\u540d\u5b57\uff0c\u5c31\u5982\u540c\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u540d\u5b57\u4e00\u6837\u3002\u5728Python\u4e2d\uff0c\u53d8\u91cf\u547d\u540d\u9700\u8981\u9075\u5faa\u4ee5\u4e0b\u8fd9\u4e9b\u89c4\u5219\uff0c\u8fd9\u4e9b\u89c4\u5219\u53c8\u5206\u4e3a\u5fc5\u987b\u9075\u5b88\u7684\u786c\u6027\u89c4\u5219\u548c\u5efa\u8bae\u9075\u5b88\u7684\u975e\u786c\u6027\u89c4\u5219\u3002 \u786c\u6027\u89c4\u5219\uff1a \u89c4\u52191\uff1a\u53d8\u91cf\u540d\u7531 \u5b57\u6bcd \u3001\u6570\u5b57\u548c \u4e0b\u5212\u7ebf \u6784\u6210\uff0c\u6570\u5b57\u4e0d\u80fd\u5f00\u5934\u3002\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u8fd9\u91cc\u8bf4\u7684\u5b57\u6bcd\u6307\u7684\u662fUnicode\u5b57\u7b26\uff0cUnicode\u79f0\u4e3a\u4e07\u56fd\u7801\uff0c\u56ca\u62ec\u4e86\u4e16\u754c\u4e0a\u5927\u90e8\u5206\u7684\u6587\u5b57\u7cfb\u7edf\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u4e2d\u6587\u3001\u65e5\u6587\u3001\u5e0c\u814a\u5b57\u6bcd\u7b49\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u53d8\u91cf\u540d\u4e2d\u7684\u5b57\u7b26\uff0c\u4f46\u662f\u50cf ! \u3001 @ \u3001 # \u8fd9\u4e9b\u7279\u6b8a\u5b57\u7b26\u662f\u4e0d\u80fd\u51fa\u73b0\u5728\u53d8\u91cf\u540d\u4e2d\u7684\uff0c\u800c\u4e14\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u5927\u5bb6 \u5c3d\u53ef\u80fd\u4f7f\u7528\u82f1\u6587\u5b57\u6bcd \u3002 \u89c4\u52192\uff1a \u5927\u5c0f\u5199\u654f\u611f \uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u5927\u5199\u7684 A \u548c\u5c0f\u5199\u7684 a \u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u53d8\u91cf\u3002 \u89c4\u52193\uff1a\u53d8\u91cf\u540d \u4e0d\u8981\u8ddfPython\u8bed\u8a00\u7684\u5173\u952e\u5b57 \uff08\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\uff0c\u540e\u9762\u4f1a\u8bb2\u5230\uff09\u548c \u4fdd\u7559\u5b57 \uff08\u5982\u5df2\u6709\u7684\u51fd\u6570\u3001\u6a21\u5757\u7b49\u7684\u540d\u5b57\uff09 \u53d1\u751f\u91cd\u540d\u7684\u51b2\u7a81 \u3002 \u975e\u786c\u6027\u89c4\u5219\uff1a \u89c4\u52191\uff1a\u53d8\u91cf\u540d\u901a\u5e38\u4f7f\u7528\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\uff0c\u591a\u4e2a\u5355\u8bcd\u7528\u4e0b\u5212\u7ebf\u8fdb\u884c\u8fde\u63a5\u3002 \u89c4\u52192\uff1a\u53d7\u4fdd\u62a4\u7684\u53d8\u91cf\u7528\u5355\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\u3002 \u89c4\u52193\uff1a\u79c1\u6709\u7684\u53d8\u91cf\u7528\u4e24\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\u3002 \u89c4\u52192\u548c\u89c4\u52193\u5927\u5bb6\u6682\u65f6\u4e0d\u7528\u7406\u89e3\uff0c\u540e\u9762\u81ea\u7136\u4f1a\u660e\u767d\u7684\u3002\u5f53\u7136\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u4e13\u4e1a\u7684\u7a0b\u5e8f\u5458\uff0c\u7ed9\u53d8\u91cf\uff08\u4e8b\u5b9e\u4e0a\u5e94\u8be5\u662f\u6240\u6709\u7684\u6807\u8bc6\u7b26\uff09\u547d\u540d\u65f6\u505a\u5230 \u89c1\u540d\u77e5\u610f \u4e5f\u975e\u5e38\u91cd\u8981\u3002","title":"\u53d8\u91cf\u547d\u540d"},{"location":"%E7%AC%AC03%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E5%8F%98%E9%87%8F/#_4","text":"\u4e0b\u9762\u901a\u8fc7\u4f8b\u5b50\u6765\u8bf4\u660e\u53d8\u91cf\u7684\u7c7b\u578b\u548c\u53d8\u91cf\u7684\u4f7f\u7528\u3002 \"\"\" \u4f7f\u7528\u53d8\u91cf\u4fdd\u5b58\u6570\u636e\u5e76\u8fdb\u884c\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97 Version: 0.1 Author: \u9a86\u660a \"\"\" a = 45 # \u53d8\u91cfa\u4fdd\u5b58\u4e8645 b = 12 # \u53d8\u91cfb\u4fdd\u5b58\u4e8612 print ( a + b ) # 57 print ( a - b ) # 33 print ( a * b ) # 540 print ( a / b ) # 3.75 \u5728Python\u4e2d\u53ef\u4ee5\u4f7f\u7528 type \u51fd\u6570\u5bf9\u53d8\u91cf\u7684\u7c7b\u578b\u8fdb\u884c\u68c0\u67e5\u3002\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u51fd\u6570\u7684\u6982\u5ff5\u8ddf\u6570\u5b66\u4e0a\u51fd\u6570\u7684\u6982\u5ff5\u57fa\u672c\u4e00\u81f4\uff0c\u6570\u5b66\u4e0a\u7684\u51fd\u6570\u76f8\u4fe1\u5927\u5bb6\u5e76\u4e0d\u964c\u751f\uff0c\u5b83\u5305\u62ec\u4e86\u51fd\u6570\u540d\u3001\u81ea\u53d8\u91cf\u548c\u56e0\u53d8\u91cf\u3002\u5982\u679c\u6682\u65f6\u4e0d\u7406\u89e3\u51fd\u6570\u8fd9\u4e2a\u6982\u5ff5\u4e5f\u4e0d\u8981\u7d27\uff0c\u6211\u4eec\u4f1a\u5728\u540e\u7eed\u7684\u5185\u5bb9\u4e2d\u4e13\u95e8\u8bb2\u89e3\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u4f7f\u7528\u3002 \"\"\" \u4f7f\u7528type()\u68c0\u67e5\u53d8\u91cf\u7684\u7c7b\u578b Version: 0.1 Author: \u9a86\u660a \"\"\" a = 100 b = 12.345 c = 'hello, world' d = True print ( type ( a )) # <class 'int'> print ( type ( b )) # <class 'float'> print ( type ( c )) # <class 'str'> print ( type ( d )) # <class 'bool'> \u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u901a\u8fc7Python\u7684\u5185\u7f6e\u51fd\u6570\u6765\u5b9e\u73b0\u3002 int() \uff1a\u5c06\u4e00\u4e2a\u6570\u503c\u6216\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\uff0c\u53ef\u4ee5\u6307\u5b9a\u8fdb\u5236\u3002 float() \uff1a\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6d6e\u70b9\u6570\u3002 str() \uff1a\u5c06\u6307\u5b9a\u7684\u5bf9\u8c61\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u53ef\u4ee5\u6307\u5b9a\u7f16\u7801\u3002 chr() \uff1a\u5c06\u6574\u6570\u8f6c\u6362\u6210\u8be5\u7f16\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff08\u4e00\u4e2a\u5b57\u7b26\uff09\u3002 ord() \uff1a\u5c06\u5b57\u7b26\u4e32\uff08\u4e00\u4e2a\u5b57\u7b26\uff09\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u7f16\u7801\uff08\u6574\u6570\uff09\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u4e3a\u5927\u5bb6\u6f14\u793a\u4e86Python\u4e2d\u7c7b\u578b\u8f6c\u6362\u7684\u64cd\u4f5c\u3002 \"\"\" Python\u4e2d\u7684\u7c7b\u578b\u8f6c\u6362\u64cd\u4f5c Version: 0.1 Author: \u9a86\u660a \"\"\" a = 100 b = 12.345 c = 'hello, world' d = True # \u6574\u6570\u8f6c\u6210\u6d6e\u70b9\u6570 print ( float ( a )) # 100.0 # \u6d6e\u70b9\u578b\u8f6c\u6210\u5b57\u7b26\u4e32 (\u8f93\u51fa\u5b57\u7b26\u4e32\u65f6\u4e0d\u4f1a\u770b\u5230\u5f15\u53f7\u54df) print ( str ( b )) # 12.345 # \u5b57\u7b26\u4e32\u8f6c\u6210\u5e03\u5c14\u578b (\u6709\u5185\u5bb9\u7684\u5b57\u7b26\u4e32\u90fd\u4f1a\u53d8\u6210True) print ( bool ( c )) # True # \u5e03\u5c14\u578b\u8f6c\u6210\u6574\u6570 (True\u4f1a\u8f6c\u62101\uff0cFalse\u4f1a\u8f6c\u62100) print ( int ( d )) # 1 # \u5c06\u6574\u6570\u53d8\u6210\u5bf9\u5e94\u7684\u5b57\u7b26 (97\u521a\u597d\u5bf9\u5e94\u5b57\u7b26\u8868\u4e2d\u7684\u5b57\u6bcda) print ( chr ( 97 )) # a # \u5c06\u5b57\u7b26\u8f6c\u6210\u6574\u6570 (Python\u4e2d\u5b57\u7b26\u548c\u5b57\u7b26\u4e32\u8868\u793a\u6cd5\u76f8\u540c) print ( ord ( 'a' )) # 97","title":"\u53d8\u91cf\u7684\u4f7f\u7528"},{"location":"%E7%AC%AC03%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E5%8F%98%E9%87%8F/#_5","text":"\u5728Python\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5 \u4f7f\u7528\u53d8\u91cf\u6765\u4fdd\u5b58\u6570\u636e \uff0c \u53d8\u91cf\u6709\u4e0d\u540c\u7684\u7c7b\u578b \uff0c \u53d8\u91cf\u53ef\u4ee5\u505a\u8fd0\u7b97 \uff08\u4e0b\u4e00\u8bfe\u4f1a\u6709\u8be6\u7ec6\u7684\u8bb2\u89e3\uff09\uff0c \u4e5f\u53ef\u4ee5\u901a\u8fc7\u5185\u7f6e\u51fd\u6570\u6765\u8f6c\u6362\u53d8\u91cf\u7c7b\u578b \u3002","title":"\u603b\u7ed3"},{"location":"%E7%AC%AC04%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/","text":"\u7b2c04\u8bfe\uff1aPython\u8bed\u8a00\u5143\u7d20\u4e4b\u8fd0\u7b97\u7b26 Python\u8bed\u8a00\u652f\u6301\u5f88\u591a\u79cd\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u5148\u7528\u4e00\u4e2a\u8868\u683c\u4e3a\u5927\u5bb6\u5217\u51fa\u8fd9\u4e9b\u8fd0\u7b97\u7b26\uff0c\u7136\u540e\u9009\u62e9\u4e00\u4e9b\u9a6c\u4e0a\u5c31\u4f1a\u7528\u5230\u7684\u8fd0\u7b97\u7b26\u4e3a\u5927\u5bb6\u8fdb\u884c\u8bb2\u89e3\u3002 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 [] [:] \u4e0b\u6807\uff0c\u5207\u7247 ** \u6307\u6570 ~ + - \u6309\u4f4d\u53d6\u53cd, \u6b63\u8d1f\u53f7 * / % // \u4e58\uff0c\u9664\uff0c\u6a21\uff0c\u6574\u9664 + - \u52a0\uff0c\u51cf >> << \u53f3\u79fb\uff0c\u5de6\u79fb & \u6309\u4f4d\u4e0e ^ \\| \u6309\u4f4d\u5f02\u6216\uff0c\u6309\u4f4d\u6216 <= < > >= \u5c0f\u4e8e\u7b49\u4e8e\uff0c\u5c0f\u4e8e\uff0c\u5927\u4e8e\uff0c\u5927\u4e8e\u7b49\u4e8e == != \u7b49\u4e8e\uff0c\u4e0d\u7b49\u4e8e is is not \u8eab\u4efd\u8fd0\u7b97\u7b26 in not in \u6210\u5458\u8fd0\u7b97\u7b26 not or and \u903b\u8f91\u8fd0\u7b97\u7b26 = += -= *= /= %= //= **= &= |= ^= >>= <<= \uff08\u590d\u5408\uff09\u8d4b\u503c\u8fd0\u7b97\u7b26 \u8bf4\u660e\uff1a \u4e0a\u9762\u8fd9\u4e2a\u8868\u683c\u5b9e\u9645\u4e0a\u662f\u6309\u7167\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u4ece\u4e0a\u5230\u4e0b\u5217\u51fa\u4e86\u5404\u79cd\u8fd0\u7b97\u7b26\u3002\u6240\u8c13\u4f18\u5148\u7ea7\u5c31\u662f\u5728\u4e00\u4e2a\u8fd0\u7b97\u7684\u8868\u8fbe\u5f0f\u4e2d\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u591a\u4e2a\u8fd0\u7b97\u7b26\uff0c\u5e94\u8be5\u5148\u6267\u884c\u54ea\u4e2a\u8fd0\u7b97\u518d\u6267\u884c\u54ea\u4e2a\u8fd0\u7b97\u7684\u987a\u5e8f\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u641e\u4e0d\u6e05\u695a\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u53ef\u4ee5\u4f7f\u7528\u5706\u62ec\u53f7\u6765\u786e\u4fdd\u8fd0\u7b97\u7684\u6267\u884c\u987a\u5e8f\u3002 \u7b97\u672f\u8fd0\u7b97\u7b26 Python\u4e2d\u7684\u7b97\u672f\u8fd0\u7b97\u7b26\u975e\u5e38\u4e30\u5bcc\uff0c\u9664\u4e86\u5927\u5bb6\u6700\u4e3a\u719f\u6089\u7684\u52a0\u51cf\u4e58\u9664\u4e4b\u5916\uff0c\u8fd8\u6709\u6574\u9664\u8fd0\u7b97\u7b26\u3001\u6c42\u6a21\uff08\u6c42\u4f59\u6570\uff09\u8fd0\u7b97\u7b26\u548c\u6c42\u5e42\u8fd0\u7b97\u7b26\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e3a\u5927\u5bb6\u5c55\u793a\u4e86\u7b97\u672f\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528\u3002 \"\"\" \u7b97\u672f\u8fd0\u7b97\u7b26 Version: 0.1 Author: \u9a86\u660a \"\"\" print ( 321 + 123 ) # \u52a0\u6cd5\u8fd0\u7b97 print ( 321 - 123 ) # \u51cf\u6cd5\u8fd0\u7b97 print ( 321 * 123 ) # \u4e58\u6cd5\u8fd0\u7b97 print ( 321 / 123 ) # \u9664\u6cd5\u8fd0\u7b97 print ( 321 % 123 ) # \u6c42\u6a21\u8fd0\u7b97 print ( 321 // 123 ) # \u6574\u9664\u8fd0\u7b97 print ( 321 ** 123 ) # \u6c42\u5e42\u8fd0\u7b97 \u8d4b\u503c\u8fd0\u7b97\u7b26 \u8d4b\u503c\u8fd0\u7b97\u7b26\u5e94\u8be5\u662f\u6700\u4e3a\u5e38\u89c1\u7684\u8fd0\u7b97\u7b26\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u53f3\u8fb9\u7684\u503c\u8d4b\u7ed9\u5de6\u8fb9\u7684\u53d8\u91cf\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u8d4b\u503c\u8fd0\u7b97\u7b26\u548c\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528\u3002 \"\"\" \u8d4b\u503c\u8fd0\u7b97\u7b26\u548c\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26 Version: 0.1 Author: \u9a86\u660a \"\"\" a = 10 b = 3 a += b # \u76f8\u5f53\u4e8e\uff1aa = a + b a *= a + 2 # \u76f8\u5f53\u4e8e\uff1aa = a * (a + 2) print ( a ) # \u7b97\u4e00\u4e0b\u8fd9\u91cc\u4f1a\u8f93\u51fa\u4ec0\u4e48 \u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u903b\u8f91\u8fd0\u7b97\u7b26 \u6bd4\u8f83\u8fd0\u7b97\u7b26\u6709\u7684\u5730\u65b9\u4e5f\u79f0\u4e3a\u5173\u7cfb\u8fd0\u7b97\u7b26\uff0c\u5305\u62ec == \u3001 != \u3001 < \u3001 > \u3001 <= \u3001 >= \uff0c\u6211\u76f8\u4fe1\u6ca1\u6709\u4ec0\u4e48\u597d\u89e3\u91ca\u7684\uff0c\u5927\u5bb6\u4e00\u770b\u5c31\u80fd\u61c2\uff0c\u9700\u8981\u63d0\u9192\u7684\u662f\u6bd4\u8f83\u76f8\u7b49\u7528\u7684\u662f == \uff0c\u8bf7\u6ce8\u610f\u8fd9\u91cc\u662f\u4e24\u4e2a\u7b49\u53f7\uff0c\u56e0\u4e3a = \u662f\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u5728\u4e0a\u9762\u521a\u521a\u8bb2\u5230\u8fc7\uff0c == \u624d\u662f\u6bd4\u8f83\u76f8\u7b49\u7684\u8fd0\u7b97\u7b26\uff1b\u6bd4\u8f83\u4e0d\u76f8\u7b49\u7528\u7684\u662f != \uff0c\u8fd9\u4e0d\u540c\u4e8e\u6570\u5b66\u4e0a\u7684\u4e0d\u7b49\u53f7\uff0cPython 2\u4e2d\u66fe\u7ecf\u4f7f\u7528\u8fc7 <> \u6765\u8868\u793a\u4e0d\u7b49\u5173\u7cfb\uff0c\u5927\u5bb6\u77e5\u9053\u5c31\u53ef\u4ee5\u4e86\u3002\u6bd4\u8f83\u8fd0\u7b97\u7b26\u4f1a\u4ea7\u751f\u5e03\u5c14\u503c\uff0c\u8981\u4e48\u662f True \u8981\u4e48\u662f False \u3002 \u903b\u8f91\u8fd0\u7b97\u7b26\u6709\u4e09\u4e2a\uff0c\u5206\u522b\u662f and \u3001 or \u548c not \u3002 and \u5b57\u9762\u610f\u601d\u662f\u201c\u800c\u4e14\u201d\uff0c\u6240\u4ee5 and \u8fd0\u7b97\u7b26\u4f1a\u8fde\u63a5\u4e24\u4e2a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u4e24\u4e2a\u5e03\u5c14\u503c\u90fd\u662f True \uff0c\u90a3\u4e48\u8fd0\u7b97\u7684\u7ed3\u679c\u5c31\u662f True \uff1b\u5de6\u53f3\u4e24\u8fb9\u7684\u5e03\u5c14\u503c\u6709\u4e00\u4e2a\u662f False \uff0c\u6700\u7ec8\u7684\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f False \u3002\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u60f3\u5230\u4e86\uff0c\u5982\u679c and \u5de6\u8fb9\u7684\u5e03\u5c14\u503c\u662f False \uff0c\u4e0d\u7ba1\u53f3\u8fb9\u7684\u5e03\u5c14\u503c\u662f\u4ec0\u4e48\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u90fd\u662f False \uff0c\u6240\u4ee5\u5728\u505a\u8fd0\u7b97\u7684\u65f6\u5019\u53f3\u8fb9\u7684\u503c\u4f1a\u88ab\u8df3\u8fc7\uff08\u77ed\u8def\u5904\u7406\uff09\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u5728 and \u8fd0\u7b97\u7b26\u5de6\u8fb9\u4e3a False \u7684\u60c5\u51b5\u4e0b\uff0c\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u6839\u672c\u4e0d\u4f1a\u6267\u884c\u3002 or \u5b57\u9762\u610f\u601d\u662f\u201c\u6216\u8005\u201d\uff0c\u6240\u4ee5 or \u8fd0\u7b97\u7b26\u4e5f\u4f1a\u8fde\u63a5\u4e24\u4e2a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u4e24\u4e2a\u5e03\u5c14\u503c\u6709\u4efb\u610f\u4e00\u4e2a\u662f True \uff0c\u90a3\u4e48\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u662f True \u3002\u5f53\u7136\uff0c or \u8fd0\u7b97\u7b26\u4e5f\u662f\u6709\u77ed\u8def\u529f\u80fd\u7684\uff0c\u5728\u5b83\u5de6\u8fb9\u7684\u5e03\u5c14\u503c\u4e3a True \u7684\u60c5\u51b5\u4e0b\uff0c\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u6839\u672c\u4e0d\u4f1a\u6267\u884c\u3002 not \u8fd0\u7b97\u7b26\u7684\u540e\u9762\u4f1a\u8ddf\u4e0a\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5f97\u5230\u4e0e\u8be5\u5e03\u5c14\u503c\u76f8\u53cd\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c not \u540e\u9762\u7684\u5e03\u5c14\u503c\u5982\u679c\u662f True \uff0c\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f False \uff1b\u800c not \u540e\u9762\u7684\u5e03\u5c14\u503c\u5982\u679c\u662f False \uff0c\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f True \u3002 \"\"\" \u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u903b\u8f91\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528 Version: 0.1 Author: \u9a86\u660a \"\"\" flag0 = 1 == 1 flag1 = 3 > 2 flag2 = 2 < 1 flag3 = flag1 and flag2 flag4 = flag1 or flag2 flag5 = not ( 1 != 2 ) print ( 'flag0 =' , flag0 ) # flag0 = True print ( 'flag1 =' , flag1 ) # flag1 = True print ( 'flag2 =' , flag2 ) # flag2 = False print ( 'flag3 =' , flag3 ) # flag3 = False print ( 'flag4 =' , flag4 ) # flag4 = True print ( 'flag5 =' , flag5 ) # flag5 = False \u8bf4\u660e \uff1a\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5 flag0 = 1 == 1 \u5148\u505a 1 == 1 \u4ea7\u751f\u5e03\u5c14\u503c True \uff0c\u518d\u5c06\u8fd9\u4e2a\u503c\u8d4b\u503c\u7ed9\u53d8\u91cf flag0 \u3002 print \u51fd\u6570\u53ef\u4ee5\u8f93\u51fa\u591a\u4e2a\u503c\uff0c\u591a\u4e2a\u503c\u4e4b\u95f4\u53ef\u4ee5\u7528 , \u8fdb\u884c\u5206\u9694\uff0c\u8f93\u51fa\u7684\u5185\u5bb9\u4e4b\u95f4\u9ed8\u8ba4\u4ee5\u7a7a\u683c\u5206\u5f00\u3002 \u8fd0\u7b97\u7b26\u7684\u4f8b\u5b50 \u4f8b\u5b501\uff1a\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u4e3a\u6444\u6c0f\u6e29\u5ea6\u3002 \u63d0\u793a \uff1a\u534e\u6c0f\u6e29\u5ea6\u5230\u6444\u6c0f\u6e29\u5ea6\u7684\u8f6c\u6362\u516c\u5f0f\u4e3a\uff1a C = (F - 32) / 1.8 \u3002 \"\"\" \u5c06\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u4e3a\u6444\u6c0f\u6e29\u5ea6 Version: 0.1 Author: \u9a86\u660a \"\"\" f = float ( input ( '\u8bf7\u8f93\u5165\u534e\u6c0f\u6e29\u5ea6: ' )) c = ( f - 32 ) / 1.8 print ( ' %.1f \u534e\u6c0f\u5ea6 = %.1f \u6444\u6c0f\u5ea6' % ( f , c )) \u8bf4\u660e \uff1a\u5728\u4f7f\u7528 print \u51fd\u6570\u8f93\u51fa\u65f6\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u5185\u5bb9\u8fdb\u884c\u683c\u5f0f\u5316\u5904\u7406\uff0c\u4e0a\u9762 print \u51fd\u6570\u4e2d\u7684\u5b57\u7b26\u4e32 %.1f \u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u7a0d\u540e\u4f1a\u7531\u4e00\u4e2a float \u7c7b\u578b\u7684\u53d8\u91cf\u503c\u66ff\u6362\u6389\u5b83\u3002\u540c\u7406\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u6709 %d \uff0c\u540e\u9762\u53ef\u4ee5\u7528\u4e00\u4e2a int \u7c7b\u578b\u7684\u53d8\u91cf\u503c\u66ff\u6362\u6389\u5b83\uff0c\u800c %s \u4f1a\u88ab\u5b57\u7b26\u4e32\u7684\u503c\u66ff\u6362\u6389\u3002\u9664\u4e86\u8fd9\u79cd\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d {f:.1f} \u548c {c:.1f} \u53ef\u4ee5\u5148\u770b\u6210\u662f {f} \u548c {c} \uff0c\u8868\u793a\u8f93\u51fa\u65f6\u4f1a\u7528\u53d8\u91cf f \u548c\u53d8\u91cf c \u7684\u503c\u66ff\u6362\u6389\u8fd9\u4e24\u4e2a\u5360\u4f4d\u7b26\uff0c\u540e\u9762\u7684 :.1f \u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u5c0f\u6570\u70b9\u540e\u4fdd\u75591\u4f4d\u6709\u6548\u6570\u5b57\u3002 print ( f ' { f : .1f } \u534e\u6c0f\u5ea6 = { c : .1f } \u6444\u6c0f\u5ea6' ) \u4f8b\u5b502\uff1a\u8f93\u5165\u5706\u7684\u534a\u5f84\u8ba1\u7b97\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u3002 \"\"\" \u8f93\u5165\u534a\u5f84\u8ba1\u7b97\u5706\u7684\u5468\u957f\u548c\u9762\u79ef Version: 0.1 Author: \u9a86\u660a \"\"\" radius = float ( input ( '\u8bf7\u8f93\u5165\u5706\u7684\u534a\u5f84: ' )) perimeter = 2 * 3.1416 * radius area = 3.1416 * radius * radius print ( '\u5468\u957f: %.2f ' % perimeter ) print ( '\u9762\u79ef: %.2f ' % area ) \u4f8b\u5b503\uff1a\u8f93\u5165\u5e74\u4efd\u5224\u65ad\u662f\u4e0d\u662f\u95f0\u5e74\u3002 \"\"\" \u8f93\u5165\u5e74\u4efd \u5982\u679c\u662f\u95f0\u5e74\u8f93\u51faTrue \u5426\u5219\u8f93\u51faFalse Version: 0.1 Author: \u9a86\u660a \"\"\" year = int ( input ( '\u8bf7\u8f93\u5165\u5e74\u4efd: ' )) is_leap = year % 4 == 0 and year % 100 != 0 or year % 400 == 0 print ( is_leap ) \u8bf4\u660e \uff1a\u6bd4\u8f83\u8fd0\u7b97\u7b26\u4f1a\u4ea7\u751f\u5e03\u5c14\u503c\uff0c\u800c\u903b\u8f91\u8fd0\u7b97\u7b26 and \u548c or \u4f1a\u5bf9\u8fd9\u4e9b\u5e03\u5c14\u503c\u8fdb\u884c\u7ec4\u5408\uff0c\u6700\u7ec8\u4e5f\u662f\u5f97\u5230\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u95f0\u5e74\u8f93\u51fa True \uff0c\u5e73\u5e74\u8f93\u51fa False \u3002 \u603b\u7ed3 \u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\u76f8\u4fe1\u5927\u5bb6\u611f\u53d7\u5230\u4e86\uff0c\u5b66\u4f1a\u4f7f\u7528\u8fd0\u7b97\u7b26\u4ee5\u53ca\u7531\u8fd0\u7b97\u7b26\u6784\u6210\u7684\u8868\u8fbe\u5f0f\uff0c\u5c31\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u5f88\u591a\u5b9e\u9645\u7684\u95ee\u9898\uff0c \u8fd0\u7b97\u7b26\u548c\u8868\u8fbe\u5f0f\u5bf9\u4e8e\u4efb\u4f55\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u90fd\u662f\u975e\u5e38\u91cd\u8981\u7684 \u3002","title":"\u7b2c04\u8bfe\uff1aPython\u8bed\u8a00\u5143\u7d20\u4e4b\u8fd0\u7b97\u7b26"},{"location":"%E7%AC%AC04%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/#04python","text":"Python\u8bed\u8a00\u652f\u6301\u5f88\u591a\u79cd\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u5148\u7528\u4e00\u4e2a\u8868\u683c\u4e3a\u5927\u5bb6\u5217\u51fa\u8fd9\u4e9b\u8fd0\u7b97\u7b26\uff0c\u7136\u540e\u9009\u62e9\u4e00\u4e9b\u9a6c\u4e0a\u5c31\u4f1a\u7528\u5230\u7684\u8fd0\u7b97\u7b26\u4e3a\u5927\u5bb6\u8fdb\u884c\u8bb2\u89e3\u3002 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 [] [:] \u4e0b\u6807\uff0c\u5207\u7247 ** \u6307\u6570 ~ + - \u6309\u4f4d\u53d6\u53cd, \u6b63\u8d1f\u53f7 * / % // \u4e58\uff0c\u9664\uff0c\u6a21\uff0c\u6574\u9664 + - \u52a0\uff0c\u51cf >> << \u53f3\u79fb\uff0c\u5de6\u79fb & \u6309\u4f4d\u4e0e ^ \\| \u6309\u4f4d\u5f02\u6216\uff0c\u6309\u4f4d\u6216 <= < > >= \u5c0f\u4e8e\u7b49\u4e8e\uff0c\u5c0f\u4e8e\uff0c\u5927\u4e8e\uff0c\u5927\u4e8e\u7b49\u4e8e == != \u7b49\u4e8e\uff0c\u4e0d\u7b49\u4e8e is is not \u8eab\u4efd\u8fd0\u7b97\u7b26 in not in \u6210\u5458\u8fd0\u7b97\u7b26 not or and \u903b\u8f91\u8fd0\u7b97\u7b26 = += -= *= /= %= //= **= &= |= ^= >>= <<= \uff08\u590d\u5408\uff09\u8d4b\u503c\u8fd0\u7b97\u7b26 \u8bf4\u660e\uff1a \u4e0a\u9762\u8fd9\u4e2a\u8868\u683c\u5b9e\u9645\u4e0a\u662f\u6309\u7167\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u4ece\u4e0a\u5230\u4e0b\u5217\u51fa\u4e86\u5404\u79cd\u8fd0\u7b97\u7b26\u3002\u6240\u8c13\u4f18\u5148\u7ea7\u5c31\u662f\u5728\u4e00\u4e2a\u8fd0\u7b97\u7684\u8868\u8fbe\u5f0f\u4e2d\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u591a\u4e2a\u8fd0\u7b97\u7b26\uff0c\u5e94\u8be5\u5148\u6267\u884c\u54ea\u4e2a\u8fd0\u7b97\u518d\u6267\u884c\u54ea\u4e2a\u8fd0\u7b97\u7684\u987a\u5e8f\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u641e\u4e0d\u6e05\u695a\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\uff0c\u53ef\u4ee5\u4f7f\u7528\u5706\u62ec\u53f7\u6765\u786e\u4fdd\u8fd0\u7b97\u7684\u6267\u884c\u987a\u5e8f\u3002","title":"\u7b2c04\u8bfe\uff1aPython\u8bed\u8a00\u5143\u7d20\u4e4b\u8fd0\u7b97\u7b26"},{"location":"%E7%AC%AC04%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/#_1","text":"Python\u4e2d\u7684\u7b97\u672f\u8fd0\u7b97\u7b26\u975e\u5e38\u4e30\u5bcc\uff0c\u9664\u4e86\u5927\u5bb6\u6700\u4e3a\u719f\u6089\u7684\u52a0\u51cf\u4e58\u9664\u4e4b\u5916\uff0c\u8fd8\u6709\u6574\u9664\u8fd0\u7b97\u7b26\u3001\u6c42\u6a21\uff08\u6c42\u4f59\u6570\uff09\u8fd0\u7b97\u7b26\u548c\u6c42\u5e42\u8fd0\u7b97\u7b26\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e3a\u5927\u5bb6\u5c55\u793a\u4e86\u7b97\u672f\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528\u3002 \"\"\" \u7b97\u672f\u8fd0\u7b97\u7b26 Version: 0.1 Author: \u9a86\u660a \"\"\" print ( 321 + 123 ) # \u52a0\u6cd5\u8fd0\u7b97 print ( 321 - 123 ) # \u51cf\u6cd5\u8fd0\u7b97 print ( 321 * 123 ) # \u4e58\u6cd5\u8fd0\u7b97 print ( 321 / 123 ) # \u9664\u6cd5\u8fd0\u7b97 print ( 321 % 123 ) # \u6c42\u6a21\u8fd0\u7b97 print ( 321 // 123 ) # \u6574\u9664\u8fd0\u7b97 print ( 321 ** 123 ) # \u6c42\u5e42\u8fd0\u7b97","title":"\u7b97\u672f\u8fd0\u7b97\u7b26"},{"location":"%E7%AC%AC04%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/#_2","text":"\u8d4b\u503c\u8fd0\u7b97\u7b26\u5e94\u8be5\u662f\u6700\u4e3a\u5e38\u89c1\u7684\u8fd0\u7b97\u7b26\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u53f3\u8fb9\u7684\u503c\u8d4b\u7ed9\u5de6\u8fb9\u7684\u53d8\u91cf\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u8d4b\u503c\u8fd0\u7b97\u7b26\u548c\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528\u3002 \"\"\" \u8d4b\u503c\u8fd0\u7b97\u7b26\u548c\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26 Version: 0.1 Author: \u9a86\u660a \"\"\" a = 10 b = 3 a += b # \u76f8\u5f53\u4e8e\uff1aa = a + b a *= a + 2 # \u76f8\u5f53\u4e8e\uff1aa = a * (a + 2) print ( a ) # \u7b97\u4e00\u4e0b\u8fd9\u91cc\u4f1a\u8f93\u51fa\u4ec0\u4e48","title":"\u8d4b\u503c\u8fd0\u7b97\u7b26"},{"location":"%E7%AC%AC04%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/#_3","text":"\u6bd4\u8f83\u8fd0\u7b97\u7b26\u6709\u7684\u5730\u65b9\u4e5f\u79f0\u4e3a\u5173\u7cfb\u8fd0\u7b97\u7b26\uff0c\u5305\u62ec == \u3001 != \u3001 < \u3001 > \u3001 <= \u3001 >= \uff0c\u6211\u76f8\u4fe1\u6ca1\u6709\u4ec0\u4e48\u597d\u89e3\u91ca\u7684\uff0c\u5927\u5bb6\u4e00\u770b\u5c31\u80fd\u61c2\uff0c\u9700\u8981\u63d0\u9192\u7684\u662f\u6bd4\u8f83\u76f8\u7b49\u7528\u7684\u662f == \uff0c\u8bf7\u6ce8\u610f\u8fd9\u91cc\u662f\u4e24\u4e2a\u7b49\u53f7\uff0c\u56e0\u4e3a = \u662f\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u5728\u4e0a\u9762\u521a\u521a\u8bb2\u5230\u8fc7\uff0c == \u624d\u662f\u6bd4\u8f83\u76f8\u7b49\u7684\u8fd0\u7b97\u7b26\uff1b\u6bd4\u8f83\u4e0d\u76f8\u7b49\u7528\u7684\u662f != \uff0c\u8fd9\u4e0d\u540c\u4e8e\u6570\u5b66\u4e0a\u7684\u4e0d\u7b49\u53f7\uff0cPython 2\u4e2d\u66fe\u7ecf\u4f7f\u7528\u8fc7 <> \u6765\u8868\u793a\u4e0d\u7b49\u5173\u7cfb\uff0c\u5927\u5bb6\u77e5\u9053\u5c31\u53ef\u4ee5\u4e86\u3002\u6bd4\u8f83\u8fd0\u7b97\u7b26\u4f1a\u4ea7\u751f\u5e03\u5c14\u503c\uff0c\u8981\u4e48\u662f True \u8981\u4e48\u662f False \u3002 \u903b\u8f91\u8fd0\u7b97\u7b26\u6709\u4e09\u4e2a\uff0c\u5206\u522b\u662f and \u3001 or \u548c not \u3002 and \u5b57\u9762\u610f\u601d\u662f\u201c\u800c\u4e14\u201d\uff0c\u6240\u4ee5 and \u8fd0\u7b97\u7b26\u4f1a\u8fde\u63a5\u4e24\u4e2a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u4e24\u4e2a\u5e03\u5c14\u503c\u90fd\u662f True \uff0c\u90a3\u4e48\u8fd0\u7b97\u7684\u7ed3\u679c\u5c31\u662f True \uff1b\u5de6\u53f3\u4e24\u8fb9\u7684\u5e03\u5c14\u503c\u6709\u4e00\u4e2a\u662f False \uff0c\u6700\u7ec8\u7684\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f False \u3002\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u60f3\u5230\u4e86\uff0c\u5982\u679c and \u5de6\u8fb9\u7684\u5e03\u5c14\u503c\u662f False \uff0c\u4e0d\u7ba1\u53f3\u8fb9\u7684\u5e03\u5c14\u503c\u662f\u4ec0\u4e48\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u90fd\u662f False \uff0c\u6240\u4ee5\u5728\u505a\u8fd0\u7b97\u7684\u65f6\u5019\u53f3\u8fb9\u7684\u503c\u4f1a\u88ab\u8df3\u8fc7\uff08\u77ed\u8def\u5904\u7406\uff09\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u5728 and \u8fd0\u7b97\u7b26\u5de6\u8fb9\u4e3a False \u7684\u60c5\u51b5\u4e0b\uff0c\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u6839\u672c\u4e0d\u4f1a\u6267\u884c\u3002 or \u5b57\u9762\u610f\u601d\u662f\u201c\u6216\u8005\u201d\uff0c\u6240\u4ee5 or \u8fd0\u7b97\u7b26\u4e5f\u4f1a\u8fde\u63a5\u4e24\u4e2a\u5e03\u5c14\u503c\uff0c\u5982\u679c\u4e24\u4e2a\u5e03\u5c14\u503c\u6709\u4efb\u610f\u4e00\u4e2a\u662f True \uff0c\u90a3\u4e48\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u662f True \u3002\u5f53\u7136\uff0c or \u8fd0\u7b97\u7b26\u4e5f\u662f\u6709\u77ed\u8def\u529f\u80fd\u7684\uff0c\u5728\u5b83\u5de6\u8fb9\u7684\u5e03\u5c14\u503c\u4e3a True \u7684\u60c5\u51b5\u4e0b\uff0c\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u6839\u672c\u4e0d\u4f1a\u6267\u884c\u3002 not \u8fd0\u7b97\u7b26\u7684\u540e\u9762\u4f1a\u8ddf\u4e0a\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5f97\u5230\u4e0e\u8be5\u5e03\u5c14\u503c\u76f8\u53cd\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c not \u540e\u9762\u7684\u5e03\u5c14\u503c\u5982\u679c\u662f True \uff0c\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f False \uff1b\u800c not \u540e\u9762\u7684\u5e03\u5c14\u503c\u5982\u679c\u662f False \uff0c\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f True \u3002 \"\"\" \u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u903b\u8f91\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528 Version: 0.1 Author: \u9a86\u660a \"\"\" flag0 = 1 == 1 flag1 = 3 > 2 flag2 = 2 < 1 flag3 = flag1 and flag2 flag4 = flag1 or flag2 flag5 = not ( 1 != 2 ) print ( 'flag0 =' , flag0 ) # flag0 = True print ( 'flag1 =' , flag1 ) # flag1 = True print ( 'flag2 =' , flag2 ) # flag2 = False print ( 'flag3 =' , flag3 ) # flag3 = False print ( 'flag4 =' , flag4 ) # flag4 = True print ( 'flag5 =' , flag5 ) # flag5 = False \u8bf4\u660e \uff1a\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5 flag0 = 1 == 1 \u5148\u505a 1 == 1 \u4ea7\u751f\u5e03\u5c14\u503c True \uff0c\u518d\u5c06\u8fd9\u4e2a\u503c\u8d4b\u503c\u7ed9\u53d8\u91cf flag0 \u3002 print \u51fd\u6570\u53ef\u4ee5\u8f93\u51fa\u591a\u4e2a\u503c\uff0c\u591a\u4e2a\u503c\u4e4b\u95f4\u53ef\u4ee5\u7528 , \u8fdb\u884c\u5206\u9694\uff0c\u8f93\u51fa\u7684\u5185\u5bb9\u4e4b\u95f4\u9ed8\u8ba4\u4ee5\u7a7a\u683c\u5206\u5f00\u3002","title":"\u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"%E7%AC%AC04%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/#_4","text":"","title":"\u8fd0\u7b97\u7b26\u7684\u4f8b\u5b50"},{"location":"%E7%AC%AC04%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/#1","text":"\u63d0\u793a \uff1a\u534e\u6c0f\u6e29\u5ea6\u5230\u6444\u6c0f\u6e29\u5ea6\u7684\u8f6c\u6362\u516c\u5f0f\u4e3a\uff1a C = (F - 32) / 1.8 \u3002 \"\"\" \u5c06\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u4e3a\u6444\u6c0f\u6e29\u5ea6 Version: 0.1 Author: \u9a86\u660a \"\"\" f = float ( input ( '\u8bf7\u8f93\u5165\u534e\u6c0f\u6e29\u5ea6: ' )) c = ( f - 32 ) / 1.8 print ( ' %.1f \u534e\u6c0f\u5ea6 = %.1f \u6444\u6c0f\u5ea6' % ( f , c )) \u8bf4\u660e \uff1a\u5728\u4f7f\u7528 print \u51fd\u6570\u8f93\u51fa\u65f6\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u5185\u5bb9\u8fdb\u884c\u683c\u5f0f\u5316\u5904\u7406\uff0c\u4e0a\u9762 print \u51fd\u6570\u4e2d\u7684\u5b57\u7b26\u4e32 %.1f \u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u7a0d\u540e\u4f1a\u7531\u4e00\u4e2a float \u7c7b\u578b\u7684\u53d8\u91cf\u503c\u66ff\u6362\u6389\u5b83\u3002\u540c\u7406\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u6709 %d \uff0c\u540e\u9762\u53ef\u4ee5\u7528\u4e00\u4e2a int \u7c7b\u578b\u7684\u53d8\u91cf\u503c\u66ff\u6362\u6389\u5b83\uff0c\u800c %s \u4f1a\u88ab\u5b57\u7b26\u4e32\u7684\u503c\u66ff\u6362\u6389\u3002\u9664\u4e86\u8fd9\u79cd\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d {f:.1f} \u548c {c:.1f} \u53ef\u4ee5\u5148\u770b\u6210\u662f {f} \u548c {c} \uff0c\u8868\u793a\u8f93\u51fa\u65f6\u4f1a\u7528\u53d8\u91cf f \u548c\u53d8\u91cf c \u7684\u503c\u66ff\u6362\u6389\u8fd9\u4e24\u4e2a\u5360\u4f4d\u7b26\uff0c\u540e\u9762\u7684 :.1f \u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u5c0f\u6570\u70b9\u540e\u4fdd\u75591\u4f4d\u6709\u6548\u6570\u5b57\u3002 print ( f ' { f : .1f } \u534e\u6c0f\u5ea6 = { c : .1f } \u6444\u6c0f\u5ea6' )","title":"\u4f8b\u5b501\uff1a\u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u4e3a\u6444\u6c0f\u6e29\u5ea6\u3002"},{"location":"%E7%AC%AC04%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/#2","text":"\"\"\" \u8f93\u5165\u534a\u5f84\u8ba1\u7b97\u5706\u7684\u5468\u957f\u548c\u9762\u79ef Version: 0.1 Author: \u9a86\u660a \"\"\" radius = float ( input ( '\u8bf7\u8f93\u5165\u5706\u7684\u534a\u5f84: ' )) perimeter = 2 * 3.1416 * radius area = 3.1416 * radius * radius print ( '\u5468\u957f: %.2f ' % perimeter ) print ( '\u9762\u79ef: %.2f ' % area )","title":"\u4f8b\u5b502\uff1a\u8f93\u5165\u5706\u7684\u534a\u5f84\u8ba1\u7b97\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u3002"},{"location":"%E7%AC%AC04%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/#3","text":"\"\"\" \u8f93\u5165\u5e74\u4efd \u5982\u679c\u662f\u95f0\u5e74\u8f93\u51faTrue \u5426\u5219\u8f93\u51faFalse Version: 0.1 Author: \u9a86\u660a \"\"\" year = int ( input ( '\u8bf7\u8f93\u5165\u5e74\u4efd: ' )) is_leap = year % 4 == 0 and year % 100 != 0 or year % 400 == 0 print ( is_leap ) \u8bf4\u660e \uff1a\u6bd4\u8f83\u8fd0\u7b97\u7b26\u4f1a\u4ea7\u751f\u5e03\u5c14\u503c\uff0c\u800c\u903b\u8f91\u8fd0\u7b97\u7b26 and \u548c or \u4f1a\u5bf9\u8fd9\u4e9b\u5e03\u5c14\u503c\u8fdb\u884c\u7ec4\u5408\uff0c\u6700\u7ec8\u4e5f\u662f\u5f97\u5230\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u95f0\u5e74\u8f93\u51fa True \uff0c\u5e73\u5e74\u8f93\u51fa False \u3002","title":"\u4f8b\u5b503\uff1a\u8f93\u5165\u5e74\u4efd\u5224\u65ad\u662f\u4e0d\u662f\u95f0\u5e74\u3002"},{"location":"%E7%AC%AC04%E8%AF%BE%EF%BC%9APython%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0%E4%B9%8B%E8%BF%90%E7%AE%97%E7%AC%A6/#_5","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\u76f8\u4fe1\u5927\u5bb6\u611f\u53d7\u5230\u4e86\uff0c\u5b66\u4f1a\u4f7f\u7528\u8fd0\u7b97\u7b26\u4ee5\u53ca\u7531\u8fd0\u7b97\u7b26\u6784\u6210\u7684\u8868\u8fbe\u5f0f\uff0c\u5c31\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u5f88\u591a\u5b9e\u9645\u7684\u95ee\u9898\uff0c \u8fd0\u7b97\u7b26\u548c\u8868\u8fbe\u5f0f\u5bf9\u4e8e\u4efb\u4f55\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\u90fd\u662f\u975e\u5e38\u91cd\u8981\u7684 \u3002","title":"\u603b\u7ed3"},{"location":"%E7%AC%AC05%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/","text":"\u7b2c05\u8bfe\uff1a\u5206\u652f\u7ed3\u6784 \u5e94\u7528\u573a\u666f \u8fc4\u4eca\u4e3a\u6b62\uff0c\u6211\u4eec\u5199\u7684Python\u4ee3\u7801\u90fd\u662f\u4e00\u6761\u4e00\u6761\u8bed\u53e5\u987a\u5e8f\u6267\u884c\uff0c\u8fd9\u79cd\u4ee3\u7801\u7ed3\u6784\u901a\u5e38\u79f0\u4e4b\u4e3a\u987a\u5e8f\u7ed3\u6784\u3002\u7136\u800c\u4ec5\u6709\u987a\u5e8f\u7ed3\u6784\u5e76\u4e0d\u80fd\u89e3\u51b3\u6240\u6709\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u6e38\u620f\uff0c\u6e38\u620f\u7b2c\u4e00\u5173\u7684\u901a\u5173\u6761\u4ef6\u662f\u73a9\u5bb6\u83b7\u5f971000\u5206\uff0c\u90a3\u4e48\u5728\u5b8c\u6210\u672c\u5c40\u6e38\u620f\u540e\uff0c\u6211\u4eec\u8981\u6839\u636e\u73a9\u5bb6\u5f97\u5230\u5206\u6570\u6765\u51b3\u5b9a\u7a76\u7adf\u662f\u8fdb\u5165\u7b2c\u4e8c\u5173\uff0c\u8fd8\u662f\u544a\u8bc9\u73a9\u5bb6\u201cGame Over\u201d\uff0c\u8fd9\u91cc\u5c31\u4f1a\u4ea7\u751f\u4e24\u4e2a\u5206\u652f\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a\u5206\u652f\u53ea\u6709\u4e00\u4e2a\u4f1a\u88ab\u6267\u884c\u3002\u7c7b\u4f3c\u7684\u573a\u666f\u8fd8\u6709\u5f88\u591a\uff0c\u6211\u4eec\u5c06\u8fd9\u79cd\u7ed3\u6784\u79f0\u4e4b\u4e3a\u201c\u5206\u652f\u7ed3\u6784\u201d\u6216\u201c\u9009\u62e9\u7ed3\u6784\u201d\u3002\u7ed9\u5927\u5bb6\u4e00\u5206\u949f\u7684\u65f6\u95f4\uff0c\u4f60\u5e94\u8be5\u53ef\u4ee5\u60f3\u5230\u81f3\u5c115\u4e2a\u4ee5\u4e0a\u8fd9\u6837\u7684\u4f8b\u5b50\uff0c\u8d76\u7d27\u8bd5\u4e00\u8bd5\u3002 if\u8bed\u53e5\u7684\u4f7f\u7528 \u5728Python\u4e2d\uff0c\u8981\u6784\u9020\u5206\u652f\u7ed3\u6784\u53ef\u4ee5\u4f7f\u7528 if \u3001 elif \u548c else \u5173\u952e\u5b57\u3002\u6240\u8c13 \u5173\u952e\u5b57 \u5c31\u662f\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\uff0c\u50cf if \u548c else \u5c31\u662f\u4e13\u95e8\u7528\u4e8e\u6784\u9020\u5206\u652f\u7ed3\u6784\u7684\u5173\u952e\u5b57\uff0c\u5f88\u663e\u7136\u4f60\u4e0d\u80fd\u591f\u4f7f\u7528\u5b83\u4f5c\u4e3a\u53d8\u91cf\u540d\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u6f14\u793a\u4e86\u5982\u4f55\u6784\u9020\u4e00\u4e2a\u5206\u652f\u7ed3\u6784\u3002 \"\"\" \u7528\u6237\u8eab\u4efd\u9a8c\u8bc1 Version: 0.1 Author: \u9a86\u660a \"\"\" username = input ( '\u8bf7\u8f93\u5165\u7528\u6237\u540d: ' ) password = input ( '\u8bf7\u8f93\u5165\u53e3\u4ee4: ' ) # \u7528\u6237\u540d\u662fadmin\u4e14\u5bc6\u7801\u662f123456\u5219\u8eab\u4efd\u9a8c\u8bc1\u6210\u529f\u5426\u5219\u8eab\u4efd\u9a8c\u8bc1\u5931\u8d25 if username == 'admin' and password == '123456' : print ( '\u8eab\u4efd\u9a8c\u8bc1\u6210\u529f!' ) else : print ( '\u8eab\u4efd\u9a8c\u8bc1\u5931\u8d25!' ) \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u4e0d\u540c\u4e8eC++\u3001Java\u7b49\u7f16\u7a0b\u8bed\u8a00\uff0cPython\u4e2d\u6ca1\u6709\u7528\u82b1\u62ec\u53f7\u6765\u6784\u9020\u4ee3\u7801\u5757\u800c\u662f \u4f7f\u7528\u4e86\u7f29\u8fdb\u7684\u65b9\u5f0f\u6765\u8868\u793a\u4ee3\u7801\u7684\u5c42\u6b21\u7ed3\u6784 \uff0c\u5982\u679c if \u6761\u4ef6\u6210\u7acb\u7684\u60c5\u51b5\u4e0b\u9700\u8981\u6267\u884c\u591a\u6761\u8bed\u53e5\uff0c\u53ea\u8981\u4fdd\u6301\u591a\u6761\u8bed\u53e5\u5177\u6709\u76f8\u540c\u7684\u7f29\u8fdb\u5c31\u53ef\u4ee5\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4 \u8fde\u7eed\u7684\u4ee3\u7801\u5982\u679c\u53c8\u4fdd\u6301\u4e86\u76f8\u540c\u7684\u7f29\u8fdb\u90a3\u4e48\u5b83\u4eec\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4ee3\u7801\u5757 \uff0c\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u6267\u884c\u7684\u6574\u4f53\u3002 \u7f29\u8fdb \u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u6570\u91cf\u7684\u7a7a\u683c\uff0c\u4f46 \u901a\u5e38\u4f7f\u75284\u4e2a\u7a7a\u683c \uff0c\u5f3a\u70c8\u5efa\u8bae\u5927\u5bb6 \u4e0d\u8981\u4f7f\u7528\u5236\u8868\u952e\u6765\u7f29\u8fdb\u4ee3\u7801 \uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u4e60\u60ef\u4e86\u8fd9\u4e48\u505a\uff0c\u53ef\u4ee5 \u8bbe\u7f6e\u4ee3\u7801\u7f16\u8f91\u5de5\u5177\u5c061\u4e2a\u5236\u8868\u952e\u81ea\u52a8\u53d8\u62104\u4e2a\u7a7a\u683c \uff0c\u5f88\u591a\u7684\u4ee3\u7801\u7f16\u8f91\u5de5\u5177\u90fd\u652f\u6301\u8fd9\u9879\u529f\u80fd\u3002 \u63d0\u793a \uff1a if \u548c else \u7684\u6700\u540e\u9762\u6709\u4e00\u4e2a : \uff0c\u5b83\u662f\u7528\u82f1\u6587\u8f93\u5165\u6cd5\u8f93\u5165\u7684\u5192\u53f7\uff1b\u7a0b\u5e8f\u4e2d\u8f93\u5165\u7684 ' \u3001 \" \u3001 = \u3001 ( \u3001 ) \u7b49\u7279\u6b8a\u5b57\u7b26\uff0c\u90fd\u662f\u5728\u82f1\u6587\u8f93\u5165\u6cd5\u72b6\u6001\u4e0b\u8f93\u5165\u7684\u3002\u6709\u5f88\u591a\u521d\u5b66\u8005\u7ecf\u5e38\u4e0d\u6ce8\u610f\u8fd9\u4e00\u70b9\uff0c\u7ed3\u679c\u8fd0\u884c\u4ee3\u7801\u7684\u65f6\u5019\u5c31\u4f1a\u9047\u5230\u5f88\u591a\u83ab\u540d\u5176\u5999\u7684\u9519\u8bef\u63d0\u793a\u3002 \u5f3a\u70c8\u5efa\u8bae \u5927\u5bb6\u5728\u5199\u4ee3\u7801\u7684\u65f6\u5019\u90fd \u6253\u5f00\u82f1\u6587\u8f93\u5165\u6cd5 \uff08\u6ce8\u610f\u662f\u82f1\u6587\u8f93\u5165\u6cd5\u800c\u4e0d\u662f\u4e2d\u6587\u8f93\u5165\u6cd5\u7684\u82f1\u6587\u8f93\u5165\u6a21\u5f0f\uff09\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002 \u5982\u679c\u8981\u6784\u9020\u51fa\u66f4\u591a\u7684\u5206\u652f\uff0c\u53ef\u4ee5\u4f7f\u7528 if...elif...else... \u7ed3\u6784\u6216\u8005\u5d4c\u5957\u7684 if...else... \u7ed3\u6784\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5229\u7528\u591a\u5206\u652f\u7ed3\u6784\u5b9e\u73b0\u5206\u6bb5\u51fd\u6570\u6c42\u503c\u3002 $$ f(x) = \\begin{cases} 3x - 5, & (x \\gt 1) \\ x + 2, & (-1 \\le x \\le 1) \\ 5x + 3, & (x \\lt -1) \\end{cases} $$ \"\"\" \u5206\u6bb5\u51fd\u6570\u6c42\u503c Version: 0.1 Author: \u9a86\u660a \"\"\" x = float ( input ( 'x = ' )) if x > 1 : y = 3 * x - 5 elif x >= - 1 : y = x + 2 else : y = 5 * x + 3 print ( f 'f( { x } ) = { y } ' ) \u5f53\u7136\u6839\u636e\u5b9e\u9645\u5f00\u53d1\u7684\u9700\u8981\uff0c\u5206\u652f\u7ed3\u6784\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\uff0c\u4f8b\u5982\u5224\u65ad\u662f\u5426\u901a\u5173\u4ee5\u540e\u8fd8\u8981\u6839\u636e\u4f60\u83b7\u5f97\u7684\u5b9d\u7269\u6216\u8005\u9053\u5177\u7684\u6570\u91cf\u5bf9\u4f60\u7684\u8868\u73b0\u7ed9\u51fa\u7b49\u7ea7\uff08\u6bd4\u5982\u70b9\u4eae\u4e24\u9897\u6216\u4e09\u9897\u661f\u661f\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5728 if \u7684\u5185\u90e8\u6784\u9020\u51fa\u4e00\u4e2a\u65b0\u7684\u5206\u652f\u7ed3\u6784\uff0c\u540c\u7406 elif \u548c else \u4e2d\u4e5f\u53ef\u4ee5\u518d\u6784\u9020\u65b0\u7684\u5206\u652f\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5d4c\u5957\u7684\u5206\u652f\u7ed3\u6784\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0a\u9762\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5199\u6210\u4e0b\u9762\u7684\u6837\u5b50\u3002 \"\"\" \u5206\u6bb5\u51fd\u6570\u6c42\u503c Version: 0.1 Author: \u9a86\u660a \"\"\" x = float ( input ( 'x = ' )) if x > 1 : y = 3 * x - 5 else : if x >= - 1 : y = x + 2 else : y = 5 * x + 3 print ( f 'f( { x } ) = { y } ' ) \u8bf4\u660e\uff1a \u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u611f\u53d7\u548c\u8bc4\u5224\u4e00\u4e0b\u8fd9\u4e24\u79cd\u5199\u6cd5\u5230\u5e95\u662f\u54ea\u4e00\u79cd\u66f4\u597d\u3002\u5728 Python\u4e4b\u7985 \u4e2d\u6709\u8fd9\u4e48\u4e00\u53e5\u8bdd\uff1a\u201c Flat is better than nested \u201d\uff0c\u4e4b\u6240\u4ee5\u63d0\u5021\u4ee3\u7801\u201c\u6241\u5e73\u5316\u201d\uff0c\u662f\u56e0\u4e3a\u4ee3\u7801\u5d4c\u5957\u7684\u5c42\u6b21\u5982\u679c\u5f88\u591a\uff0c\u4f1a\u4e25\u91cd\u7684\u5f71\u54cd\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u6240\u4ee5\u4f7f\u7528\u66f4\u4e3a\u6241\u5e73\u5316\u7684\u7ed3\u6784\u5728\u5f88\u591a\u573a\u666f\u4e0b\u90fd\u662f\u8f83\u597d\u7684\u9009\u62e9\u3002 \u4e00\u4e9b\u4f8b\u5b50 \u4f8b\u5b501\uff1a\u82f1\u5236\u5355\u4f4d\u82f1\u5bf8\u4e0e\u516c\u5236\u5355\u4f4d\u5398\u7c73\u4e92\u6362\u3002 \"\"\" \u82f1\u5236\u5355\u4f4d\u82f1\u5bf8\u548c\u516c\u5236\u5355\u4f4d\u5398\u7c73\u4e92\u6362 Version: 0.1 Author: \u9a86\u660a \"\"\" value = float ( input ( '\u8bf7\u8f93\u5165\u957f\u5ea6: ' )) unit = input ( '\u8bf7\u8f93\u5165\u5355\u4f4d: ' ) if unit == 'in' or unit == '\u82f1\u5bf8' : print ( ' %f \u82f1\u5bf8 = %f \u5398\u7c73' % ( value , value * 2.54 )) elif unit == 'cm' or unit == '\u5398\u7c73' : print ( ' %f \u5398\u7c73 = %f \u82f1\u5bf8' % ( value , value / 2.54 )) else : print ( '\u8bf7\u8f93\u5165\u6709\u6548\u7684\u5355\u4f4d' ) \u4f8b\u5b502\uff1a\u767e\u5206\u5236\u6210\u7ee9\u8f6c\u6362\u4e3a\u7b49\u7ea7\u5236\u6210\u7ee9\u3002 \u8981\u6c42 \uff1a\u5982\u679c\u8f93\u5165\u7684\u6210\u7ee9\u572890\u5206\u4ee5\u4e0a\uff08\u542b90\u5206\uff09\u8f93\u51faA\uff1b80\u5206-90\u5206\uff08\u4e0d\u542b90\u5206\uff09\u8f93\u51faB\uff1b70\u5206-80\u5206\uff08\u4e0d\u542b80\u5206\uff09\u8f93\u51faC\uff1b60\u5206-70\u5206\uff08\u4e0d\u542b70\u5206\uff09\u8f93\u51faD\uff1b60\u5206\u4ee5\u4e0b\u8f93\u51faE\u3002 \"\"\" \u767e\u5206\u5236\u6210\u7ee9\u8f6c\u6362\u4e3a\u7b49\u7ea7\u5236\u6210\u7ee9 Version: 0.1 Author: \u9a86\u660a \"\"\" score = float ( input ( '\u8bf7\u8f93\u5165\u6210\u7ee9: ' )) if score >= 90 : grade = 'A' elif score >= 80 : grade = 'B' elif score >= 70 : grade = 'C' elif score >= 60 : grade = 'D' else : grade = 'E' print ( '\u5bf9\u5e94\u7684\u7b49\u7ea7\u662f:' , grade ) \u4f8b\u5b503\uff1a\u8f93\u5165\u4e09\u6761\u8fb9\u957f\uff0c\u5982\u679c\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5c31\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u3002 \"\"\" \u5224\u65ad\u8f93\u5165\u7684\u8fb9\u957f\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62\uff0c\u5982\u679c\u80fd\u5219\u8ba1\u7b97\u51fa\u4e09\u89d2\u5f62\u7684\u5468\u957f\u548c\u9762\u79ef Version: 0.1 Author: \u9a86\u660a \"\"\" a = float ( input ( 'a = ' )) b = float ( input ( 'b = ' )) c = float ( input ( 'c = ' )) if a + b > c and a + c > b and b + c > a : peri = a + b + c print ( f '\u5468\u957f: { peri } ' ) half = peri / 2 area = ( half * ( half - a ) * ( half - b ) * ( half - c )) ** 0.5 print ( f '\u9762\u79ef: { area } ' ) else : print ( '\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62' ) \u8bf4\u660e\uff1a \u4e0a\u9762\u901a\u8fc7\u8fb9\u957f\u8ba1\u7b97\u4e09\u89d2\u5f62\u9762\u79ef\u7684\u516c\u5f0f\u53eb\u505a \u6d77\u4f26\u516c\u5f0f \u3002 \u7b80\u5355\u7684\u603b\u7ed3 \u5b66\u4f1a\u4e86Python\u4e2d\u7684\u5206\u652f\u7ed3\u6784\u548c\u5faa\u73af\u7ed3\u6784\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528Python\u7a0b\u5e8f\u6765\u89e3\u51b3\u5f88\u591a\u5b9e\u9645\u7684\u95ee\u9898\u4e86\u3002\u8fd9\u4e00\u8282\u8bfe\u76f8\u4fe1\u5df2\u7ecf\u5e2e\u52a9\u5927\u5bb6\u8bb0\u4f4f\u4e86 if \u3001 elif \u3001 else \u8fd9\u51e0\u4e2a\u5173\u952e\u5b57\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u6765\u6784\u9020\u5206\u652f\u7ed3\u6784\uff0c\u4e0b\u4e00\u8282\u8bfe\u6211\u4eec\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5faa\u73af\u7ed3\u6784\uff0c\u5b66\u5b8c\u8fd9\u4e24\u6b21\u8bfe\u4f60\u4e00\u5b9a\u4f1a\u53d1\u73b0\uff0c\u4f60\u80fd\u5199\u51fa\u5f88\u591a\u5f88\u591a\u975e\u5e38\u6709\u610f\u601d\u7684\u4ee3\u7801\u3002\u7ee7\u7eed\u52a0\u6cb9\uff01","title":"\u7b2c05\u8bfe\uff1a\u5206\u652f\u7ed3\u6784"},{"location":"%E7%AC%AC05%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#05","text":"","title":"\u7b2c05\u8bfe\uff1a\u5206\u652f\u7ed3\u6784"},{"location":"%E7%AC%AC05%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#_1","text":"\u8fc4\u4eca\u4e3a\u6b62\uff0c\u6211\u4eec\u5199\u7684Python\u4ee3\u7801\u90fd\u662f\u4e00\u6761\u4e00\u6761\u8bed\u53e5\u987a\u5e8f\u6267\u884c\uff0c\u8fd9\u79cd\u4ee3\u7801\u7ed3\u6784\u901a\u5e38\u79f0\u4e4b\u4e3a\u987a\u5e8f\u7ed3\u6784\u3002\u7136\u800c\u4ec5\u6709\u987a\u5e8f\u7ed3\u6784\u5e76\u4e0d\u80fd\u89e3\u51b3\u6240\u6709\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u6e38\u620f\uff0c\u6e38\u620f\u7b2c\u4e00\u5173\u7684\u901a\u5173\u6761\u4ef6\u662f\u73a9\u5bb6\u83b7\u5f971000\u5206\uff0c\u90a3\u4e48\u5728\u5b8c\u6210\u672c\u5c40\u6e38\u620f\u540e\uff0c\u6211\u4eec\u8981\u6839\u636e\u73a9\u5bb6\u5f97\u5230\u5206\u6570\u6765\u51b3\u5b9a\u7a76\u7adf\u662f\u8fdb\u5165\u7b2c\u4e8c\u5173\uff0c\u8fd8\u662f\u544a\u8bc9\u73a9\u5bb6\u201cGame Over\u201d\uff0c\u8fd9\u91cc\u5c31\u4f1a\u4ea7\u751f\u4e24\u4e2a\u5206\u652f\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a\u5206\u652f\u53ea\u6709\u4e00\u4e2a\u4f1a\u88ab\u6267\u884c\u3002\u7c7b\u4f3c\u7684\u573a\u666f\u8fd8\u6709\u5f88\u591a\uff0c\u6211\u4eec\u5c06\u8fd9\u79cd\u7ed3\u6784\u79f0\u4e4b\u4e3a\u201c\u5206\u652f\u7ed3\u6784\u201d\u6216\u201c\u9009\u62e9\u7ed3\u6784\u201d\u3002\u7ed9\u5927\u5bb6\u4e00\u5206\u949f\u7684\u65f6\u95f4\uff0c\u4f60\u5e94\u8be5\u53ef\u4ee5\u60f3\u5230\u81f3\u5c115\u4e2a\u4ee5\u4e0a\u8fd9\u6837\u7684\u4f8b\u5b50\uff0c\u8d76\u7d27\u8bd5\u4e00\u8bd5\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"%E7%AC%AC05%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#if","text":"\u5728Python\u4e2d\uff0c\u8981\u6784\u9020\u5206\u652f\u7ed3\u6784\u53ef\u4ee5\u4f7f\u7528 if \u3001 elif \u548c else \u5173\u952e\u5b57\u3002\u6240\u8c13 \u5173\u952e\u5b57 \u5c31\u662f\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\uff0c\u50cf if \u548c else \u5c31\u662f\u4e13\u95e8\u7528\u4e8e\u6784\u9020\u5206\u652f\u7ed3\u6784\u7684\u5173\u952e\u5b57\uff0c\u5f88\u663e\u7136\u4f60\u4e0d\u80fd\u591f\u4f7f\u7528\u5b83\u4f5c\u4e3a\u53d8\u91cf\u540d\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u6f14\u793a\u4e86\u5982\u4f55\u6784\u9020\u4e00\u4e2a\u5206\u652f\u7ed3\u6784\u3002 \"\"\" \u7528\u6237\u8eab\u4efd\u9a8c\u8bc1 Version: 0.1 Author: \u9a86\u660a \"\"\" username = input ( '\u8bf7\u8f93\u5165\u7528\u6237\u540d: ' ) password = input ( '\u8bf7\u8f93\u5165\u53e3\u4ee4: ' ) # \u7528\u6237\u540d\u662fadmin\u4e14\u5bc6\u7801\u662f123456\u5219\u8eab\u4efd\u9a8c\u8bc1\u6210\u529f\u5426\u5219\u8eab\u4efd\u9a8c\u8bc1\u5931\u8d25 if username == 'admin' and password == '123456' : print ( '\u8eab\u4efd\u9a8c\u8bc1\u6210\u529f!' ) else : print ( '\u8eab\u4efd\u9a8c\u8bc1\u5931\u8d25!' ) \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u4e0d\u540c\u4e8eC++\u3001Java\u7b49\u7f16\u7a0b\u8bed\u8a00\uff0cPython\u4e2d\u6ca1\u6709\u7528\u82b1\u62ec\u53f7\u6765\u6784\u9020\u4ee3\u7801\u5757\u800c\u662f \u4f7f\u7528\u4e86\u7f29\u8fdb\u7684\u65b9\u5f0f\u6765\u8868\u793a\u4ee3\u7801\u7684\u5c42\u6b21\u7ed3\u6784 \uff0c\u5982\u679c if \u6761\u4ef6\u6210\u7acb\u7684\u60c5\u51b5\u4e0b\u9700\u8981\u6267\u884c\u591a\u6761\u8bed\u53e5\uff0c\u53ea\u8981\u4fdd\u6301\u591a\u6761\u8bed\u53e5\u5177\u6709\u76f8\u540c\u7684\u7f29\u8fdb\u5c31\u53ef\u4ee5\u4e86\u3002\u6362\u53e5\u8bdd\u8bf4 \u8fde\u7eed\u7684\u4ee3\u7801\u5982\u679c\u53c8\u4fdd\u6301\u4e86\u76f8\u540c\u7684\u7f29\u8fdb\u90a3\u4e48\u5b83\u4eec\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4ee3\u7801\u5757 \uff0c\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u6267\u884c\u7684\u6574\u4f53\u3002 \u7f29\u8fdb \u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u6570\u91cf\u7684\u7a7a\u683c\uff0c\u4f46 \u901a\u5e38\u4f7f\u75284\u4e2a\u7a7a\u683c \uff0c\u5f3a\u70c8\u5efa\u8bae\u5927\u5bb6 \u4e0d\u8981\u4f7f\u7528\u5236\u8868\u952e\u6765\u7f29\u8fdb\u4ee3\u7801 \uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u4e60\u60ef\u4e86\u8fd9\u4e48\u505a\uff0c\u53ef\u4ee5 \u8bbe\u7f6e\u4ee3\u7801\u7f16\u8f91\u5de5\u5177\u5c061\u4e2a\u5236\u8868\u952e\u81ea\u52a8\u53d8\u62104\u4e2a\u7a7a\u683c \uff0c\u5f88\u591a\u7684\u4ee3\u7801\u7f16\u8f91\u5de5\u5177\u90fd\u652f\u6301\u8fd9\u9879\u529f\u80fd\u3002 \u63d0\u793a \uff1a if \u548c else \u7684\u6700\u540e\u9762\u6709\u4e00\u4e2a : \uff0c\u5b83\u662f\u7528\u82f1\u6587\u8f93\u5165\u6cd5\u8f93\u5165\u7684\u5192\u53f7\uff1b\u7a0b\u5e8f\u4e2d\u8f93\u5165\u7684 ' \u3001 \" \u3001 = \u3001 ( \u3001 ) \u7b49\u7279\u6b8a\u5b57\u7b26\uff0c\u90fd\u662f\u5728\u82f1\u6587\u8f93\u5165\u6cd5\u72b6\u6001\u4e0b\u8f93\u5165\u7684\u3002\u6709\u5f88\u591a\u521d\u5b66\u8005\u7ecf\u5e38\u4e0d\u6ce8\u610f\u8fd9\u4e00\u70b9\uff0c\u7ed3\u679c\u8fd0\u884c\u4ee3\u7801\u7684\u65f6\u5019\u5c31\u4f1a\u9047\u5230\u5f88\u591a\u83ab\u540d\u5176\u5999\u7684\u9519\u8bef\u63d0\u793a\u3002 \u5f3a\u70c8\u5efa\u8bae \u5927\u5bb6\u5728\u5199\u4ee3\u7801\u7684\u65f6\u5019\u90fd \u6253\u5f00\u82f1\u6587\u8f93\u5165\u6cd5 \uff08\u6ce8\u610f\u662f\u82f1\u6587\u8f93\u5165\u6cd5\u800c\u4e0d\u662f\u4e2d\u6587\u8f93\u5165\u6cd5\u7684\u82f1\u6587\u8f93\u5165\u6a21\u5f0f\uff09\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002 \u5982\u679c\u8981\u6784\u9020\u51fa\u66f4\u591a\u7684\u5206\u652f\uff0c\u53ef\u4ee5\u4f7f\u7528 if...elif...else... \u7ed3\u6784\u6216\u8005\u5d4c\u5957\u7684 if...else... \u7ed3\u6784\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5229\u7528\u591a\u5206\u652f\u7ed3\u6784\u5b9e\u73b0\u5206\u6bb5\u51fd\u6570\u6c42\u503c\u3002 $$ f(x) = \\begin{cases} 3x - 5, & (x \\gt 1) \\ x + 2, & (-1 \\le x \\le 1) \\ 5x + 3, & (x \\lt -1) \\end{cases} $$ \"\"\" \u5206\u6bb5\u51fd\u6570\u6c42\u503c Version: 0.1 Author: \u9a86\u660a \"\"\" x = float ( input ( 'x = ' )) if x > 1 : y = 3 * x - 5 elif x >= - 1 : y = x + 2 else : y = 5 * x + 3 print ( f 'f( { x } ) = { y } ' ) \u5f53\u7136\u6839\u636e\u5b9e\u9645\u5f00\u53d1\u7684\u9700\u8981\uff0c\u5206\u652f\u7ed3\u6784\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\uff0c\u4f8b\u5982\u5224\u65ad\u662f\u5426\u901a\u5173\u4ee5\u540e\u8fd8\u8981\u6839\u636e\u4f60\u83b7\u5f97\u7684\u5b9d\u7269\u6216\u8005\u9053\u5177\u7684\u6570\u91cf\u5bf9\u4f60\u7684\u8868\u73b0\u7ed9\u51fa\u7b49\u7ea7\uff08\u6bd4\u5982\u70b9\u4eae\u4e24\u9897\u6216\u4e09\u9897\u661f\u661f\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5728 if \u7684\u5185\u90e8\u6784\u9020\u51fa\u4e00\u4e2a\u65b0\u7684\u5206\u652f\u7ed3\u6784\uff0c\u540c\u7406 elif \u548c else \u4e2d\u4e5f\u53ef\u4ee5\u518d\u6784\u9020\u65b0\u7684\u5206\u652f\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5d4c\u5957\u7684\u5206\u652f\u7ed3\u6784\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0a\u9762\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5199\u6210\u4e0b\u9762\u7684\u6837\u5b50\u3002 \"\"\" \u5206\u6bb5\u51fd\u6570\u6c42\u503c Version: 0.1 Author: \u9a86\u660a \"\"\" x = float ( input ( 'x = ' )) if x > 1 : y = 3 * x - 5 else : if x >= - 1 : y = x + 2 else : y = 5 * x + 3 print ( f 'f( { x } ) = { y } ' ) \u8bf4\u660e\uff1a \u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u611f\u53d7\u548c\u8bc4\u5224\u4e00\u4e0b\u8fd9\u4e24\u79cd\u5199\u6cd5\u5230\u5e95\u662f\u54ea\u4e00\u79cd\u66f4\u597d\u3002\u5728 Python\u4e4b\u7985 \u4e2d\u6709\u8fd9\u4e48\u4e00\u53e5\u8bdd\uff1a\u201c Flat is better than nested \u201d\uff0c\u4e4b\u6240\u4ee5\u63d0\u5021\u4ee3\u7801\u201c\u6241\u5e73\u5316\u201d\uff0c\u662f\u56e0\u4e3a\u4ee3\u7801\u5d4c\u5957\u7684\u5c42\u6b21\u5982\u679c\u5f88\u591a\uff0c\u4f1a\u4e25\u91cd\u7684\u5f71\u54cd\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u6240\u4ee5\u4f7f\u7528\u66f4\u4e3a\u6241\u5e73\u5316\u7684\u7ed3\u6784\u5728\u5f88\u591a\u573a\u666f\u4e0b\u90fd\u662f\u8f83\u597d\u7684\u9009\u62e9\u3002","title":"if\u8bed\u53e5\u7684\u4f7f\u7528"},{"location":"%E7%AC%AC05%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#_2","text":"","title":"\u4e00\u4e9b\u4f8b\u5b50"},{"location":"%E7%AC%AC05%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#1","text":"\"\"\" \u82f1\u5236\u5355\u4f4d\u82f1\u5bf8\u548c\u516c\u5236\u5355\u4f4d\u5398\u7c73\u4e92\u6362 Version: 0.1 Author: \u9a86\u660a \"\"\" value = float ( input ( '\u8bf7\u8f93\u5165\u957f\u5ea6: ' )) unit = input ( '\u8bf7\u8f93\u5165\u5355\u4f4d: ' ) if unit == 'in' or unit == '\u82f1\u5bf8' : print ( ' %f \u82f1\u5bf8 = %f \u5398\u7c73' % ( value , value * 2.54 )) elif unit == 'cm' or unit == '\u5398\u7c73' : print ( ' %f \u5398\u7c73 = %f \u82f1\u5bf8' % ( value , value / 2.54 )) else : print ( '\u8bf7\u8f93\u5165\u6709\u6548\u7684\u5355\u4f4d' )","title":"\u4f8b\u5b501\uff1a\u82f1\u5236\u5355\u4f4d\u82f1\u5bf8\u4e0e\u516c\u5236\u5355\u4f4d\u5398\u7c73\u4e92\u6362\u3002"},{"location":"%E7%AC%AC05%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#2","text":"\u8981\u6c42 \uff1a\u5982\u679c\u8f93\u5165\u7684\u6210\u7ee9\u572890\u5206\u4ee5\u4e0a\uff08\u542b90\u5206\uff09\u8f93\u51faA\uff1b80\u5206-90\u5206\uff08\u4e0d\u542b90\u5206\uff09\u8f93\u51faB\uff1b70\u5206-80\u5206\uff08\u4e0d\u542b80\u5206\uff09\u8f93\u51faC\uff1b60\u5206-70\u5206\uff08\u4e0d\u542b70\u5206\uff09\u8f93\u51faD\uff1b60\u5206\u4ee5\u4e0b\u8f93\u51faE\u3002 \"\"\" \u767e\u5206\u5236\u6210\u7ee9\u8f6c\u6362\u4e3a\u7b49\u7ea7\u5236\u6210\u7ee9 Version: 0.1 Author: \u9a86\u660a \"\"\" score = float ( input ( '\u8bf7\u8f93\u5165\u6210\u7ee9: ' )) if score >= 90 : grade = 'A' elif score >= 80 : grade = 'B' elif score >= 70 : grade = 'C' elif score >= 60 : grade = 'D' else : grade = 'E' print ( '\u5bf9\u5e94\u7684\u7b49\u7ea7\u662f:' , grade )","title":"\u4f8b\u5b502\uff1a\u767e\u5206\u5236\u6210\u7ee9\u8f6c\u6362\u4e3a\u7b49\u7ea7\u5236\u6210\u7ee9\u3002"},{"location":"%E7%AC%AC05%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#3","text":"\"\"\" \u5224\u65ad\u8f93\u5165\u7684\u8fb9\u957f\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62\uff0c\u5982\u679c\u80fd\u5219\u8ba1\u7b97\u51fa\u4e09\u89d2\u5f62\u7684\u5468\u957f\u548c\u9762\u79ef Version: 0.1 Author: \u9a86\u660a \"\"\" a = float ( input ( 'a = ' )) b = float ( input ( 'b = ' )) c = float ( input ( 'c = ' )) if a + b > c and a + c > b and b + c > a : peri = a + b + c print ( f '\u5468\u957f: { peri } ' ) half = peri / 2 area = ( half * ( half - a ) * ( half - b ) * ( half - c )) ** 0.5 print ( f '\u9762\u79ef: { area } ' ) else : print ( '\u4e0d\u80fd\u6784\u6210\u4e09\u89d2\u5f62' ) \u8bf4\u660e\uff1a \u4e0a\u9762\u901a\u8fc7\u8fb9\u957f\u8ba1\u7b97\u4e09\u89d2\u5f62\u9762\u79ef\u7684\u516c\u5f0f\u53eb\u505a \u6d77\u4f26\u516c\u5f0f \u3002","title":"\u4f8b\u5b503\uff1a\u8f93\u5165\u4e09\u6761\u8fb9\u957f\uff0c\u5982\u679c\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5c31\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u3002"},{"location":"%E7%AC%AC05%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/#_3","text":"\u5b66\u4f1a\u4e86Python\u4e2d\u7684\u5206\u652f\u7ed3\u6784\u548c\u5faa\u73af\u7ed3\u6784\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528Python\u7a0b\u5e8f\u6765\u89e3\u51b3\u5f88\u591a\u5b9e\u9645\u7684\u95ee\u9898\u4e86\u3002\u8fd9\u4e00\u8282\u8bfe\u76f8\u4fe1\u5df2\u7ecf\u5e2e\u52a9\u5927\u5bb6\u8bb0\u4f4f\u4e86 if \u3001 elif \u3001 else \u8fd9\u51e0\u4e2a\u5173\u952e\u5b57\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u4eec\u6765\u6784\u9020\u5206\u652f\u7ed3\u6784\uff0c\u4e0b\u4e00\u8282\u8bfe\u6211\u4eec\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5faa\u73af\u7ed3\u6784\uff0c\u5b66\u5b8c\u8fd9\u4e24\u6b21\u8bfe\u4f60\u4e00\u5b9a\u4f1a\u53d1\u73b0\uff0c\u4f60\u80fd\u5199\u51fa\u5f88\u591a\u5f88\u591a\u975e\u5e38\u6709\u610f\u601d\u7684\u4ee3\u7801\u3002\u7ee7\u7eed\u52a0\u6cb9\uff01","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC06%E8%AF%BE%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/","text":"\u7b2c06\u8bfe\uff1a\u5faa\u73af\u7ed3\u6784 \u5e94\u7528\u573a\u666f \u6211\u4eec\u5728\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u4f1a\u9047\u5230\u9700\u8981\u91cd\u590d\u6267\u884c\u67d0\u6761\u6307\u4ee4\u6216\u67d0\u4e9b\u6307\u4ee4\u7684\u573a\u666f\u3002\u4f8b\u5982\u7528\u7a0b\u5e8f\u63a7\u5236\u673a\u5668\u4eba\u8e22\u8db3\u7403\uff0c\u5982\u679c\u673a\u5668\u4eba\u6301\u7403\u800c\u4e14\u8fd8\u6ca1\u6709\u8fdb\u5165\u5c04\u95e8\u8303\u56f4\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u4e00\u76f4\u53d1\u51fa\u8ba9\u673a\u5668\u4eba\u5411\u7403\u95e8\u65b9\u5411\u79fb\u52a8\u7684\u6307\u4ee4\u3002\u5728\u8fd9\u4e2a\u573a\u666f\u4e2d\uff0c\u8ba9\u673a\u5668\u4eba\u5411\u7403\u95e8\u65b9\u5411\u79fb\u52a8\u5c31\u662f\u4e00\u4e2a\u9700\u8981\u91cd\u590d\u7684\u52a8\u4f5c\uff0c\u5f53\u7136\u8fd9\u91cc\u8fd8\u4f1a\u7528\u5230\u4e0a\u4e00\u8bfe\u8bb2\u7684\u5206\u652f\u7ed3\u6784\u6765\u5224\u65ad\u673a\u5668\u4eba\u662f\u5426\u6301\u7403\u4ee5\u53ca\u662f\u5426\u8fdb\u5165\u5c04\u95e8\u8303\u56f4\u3002\u518d\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5982\u679c\u8981\u5b9e\u73b0\u6bcf\u96941\u79d2\u4e2d\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u4e00\u6b21\u201chello, world\u201d\u5e76\u6301\u7eed\u6253\u5370\u4e00\u4e2a\u5c0f\u65f6\uff0c\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u591f\u76f4\u63a5\u628a print('hello, world') \u8fd9\u53e5\u4ee3\u7801\u51993600\u904d\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6784\u9020\u5faa\u73af\u7ed3\u6784\u3002 \u6240\u8c13\u5faa\u73af\u7ed3\u6784\uff0c\u5c31\u662f\u7a0b\u5e8f\u4e2d\u63a7\u5236\u67d0\u6761\u6216\u67d0\u4e9b\u6307\u4ee4\u91cd\u590d\u6267\u884c\u7684\u7ed3\u6784\u3002\u5728Python\u4e2d\u6784\u9020\u5faa\u73af\u7ed3\u6784\u6709\u4e24\u79cd\u505a\u6cd5\uff0c\u4e00\u79cd\u662f for-in \u5faa\u73af\uff0c\u53e6\u4e00\u79cd\u662f while \u5faa\u73af\u3002 for-in\u5faa\u73af \u5982\u679c\u660e\u786e\u7684\u77e5\u9053\u5faa\u73af\u6267\u884c\u7684\u6b21\u6570\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528 for-in \u5faa\u73af\uff0c\u4f8b\u5982\u8f93\u51fa100\u884c\u7684\u201dhello, world\u201c\u3002 \u88ab for-in \u5faa\u73af\u63a7\u5236\u7684\u8bed\u53e5\u5757\u4e5f\u662f\u901a\u8fc7\u7f29\u8fdb\u7684\u65b9\u5f0f\u6765\u6784\u9020\u7684\uff0c\u8fd9\u4e00\u70b9\u8ddf\u5206\u652f\u7ed3\u6784\u5b8c\u5168\u76f8\u540c\uff0c\u5927\u5bb6\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u660e\u767d\u4e86\u3002 \"\"\" \u7528for\u5faa\u73af\u5b9e\u73b01~100\u6c42\u548c Version: 0.1 Author: \u9a86\u660a \"\"\" total = 0 for x in range ( 1 , 101 ): total += x print ( total ) \u9700\u8981\u8bf4\u660e\u7684\u662f\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 range(1, 101) \u53ef\u4ee5\u7528\u6765\u6784\u9020\u4e00\u4e2a\u4ece 1 \u5230 100 \u7684\u8303\u56f4\uff0c\u5f53\u6211\u4eec\u628a\u8fd9\u6837\u4e00\u4e2a\u8303\u56f4\u653e\u5230 for-in \u5faa\u73af\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u524d\u9762\u7684\u5faa\u73af\u53d8\u91cf x \u4f9d\u6b21\u53d6\u51fa\u4ece 1 \u5230 100 \u7684\u6574\u6570\u3002\u5f53\u7136\uff0c range \u7684\u7528\u6cd5\u975e\u5e38\u7075\u6d3b\uff0c\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff1a range(101) \uff1a\u53ef\u4ee5\u7528\u6765\u4ea7\u751f0\u5230100\u8303\u56f4\u7684\u6574\u6570\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u53d6\u4e0d\u5230101\u3002 range(1, 101) \uff1a\u53ef\u4ee5\u7528\u6765\u4ea7\u751f1\u5230100\u8303\u56f4\u7684\u6574\u6570\uff0c\u76f8\u5f53\u4e8e\u524d\u9762\u662f\u95ed\u533a\u95f4\u540e\u9762\u662f\u5f00\u533a\u95f4\u3002 range(1, 101, 2) \uff1a\u53ef\u4ee5\u7528\u6765\u4ea7\u751f1\u5230100\u7684\u5947\u6570\uff0c\u5176\u4e2d2\u662f\u6b65\u957f\uff0c\u5373\u6bcf\u6b21\u9012\u589e\u7684\u503c\u3002 range(100, 0, -2) \uff1a\u53ef\u4ee5\u7528\u6765\u4ea7\u751f100\u52301\u7684\u5076\u6570\uff0c\u5176\u4e2d-2\u662f\u6b65\u957f\uff0c\u5373\u6bcf\u6b21\u9012\u51cf\u7684\u503c\u3002 \u77e5\u9053\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u5b9e\u73b01~100\u4e4b\u95f4\u7684\u5076\u6570\u6c42\u548c\u3002 \"\"\" \u7528for\u5faa\u73af\u5b9e\u73b01~100\u4e4b\u95f4\u7684\u5076\u6570\u6c42\u548c Version: 0.1 Author: \u9a86\u660a \"\"\" total = 0 for x in range ( 2 , 101 , 2 ): total += x print ( total ) while\u5faa\u73af \u5982\u679c\u8981\u6784\u9020\u4e0d\u77e5\u9053\u5177\u4f53\u5faa\u73af\u6b21\u6570\u7684\u5faa\u73af\u7ed3\u6784\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528 while \u5faa\u73af\u3002 while \u5faa\u73af\u901a\u8fc7\u4e00\u4e2a\u80fd\u591f\u4ea7\u751f bool \u503c\u7684\u8868\u8fbe\u5f0f\u6765\u63a7\u5236\u5faa\u73af\uff0c\u5f53\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a True \u65f6\u5219\u7ee7\u7eed\u5faa\u73af\uff0c\u5f53\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a False \u65f6\u5219\u7ed3\u675f\u5faa\u73af\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u201c\u731c\u6570\u5b57\u201d\u7684\u5c0f\u6e38\u620f\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528 while \u5faa\u73af\u3002\u731c\u6570\u5b57\u6e38\u620f\u7684\u89c4\u5219\u662f\uff1a\u8ba1\u7b97\u673a\u51fa\u4e00\u4e2a 1 \u5230 100 \u4e4b\u95f4\u7684\u968f\u673a\u6570\uff0c\u73a9\u5bb6\u8f93\u5165\u81ea\u5df1\u731c\u7684\u6570\u5b57\uff0c\u8ba1\u7b97\u673a\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f\uff08\u5927\u4e00\u70b9\u3001\u5c0f\u4e00\u70b9\u6216\u731c\u5bf9\u4e86\uff09\uff0c\u5982\u679c\u73a9\u5bb6\u731c\u4e2d\u4e86\u6570\u5b57\uff0c\u8ba1\u7b97\u673a\u63d0\u793a\u7528\u6237\u4e00\u5171\u731c\u4e86\u591a\u5c11\u6b21\uff0c\u6e38\u620f\u7ed3\u675f\uff0c\u5426\u5219\u6e38\u620f\u7ee7\u7eed\u3002 \"\"\" \u731c\u6570\u5b57\u6e38\u620f Version: 0.1 Author: \u9a86\u660a \"\"\" import random # \u4ea7\u751f\u4e00\u4e2a1-100\u8303\u56f4\u7684\u968f\u673a\u6570 answer = random . randint ( 1 , 100 ) counter = 0 while True : counter += 1 number = int ( input ( '\u8bf7\u8f93\u5165: ' )) if number < answer : print ( '\u5927\u4e00\u70b9' ) elif number > answer : print ( '\u5c0f\u4e00\u70b9' ) else : print ( '\u606d\u559c\u4f60\u731c\u5bf9\u4e86!' ) break # \u5f53\u9000\u51fawhile\u5faa\u73af\u7684\u65f6\u5019\u663e\u793a\u7528\u6237\u4e00\u5171\u731c\u4e86\u591a\u5c11\u6b21 print ( f '\u4f60\u603b\u5171\u731c\u4e86 { counter } \u6b21' ) break\u548ccontinue \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528 while True \u6784\u9020\u4e86\u4e00\u4e2a\u6761\u4ef6\u6052\u6210\u7acb\u7684\u5faa\u73af\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5982\u679c\u4e0d\u505a\u7279\u6b8a\u5904\u7406\uff0c\u5faa\u73af\u662f\u4e0d\u4f1a\u7ed3\u675f\u7684\uff0c\u8fd9\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684\u201c\u6b7b\u5faa\u73af\u201d\u3002\u4e3a\u4e86\u5728\u7528\u6237\u731c\u4e2d\u6570\u5b57\u65f6\u80fd\u591f\u9000\u51fa\u5faa\u73af\u7ed3\u6784\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 break \u5173\u952e\u5b57\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u63d0\u524d\u7ed3\u675f\u5faa\u73af\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c break \u53ea\u80fd\u7ec8\u6b62\u5b83\u6240\u5728\u7684\u90a3\u4e2a\u5faa\u73af\uff0c\u8fd9\u4e00\u70b9\u5728\u4f7f\u7528\u5d4c\u5957\u5faa\u73af\u7ed3\u6784\u65f6\u9700\u8981\u5f15\u8d77\u6ce8\u610f\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u6211\u4eec\u4f1a\u8bb2\u5230\u4ec0\u4e48\u662f\u5d4c\u5957\u7684\u5faa\u73af\u7ed3\u6784\u3002\u9664\u4e86 break \u4e4b\u5916\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u5173\u952e\u5b57\u662f continue \uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u653e\u5f03\u672c\u6b21\u5faa\u73af\u540e\u7eed\u7684\u4ee3\u7801\u76f4\u63a5\u8ba9\u5faa\u73af\u8fdb\u5165\u4e0b\u4e00\u8f6e\u3002 \u5d4c\u5957\u7684\u5faa\u73af\u7ed3\u6784 \u548c\u5206\u652f\u7ed3\u6784\u4e00\u6837\uff0c\u5faa\u73af\u7ed3\u6784\u4e5f\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u5faa\u73af\u4e2d\u8fd8\u53ef\u4ee5\u6784\u9020\u5faa\u73af\u7ed3\u6784\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u5d4c\u5957\u7684\u5faa\u73af\u6765\u8f93\u51fa\u4e00\u4e2a\u4e58\u6cd5\u53e3\u8bc0\u8868\uff08\u4e5d\u4e5d\u8868\uff09\u3002 \"\"\" \u6253\u5370\u4e58\u6cd5\u53e3\u8bc0\u8868 Version: 0.1 Author: \u9a86\u660a \"\"\" for i in range ( 1 , 10 ): for j in range ( 1 , i + 1 ): print ( f ' { i } * { j } = { i * j } ' , end = ' \\t ' ) print () \u5f88\u663e\u7136\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u5916\u5c42\u5faa\u73af\u7528\u6765\u63a7\u5236\u4e00\u5171\u4f1a\u4ea7\u751f 9 \u884c\u7684\u8f93\u51fa\uff0c\u800c\u5185\u5c42\u5faa\u73af\u7528\u6765\u63a7\u5236\u6bcf\u4e00\u884c\u4f1a\u8f93\u51fa\u591a\u5c11\u5217\u3002\u5185\u5c42\u5faa\u73af\u4e2d\u7684\u8f93\u51fa\u5c31\u662f\u4e5d\u4e5d\u8868\u4e00\u884c\u4e2d\u7684\u6240\u6709\u5217\uff0c\u6240\u4ee5\u5728\u5185\u5c42\u5faa\u73af\u5b8c\u6210\u65f6\uff0c\u6709\u4e00\u4e2a print() \u6765\u5b9e\u73b0\u6362\u884c\u8f93\u51fa\u7684\u6548\u679c\u3002 \u5faa\u73af\u7684\u4f8b\u5b50 \u4f8b\u5b501\uff1a\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u7d20\u6570\u3002 \u63d0\u793a \uff1a\u7d20\u6570\u6307\u7684\u662f\u53ea\u80fd\u88ab1\u548c\u81ea\u8eab\u6574\u9664\u7684\u5927\u4e8e1\u7684\u6574\u6570\u3002 \"\"\" \u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u7d20\u6570 Version: 0.1 Author: \u9a86\u660a \"\"\" num = int ( input ( '\u8bf7\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570: ' )) end = int ( num ** 0.5 ) is_prime = True for x in range ( 2 , end + 1 ): if num % x == 0 : is_prime = False break if is_prime and num != 1 : print ( f ' { num } \u662f\u7d20\u6570' ) else : print ( f ' { num } \u4e0d\u662f\u7d20\u6570' ) \u4f8b\u5b502\uff1a\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570\uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u3002 \u63d0\u793a \uff1a\u4e24\u4e2a\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u662f\u4e24\u4e2a\u6570\u7684\u516c\u5171\u56e0\u5b50\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\u6570\uff1b\u4e24\u4e2a\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u5219\u662f\u80fd\u591f\u540c\u65f6\u88ab\u4e24\u4e2a\u6570\u6574\u9664\u7684\u6700\u5c0f\u7684\u90a3\u4e2a\u6570\u3002 \"\"\" \u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570\u8ba1\u7b97\u5b83\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570 Version: 0.1 Author: \u9a86\u660a \"\"\" x = int ( input ( 'x = ' )) y = int ( input ( 'y = ' )) for factor in range ( x , 0 , - 1 ): if x % factor == 0 and y % factor == 0 : print ( f ' { x } \u548c { y } \u7684\u6700\u5927\u516c\u7ea6\u6570\u662f { factor } ' ) print ( f ' { x } \u548c { y } \u7684\u6700\u5c0f\u516c\u500d\u6570\u662f { x * y // factor } ' ) break \u7b80\u5355\u7684\u603b\u7ed3 \u5b66\u4f1a\u4e86Python\u4e2d\u7684\u5206\u652f\u7ed3\u6784\u548c\u5faa\u73af\u7ed3\u6784\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u89e3\u51b3\u5f88\u591a\u5b9e\u9645\u7684\u95ee\u9898\u4e86\u3002\u901a\u8fc7\u8fd9\u8282\u8bfe\u7684\u5b66\u4e60\uff0c\u5927\u5bb6\u5e94\u8be5\u5df2\u7ecf\u77e5\u9053\u4e86\u53ef\u4ee5\u7528 for \u548c while \u5173\u952e\u5b57\u6765\u6784\u9020\u5faa\u73af\u7ed3\u6784\u3002 \u5982\u679c\u77e5\u9053\u5faa\u73af\u7684\u6b21\u6570\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528 for \u5faa\u73af \uff1b\u5982\u679c \u5faa\u73af\u6b21\u6570\u4e0d\u80fd\u786e\u5b9a\uff0c\u53ef\u4ee5\u7528 while \u5faa\u73af \u3002\u5728\u5faa\u73af\u4e2d\u8fd8 \u53ef\u4ee5\u4f7f\u7528 break \u6765\u63d0\u524d\u7ed3\u675f\u5faa\u73af \u3002","title":"\u7b2c06\u8bfe\uff1a\u5faa\u73af\u7ed3\u6784"},{"location":"%E7%AC%AC06%E8%AF%BE%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#06","text":"","title":"\u7b2c06\u8bfe\uff1a\u5faa\u73af\u7ed3\u6784"},{"location":"%E7%AC%AC06%E8%AF%BE%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#_1","text":"\u6211\u4eec\u5728\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u4f1a\u9047\u5230\u9700\u8981\u91cd\u590d\u6267\u884c\u67d0\u6761\u6307\u4ee4\u6216\u67d0\u4e9b\u6307\u4ee4\u7684\u573a\u666f\u3002\u4f8b\u5982\u7528\u7a0b\u5e8f\u63a7\u5236\u673a\u5668\u4eba\u8e22\u8db3\u7403\uff0c\u5982\u679c\u673a\u5668\u4eba\u6301\u7403\u800c\u4e14\u8fd8\u6ca1\u6709\u8fdb\u5165\u5c04\u95e8\u8303\u56f4\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u4e00\u76f4\u53d1\u51fa\u8ba9\u673a\u5668\u4eba\u5411\u7403\u95e8\u65b9\u5411\u79fb\u52a8\u7684\u6307\u4ee4\u3002\u5728\u8fd9\u4e2a\u573a\u666f\u4e2d\uff0c\u8ba9\u673a\u5668\u4eba\u5411\u7403\u95e8\u65b9\u5411\u79fb\u52a8\u5c31\u662f\u4e00\u4e2a\u9700\u8981\u91cd\u590d\u7684\u52a8\u4f5c\uff0c\u5f53\u7136\u8fd9\u91cc\u8fd8\u4f1a\u7528\u5230\u4e0a\u4e00\u8bfe\u8bb2\u7684\u5206\u652f\u7ed3\u6784\u6765\u5224\u65ad\u673a\u5668\u4eba\u662f\u5426\u6301\u7403\u4ee5\u53ca\u662f\u5426\u8fdb\u5165\u5c04\u95e8\u8303\u56f4\u3002\u518d\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5982\u679c\u8981\u5b9e\u73b0\u6bcf\u96941\u79d2\u4e2d\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u4e00\u6b21\u201chello, world\u201d\u5e76\u6301\u7eed\u6253\u5370\u4e00\u4e2a\u5c0f\u65f6\uff0c\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u591f\u76f4\u63a5\u628a print('hello, world') \u8fd9\u53e5\u4ee3\u7801\u51993600\u904d\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6784\u9020\u5faa\u73af\u7ed3\u6784\u3002 \u6240\u8c13\u5faa\u73af\u7ed3\u6784\uff0c\u5c31\u662f\u7a0b\u5e8f\u4e2d\u63a7\u5236\u67d0\u6761\u6216\u67d0\u4e9b\u6307\u4ee4\u91cd\u590d\u6267\u884c\u7684\u7ed3\u6784\u3002\u5728Python\u4e2d\u6784\u9020\u5faa\u73af\u7ed3\u6784\u6709\u4e24\u79cd\u505a\u6cd5\uff0c\u4e00\u79cd\u662f for-in \u5faa\u73af\uff0c\u53e6\u4e00\u79cd\u662f while \u5faa\u73af\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"%E7%AC%AC06%E8%AF%BE%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#for-in","text":"\u5982\u679c\u660e\u786e\u7684\u77e5\u9053\u5faa\u73af\u6267\u884c\u7684\u6b21\u6570\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528 for-in \u5faa\u73af\uff0c\u4f8b\u5982\u8f93\u51fa100\u884c\u7684\u201dhello, world\u201c\u3002 \u88ab for-in \u5faa\u73af\u63a7\u5236\u7684\u8bed\u53e5\u5757\u4e5f\u662f\u901a\u8fc7\u7f29\u8fdb\u7684\u65b9\u5f0f\u6765\u6784\u9020\u7684\uff0c\u8fd9\u4e00\u70b9\u8ddf\u5206\u652f\u7ed3\u6784\u5b8c\u5168\u76f8\u540c\uff0c\u5927\u5bb6\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u660e\u767d\u4e86\u3002 \"\"\" \u7528for\u5faa\u73af\u5b9e\u73b01~100\u6c42\u548c Version: 0.1 Author: \u9a86\u660a \"\"\" total = 0 for x in range ( 1 , 101 ): total += x print ( total ) \u9700\u8981\u8bf4\u660e\u7684\u662f\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 range(1, 101) \u53ef\u4ee5\u7528\u6765\u6784\u9020\u4e00\u4e2a\u4ece 1 \u5230 100 \u7684\u8303\u56f4\uff0c\u5f53\u6211\u4eec\u628a\u8fd9\u6837\u4e00\u4e2a\u8303\u56f4\u653e\u5230 for-in \u5faa\u73af\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u524d\u9762\u7684\u5faa\u73af\u53d8\u91cf x \u4f9d\u6b21\u53d6\u51fa\u4ece 1 \u5230 100 \u7684\u6574\u6570\u3002\u5f53\u7136\uff0c range \u7684\u7528\u6cd5\u975e\u5e38\u7075\u6d3b\uff0c\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff1a range(101) \uff1a\u53ef\u4ee5\u7528\u6765\u4ea7\u751f0\u5230100\u8303\u56f4\u7684\u6574\u6570\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u53d6\u4e0d\u5230101\u3002 range(1, 101) \uff1a\u53ef\u4ee5\u7528\u6765\u4ea7\u751f1\u5230100\u8303\u56f4\u7684\u6574\u6570\uff0c\u76f8\u5f53\u4e8e\u524d\u9762\u662f\u95ed\u533a\u95f4\u540e\u9762\u662f\u5f00\u533a\u95f4\u3002 range(1, 101, 2) \uff1a\u53ef\u4ee5\u7528\u6765\u4ea7\u751f1\u5230100\u7684\u5947\u6570\uff0c\u5176\u4e2d2\u662f\u6b65\u957f\uff0c\u5373\u6bcf\u6b21\u9012\u589e\u7684\u503c\u3002 range(100, 0, -2) \uff1a\u53ef\u4ee5\u7528\u6765\u4ea7\u751f100\u52301\u7684\u5076\u6570\uff0c\u5176\u4e2d-2\u662f\u6b65\u957f\uff0c\u5373\u6bcf\u6b21\u9012\u51cf\u7684\u503c\u3002 \u77e5\u9053\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u5b9e\u73b01~100\u4e4b\u95f4\u7684\u5076\u6570\u6c42\u548c\u3002 \"\"\" \u7528for\u5faa\u73af\u5b9e\u73b01~100\u4e4b\u95f4\u7684\u5076\u6570\u6c42\u548c Version: 0.1 Author: \u9a86\u660a \"\"\" total = 0 for x in range ( 2 , 101 , 2 ): total += x print ( total )","title":"for-in\u5faa\u73af"},{"location":"%E7%AC%AC06%E8%AF%BE%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#while","text":"\u5982\u679c\u8981\u6784\u9020\u4e0d\u77e5\u9053\u5177\u4f53\u5faa\u73af\u6b21\u6570\u7684\u5faa\u73af\u7ed3\u6784\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528 while \u5faa\u73af\u3002 while \u5faa\u73af\u901a\u8fc7\u4e00\u4e2a\u80fd\u591f\u4ea7\u751f bool \u503c\u7684\u8868\u8fbe\u5f0f\u6765\u63a7\u5236\u5faa\u73af\uff0c\u5f53\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a True \u65f6\u5219\u7ee7\u7eed\u5faa\u73af\uff0c\u5f53\u8868\u8fbe\u5f0f\u7684\u503c\u4e3a False \u65f6\u5219\u7ed3\u675f\u5faa\u73af\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u201c\u731c\u6570\u5b57\u201d\u7684\u5c0f\u6e38\u620f\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528 while \u5faa\u73af\u3002\u731c\u6570\u5b57\u6e38\u620f\u7684\u89c4\u5219\u662f\uff1a\u8ba1\u7b97\u673a\u51fa\u4e00\u4e2a 1 \u5230 100 \u4e4b\u95f4\u7684\u968f\u673a\u6570\uff0c\u73a9\u5bb6\u8f93\u5165\u81ea\u5df1\u731c\u7684\u6570\u5b57\uff0c\u8ba1\u7b97\u673a\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f\uff08\u5927\u4e00\u70b9\u3001\u5c0f\u4e00\u70b9\u6216\u731c\u5bf9\u4e86\uff09\uff0c\u5982\u679c\u73a9\u5bb6\u731c\u4e2d\u4e86\u6570\u5b57\uff0c\u8ba1\u7b97\u673a\u63d0\u793a\u7528\u6237\u4e00\u5171\u731c\u4e86\u591a\u5c11\u6b21\uff0c\u6e38\u620f\u7ed3\u675f\uff0c\u5426\u5219\u6e38\u620f\u7ee7\u7eed\u3002 \"\"\" \u731c\u6570\u5b57\u6e38\u620f Version: 0.1 Author: \u9a86\u660a \"\"\" import random # \u4ea7\u751f\u4e00\u4e2a1-100\u8303\u56f4\u7684\u968f\u673a\u6570 answer = random . randint ( 1 , 100 ) counter = 0 while True : counter += 1 number = int ( input ( '\u8bf7\u8f93\u5165: ' )) if number < answer : print ( '\u5927\u4e00\u70b9' ) elif number > answer : print ( '\u5c0f\u4e00\u70b9' ) else : print ( '\u606d\u559c\u4f60\u731c\u5bf9\u4e86!' ) break # \u5f53\u9000\u51fawhile\u5faa\u73af\u7684\u65f6\u5019\u663e\u793a\u7528\u6237\u4e00\u5171\u731c\u4e86\u591a\u5c11\u6b21 print ( f '\u4f60\u603b\u5171\u731c\u4e86 { counter } \u6b21' )","title":"while\u5faa\u73af"},{"location":"%E7%AC%AC06%E8%AF%BE%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#breakcontinue","text":"\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528 while True \u6784\u9020\u4e86\u4e00\u4e2a\u6761\u4ef6\u6052\u6210\u7acb\u7684\u5faa\u73af\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5982\u679c\u4e0d\u505a\u7279\u6b8a\u5904\u7406\uff0c\u5faa\u73af\u662f\u4e0d\u4f1a\u7ed3\u675f\u7684\uff0c\u8fd9\u4e5f\u5c31\u662f\u5e38\u8bf4\u7684\u201c\u6b7b\u5faa\u73af\u201d\u3002\u4e3a\u4e86\u5728\u7528\u6237\u731c\u4e2d\u6570\u5b57\u65f6\u80fd\u591f\u9000\u51fa\u5faa\u73af\u7ed3\u6784\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 break \u5173\u952e\u5b57\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u63d0\u524d\u7ed3\u675f\u5faa\u73af\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c break \u53ea\u80fd\u7ec8\u6b62\u5b83\u6240\u5728\u7684\u90a3\u4e2a\u5faa\u73af\uff0c\u8fd9\u4e00\u70b9\u5728\u4f7f\u7528\u5d4c\u5957\u5faa\u73af\u7ed3\u6784\u65f6\u9700\u8981\u5f15\u8d77\u6ce8\u610f\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u6211\u4eec\u4f1a\u8bb2\u5230\u4ec0\u4e48\u662f\u5d4c\u5957\u7684\u5faa\u73af\u7ed3\u6784\u3002\u9664\u4e86 break \u4e4b\u5916\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u5173\u952e\u5b57\u662f continue \uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u653e\u5f03\u672c\u6b21\u5faa\u73af\u540e\u7eed\u7684\u4ee3\u7801\u76f4\u63a5\u8ba9\u5faa\u73af\u8fdb\u5165\u4e0b\u4e00\u8f6e\u3002","title":"break\u548ccontinue"},{"location":"%E7%AC%AC06%E8%AF%BE%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#_2","text":"\u548c\u5206\u652f\u7ed3\u6784\u4e00\u6837\uff0c\u5faa\u73af\u7ed3\u6784\u4e5f\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u5faa\u73af\u4e2d\u8fd8\u53ef\u4ee5\u6784\u9020\u5faa\u73af\u7ed3\u6784\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u5d4c\u5957\u7684\u5faa\u73af\u6765\u8f93\u51fa\u4e00\u4e2a\u4e58\u6cd5\u53e3\u8bc0\u8868\uff08\u4e5d\u4e5d\u8868\uff09\u3002 \"\"\" \u6253\u5370\u4e58\u6cd5\u53e3\u8bc0\u8868 Version: 0.1 Author: \u9a86\u660a \"\"\" for i in range ( 1 , 10 ): for j in range ( 1 , i + 1 ): print ( f ' { i } * { j } = { i * j } ' , end = ' \\t ' ) print () \u5f88\u663e\u7136\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u5916\u5c42\u5faa\u73af\u7528\u6765\u63a7\u5236\u4e00\u5171\u4f1a\u4ea7\u751f 9 \u884c\u7684\u8f93\u51fa\uff0c\u800c\u5185\u5c42\u5faa\u73af\u7528\u6765\u63a7\u5236\u6bcf\u4e00\u884c\u4f1a\u8f93\u51fa\u591a\u5c11\u5217\u3002\u5185\u5c42\u5faa\u73af\u4e2d\u7684\u8f93\u51fa\u5c31\u662f\u4e5d\u4e5d\u8868\u4e00\u884c\u4e2d\u7684\u6240\u6709\u5217\uff0c\u6240\u4ee5\u5728\u5185\u5c42\u5faa\u73af\u5b8c\u6210\u65f6\uff0c\u6709\u4e00\u4e2a print() \u6765\u5b9e\u73b0\u6362\u884c\u8f93\u51fa\u7684\u6548\u679c\u3002","title":"\u5d4c\u5957\u7684\u5faa\u73af\u7ed3\u6784"},{"location":"%E7%AC%AC06%E8%AF%BE%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#_3","text":"","title":"\u5faa\u73af\u7684\u4f8b\u5b50"},{"location":"%E7%AC%AC06%E8%AF%BE%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#1","text":"\u63d0\u793a \uff1a\u7d20\u6570\u6307\u7684\u662f\u53ea\u80fd\u88ab1\u548c\u81ea\u8eab\u6574\u9664\u7684\u5927\u4e8e1\u7684\u6574\u6570\u3002 \"\"\" \u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u7d20\u6570 Version: 0.1 Author: \u9a86\u660a \"\"\" num = int ( input ( '\u8bf7\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570: ' )) end = int ( num ** 0.5 ) is_prime = True for x in range ( 2 , end + 1 ): if num % x == 0 : is_prime = False break if is_prime and num != 1 : print ( f ' { num } \u662f\u7d20\u6570' ) else : print ( f ' { num } \u4e0d\u662f\u7d20\u6570' )","title":"\u4f8b\u5b501\uff1a\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u7d20\u6570\u3002"},{"location":"%E7%AC%AC06%E8%AF%BE%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#2","text":"\u63d0\u793a \uff1a\u4e24\u4e2a\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u662f\u4e24\u4e2a\u6570\u7684\u516c\u5171\u56e0\u5b50\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\u6570\uff1b\u4e24\u4e2a\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u5219\u662f\u80fd\u591f\u540c\u65f6\u88ab\u4e24\u4e2a\u6570\u6574\u9664\u7684\u6700\u5c0f\u7684\u90a3\u4e2a\u6570\u3002 \"\"\" \u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570\u8ba1\u7b97\u5b83\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570 Version: 0.1 Author: \u9a86\u660a \"\"\" x = int ( input ( 'x = ' )) y = int ( input ( 'y = ' )) for factor in range ( x , 0 , - 1 ): if x % factor == 0 and y % factor == 0 : print ( f ' { x } \u548c { y } \u7684\u6700\u5927\u516c\u7ea6\u6570\u662f { factor } ' ) print ( f ' { x } \u548c { y } \u7684\u6700\u5c0f\u516c\u500d\u6570\u662f { x * y // factor } ' ) break","title":"\u4f8b\u5b502\uff1a\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570\uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u3002"},{"location":"%E7%AC%AC06%E8%AF%BE%EF%BC%9A%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/#_4","text":"\u5b66\u4f1a\u4e86Python\u4e2d\u7684\u5206\u652f\u7ed3\u6784\u548c\u5faa\u73af\u7ed3\u6784\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u89e3\u51b3\u5f88\u591a\u5b9e\u9645\u7684\u95ee\u9898\u4e86\u3002\u901a\u8fc7\u8fd9\u8282\u8bfe\u7684\u5b66\u4e60\uff0c\u5927\u5bb6\u5e94\u8be5\u5df2\u7ecf\u77e5\u9053\u4e86\u53ef\u4ee5\u7528 for \u548c while \u5173\u952e\u5b57\u6765\u6784\u9020\u5faa\u73af\u7ed3\u6784\u3002 \u5982\u679c\u77e5\u9053\u5faa\u73af\u7684\u6b21\u6570\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528 for \u5faa\u73af \uff1b\u5982\u679c \u5faa\u73af\u6b21\u6570\u4e0d\u80fd\u786e\u5b9a\uff0c\u53ef\u4ee5\u7528 while \u5faa\u73af \u3002\u5728\u5faa\u73af\u4e2d\u8fd8 \u53ef\u4ee5\u4f7f\u7528 break \u6765\u63d0\u524d\u7ed3\u675f\u5faa\u73af \u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC07%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%9A%84%E5%BA%94%E7%94%A8/","text":"\u7b2c07\u8bfe\uff1a\u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u7684\u5e94\u7528 \u901a\u8fc7\u4e0a\u4e24\u8282\u8bfe\u7684\u5b66\u4e60\uff0c\u5927\u5bb6\u5bf9Python\u4e2d\u7684\u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u5df2\u7ecf\u6709\u4e86\u611f\u6027\u7684\u8ba4\u8bc6\u3002 \u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784 \u7684\u91cd\u8981\u6027\u4e0d\u8a00\u800c\u55bb\uff0c\u5b83 \u662f\u6784\u9020\u7a0b\u5e8f\u903b\u8f91\u7684\u57fa\u7840 \uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u4e5f\u662f\u6bd4\u8f83\u56f0\u96be\u7684\u90e8\u5206\u3002\u5927\u90e8\u5206\u521d\u5b66\u8005\u5728\u5b66\u4e60\u4e86\u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u540e\u90fd\u80fd\u7406\u89e3\u5b83\u4eec\u7684\u7528\u9014\u548c\u7528\u6cd5\uff0c\u4f46\u662f\u9047\u5230\u5b9e\u9645\u95ee\u9898\u7684\u65f6\u5019\u53c8\u65e0\u6cd5\u4e0b\u624b\uff1b \u770b\u61c2\u522b\u4eba\u7684\u4ee3\u7801\u5f88\u5bb9\u6613\uff0c\u4f46\u662f\u8981\u81ea\u5df1\u5199\u51fa\u540c\u6837\u7684\u4ee3\u7801\u5374\u53c8\u5f88\u96be \u3002\u5982\u679c\u4f60\u4e5f\u6709\u540c\u6837\u7684\u95ee\u9898\u548c\u56f0\u60d1\uff0c\u5343\u4e07\u4e0d\u8981\u6cae\u4e27\uff0c\u8fd9\u53ea\u662f\u56e0\u4e3a\u4f60\u624d\u521a\u521a\u5f00\u59cb\u7f16\u7a0b\u4e4b\u65c5\uff0c \u4f60\u7684\u7ec3\u4e60\u91cf\u8fd8\u6ca1\u6709\u8fbe\u5230\u8ba9\u4f60\u53ef\u4ee5\u968f\u5fc3\u6240\u6b32\u7684\u5199\u51fa\u4ee3\u7801\u7684\u7a0b\u5ea6 \uff0c\u53ea\u8981\u52a0\u5f3a\u7f16\u7a0b\u7ec3\u4e60\uff0c\u8fd9\u4e2a\u95ee\u9898\u8fdf\u65e9\u90fd\u4f1a\u89e3\u51b3\u7684\u3002\u4e0b\u9762\u6211\u4eec\u5c31\u4e3a\u5927\u5bb6\u8bb2\u89e3\u4e00\u4e9b\u7ecf\u5178\u7684\u6848\u4f8b\u3002 \u7ecf\u5178\u5c0f\u6848\u4f8b \u4f8b\u5b501\uff1a\u5bfb\u627e\u6c34\u4ed9\u82b1\u6570\u3002 \u8bf4\u660e \uff1a\u6c34\u4ed9\u82b1\u6570\u4e5f\u88ab\u79f0\u4e3a\u8d85\u5b8c\u5168\u6570\u5b57\u4e0d\u53d8\u6570\u3001\u81ea\u604b\u6570\u3001\u81ea\u5e42\u6570\u3001\u963f\u59c6\u65af\u7279\u6717\u6570\uff0c\u5b83\u662f\u4e00\u4e2a3\u4f4d\u6570\uff0c\u8be5\u6570\u5b57\u6bcf\u4e2a\u4f4d\u4e0a\u6570\u5b57\u7684\u7acb\u65b9\u4e4b\u548c\u6b63\u597d\u7b49\u4e8e\u5b83\u672c\u8eab\uff0c\u4f8b\u5982\uff1a$ 153=1^3+5^3+3^3 $\u3002 \u8fd9\u4e2a\u9898\u76ee\u7684\u5173\u952e\u662f\u5c06\u4e00\u4e2a\u4e09\u4f4d\u6570\u62c6\u5206\u4e3a\u4e2a\u4f4d\u3001\u5341\u4f4d\u3001\u767e\u4f4d\uff0c\u8fd9\u4e00\u70b9\u5229\u7528Python\u4e2d\u7684 // \uff08\u6574\u9664\uff09\u548c % \uff08\u6c42\u6a21\uff09\u8fd0\u7b97\u7b26\u5176\u5b9e\u5f88\u5bb9\u6613\u505a\u5230\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 shuixianhua.py 1 2 3 4 5 6 7 8 9 10 11 12 \"\"\" \u627e\u51fa\u6240\u6709\u6c34\u4ed9\u82b1\u6570 Version: 0.1 Author: \u9a86\u660a \"\"\" for num in range ( 100 , 1000 ): low = num % 10 mid = num // 10 % 10 high = num // 100 if num == low ** 3 + mid ** 3 + high ** 3 : print ( num ) \u4e0a\u9762\u5229\u7528 // \u548c % \u62c6\u5206\u4e00\u4e2a\u6570\u7684\u5c0f\u6280\u5de7\u5728\u5199\u4ee3\u7801\u7684\u65f6\u5019\u8fd8\u662f\u5f88\u5e38\u7528\u7684\u3002\u6211\u4eec\u8981\u5c06\u4e00\u4e2a\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u4f4d\u7684\u6b63\u6574\u6570\u8fdb\u884c\u53cd\u8f6c\uff0c\u4f8b\u5982\u5c06 12345 \u53d8\u6210 54321 \uff0c\u4e5f\u53ef\u4ee5\u5229\u7528\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u6765\u5b9e\u73b0\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \"\"\" \u6b63\u6574\u6570\u7684\u53cd\u8f6c Version: 0.1 Author: \u9a86\u660a \"\"\" num = int ( input ( 'num = ' )) reversed_num = 0 while num > 0 : reversed_num = reversed_num * 10 + num % 10 num //= 10 print ( reversed_num ) \u4f8b\u5b502\uff1a\u767e\u94b1\u767e\u9e21\u95ee\u9898\u3002 \u8bf4\u660e \uff1a\u767e\u94b1\u767e\u9e21\u662f\u6211\u56fd\u53e4\u4ee3\u6570\u5b66\u5bb6 \u5f20\u4e18\u5efa \u5728\u300a\u7b97\u7ecf\u300b\u4e00\u4e66\u4e2d\u63d0\u51fa\u7684\u6570\u5b66\u95ee\u9898\uff1a\u9e21\u7fc1\u4e00\u503c\u94b1\u4e94\uff0c\u9e21\u6bcd\u4e00\u503c\u94b1\u4e09\uff0c\u9e21\u96cf\u4e09\u503c\u94b1\u4e00\u3002\u767e\u94b1\u4e70\u767e\u9e21\uff0c\u95ee\u9e21\u7fc1\u3001\u9e21\u6bcd\u3001\u9e21\u96cf\u5404\u51e0\u4f55\uff1f\u7ffb\u8bd1\u6210\u73b0\u4ee3\u6587\u662f\uff1a\u516c\u9e215\u5143\u4e00\u53ea\uff0c\u6bcd\u9e213\u5143\u4e00\u53ea\uff0c\u5c0f\u9e211\u5143\u4e09\u53ea\uff0c\u7528100\u5757\u94b1\u4e70\u4e00\u767e\u53ea\u9e21\uff0c\u95ee\u516c\u9e21\u3001\u6bcd\u9e21\u3001\u5c0f\u9e21\u5404\u6709\u591a\u5c11\u53ea\uff1f \"\"\" \u300a\u767e\u94b1\u767e\u9e21\u300b\u95ee\u9898 Version: 0.1 Author: \u9a86\u660a \"\"\" # \u5047\u8bbe\u516c\u9e21\u7684\u6570\u91cf\u4e3ax\uff0cx\u7684\u53d6\u503c\u8303\u56f4\u662f0\u523020 for x in range ( 0 , 21 ): # \u5047\u8bbe\u6bcd\u9e21\u7684\u6570\u91cf\u4e3ay\uff0cy\u7684\u53d6\u503c\u8303\u56f4\u662f0\u523033 for y in range ( 0 , 34 ): z = 100 - x - y if 5 * x + 3 * y + z // 3 == 100 and z % 3 == 0 : print ( f '\u516c\u9e21: { x } \u53ea, \u6bcd\u9e21: { y } \u53ea, \u5c0f\u9e21: { z } \u53ea' ) \u4e0a\u9762\u4f7f\u7528\u7684\u65b9\u6cd5\u53eb\u505a \u7a77\u4e3e\u6cd5 \uff0c\u4e5f\u79f0\u4e3a \u66b4\u529b\u641c\u7d22\u6cd5 \uff0c\u8fd9\u79cd\u65b9\u6cd5\u901a\u8fc7\u4e00\u9879\u4e00\u9879\u7684\u5217\u4e3e\u5907\u9009\u89e3\u51b3\u65b9\u6848\u4e2d\u6240\u6709\u53ef\u80fd\u7684\u5019\u9009\u9879\u5e76\u68c0\u67e5\u6bcf\u4e2a\u5019\u9009\u9879\u662f\u5426\u7b26\u5408\u95ee\u9898\u7684\u63cf\u8ff0\uff0c\u6700\u7ec8\u5f97\u5230\u95ee\u9898\u7684\u89e3\u3002\u8fd9\u79cd\u65b9\u6cd5\u770b\u8d77\u6765\u6bd4\u8f83\u7b28\u62d9\uff0c\u4f46\u5bf9\u4e8e\u8fd0\u7b97\u80fd\u529b\u975e\u5e38\u5f3a\u5927\u7684\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u901a\u5e38\u90fd\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u751a\u81f3\u662f\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u53ea\u8981\u95ee\u9898\u7684\u89e3\u5b58\u5728\u5c31\u80fd\u591f\u627e\u5230\u5b83\u3002 \u4f8b\u5b503\uff1aCRAPS\u8d4c\u535a\u6e38\u620f\u3002 \u8bf4\u660e \uff1aCRAPS\u53c8\u79f0\u82b1\u65d7\u9ab0\uff0c\u662f\u7f8e\u56fd\u62c9\u65af\u7ef4\u52a0\u65af\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u4e00\u79cd\u7684\u684c\u4e0a\u8d4c\u535a\u6e38\u620f\u3002\u8be5\u6e38\u620f\u4f7f\u7528\u4e24\u7c92\u9ab0\u5b50\uff0c\u73a9\u5bb6\u901a\u8fc7\u6447\u4e24\u7c92\u9ab0\u5b50\u83b7\u5f97\u70b9\u6570\u8fdb\u884c\u6e38\u620f\u3002\u7b80\u5316\u540e\u7684\u89c4\u5219\u662f\uff1a\u73a9\u5bb6\u7b2c\u4e00\u6b21\u6447\u9ab0\u5b50\u5982\u679c\u6447\u51fa\u4e867\u70b9\u621611\u70b9\uff0c\u73a9\u5bb6\u80dc\uff1b\u73a9\u5bb6\u7b2c\u4e00\u6b21\u5982\u679c\u6447\u51fa2\u70b9\u30013\u70b9\u621612\u70b9\uff0c\u5e84\u5bb6\u80dc\uff1b\u73a9\u5bb6\u5982\u679c\u6447\u51fa\u5176\u4ed6\u70b9\u6570\u5219\u73a9\u5bb6\u7ee7\u7eed\u6447\u9ab0\u5b50\uff0c\u5982\u679c\u73a9\u5bb6\u6447\u51fa\u4e867\u70b9\uff0c\u5e84\u5bb6\u80dc\uff1b\u5982\u679c\u73a9\u5bb6\u6447\u51fa\u4e86\u7b2c\u4e00\u6b21\u6447\u7684\u70b9\u6570\uff0c\u73a9\u5bb6\u80dc\uff1b\u5176\u4ed6\u70b9\u6570\u73a9\u5bb6\u7ee7\u7eed\u6447\u9ab0\u5b50\uff0c\u76f4\u5230\u5206\u51fa\u80dc\u8d1f\u3002 \"\"\" Craps\u8d4c\u535a\u6e38\u620f \u6211\u4eec\u8bbe\u5b9a\u6e38\u620f\u5f00\u59cb\u65f6\u73a9\u5bb6\u67091000\u5143\u7684\u8d4c\u6ce8 \u6e38\u620f\u7ed3\u675f\u7684\u6761\u4ef6\u662f\u73a9\u5bb6\u7834\u4ea7\uff08\u8f93\u5149\u6240\u6709\u7684\u8d4c\u6ce8\uff09 Version: 0.1 Author: \u9a86\u660a \"\"\" from random import randint money = 1000 while money > 0 : print ( f '\u4f60\u7684\u603b\u8d44\u4ea7\u4e3a: { money } \u5143' ) go_on = False # \u4e0b\u6ce8\u91d1\u989d\u5fc5\u987b\u5927\u4e8e0\u5c0f\u4e8e\u7b49\u4e8e\u73a9\u5bb6\u603b\u8d44\u4ea7 while True : debt = int ( input ( '\u8bf7\u4e0b\u6ce8: ' )) if 0 < debt <= money : break # \u7b2c\u4e00\u6b21\u6447\u8272\u5b50 # \u75281\u52306\u5747\u5300\u5206\u5e03\u7684\u968f\u673a\u6570\u6a21\u62df\u6447\u8272\u5b50\u5f97\u5230\u7684\u70b9\u6570 first = randint ( 1 , 6 ) + randint ( 1 , 6 ) print ( f ' \\n \u73a9\u5bb6\u6447\u51fa\u4e86 { first } \u70b9' ) if first == 7 or first == 11 : print ( '\u73a9\u5bb6\u80dc! \\n ' ) money += debt elif first == 2 or first == 3 or first == 12 : print ( '\u5e84\u5bb6\u80dc! \\n ' ) money -= debt else : go_on = True # \u7b2c\u4e00\u6b21\u6447\u8272\u5b50\u6ca1\u6709\u5206\u51fa\u80dc\u8d1f\u6e38\u620f\u7ee7\u7eed while go_on : go_on = False current = randint ( 1 , 6 ) + randint ( 1 , 6 ) print ( f '\u73a9\u5bb6\u6447\u51fa\u4e86 { current } \u70b9' ) if current == 7 : print ( '\u5e84\u5bb6\u80dc! \\n ' ) money -= debt elif current == first : print ( '\u73a9\u5bb6\u80dc! \\n ' ) money += debt else : go_on = True print ( '\u4f60\u7834\u4ea7\u4e86, \u6e38\u620f\u7ed3\u675f!' ) \u4f8b\u5b504\uff1a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002 \u8bf4\u660e \uff1a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff08Fibonacci sequence\uff09\uff0c\u901a\u5e38\u4e5f\u88ab\u79f0\u4f5c\u9ec4\u91d1\u5206\u5272\u6570\u5217\uff0c\u662f\u610f\u5927\u5229\u6570\u5b66\u5bb6\u83b1\u6602\u7eb3\u591a\u00b7\u6590\u6ce2\u90a3\u5951\uff08Leonardoda Fibonacci\uff09\u5728\u300a\u8ba1\u7b97\u4e4b\u4e66\u300b\u4e2d\u7814\u7a76\u5728\u7406\u60f3\u5047\u8bbe\u6761\u4ef6\u4e0b\u5154\u5b50\u6210\u957f\u7387\u95ee\u9898\u800c\u5f15\u5165\u7684\u6570\u5217\uff0c\u56e0\u6b64\u8fd9\u4e2a\u6570\u5217\u4e5f\u5e38\u88ab\u620f\u79f0\u4e3a\u201c\u5154\u5b50\u6570\u5217\u201d\u3002\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u7279\u70b9\u662f\u6570\u5217\u7684\u524d\u4e24\u4e2a\u6570\u90fd\u662f1\uff0c\u4ece\u7b2c\u4e09\u4e2a\u6570\u5f00\u59cb\uff0c\u6bcf\u4e2a\u6570\u90fd\u662f\u5b83\u524d\u9762\u4e24\u4e2a\u6570\u7684\u548c\uff0c\u6309\u7167\u8fd9\u4e2a\u89c4\u5f8b\uff0c\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u524d10\u4e2a\u6570\u662f\uff1a 1, 1, 2, 3, 5, 8, 13, 21, 34, 55 \u3002\u6590\u6ce2\u90a3\u5951\u6570\u5217\u5728\u73b0\u4ee3\u7269\u7406\u3001\u51c6\u6676\u4f53\u7ed3\u6784\u3001\u5316\u5b66\u7b49\u9886\u57df\u90fd\u6709\u76f4\u63a5\u7684\u5e94\u7528\u3002 \"\"\" \u8f93\u51fa\u6590\u6ce2\u90a3\u5951\u6570\u5217\u524d20\u4e2a\u6570 Version: 0.1 Author: \u9a86\u660a \"\"\" a , b = 0 , 1 for _ in range ( 20 ): a , b = b , a + b print ( a ) \u4f8b\u5b505\uff1a\u6253\u5370100\u4ee5\u5185\u7684\u7d20\u6570\u3002 \u8bf4\u660e \uff1a\u7d20\u6570\u6307\u7684\u662f\u53ea\u80fd\u88ab1\u548c\u81ea\u8eab\u6574\u9664\u7684\u6b63\u6574\u6570\uff08\u4e0d\u5305\u62ec1\uff09\u3002 \"\"\" \u8f93\u51fa100\u4ee5\u5185\u7684\u7d20\u6570 Version: 0.1 Author: \u9a86\u660a \"\"\" for num in range ( 2 , 100 ): # \u5047\u8bbenum\u662f\u7d20\u6570 is_prime = True # \u57282\u5230num-1\u4e4b\u95f4\u627enum\u7684\u56e0\u5b50 for factor in range ( 2 , num ): # \u5982\u679c\u627e\u5230\u4e86num\u7684\u56e0\u5b50\uff0cnum\u5c31\u4e0d\u662f\u7d20\u6570 if num % factor == 0 : is_prime = False break # \u5982\u679c\u5e03\u5c14\u503c\u4e3aTrue\u5728num\u662f\u7d20\u6570 if is_prime : print ( num ) \u7b80\u5355\u7684\u603b\u7ed3 \u8fd8\u662f\u90a3\u53e5\u8bdd\uff1a \u5206\u652f\u7ed3\u6784\u548c\u5faa\u73af\u7ed3\u6784\u975e\u5e38\u91cd\u8981 \uff0c\u662f\u6784\u9020\u7a0b\u5e8f\u903b\u8f91\u7684\u57fa\u7840\uff0c \u4e00\u5b9a\u8981\u901a\u8fc7\u5927\u91cf\u7684\u7ec3\u4e60\u6765\u8fbe\u5230\u878d\u4f1a\u8d2f\u901a \u3002\u521a\u624d\u8bb2\u5230\u7684CRAPS\u8d4c\u535a\u6e38\u620f\u90a3\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u6807\u51c6\uff0c\u5982\u679c\u4f60\u80fd\u5f88\u987a\u5229\u7684\u5b8c\u6210\u8fd9\u6bb5\u4ee3\u7801\uff0c\u90a3\u4e48\u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u7684\u77e5\u8bc6\u4f60\u5c31\u5df2\u7ecf\u638c\u63e1\u4e86\u3002","title":"\u7b2c07\u8bfe\uff1a\u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u7684\u5e94\u7528"},{"location":"%E7%AC%AC07%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%9A%84%E5%BA%94%E7%94%A8/#07","text":"\u901a\u8fc7\u4e0a\u4e24\u8282\u8bfe\u7684\u5b66\u4e60\uff0c\u5927\u5bb6\u5bf9Python\u4e2d\u7684\u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u5df2\u7ecf\u6709\u4e86\u611f\u6027\u7684\u8ba4\u8bc6\u3002 \u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784 \u7684\u91cd\u8981\u6027\u4e0d\u8a00\u800c\u55bb\uff0c\u5b83 \u662f\u6784\u9020\u7a0b\u5e8f\u903b\u8f91\u7684\u57fa\u7840 \uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u4e5f\u662f\u6bd4\u8f83\u56f0\u96be\u7684\u90e8\u5206\u3002\u5927\u90e8\u5206\u521d\u5b66\u8005\u5728\u5b66\u4e60\u4e86\u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u540e\u90fd\u80fd\u7406\u89e3\u5b83\u4eec\u7684\u7528\u9014\u548c\u7528\u6cd5\uff0c\u4f46\u662f\u9047\u5230\u5b9e\u9645\u95ee\u9898\u7684\u65f6\u5019\u53c8\u65e0\u6cd5\u4e0b\u624b\uff1b \u770b\u61c2\u522b\u4eba\u7684\u4ee3\u7801\u5f88\u5bb9\u6613\uff0c\u4f46\u662f\u8981\u81ea\u5df1\u5199\u51fa\u540c\u6837\u7684\u4ee3\u7801\u5374\u53c8\u5f88\u96be \u3002\u5982\u679c\u4f60\u4e5f\u6709\u540c\u6837\u7684\u95ee\u9898\u548c\u56f0\u60d1\uff0c\u5343\u4e07\u4e0d\u8981\u6cae\u4e27\uff0c\u8fd9\u53ea\u662f\u56e0\u4e3a\u4f60\u624d\u521a\u521a\u5f00\u59cb\u7f16\u7a0b\u4e4b\u65c5\uff0c \u4f60\u7684\u7ec3\u4e60\u91cf\u8fd8\u6ca1\u6709\u8fbe\u5230\u8ba9\u4f60\u53ef\u4ee5\u968f\u5fc3\u6240\u6b32\u7684\u5199\u51fa\u4ee3\u7801\u7684\u7a0b\u5ea6 \uff0c\u53ea\u8981\u52a0\u5f3a\u7f16\u7a0b\u7ec3\u4e60\uff0c\u8fd9\u4e2a\u95ee\u9898\u8fdf\u65e9\u90fd\u4f1a\u89e3\u51b3\u7684\u3002\u4e0b\u9762\u6211\u4eec\u5c31\u4e3a\u5927\u5bb6\u8bb2\u89e3\u4e00\u4e9b\u7ecf\u5178\u7684\u6848\u4f8b\u3002","title":"\u7b2c07\u8bfe\uff1a\u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u7684\u5e94\u7528"},{"location":"%E7%AC%AC07%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%9A%84%E5%BA%94%E7%94%A8/#_1","text":"","title":"\u7ecf\u5178\u5c0f\u6848\u4f8b"},{"location":"%E7%AC%AC07%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%9A%84%E5%BA%94%E7%94%A8/#1","text":"\u8bf4\u660e \uff1a\u6c34\u4ed9\u82b1\u6570\u4e5f\u88ab\u79f0\u4e3a\u8d85\u5b8c\u5168\u6570\u5b57\u4e0d\u53d8\u6570\u3001\u81ea\u604b\u6570\u3001\u81ea\u5e42\u6570\u3001\u963f\u59c6\u65af\u7279\u6717\u6570\uff0c\u5b83\u662f\u4e00\u4e2a3\u4f4d\u6570\uff0c\u8be5\u6570\u5b57\u6bcf\u4e2a\u4f4d\u4e0a\u6570\u5b57\u7684\u7acb\u65b9\u4e4b\u548c\u6b63\u597d\u7b49\u4e8e\u5b83\u672c\u8eab\uff0c\u4f8b\u5982\uff1a$ 153=1^3+5^3+3^3 $\u3002 \u8fd9\u4e2a\u9898\u76ee\u7684\u5173\u952e\u662f\u5c06\u4e00\u4e2a\u4e09\u4f4d\u6570\u62c6\u5206\u4e3a\u4e2a\u4f4d\u3001\u5341\u4f4d\u3001\u767e\u4f4d\uff0c\u8fd9\u4e00\u70b9\u5229\u7528Python\u4e2d\u7684 // \uff08\u6574\u9664\uff09\u548c % \uff08\u6c42\u6a21\uff09\u8fd0\u7b97\u7b26\u5176\u5b9e\u5f88\u5bb9\u6613\u505a\u5230\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 shuixianhua.py 1 2 3 4 5 6 7 8 9 10 11 12 \"\"\" \u627e\u51fa\u6240\u6709\u6c34\u4ed9\u82b1\u6570 Version: 0.1 Author: \u9a86\u660a \"\"\" for num in range ( 100 , 1000 ): low = num % 10 mid = num // 10 % 10 high = num // 100 if num == low ** 3 + mid ** 3 + high ** 3 : print ( num ) \u4e0a\u9762\u5229\u7528 // \u548c % \u62c6\u5206\u4e00\u4e2a\u6570\u7684\u5c0f\u6280\u5de7\u5728\u5199\u4ee3\u7801\u7684\u65f6\u5019\u8fd8\u662f\u5f88\u5e38\u7528\u7684\u3002\u6211\u4eec\u8981\u5c06\u4e00\u4e2a\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u4f4d\u7684\u6b63\u6574\u6570\u8fdb\u884c\u53cd\u8f6c\uff0c\u4f8b\u5982\u5c06 12345 \u53d8\u6210 54321 \uff0c\u4e5f\u53ef\u4ee5\u5229\u7528\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u6765\u5b9e\u73b0\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \"\"\" \u6b63\u6574\u6570\u7684\u53cd\u8f6c Version: 0.1 Author: \u9a86\u660a \"\"\" num = int ( input ( 'num = ' )) reversed_num = 0 while num > 0 : reversed_num = reversed_num * 10 + num % 10 num //= 10 print ( reversed_num )","title":"\u4f8b\u5b501\uff1a\u5bfb\u627e\u6c34\u4ed9\u82b1\u6570\u3002"},{"location":"%E7%AC%AC07%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%9A%84%E5%BA%94%E7%94%A8/#2","text":"\u8bf4\u660e \uff1a\u767e\u94b1\u767e\u9e21\u662f\u6211\u56fd\u53e4\u4ee3\u6570\u5b66\u5bb6 \u5f20\u4e18\u5efa \u5728\u300a\u7b97\u7ecf\u300b\u4e00\u4e66\u4e2d\u63d0\u51fa\u7684\u6570\u5b66\u95ee\u9898\uff1a\u9e21\u7fc1\u4e00\u503c\u94b1\u4e94\uff0c\u9e21\u6bcd\u4e00\u503c\u94b1\u4e09\uff0c\u9e21\u96cf\u4e09\u503c\u94b1\u4e00\u3002\u767e\u94b1\u4e70\u767e\u9e21\uff0c\u95ee\u9e21\u7fc1\u3001\u9e21\u6bcd\u3001\u9e21\u96cf\u5404\u51e0\u4f55\uff1f\u7ffb\u8bd1\u6210\u73b0\u4ee3\u6587\u662f\uff1a\u516c\u9e215\u5143\u4e00\u53ea\uff0c\u6bcd\u9e213\u5143\u4e00\u53ea\uff0c\u5c0f\u9e211\u5143\u4e09\u53ea\uff0c\u7528100\u5757\u94b1\u4e70\u4e00\u767e\u53ea\u9e21\uff0c\u95ee\u516c\u9e21\u3001\u6bcd\u9e21\u3001\u5c0f\u9e21\u5404\u6709\u591a\u5c11\u53ea\uff1f \"\"\" \u300a\u767e\u94b1\u767e\u9e21\u300b\u95ee\u9898 Version: 0.1 Author: \u9a86\u660a \"\"\" # \u5047\u8bbe\u516c\u9e21\u7684\u6570\u91cf\u4e3ax\uff0cx\u7684\u53d6\u503c\u8303\u56f4\u662f0\u523020 for x in range ( 0 , 21 ): # \u5047\u8bbe\u6bcd\u9e21\u7684\u6570\u91cf\u4e3ay\uff0cy\u7684\u53d6\u503c\u8303\u56f4\u662f0\u523033 for y in range ( 0 , 34 ): z = 100 - x - y if 5 * x + 3 * y + z // 3 == 100 and z % 3 == 0 : print ( f '\u516c\u9e21: { x } \u53ea, \u6bcd\u9e21: { y } \u53ea, \u5c0f\u9e21: { z } \u53ea' ) \u4e0a\u9762\u4f7f\u7528\u7684\u65b9\u6cd5\u53eb\u505a \u7a77\u4e3e\u6cd5 \uff0c\u4e5f\u79f0\u4e3a \u66b4\u529b\u641c\u7d22\u6cd5 \uff0c\u8fd9\u79cd\u65b9\u6cd5\u901a\u8fc7\u4e00\u9879\u4e00\u9879\u7684\u5217\u4e3e\u5907\u9009\u89e3\u51b3\u65b9\u6848\u4e2d\u6240\u6709\u53ef\u80fd\u7684\u5019\u9009\u9879\u5e76\u68c0\u67e5\u6bcf\u4e2a\u5019\u9009\u9879\u662f\u5426\u7b26\u5408\u95ee\u9898\u7684\u63cf\u8ff0\uff0c\u6700\u7ec8\u5f97\u5230\u95ee\u9898\u7684\u89e3\u3002\u8fd9\u79cd\u65b9\u6cd5\u770b\u8d77\u6765\u6bd4\u8f83\u7b28\u62d9\uff0c\u4f46\u5bf9\u4e8e\u8fd0\u7b97\u80fd\u529b\u975e\u5e38\u5f3a\u5927\u7684\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u901a\u5e38\u90fd\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u751a\u81f3\u662f\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u53ea\u8981\u95ee\u9898\u7684\u89e3\u5b58\u5728\u5c31\u80fd\u591f\u627e\u5230\u5b83\u3002","title":"\u4f8b\u5b502\uff1a\u767e\u94b1\u767e\u9e21\u95ee\u9898\u3002"},{"location":"%E7%AC%AC07%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%9A%84%E5%BA%94%E7%94%A8/#3craps","text":"\u8bf4\u660e \uff1aCRAPS\u53c8\u79f0\u82b1\u65d7\u9ab0\uff0c\u662f\u7f8e\u56fd\u62c9\u65af\u7ef4\u52a0\u65af\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u4e00\u79cd\u7684\u684c\u4e0a\u8d4c\u535a\u6e38\u620f\u3002\u8be5\u6e38\u620f\u4f7f\u7528\u4e24\u7c92\u9ab0\u5b50\uff0c\u73a9\u5bb6\u901a\u8fc7\u6447\u4e24\u7c92\u9ab0\u5b50\u83b7\u5f97\u70b9\u6570\u8fdb\u884c\u6e38\u620f\u3002\u7b80\u5316\u540e\u7684\u89c4\u5219\u662f\uff1a\u73a9\u5bb6\u7b2c\u4e00\u6b21\u6447\u9ab0\u5b50\u5982\u679c\u6447\u51fa\u4e867\u70b9\u621611\u70b9\uff0c\u73a9\u5bb6\u80dc\uff1b\u73a9\u5bb6\u7b2c\u4e00\u6b21\u5982\u679c\u6447\u51fa2\u70b9\u30013\u70b9\u621612\u70b9\uff0c\u5e84\u5bb6\u80dc\uff1b\u73a9\u5bb6\u5982\u679c\u6447\u51fa\u5176\u4ed6\u70b9\u6570\u5219\u73a9\u5bb6\u7ee7\u7eed\u6447\u9ab0\u5b50\uff0c\u5982\u679c\u73a9\u5bb6\u6447\u51fa\u4e867\u70b9\uff0c\u5e84\u5bb6\u80dc\uff1b\u5982\u679c\u73a9\u5bb6\u6447\u51fa\u4e86\u7b2c\u4e00\u6b21\u6447\u7684\u70b9\u6570\uff0c\u73a9\u5bb6\u80dc\uff1b\u5176\u4ed6\u70b9\u6570\u73a9\u5bb6\u7ee7\u7eed\u6447\u9ab0\u5b50\uff0c\u76f4\u5230\u5206\u51fa\u80dc\u8d1f\u3002 \"\"\" Craps\u8d4c\u535a\u6e38\u620f \u6211\u4eec\u8bbe\u5b9a\u6e38\u620f\u5f00\u59cb\u65f6\u73a9\u5bb6\u67091000\u5143\u7684\u8d4c\u6ce8 \u6e38\u620f\u7ed3\u675f\u7684\u6761\u4ef6\u662f\u73a9\u5bb6\u7834\u4ea7\uff08\u8f93\u5149\u6240\u6709\u7684\u8d4c\u6ce8\uff09 Version: 0.1 Author: \u9a86\u660a \"\"\" from random import randint money = 1000 while money > 0 : print ( f '\u4f60\u7684\u603b\u8d44\u4ea7\u4e3a: { money } \u5143' ) go_on = False # \u4e0b\u6ce8\u91d1\u989d\u5fc5\u987b\u5927\u4e8e0\u5c0f\u4e8e\u7b49\u4e8e\u73a9\u5bb6\u603b\u8d44\u4ea7 while True : debt = int ( input ( '\u8bf7\u4e0b\u6ce8: ' )) if 0 < debt <= money : break # \u7b2c\u4e00\u6b21\u6447\u8272\u5b50 # \u75281\u52306\u5747\u5300\u5206\u5e03\u7684\u968f\u673a\u6570\u6a21\u62df\u6447\u8272\u5b50\u5f97\u5230\u7684\u70b9\u6570 first = randint ( 1 , 6 ) + randint ( 1 , 6 ) print ( f ' \\n \u73a9\u5bb6\u6447\u51fa\u4e86 { first } \u70b9' ) if first == 7 or first == 11 : print ( '\u73a9\u5bb6\u80dc! \\n ' ) money += debt elif first == 2 or first == 3 or first == 12 : print ( '\u5e84\u5bb6\u80dc! \\n ' ) money -= debt else : go_on = True # \u7b2c\u4e00\u6b21\u6447\u8272\u5b50\u6ca1\u6709\u5206\u51fa\u80dc\u8d1f\u6e38\u620f\u7ee7\u7eed while go_on : go_on = False current = randint ( 1 , 6 ) + randint ( 1 , 6 ) print ( f '\u73a9\u5bb6\u6447\u51fa\u4e86 { current } \u70b9' ) if current == 7 : print ( '\u5e84\u5bb6\u80dc! \\n ' ) money -= debt elif current == first : print ( '\u73a9\u5bb6\u80dc! \\n ' ) money += debt else : go_on = True print ( '\u4f60\u7834\u4ea7\u4e86, \u6e38\u620f\u7ed3\u675f!' )","title":"\u4f8b\u5b503\uff1aCRAPS\u8d4c\u535a\u6e38\u620f\u3002"},{"location":"%E7%AC%AC07%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%9A%84%E5%BA%94%E7%94%A8/#4","text":"\u8bf4\u660e \uff1a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff08Fibonacci sequence\uff09\uff0c\u901a\u5e38\u4e5f\u88ab\u79f0\u4f5c\u9ec4\u91d1\u5206\u5272\u6570\u5217\uff0c\u662f\u610f\u5927\u5229\u6570\u5b66\u5bb6\u83b1\u6602\u7eb3\u591a\u00b7\u6590\u6ce2\u90a3\u5951\uff08Leonardoda Fibonacci\uff09\u5728\u300a\u8ba1\u7b97\u4e4b\u4e66\u300b\u4e2d\u7814\u7a76\u5728\u7406\u60f3\u5047\u8bbe\u6761\u4ef6\u4e0b\u5154\u5b50\u6210\u957f\u7387\u95ee\u9898\u800c\u5f15\u5165\u7684\u6570\u5217\uff0c\u56e0\u6b64\u8fd9\u4e2a\u6570\u5217\u4e5f\u5e38\u88ab\u620f\u79f0\u4e3a\u201c\u5154\u5b50\u6570\u5217\u201d\u3002\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u7279\u70b9\u662f\u6570\u5217\u7684\u524d\u4e24\u4e2a\u6570\u90fd\u662f1\uff0c\u4ece\u7b2c\u4e09\u4e2a\u6570\u5f00\u59cb\uff0c\u6bcf\u4e2a\u6570\u90fd\u662f\u5b83\u524d\u9762\u4e24\u4e2a\u6570\u7684\u548c\uff0c\u6309\u7167\u8fd9\u4e2a\u89c4\u5f8b\uff0c\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u524d10\u4e2a\u6570\u662f\uff1a 1, 1, 2, 3, 5, 8, 13, 21, 34, 55 \u3002\u6590\u6ce2\u90a3\u5951\u6570\u5217\u5728\u73b0\u4ee3\u7269\u7406\u3001\u51c6\u6676\u4f53\u7ed3\u6784\u3001\u5316\u5b66\u7b49\u9886\u57df\u90fd\u6709\u76f4\u63a5\u7684\u5e94\u7528\u3002 \"\"\" \u8f93\u51fa\u6590\u6ce2\u90a3\u5951\u6570\u5217\u524d20\u4e2a\u6570 Version: 0.1 Author: \u9a86\u660a \"\"\" a , b = 0 , 1 for _ in range ( 20 ): a , b = b , a + b print ( a )","title":"\u4f8b\u5b504\uff1a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u3002"},{"location":"%E7%AC%AC07%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%9A%84%E5%BA%94%E7%94%A8/#5100","text":"\u8bf4\u660e \uff1a\u7d20\u6570\u6307\u7684\u662f\u53ea\u80fd\u88ab1\u548c\u81ea\u8eab\u6574\u9664\u7684\u6b63\u6574\u6570\uff08\u4e0d\u5305\u62ec1\uff09\u3002 \"\"\" \u8f93\u51fa100\u4ee5\u5185\u7684\u7d20\u6570 Version: 0.1 Author: \u9a86\u660a \"\"\" for num in range ( 2 , 100 ): # \u5047\u8bbenum\u662f\u7d20\u6570 is_prime = True # \u57282\u5230num-1\u4e4b\u95f4\u627enum\u7684\u56e0\u5b50 for factor in range ( 2 , num ): # \u5982\u679c\u627e\u5230\u4e86num\u7684\u56e0\u5b50\uff0cnum\u5c31\u4e0d\u662f\u7d20\u6570 if num % factor == 0 : is_prime = False break # \u5982\u679c\u5e03\u5c14\u503c\u4e3aTrue\u5728num\u662f\u7d20\u6570 if is_prime : print ( num )","title":"\u4f8b\u5b505\uff1a\u6253\u5370100\u4ee5\u5185\u7684\u7d20\u6570\u3002"},{"location":"%E7%AC%AC07%E8%AF%BE%EF%BC%9A%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E7%9A%84%E5%BA%94%E7%94%A8/#_2","text":"\u8fd8\u662f\u90a3\u53e5\u8bdd\uff1a \u5206\u652f\u7ed3\u6784\u548c\u5faa\u73af\u7ed3\u6784\u975e\u5e38\u91cd\u8981 \uff0c\u662f\u6784\u9020\u7a0b\u5e8f\u903b\u8f91\u7684\u57fa\u7840\uff0c \u4e00\u5b9a\u8981\u901a\u8fc7\u5927\u91cf\u7684\u7ec3\u4e60\u6765\u8fbe\u5230\u878d\u4f1a\u8d2f\u901a \u3002\u521a\u624d\u8bb2\u5230\u7684CRAPS\u8d4c\u535a\u6e38\u620f\u90a3\u4e2a\u4f8b\u5b50\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u6807\u51c6\uff0c\u5982\u679c\u4f60\u80fd\u5f88\u987a\u5229\u7684\u5b8c\u6210\u8fd9\u6bb5\u4ee3\u7801\uff0c\u90a3\u4e48\u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u7684\u77e5\u8bc6\u4f60\u5c31\u5df2\u7ecf\u638c\u63e1\u4e86\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC08%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%97%E8%A1%A8/","text":"\u7b2c08\u8bfe\uff1a\u5e38\u7528\u6570\u636e\u7ed3\u6784\u4e4b\u5217\u8868 \u5728\u5f00\u59cb\u672c\u8282\u8bfe\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u7ed9\u5927\u5bb6\u4e00\u4e2a\u7f16\u7a0b\u4efb\u52a1\uff0c\u5c06\u4e00\u9897\u8272\u5b50\u63b7 6000 \u6b21\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002\u8fd9\u4e2a\u4efb\u52a1\u5bf9\u5927\u5bb6\u6765\u8bf4\u5e94\u8be5\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 1 \u5230 6 \u5747\u5300\u5206\u5e03\u7684\u968f\u673a\u6570\u6765\u6a21\u62df\u63b7\u8272\u5b50\uff0c\u7136\u540e\u7528 6 \u4e2a\u53d8\u91cf\u5206\u522b\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u80fd\u5199\u51fa\u4e0b\u9762\u7684\u4ee3\u7801\u3002 import random f1 = 0 f2 = 0 f3 = 0 f4 = 0 f5 = 0 f6 = 0 for _ in range ( 6000 ): face = random . randint ( 1 , 6 ) if face == 1 : f1 += 1 elif face == 2 : f2 += 1 elif face == 3 : f3 += 1 elif face == 4 : f4 += 1 elif face == 5 : f5 += 1 else : f6 += 1 print ( f '1\u70b9\u51fa\u73b0\u4e86 { f1 } \u6b21' ) print ( f '2\u70b9\u51fa\u73b0\u4e86 { f2 } \u6b21' ) print ( f '3\u70b9\u51fa\u73b0\u4e86 { f3 } \u6b21' ) print ( f '4\u70b9\u51fa\u73b0\u4e86 { f4 } \u6b21' ) print ( f '5\u70b9\u51fa\u73b0\u4e86 { f5 } \u6b21' ) print ( f '6\u70b9\u51fa\u73b0\u4e86 { f6 } \u6b21' ) \u770b\u770b\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u76f8\u4fe1\u5927\u5bb6\u4e00\u5b9a\u89c9\u5f97\u5b83\u975e\u5e38\u7684\u201c\u7b28\u91cd\u201d\u548c\u201c\u4e11\u964b\u201d\uff0c\u66f4\u53ef\u6015\u7684\u662f\uff0c\u5982\u679c\u8981\u7edf\u8ba1\u63b7\u4e24\u9897\u6216\u8005\u66f4\u591a\u7684\u8272\u5b50\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u90a3\u5c31\u9700\u8981\u5b9a\u4e49\u66f4\u591a\u7684\u53d8\u91cf\uff0c\u5199\u66f4\u591a\u7684\u5206\u652f\u7ed3\u6784\u3002\u8bb2\u5230\u8fd9\u91cc\uff0c\u76f8\u4fe1\u5927\u5bb6\u4e00\u5b9a\u60f3\u95ee\uff1a\u6709\u6ca1\u6709\u529e\u6cd5\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u4fdd\u5b58\u591a\u4e2a\u6570\u636e\uff0c\u6709\u6ca1\u6709\u529e\u6cd5\u7528\u7edf\u4e00\u7684\u4ee3\u7801\u5bf9\u591a\u4e2a\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u5728Python\u4e2d\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bb9\u5668\u7c7b\u578b\u7684\u53d8\u91cf\u6765\u4fdd\u5b58\u548c\u64cd\u4f5c\u591a\u4e2a\u6570\u636e\uff0c\u6211\u4eec\u9996\u5148\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5217\u8868\uff08list\uff09\u8fd9\u79cd\u65b0\u7684\u6570\u636e\u7c7b\u578b\u3002 \u5b9a\u4e49\u548c\u4f7f\u7528\u5217\u8868 \u5728Python\u4e2d\uff0c \u5217\u8868\u662f\u7531\u4e00\u7cfb\u5143\u7d20\u6309\u7279\u5b9a\u987a\u5e8f\u6784\u6210\u7684\u6570\u636e\u5e8f\u5217 \uff0c\u8fd9\u6837\u5c31\u610f\u5473\u7740\u5b9a\u4e49\u4e00\u4e2a\u5217\u8868\u7c7b\u578b\u7684\u53d8\u91cf\uff0c \u53ef\u4ee5\u4fdd\u5b58\u591a\u4e2a\u6570\u636e \uff0c\u800c\u4e14 \u5141\u8bb8\u6709\u91cd\u590d\u7684\u6570\u636e \u3002\u8ddf\u4e0a\u4e00\u8bfe\u6211\u4eec\u8bb2\u5230\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u4e00\u6837\uff0c\u5217\u8868\u4e5f\u662f\u4e00\u79cd\u7ed3\u6784\u5316\u7684\u3001\u975e\u6807\u91cf\u7c7b\u578b\uff0c\u64cd\u4f5c\u4e00\u4e2a\u5217\u8868\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u9664\u4e86\u53ef\u4ee5\u4f7f\u7528\u8fd0\u7b97\u7b26\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5b83\u7684\u65b9\u6cd5\u3002 \u5728Python\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 [] \u5b57\u9762\u91cf\u8bed\u6cd5\u6765\u5b9a\u4e49\u5217\u8868\uff0c\u5217\u8868\u4e2d\u7684\u591a\u4e2a\u5143\u7d20\u7528\u9017\u53f7\u8fdb\u884c\u5206\u9694\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 items1 = [ 35 , 12 , 99 , 68 , 55 , 87 ] items2 = [ 'Python' , 'Java' , 'Go' , 'Kotlin' ] \u9664\u6b64\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7Python\u5185\u7f6e\u7684 list \u51fd\u6570\u5c06\u5176\u4ed6\u5e8f\u5217\u53d8\u6210\u5217\u8868\u3002\u51c6\u786e\u7684\u8bf4\uff0c list \u5e76\u4e0d\u662f\u4e00\u4e2a\u666e\u901a\u7684\u51fd\u6570\uff0c\u5b83\u662f\u521b\u5efa\u5217\u8868\u5bf9\u8c61\u7684\u6784\u9020\u5668\uff08\u540e\u9762\u4f1a\u8bb2\u5230\u5bf9\u8c61\u548c\u6784\u9020\u5668\u8fd9\u4e24\u4e2a\u6982\u5ff5\uff09\u3002 items1 = list ( range ( 1 , 10 )) print ( items1 ) # [1, 2, 3, 4, 5, 6, 7, 8, 9] items2 = list ( 'hello' ) print ( items2 ) # ['h', 'e', 'l', 'l', 'o'] \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5217\u8868\u662f\u4e00\u79cd\u53ef\u53d8\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u8bf4\u5217\u8868\u53ef\u4ee5\u6dfb\u52a0\u5143\u7d20\u3001\u5220\u9664\u5143\u7d20\u3001\u66f4\u65b0\u5143\u7d20\uff0c\u8fd9\u4e00\u70b9\u8ddf\u6211\u4eec\u4e0a\u4e00\u8bfe\u8bb2\u5230\u7684\u5b57\u7b26\u4e32\u6709\u7740\u9c9c\u660e\u7684\u5dee\u522b\u3002\u5b57\u7b26\u4e32\u662f\u4e00\u79cd\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u5b57\u7b26\u4e32\u505a\u62fc\u63a5\u3001\u91cd\u590d\u3001\u8f6c\u6362\u5927\u5c0f\u5199\u3001\u4fee\u526a\u7a7a\u683c\u7b49\u64cd\u4f5c\u7684\u65f6\u5019\u4f1a\u4ea7\u751f\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u539f\u6765\u7684\u5b57\u7b26\u4e32\u5e76\u6ca1\u6709\u53d1\u751f\u4efb\u4f55\u6539\u53d8\u3002 \u5217\u8868\u7684\u8fd0\u7b97\u7b26 \u548c\u5b57\u7b26\u4e32\u7c7b\u578b\u4e00\u6837\uff0c\u5217\u8868\u4e5f\u652f\u6301\u62fc\u63a5\u3001\u91cd\u590d\u3001\u6210\u5458\u8fd0\u7b97\u3001\u7d22\u5f15\u548c\u5207\u7247\u4ee5\u53ca\u6bd4\u8f83\u8fd0\u7b97\uff0c\u5bf9\u6b64\u6211\u4eec\u4e0d\u518d\u8fdb\u884c\u8d58\u8ff0\uff0c\u8bf7\u5927\u5bb6\u53c2\u8003\u4e0b\u9762\u7684\u4ee3\u7801\u3002 items1 = [ 35 , 12 , 99 , 68 , 55 , 87 ] items2 = [ 45 , 8 , 29 ] # \u5217\u8868\u7684\u62fc\u63a5 items3 = items1 + items2 print ( items3 ) # [35, 12, 99, 68, 55, 87, 45, 8, 29] # \u5217\u8868\u7684\u91cd\u590d items4 = [ 'hello' ] * 3 print ( items4 ) # ['hello', 'hello', 'hello'] # \u5217\u8868\u7684\u6210\u5458\u8fd0\u7b97 print ( 100 in items3 ) # False print ( 'hello' in items4 ) # True # \u83b7\u53d6\u5217\u8868\u7684\u957f\u5ea6(\u5143\u7d20\u4e2a\u6570) size = len ( items3 ) print ( size ) # 9 # \u5217\u8868\u7684\u7d22\u5f15 print ( items3 [ 0 ], items3 [ - size ]) # 35 35 items3 [ - 1 ] = 100 print ( items3 [ size - 1 ], items3 [ - 1 ]) # 100 100 # \u5217\u8868\u7684\u5207\u7247 print ( items3 [: 5 ]) # [35, 12, 99, 68, 55] print ( items3 [ 4 :]) # [55, 87, 45, 8, 100] print ( items3 [ - 5 : - 7 : - 1 ]) # [55, 68] print ( items3 [:: - 2 ]) # [100, 45, 55, 99, 35] # \u5217\u8868\u7684\u6bd4\u8f83\u8fd0\u7b97 items5 = [ 1 , 2 , 3 , 4 ] items6 = list ( range ( 1 , 5 )) # \u4e24\u4e2a\u5217\u8868\u6bd4\u8f83\u76f8\u7b49\u6027\u6bd4\u7684\u662f\u5bf9\u5e94\u7d22\u5f15\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u662f\u5426\u76f8\u7b49 print ( items5 == items6 ) # True items7 = [ 3 , 2 , 1 ] # \u4e24\u4e2a\u5217\u8868\u6bd4\u8f83\u5927\u5c0f\u6bd4\u7684\u662f\u5bf9\u5e94\u7d22\u5f15\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u7684\u5927\u5c0f print ( items5 <= items7 ) # True \u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u7531\u4e8e\u5217\u8868\u662f\u53ef\u53d8\u7c7b\u578b\uff0c\u6240\u4ee5\u901a\u8fc7\u7d22\u5f15\u64cd\u4f5c\u65e2\u53ef\u4ee5\u83b7\u53d6\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u4e5f\u53ef\u4ee5\u66f4\u65b0\u5217\u8868\u4e2d\u7684\u5143\u7d20\u3002\u5bf9\u5217\u8868\u505a\u7d22\u5f15\u64cd\u4f5c\u4e00\u6837\u8981\u6ce8\u610f\u7d22\u5f15\u8d8a\u754c\u7684\u95ee\u9898\uff0c\u5bf9\u4e8e\u6709 N \u4e2a\u5143\u7d20\u7684\u5217\u8868\uff0c\u6b63\u5411\u7d22\u5f15\u7684\u8303\u56f4\u662f 0 \u5230 N-1 \uff0c\u8d1f\u5411\u7d22\u5f15\u7684\u8303\u56f4\u662f -1 \u5230 -N \uff0c\u5982\u679c\u8d85\u51fa\u8fd9\u4e2a\u8303\u56f4\uff0c\u5c06\u5f15\u53d1 IndexError \u5f02\u5e38\uff0c\u9519\u8bef\u4fe1\u606f\u4e3a\uff1a list index out of range \u3002 \u5217\u8868\u5143\u7d20\u7684\u904d\u5386 \u5982\u679c\u60f3\u9010\u4e2a\u53d6\u51fa\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 for \u5faa\u73af\u7684\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u505a\u6cd5\u3002 \u65b9\u6cd5\u4e00\uff1a items = [ 'Python' , 'Java' , 'Go' , 'Kotlin' ] for index in range ( len ( items )): print ( items [ index ]) \u65b9\u6cd5\u4e8c\uff1a items = [ 'Python' , 'Java' , 'Go' , 'Kotlin' ] for item in items : print ( item ) \u8bb2\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5217\u8868\u7684\u77e5\u8bc6\u6765\u91cd\u6784\u4e0a\u9762\u201c\u63b7\u8272\u5b50\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u6570\u51fa\u73b0\u6b21\u6570\u201d\u7684\u4ee3\u7801\u3002 import random counters = [ 0 ] * 6 for _ in range ( 6000 ): face = random . randint ( 1 , 6 ) counters [ face - 1 ] += 1 for face in range ( 1 , 7 ): print ( f ' { face } \u70b9\u51fa\u73b0\u4e86 { counters [ face - 1 ] } \u6b21' ) \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u7528 counters \u5217\u8868\u4e2d\u7684\u516d\u4e2a\u5143\u7d20\u5206\u522b\u8868\u793a1\u52306\u7684\u70b9\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6700\u5f00\u59cb\u7684\u65f6\u5019\u516d\u4e2a\u5143\u7d20\u7684\u503c\u90fd\u662f 0 \u3002\u63a5\u4e0b\u6765\u7528\u968f\u673a\u6570\u6a21\u62df\u63b7\u8272\u5b50\uff0c\u5982\u679c\u6447\u51fa1\u70b9 counters[0] \u7684\u503c\u52a0 1 \uff0c\u5982\u679c\u6447\u51fa2\u70b9 counters[1] \u7684\u503c\u52a0 1 \uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u5927\u5bb6\u611f\u53d7\u4e00\u4e0b\uff0c\u8fd9\u6bb5\u4ee3\u7801\u662f\u4e0d\u662f\u6bd4\u4e4b\u524d\u7684\u4ee3\u7801\u8981\u7b80\u5355\u4f18\u96c5\u5f88\u591a\u3002 \u5217\u8868\u7684\u65b9\u6cd5 \u548c\u5b57\u7b26\u4e32\u4e00\u6837\uff0c\u5217\u8868\u7c7b\u578b\u7684\u65b9\u6cd5\u4e5f\u5f88\u591a\uff0c\u4e0b\u9762\u4e3a\u5927\u5bb6\u8bb2\u89e3\u6bd4\u8f83\u91cd\u8981\u7684\u65b9\u6cd5\u3002 \u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20 items = [ 'Python' , 'Java' , 'Go' , 'Kotlin' ] # \u4f7f\u7528append\u65b9\u6cd5\u5728\u5217\u8868\u5c3e\u90e8\u6dfb\u52a0\u5143\u7d20 items . append ( 'Swift' ) print ( items ) # ['Python', 'Java', 'Go', 'Kotlin', 'Swift'] # \u4f7f\u7528insert\u65b9\u6cd5\u5728\u5217\u8868\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20 items . insert ( 2 , 'SQL' ) print ( items ) # ['Python', 'Java', 'SQL', 'Go', 'Kotlin', 'Swift'] # \u5220\u9664\u6307\u5b9a\u7684\u5143\u7d20 items . remove ( 'Java' ) print ( items ) # ['Python', 'SQL', 'Go', 'Kotlin', 'Swift'] # \u5220\u9664\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u7684\u5143\u7d20 items . pop ( 0 ) items . pop ( len ( items ) - 1 ) print ( items ) # ['SQL', 'Go', 'Kotlin'] # \u6e05\u7a7a\u5217\u8868\u4e2d\u7684\u5143\u7d20 items . clear () print ( items ) # [] \u9700\u8981\u63d0\u9192\u5927\u5bb6\uff0c\u5728\u4f7f\u7528 remove \u65b9\u6cd5\u5220\u9664\u5143\u7d20\u65f6\uff0c\u5982\u679c\u8981\u5220\u9664\u7684\u5143\u7d20\u5e76\u4e0d\u5728\u5217\u8868\u4e2d\uff0c\u4f1a\u5f15\u53d1 ValueError \u5f02\u5e38\uff0c\u9519\u8bef\u6d88\u606f\u662f\uff1a list.remove(x): x not in list \u3002\u5728\u4f7f\u7528 pop \u65b9\u6cd5\u5220\u9664\u5143\u7d20\u65f6\uff0c\u5982\u679c\u7d22\u5f15\u7684\u503c\u8d85\u51fa\u4e86\u8303\u56f4\uff0c\u4f1a\u5f15\u53d1 IndexError \u5f02\u5e38\uff0c\u9519\u8bef\u6d88\u606f\u662f\uff1a pop index out of range \u3002 \u4ece\u5217\u8868\u4e2d\u5220\u9664\u5143\u7d20\u5176\u5b9e\u8fd8\u6709\u4e00\u79cd\u65b9\u5f0f\uff0c\u5c31\u662f\u4f7f\u7528Python\u4e2d\u7684 del \u5173\u952e\u5b57\u540e\u9762\u8ddf\u8981\u5220\u9664\u7684\u5143\u7d20\uff0c\u8fd9\u79cd\u505a\u6cd5\u8ddf\u4f7f\u7528 pop \u65b9\u6cd5\u6307\u5b9a\u7d22\u5f15\u5220\u9664\u5143\u7d20\u6ca1\u6709\u5b9e\u8d28\u6027\u7684\u533a\u522b\uff0c\u4f46\u540e\u8005\u4f1a\u8fd4\u56de\u5220\u9664\u7684\u5143\u7d20\uff0c\u524d\u8005\u5728\u6027\u80fd\u4e0a\u7565\u4f18\uff08 del \u5bf9\u5e94\u5b57\u8282\u7801\u6307\u4ee4\u662f DELETE_SUBSCR \uff0c\u800c pop \u5bf9\u5e94\u7684\u5b57\u8282\u7801\u6307\u4ee4\u662f CALL_METHOD \u548c POP_TOP \uff0c\u4e0d\u7406\u89e3\u5c31\u8df3\u8fc7\uff0c\u4e0d\u7528\u7ba1\u5b83\uff01\uff01\uff01\uff09\u3002 items = [ 'Python' , 'Java' , 'Go' , 'Kotlin' ] del items [ 1 ] print ( items ) # ['Python', 'Go', 'Kotlin'] \u5143\u7d20\u4f4d\u7f6e\u548c\u6b21\u6570 \u5217\u8868\u7c7b\u578b\u7684 index \u65b9\u6cd5\u53ef\u4ee5\u67e5\u627e\u67d0\u4e2a\u5143\u7d20\u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\uff1b\u56e0\u4e3a\u5217\u8868\u4e2d\u5141\u8bb8\u6709\u91cd\u590d\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u5217\u8868\u7c7b\u578b\u63d0\u4f9b\u4e86 count \u65b9\u6cd5\u6765\u7edf\u8ba1\u4e00\u4e2a\u5143\u7d20\u5728\u5217\u8868\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u3002 items = [ 'Python' , 'Java' , 'Java' , 'Go' , 'Kotlin' , 'Python' ] # \u67e5\u627e\u5143\u7d20\u7684\u7d22\u5f15\u4f4d\u7f6e print ( items . index ( 'Python' )) # 0 print ( items . index ( 'Python' , 2 )) # 5 # \u6ce8\u610f\uff1a\u867d\u7136\u5217\u8868\u4e2d\u6709'Java'\uff0c\u4f46\u662f\u4ece\u7d22\u5f15\u4e3a3\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u540e\u9762\u662f\u6ca1\u6709'Java'\u7684 print ( items . index ( 'Java' , 3 )) # ValueError: 'Java' is not in list \u518d\u6765\u770b\u770b\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u3002 items = [ 'Python' , 'Java' , 'Java' , 'Go' , 'Kotlin' , 'Python' ] # \u67e5\u627e\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570 print ( items . count ( 'Python' )) # 2 print ( items . count ( 'Go' )) # 1 print ( items . count ( 'Swfit' )) # 0 \u5143\u7d20\u6392\u5e8f\u548c\u53cd\u8f6c \u5217\u8868\u7684 sort \u64cd\u4f5c\u53ef\u4ee5\u5b9e\u73b0\u5217\u8868\u5143\u7d20\u7684\u6392\u5e8f\uff0c\u800c reverse \u64cd\u4f5c\u53ef\u4ee5\u5b9e\u73b0\u5143\u7d20\u7684\u53cd\u8f6c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 items = [ 'Python' , 'Java' , 'Go' , 'Kotlin' , 'Python' ] # \u6392\u5e8f items . sort () print ( items ) # ['Go', 'Java', 'Kotlin', 'Python', 'Python'] # \u53cd\u8f6c items . reverse () print ( items ) # ['Python', 'Python', 'Kotlin', 'Java', 'Go'] \u5217\u8868\u7684\u751f\u6210\u5f0f \u5728Python\u4e2d\uff0c\u5217\u8868\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e00\u79cd\u7279\u6b8a\u7684\u5b57\u9762\u91cf\u8bed\u6cd5\u6765\u521b\u5efa\uff0c\u8fd9\u79cd\u8bed\u6cd5\u53eb\u505a\u751f\u6210\u5f0f\u3002\u6211\u4eec\u7ed9\u51fa\u4e24\u6bb5\u4ee3\u7801\uff0c\u5927\u5bb6\u53ef\u4ee5\u505a\u4e00\u4e2a\u5bf9\u6bd4\uff0c\u770b\u770b\u54ea\u4e00\u79cd\u65b9\u5f0f\u66f4\u52a0\u7b80\u5355\u4f18\u96c5\u3002 \u901a\u8fc7 for \u5faa\u73af\u4e3a\u7a7a\u5217\u8868\u6dfb\u52a0\u5143\u7d20\u3002 # \u521b\u5efa\u4e00\u4e2a\u75311\u52309\u7684\u6570\u5b57\u6784\u6210\u7684\u5217\u8868 items1 = [] for x in range ( 1 , 10 ): items1 . append ( x ) print ( items1 ) # \u521b\u5efa\u4e00\u4e2a\u7531'hello world'\u4e2d\u9664\u7a7a\u683c\u548c\u5143\u97f3\u5b57\u6bcd\u5916\u7684\u5b57\u7b26\u6784\u6210\u7684\u5217\u8868 items2 = [] for x in 'hello world' : if x not in ' aeiou' : items2 . append ( x ) print ( items2 ) # \u521b\u5efa\u4e00\u4e2a\u7531\u4e2a\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u7b1b\u5361\u5c14\u79ef\u6784\u6210\u7684\u5217\u8868 items3 = [] for x in 'ABC' : for y in '12' : items3 . append ( x + y ) print ( items3 ) \u901a\u8fc7\u751f\u6210\u5f0f\u521b\u5efa\u5217\u8868\u3002 # \u521b\u5efa\u4e00\u4e2a\u75311\u52309\u7684\u6570\u5b57\u6784\u6210\u7684\u5217\u8868 items1 = [ x for x in range ( 1 , 10 )] print ( items1 ) # [1, 2, 3, 4, 5, 6, 7, 8, 9] # \u521b\u5efa\u4e00\u4e2a\u7531'hello world'\u4e2d\u9664\u7a7a\u683c\u548c\u5143\u97f3\u5b57\u6bcd\u5916\u7684\u5b57\u7b26\u6784\u6210\u7684\u5217\u8868 items2 = [ x for x in 'hello world' if x not in ' aeiou' ] print ( items2 ) # ['h', 'l', 'l', 'w', 'r', 'l', 'd'] # \u521b\u5efa\u4e00\u4e2a\u7531\u4e2a\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u7b1b\u5361\u5c14\u79ef\u6784\u6210\u7684\u5217\u8868 items3 = [ x + y for x in 'ABC' for y in '12' ] print ( items3 ) # ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'] \u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u4ec5\u4ee3\u7801\u7b80\u5355\u4f18\u96c5\uff0c\u800c\u4e14\u6027\u80fd\u4e5f\u4f18\u4e8e\u4e0a\u9762\u4f7f\u7528 for \u5faa\u73af\u548c append \u65b9\u6cd5\u5411\u7a7a\u5217\u8868\u4e2d\u8ffd\u52a0\u5143\u7d20\u7684\u65b9\u5f0f\u3002\u53ef\u4ee5\u7b80\u5355\u8ddf\u5927\u5bb6\u4ea4\u5f85\u4e0b\u4e3a\u4ec0\u4e48\u751f\u6210\u5f0f\u62e5\u6709\u66f4\u597d\u7684\u6027\u80fd\uff0c\u90a3\u662f\u56e0\u4e3aPython\u89e3\u91ca\u5668\u7684\u5b57\u8282\u7801\u6307\u4ee4\u4e2d\u6709\u4e13\u95e8\u9488\u5bf9\u751f\u6210\u5f0f\u7684\u6307\u4ee4\uff08 LIST_APPEND \u6307\u4ee4\uff09\uff1b\u800c for \u5faa\u73af\u662f\u901a\u8fc7\u65b9\u6cd5\u8c03\u7528\uff08 LOAD_METHOD \u548c CALL_METHOD \u6307\u4ee4\uff09\u7684\u65b9\u5f0f\u4e3a\u5217\u8868\u6dfb\u52a0\u5143\u7d20\uff0c\u65b9\u6cd5\u8c03\u7528\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u76f8\u5bf9\u8017\u65f6\u7684\u64cd\u4f5c\u3002\u5bf9\u8fd9\u4e00\u70b9\u4e0d\u7406\u89e3\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u8bb0\u4f4f\u201c \u5f3a\u70c8\u5efa\u8bae\u7528\u751f\u6210\u5f0f\u8bed\u6cd5\u6765\u521b\u5efa\u5217\u8868 \u201d\u8fd9\u4e2a\u7ed3\u8bba\u5c31\u53ef\u4ee5\u4e86\u3002 \u5d4c\u5957\u7684\u5217\u8868 Python\u8bed\u8a00\u6ca1\u6709\u9650\u5b9a\u5217\u8868\u4e2d\u7684\u5143\u7d20\u5fc5\u987b\u662f\u76f8\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u5217\u8868\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u4efb\u610f\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5f53\u7136\u4e5f\u5305\u62ec\u5217\u8868\u3002\u5982\u679c\u5217\u8868\u4e2d\u7684\u5143\u7d20\u53c8\u662f\u5217\u8868\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u5d4c\u5957\u7684\u5217\u8868\u3002\u5d4c\u5957\u7684\u5217\u8868\u53ef\u4ee5\u7528\u6765\u8868\u793a\u8868\u683c\u6216\u6570\u5b66\u4e0a\u7684\u77e9\u9635\uff0c\u4f8b\u5982\uff1a\u6211\u4eec\u60f3\u4fdd\u5b585\u4e2a\u5b66\u751f3\u95e8\u8bfe\u7a0b\u7684\u6210\u7ee9\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u4fdd\u5b585\u4e2a\u5143\u7d20\u7684\u5217\u8868\u4fdd\u5b585\u4e2a\u5b66\u751f\u7684\u4fe1\u606f\uff0c\u800c\u6bcf\u4e2a\u5217\u8868\u5143\u7d20\u53c8\u662f3\u4e2a\u5143\u7d20\u6784\u6210\u7684\u5217\u8868\uff0c\u5206\u522b\u4ee3\u88683\u95e8\u8bfe\u7a0b\u7684\u6210\u7ee9\u3002\u4f46\u662f\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u6709\u95ee\u9898\u7684\u3002 scores = [[ 0 ] * 3 ] * 5 print ( scores ) # [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]] \u770b\u4e0a\u53bb\u6211\u4eec\u597d\u50cf\u521b\u5efa\u4e86\u4e00\u4e2a 5 * 3 \u7684\u5d4c\u5957\u5217\u8868\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f53\u6211\u4eec\u5f55\u5165\u7b2c\u4e00\u4e2a\u5b66\u751f\u7684\u7b2c\u4e00\u95e8\u6210\u7ee9\u540e\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u770b\u770b\u4e0b\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u3002 # \u5d4c\u5957\u7684\u5217\u8868\u9700\u8981\u591a\u6b21\u7d22\u5f15\u64cd\u4f5c\u624d\u80fd\u83b7\u53d6\u5143\u7d20 scores [ 0 ][ 0 ] = 95 print ( scores ) # [[95, 0, 0], [95, 0, 0], [95, 0, 0], [95, 0, 0], [95, 0, 0]] \u6211\u4eec\u4e0d\u53bb\u8fc7\u591a\u7684\u89e3\u91ca\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u5982\u679c\u60f3\u6df1\u5165\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7 Python Tutor \u7f51\u7ad9\u7684\u53ef\u89c6\u5316\u4ee3\u7801\u6267\u884c\u529f\u80fd\uff0c\u770b\u770b\u521b\u5efa\u5217\u8868\u65f6\u8ba1\u7b97\u673a\u5185\u5b58\u4e2d\u53d1\u751f\u4e86\u600e\u6837\u7684\u53d8\u5316\uff0c\u4e0b\u9762\u7684\u56fe\u5c31\u662f\u5728\u8fd9\u4e2a\u7f51\u7ad9\u4e0a\u751f\u6210\u7684\u3002\u5efa\u8bae\u5927\u5bb6\u4e0d\u53bb\u7ea0\u7ed3\u8fd9\u4e2a\u95ee\u9898\uff0c\u73b0\u9636\u6bb5\u53ea\u9700\u8981\u8bb0\u4f4f\u4e0d\u80fd\u7528 [[0] * 3] * 5] \u8fd9\u79cd\u65b9\u5f0f\u6765\u521b\u5efa\u5d4c\u5957\u5217\u8868\u5c31\u884c\u4e86\u3002\u90a3\u4e48\u521b\u5efa\u5d4c\u5957\u5217\u8868\u7684\u6b63\u786e\u505a\u6cd5\u662f\u4ec0\u4e48\u5462\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u7ed9\u4f60\u7b54\u6848\u3002 scores = [[ 0 ] * 3 for _ in range ( 5 )] scores [ 0 ][ 0 ] = 95 print ( scores ) # [[95, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]] \u7b80\u5355\u7684\u603b\u7ed3 Python\u4e2d\u7684\u5217\u8868\u5e95\u5c42\u662f\u4e00\u4e2a\u53ef\u4ee5\u52a8\u6001\u6269\u5bb9\u7684\u6570\u7ec4\uff0c\u5217\u8868\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u4e5f\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b9e\u73b0\u968f\u673a\u8bbf\u95ee\uff08\u901a\u8fc7\u4e00\u4e2a\u6709\u6548\u7684\u7d22\u5f15\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u5143\u7d20\u4e14\u64cd\u4f5c\u65f6\u95f4\u4e0e\u5217\u8868\u5143\u7d20\u4e2a\u6570\u65e0\u5173\uff09\u3002\u6211\u4eec\u6682\u65f6\u4e0d\u53bb\u89e6\u78b0\u8fd9\u4e9b\u5e95\u5c42\u5b58\u50a8\u7ec6\u8282\u4ee5\u53ca\u5217\u8868\u6bcf\u4e2a\u65b9\u6cd5\u7684\u6e10\u8fd1\u65f6\u95f4\u590d\u6742\u5ea6\uff08\u6267\u884c\u8fd9\u4e2a\u65b9\u6cd5\u8017\u8d39\u7684\u65f6\u95f4\u8ddf\u5217\u8868\u5143\u7d20\u4e2a\u6570\u7684\u5173\u7cfb\uff09\uff0c\u7b49\u9700\u8981\u7684\u65f6\u5019\u518d\u544a\u8bc9\u5927\u5bb6\u3002\u73b0\u9636\u6bb5\uff0c\u5927\u5bb6\u53ea\u9700\u8981\u77e5\u9053 \u5217\u8868\u662f\u5bb9\u5668 \uff0c\u53ef\u4ee5 \u4fdd\u5b58\u5404\u79cd\u7c7b\u578b\u7684\u6570\u636e \uff0c \u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u64cd\u4f5c\u5217\u8868\u5143\u7d20 \uff0c\u77e5\u9053\u8fd9\u4e9b\u5c31\u8db3\u591f\u4e86\u3002","title":"\u7b2c08\u8bfe\uff1a\u5e38\u7528\u6570\u636e\u7ed3\u6784\u4e4b\u5217\u8868"},{"location":"%E7%AC%AC08%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%97%E8%A1%A8/#08","text":"\u5728\u5f00\u59cb\u672c\u8282\u8bfe\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u7ed9\u5927\u5bb6\u4e00\u4e2a\u7f16\u7a0b\u4efb\u52a1\uff0c\u5c06\u4e00\u9897\u8272\u5b50\u63b7 6000 \u6b21\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002\u8fd9\u4e2a\u4efb\u52a1\u5bf9\u5927\u5bb6\u6765\u8bf4\u5e94\u8be5\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 1 \u5230 6 \u5747\u5300\u5206\u5e03\u7684\u968f\u673a\u6570\u6765\u6a21\u62df\u63b7\u8272\u5b50\uff0c\u7136\u540e\u7528 6 \u4e2a\u53d8\u91cf\u5206\u522b\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u80fd\u5199\u51fa\u4e0b\u9762\u7684\u4ee3\u7801\u3002 import random f1 = 0 f2 = 0 f3 = 0 f4 = 0 f5 = 0 f6 = 0 for _ in range ( 6000 ): face = random . randint ( 1 , 6 ) if face == 1 : f1 += 1 elif face == 2 : f2 += 1 elif face == 3 : f3 += 1 elif face == 4 : f4 += 1 elif face == 5 : f5 += 1 else : f6 += 1 print ( f '1\u70b9\u51fa\u73b0\u4e86 { f1 } \u6b21' ) print ( f '2\u70b9\u51fa\u73b0\u4e86 { f2 } \u6b21' ) print ( f '3\u70b9\u51fa\u73b0\u4e86 { f3 } \u6b21' ) print ( f '4\u70b9\u51fa\u73b0\u4e86 { f4 } \u6b21' ) print ( f '5\u70b9\u51fa\u73b0\u4e86 { f5 } \u6b21' ) print ( f '6\u70b9\u51fa\u73b0\u4e86 { f6 } \u6b21' ) \u770b\u770b\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u76f8\u4fe1\u5927\u5bb6\u4e00\u5b9a\u89c9\u5f97\u5b83\u975e\u5e38\u7684\u201c\u7b28\u91cd\u201d\u548c\u201c\u4e11\u964b\u201d\uff0c\u66f4\u53ef\u6015\u7684\u662f\uff0c\u5982\u679c\u8981\u7edf\u8ba1\u63b7\u4e24\u9897\u6216\u8005\u66f4\u591a\u7684\u8272\u5b50\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u90a3\u5c31\u9700\u8981\u5b9a\u4e49\u66f4\u591a\u7684\u53d8\u91cf\uff0c\u5199\u66f4\u591a\u7684\u5206\u652f\u7ed3\u6784\u3002\u8bb2\u5230\u8fd9\u91cc\uff0c\u76f8\u4fe1\u5927\u5bb6\u4e00\u5b9a\u60f3\u95ee\uff1a\u6709\u6ca1\u6709\u529e\u6cd5\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u4fdd\u5b58\u591a\u4e2a\u6570\u636e\uff0c\u6709\u6ca1\u6709\u529e\u6cd5\u7528\u7edf\u4e00\u7684\u4ee3\u7801\u5bf9\u591a\u4e2a\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u5728Python\u4e2d\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bb9\u5668\u7c7b\u578b\u7684\u53d8\u91cf\u6765\u4fdd\u5b58\u548c\u64cd\u4f5c\u591a\u4e2a\u6570\u636e\uff0c\u6211\u4eec\u9996\u5148\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5217\u8868\uff08list\uff09\u8fd9\u79cd\u65b0\u7684\u6570\u636e\u7c7b\u578b\u3002","title":"\u7b2c08\u8bfe\uff1a\u5e38\u7528\u6570\u636e\u7ed3\u6784\u4e4b\u5217\u8868"},{"location":"%E7%AC%AC08%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%97%E8%A1%A8/#_1","text":"\u5728Python\u4e2d\uff0c \u5217\u8868\u662f\u7531\u4e00\u7cfb\u5143\u7d20\u6309\u7279\u5b9a\u987a\u5e8f\u6784\u6210\u7684\u6570\u636e\u5e8f\u5217 \uff0c\u8fd9\u6837\u5c31\u610f\u5473\u7740\u5b9a\u4e49\u4e00\u4e2a\u5217\u8868\u7c7b\u578b\u7684\u53d8\u91cf\uff0c \u53ef\u4ee5\u4fdd\u5b58\u591a\u4e2a\u6570\u636e \uff0c\u800c\u4e14 \u5141\u8bb8\u6709\u91cd\u590d\u7684\u6570\u636e \u3002\u8ddf\u4e0a\u4e00\u8bfe\u6211\u4eec\u8bb2\u5230\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u4e00\u6837\uff0c\u5217\u8868\u4e5f\u662f\u4e00\u79cd\u7ed3\u6784\u5316\u7684\u3001\u975e\u6807\u91cf\u7c7b\u578b\uff0c\u64cd\u4f5c\u4e00\u4e2a\u5217\u8868\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u9664\u4e86\u53ef\u4ee5\u4f7f\u7528\u8fd0\u7b97\u7b26\u8fd8\u53ef\u4ee5\u4f7f\u7528\u5b83\u7684\u65b9\u6cd5\u3002 \u5728Python\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 [] \u5b57\u9762\u91cf\u8bed\u6cd5\u6765\u5b9a\u4e49\u5217\u8868\uff0c\u5217\u8868\u4e2d\u7684\u591a\u4e2a\u5143\u7d20\u7528\u9017\u53f7\u8fdb\u884c\u5206\u9694\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 items1 = [ 35 , 12 , 99 , 68 , 55 , 87 ] items2 = [ 'Python' , 'Java' , 'Go' , 'Kotlin' ] \u9664\u6b64\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7Python\u5185\u7f6e\u7684 list \u51fd\u6570\u5c06\u5176\u4ed6\u5e8f\u5217\u53d8\u6210\u5217\u8868\u3002\u51c6\u786e\u7684\u8bf4\uff0c list \u5e76\u4e0d\u662f\u4e00\u4e2a\u666e\u901a\u7684\u51fd\u6570\uff0c\u5b83\u662f\u521b\u5efa\u5217\u8868\u5bf9\u8c61\u7684\u6784\u9020\u5668\uff08\u540e\u9762\u4f1a\u8bb2\u5230\u5bf9\u8c61\u548c\u6784\u9020\u5668\u8fd9\u4e24\u4e2a\u6982\u5ff5\uff09\u3002 items1 = list ( range ( 1 , 10 )) print ( items1 ) # [1, 2, 3, 4, 5, 6, 7, 8, 9] items2 = list ( 'hello' ) print ( items2 ) # ['h', 'e', 'l', 'l', 'o'] \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5217\u8868\u662f\u4e00\u79cd\u53ef\u53d8\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u8bf4\u5217\u8868\u53ef\u4ee5\u6dfb\u52a0\u5143\u7d20\u3001\u5220\u9664\u5143\u7d20\u3001\u66f4\u65b0\u5143\u7d20\uff0c\u8fd9\u4e00\u70b9\u8ddf\u6211\u4eec\u4e0a\u4e00\u8bfe\u8bb2\u5230\u7684\u5b57\u7b26\u4e32\u6709\u7740\u9c9c\u660e\u7684\u5dee\u522b\u3002\u5b57\u7b26\u4e32\u662f\u4e00\u79cd\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u5b57\u7b26\u4e32\u505a\u62fc\u63a5\u3001\u91cd\u590d\u3001\u8f6c\u6362\u5927\u5c0f\u5199\u3001\u4fee\u526a\u7a7a\u683c\u7b49\u64cd\u4f5c\u7684\u65f6\u5019\u4f1a\u4ea7\u751f\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u539f\u6765\u7684\u5b57\u7b26\u4e32\u5e76\u6ca1\u6709\u53d1\u751f\u4efb\u4f55\u6539\u53d8\u3002","title":"\u5b9a\u4e49\u548c\u4f7f\u7528\u5217\u8868"},{"location":"%E7%AC%AC08%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%97%E8%A1%A8/#_2","text":"\u548c\u5b57\u7b26\u4e32\u7c7b\u578b\u4e00\u6837\uff0c\u5217\u8868\u4e5f\u652f\u6301\u62fc\u63a5\u3001\u91cd\u590d\u3001\u6210\u5458\u8fd0\u7b97\u3001\u7d22\u5f15\u548c\u5207\u7247\u4ee5\u53ca\u6bd4\u8f83\u8fd0\u7b97\uff0c\u5bf9\u6b64\u6211\u4eec\u4e0d\u518d\u8fdb\u884c\u8d58\u8ff0\uff0c\u8bf7\u5927\u5bb6\u53c2\u8003\u4e0b\u9762\u7684\u4ee3\u7801\u3002 items1 = [ 35 , 12 , 99 , 68 , 55 , 87 ] items2 = [ 45 , 8 , 29 ] # \u5217\u8868\u7684\u62fc\u63a5 items3 = items1 + items2 print ( items3 ) # [35, 12, 99, 68, 55, 87, 45, 8, 29] # \u5217\u8868\u7684\u91cd\u590d items4 = [ 'hello' ] * 3 print ( items4 ) # ['hello', 'hello', 'hello'] # \u5217\u8868\u7684\u6210\u5458\u8fd0\u7b97 print ( 100 in items3 ) # False print ( 'hello' in items4 ) # True # \u83b7\u53d6\u5217\u8868\u7684\u957f\u5ea6(\u5143\u7d20\u4e2a\u6570) size = len ( items3 ) print ( size ) # 9 # \u5217\u8868\u7684\u7d22\u5f15 print ( items3 [ 0 ], items3 [ - size ]) # 35 35 items3 [ - 1 ] = 100 print ( items3 [ size - 1 ], items3 [ - 1 ]) # 100 100 # \u5217\u8868\u7684\u5207\u7247 print ( items3 [: 5 ]) # [35, 12, 99, 68, 55] print ( items3 [ 4 :]) # [55, 87, 45, 8, 100] print ( items3 [ - 5 : - 7 : - 1 ]) # [55, 68] print ( items3 [:: - 2 ]) # [100, 45, 55, 99, 35] # \u5217\u8868\u7684\u6bd4\u8f83\u8fd0\u7b97 items5 = [ 1 , 2 , 3 , 4 ] items6 = list ( range ( 1 , 5 )) # \u4e24\u4e2a\u5217\u8868\u6bd4\u8f83\u76f8\u7b49\u6027\u6bd4\u7684\u662f\u5bf9\u5e94\u7d22\u5f15\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u662f\u5426\u76f8\u7b49 print ( items5 == items6 ) # True items7 = [ 3 , 2 , 1 ] # \u4e24\u4e2a\u5217\u8868\u6bd4\u8f83\u5927\u5c0f\u6bd4\u7684\u662f\u5bf9\u5e94\u7d22\u5f15\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u7684\u5927\u5c0f print ( items5 <= items7 ) # True \u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u7531\u4e8e\u5217\u8868\u662f\u53ef\u53d8\u7c7b\u578b\uff0c\u6240\u4ee5\u901a\u8fc7\u7d22\u5f15\u64cd\u4f5c\u65e2\u53ef\u4ee5\u83b7\u53d6\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u4e5f\u53ef\u4ee5\u66f4\u65b0\u5217\u8868\u4e2d\u7684\u5143\u7d20\u3002\u5bf9\u5217\u8868\u505a\u7d22\u5f15\u64cd\u4f5c\u4e00\u6837\u8981\u6ce8\u610f\u7d22\u5f15\u8d8a\u754c\u7684\u95ee\u9898\uff0c\u5bf9\u4e8e\u6709 N \u4e2a\u5143\u7d20\u7684\u5217\u8868\uff0c\u6b63\u5411\u7d22\u5f15\u7684\u8303\u56f4\u662f 0 \u5230 N-1 \uff0c\u8d1f\u5411\u7d22\u5f15\u7684\u8303\u56f4\u662f -1 \u5230 -N \uff0c\u5982\u679c\u8d85\u51fa\u8fd9\u4e2a\u8303\u56f4\uff0c\u5c06\u5f15\u53d1 IndexError \u5f02\u5e38\uff0c\u9519\u8bef\u4fe1\u606f\u4e3a\uff1a list index out of range \u3002","title":"\u5217\u8868\u7684\u8fd0\u7b97\u7b26"},{"location":"%E7%AC%AC08%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%97%E8%A1%A8/#_3","text":"\u5982\u679c\u60f3\u9010\u4e2a\u53d6\u51fa\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528 for \u5faa\u73af\u7684\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u505a\u6cd5\u3002 \u65b9\u6cd5\u4e00\uff1a items = [ 'Python' , 'Java' , 'Go' , 'Kotlin' ] for index in range ( len ( items )): print ( items [ index ]) \u65b9\u6cd5\u4e8c\uff1a items = [ 'Python' , 'Java' , 'Go' , 'Kotlin' ] for item in items : print ( item ) \u8bb2\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5217\u8868\u7684\u77e5\u8bc6\u6765\u91cd\u6784\u4e0a\u9762\u201c\u63b7\u8272\u5b50\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u6570\u51fa\u73b0\u6b21\u6570\u201d\u7684\u4ee3\u7801\u3002 import random counters = [ 0 ] * 6 for _ in range ( 6000 ): face = random . randint ( 1 , 6 ) counters [ face - 1 ] += 1 for face in range ( 1 , 7 ): print ( f ' { face } \u70b9\u51fa\u73b0\u4e86 { counters [ face - 1 ] } \u6b21' ) \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u7528 counters \u5217\u8868\u4e2d\u7684\u516d\u4e2a\u5143\u7d20\u5206\u522b\u8868\u793a1\u52306\u7684\u70b9\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6700\u5f00\u59cb\u7684\u65f6\u5019\u516d\u4e2a\u5143\u7d20\u7684\u503c\u90fd\u662f 0 \u3002\u63a5\u4e0b\u6765\u7528\u968f\u673a\u6570\u6a21\u62df\u63b7\u8272\u5b50\uff0c\u5982\u679c\u6447\u51fa1\u70b9 counters[0] \u7684\u503c\u52a0 1 \uff0c\u5982\u679c\u6447\u51fa2\u70b9 counters[1] \u7684\u503c\u52a0 1 \uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u5927\u5bb6\u611f\u53d7\u4e00\u4e0b\uff0c\u8fd9\u6bb5\u4ee3\u7801\u662f\u4e0d\u662f\u6bd4\u4e4b\u524d\u7684\u4ee3\u7801\u8981\u7b80\u5355\u4f18\u96c5\u5f88\u591a\u3002","title":"\u5217\u8868\u5143\u7d20\u7684\u904d\u5386"},{"location":"%E7%AC%AC08%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%97%E8%A1%A8/#_4","text":"\u548c\u5b57\u7b26\u4e32\u4e00\u6837\uff0c\u5217\u8868\u7c7b\u578b\u7684\u65b9\u6cd5\u4e5f\u5f88\u591a\uff0c\u4e0b\u9762\u4e3a\u5927\u5bb6\u8bb2\u89e3\u6bd4\u8f83\u91cd\u8981\u7684\u65b9\u6cd5\u3002","title":"\u5217\u8868\u7684\u65b9\u6cd5"},{"location":"%E7%AC%AC08%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%97%E8%A1%A8/#_5","text":"items = [ 'Python' , 'Java' , 'Go' , 'Kotlin' ] # \u4f7f\u7528append\u65b9\u6cd5\u5728\u5217\u8868\u5c3e\u90e8\u6dfb\u52a0\u5143\u7d20 items . append ( 'Swift' ) print ( items ) # ['Python', 'Java', 'Go', 'Kotlin', 'Swift'] # \u4f7f\u7528insert\u65b9\u6cd5\u5728\u5217\u8868\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20 items . insert ( 2 , 'SQL' ) print ( items ) # ['Python', 'Java', 'SQL', 'Go', 'Kotlin', 'Swift'] # \u5220\u9664\u6307\u5b9a\u7684\u5143\u7d20 items . remove ( 'Java' ) print ( items ) # ['Python', 'SQL', 'Go', 'Kotlin', 'Swift'] # \u5220\u9664\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u7684\u5143\u7d20 items . pop ( 0 ) items . pop ( len ( items ) - 1 ) print ( items ) # ['SQL', 'Go', 'Kotlin'] # \u6e05\u7a7a\u5217\u8868\u4e2d\u7684\u5143\u7d20 items . clear () print ( items ) # [] \u9700\u8981\u63d0\u9192\u5927\u5bb6\uff0c\u5728\u4f7f\u7528 remove \u65b9\u6cd5\u5220\u9664\u5143\u7d20\u65f6\uff0c\u5982\u679c\u8981\u5220\u9664\u7684\u5143\u7d20\u5e76\u4e0d\u5728\u5217\u8868\u4e2d\uff0c\u4f1a\u5f15\u53d1 ValueError \u5f02\u5e38\uff0c\u9519\u8bef\u6d88\u606f\u662f\uff1a list.remove(x): x not in list \u3002\u5728\u4f7f\u7528 pop \u65b9\u6cd5\u5220\u9664\u5143\u7d20\u65f6\uff0c\u5982\u679c\u7d22\u5f15\u7684\u503c\u8d85\u51fa\u4e86\u8303\u56f4\uff0c\u4f1a\u5f15\u53d1 IndexError \u5f02\u5e38\uff0c\u9519\u8bef\u6d88\u606f\u662f\uff1a pop index out of range \u3002 \u4ece\u5217\u8868\u4e2d\u5220\u9664\u5143\u7d20\u5176\u5b9e\u8fd8\u6709\u4e00\u79cd\u65b9\u5f0f\uff0c\u5c31\u662f\u4f7f\u7528Python\u4e2d\u7684 del \u5173\u952e\u5b57\u540e\u9762\u8ddf\u8981\u5220\u9664\u7684\u5143\u7d20\uff0c\u8fd9\u79cd\u505a\u6cd5\u8ddf\u4f7f\u7528 pop \u65b9\u6cd5\u6307\u5b9a\u7d22\u5f15\u5220\u9664\u5143\u7d20\u6ca1\u6709\u5b9e\u8d28\u6027\u7684\u533a\u522b\uff0c\u4f46\u540e\u8005\u4f1a\u8fd4\u56de\u5220\u9664\u7684\u5143\u7d20\uff0c\u524d\u8005\u5728\u6027\u80fd\u4e0a\u7565\u4f18\uff08 del \u5bf9\u5e94\u5b57\u8282\u7801\u6307\u4ee4\u662f DELETE_SUBSCR \uff0c\u800c pop \u5bf9\u5e94\u7684\u5b57\u8282\u7801\u6307\u4ee4\u662f CALL_METHOD \u548c POP_TOP \uff0c\u4e0d\u7406\u89e3\u5c31\u8df3\u8fc7\uff0c\u4e0d\u7528\u7ba1\u5b83\uff01\uff01\uff01\uff09\u3002 items = [ 'Python' , 'Java' , 'Go' , 'Kotlin' ] del items [ 1 ] print ( items ) # ['Python', 'Go', 'Kotlin']","title":"\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20"},{"location":"%E7%AC%AC08%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%97%E8%A1%A8/#_6","text":"\u5217\u8868\u7c7b\u578b\u7684 index \u65b9\u6cd5\u53ef\u4ee5\u67e5\u627e\u67d0\u4e2a\u5143\u7d20\u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\uff1b\u56e0\u4e3a\u5217\u8868\u4e2d\u5141\u8bb8\u6709\u91cd\u590d\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u5217\u8868\u7c7b\u578b\u63d0\u4f9b\u4e86 count \u65b9\u6cd5\u6765\u7edf\u8ba1\u4e00\u4e2a\u5143\u7d20\u5728\u5217\u8868\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u3002 items = [ 'Python' , 'Java' , 'Java' , 'Go' , 'Kotlin' , 'Python' ] # \u67e5\u627e\u5143\u7d20\u7684\u7d22\u5f15\u4f4d\u7f6e print ( items . index ( 'Python' )) # 0 print ( items . index ( 'Python' , 2 )) # 5 # \u6ce8\u610f\uff1a\u867d\u7136\u5217\u8868\u4e2d\u6709'Java'\uff0c\u4f46\u662f\u4ece\u7d22\u5f15\u4e3a3\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u540e\u9762\u662f\u6ca1\u6709'Java'\u7684 print ( items . index ( 'Java' , 3 )) # ValueError: 'Java' is not in list \u518d\u6765\u770b\u770b\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u3002 items = [ 'Python' , 'Java' , 'Java' , 'Go' , 'Kotlin' , 'Python' ] # \u67e5\u627e\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570 print ( items . count ( 'Python' )) # 2 print ( items . count ( 'Go' )) # 1 print ( items . count ( 'Swfit' )) # 0","title":"\u5143\u7d20\u4f4d\u7f6e\u548c\u6b21\u6570"},{"location":"%E7%AC%AC08%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%97%E8%A1%A8/#_7","text":"\u5217\u8868\u7684 sort \u64cd\u4f5c\u53ef\u4ee5\u5b9e\u73b0\u5217\u8868\u5143\u7d20\u7684\u6392\u5e8f\uff0c\u800c reverse \u64cd\u4f5c\u53ef\u4ee5\u5b9e\u73b0\u5143\u7d20\u7684\u53cd\u8f6c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 items = [ 'Python' , 'Java' , 'Go' , 'Kotlin' , 'Python' ] # \u6392\u5e8f items . sort () print ( items ) # ['Go', 'Java', 'Kotlin', 'Python', 'Python'] # \u53cd\u8f6c items . reverse () print ( items ) # ['Python', 'Python', 'Kotlin', 'Java', 'Go']","title":"\u5143\u7d20\u6392\u5e8f\u548c\u53cd\u8f6c"},{"location":"%E7%AC%AC08%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%97%E8%A1%A8/#_8","text":"\u5728Python\u4e2d\uff0c\u5217\u8868\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e00\u79cd\u7279\u6b8a\u7684\u5b57\u9762\u91cf\u8bed\u6cd5\u6765\u521b\u5efa\uff0c\u8fd9\u79cd\u8bed\u6cd5\u53eb\u505a\u751f\u6210\u5f0f\u3002\u6211\u4eec\u7ed9\u51fa\u4e24\u6bb5\u4ee3\u7801\uff0c\u5927\u5bb6\u53ef\u4ee5\u505a\u4e00\u4e2a\u5bf9\u6bd4\uff0c\u770b\u770b\u54ea\u4e00\u79cd\u65b9\u5f0f\u66f4\u52a0\u7b80\u5355\u4f18\u96c5\u3002 \u901a\u8fc7 for \u5faa\u73af\u4e3a\u7a7a\u5217\u8868\u6dfb\u52a0\u5143\u7d20\u3002 # \u521b\u5efa\u4e00\u4e2a\u75311\u52309\u7684\u6570\u5b57\u6784\u6210\u7684\u5217\u8868 items1 = [] for x in range ( 1 , 10 ): items1 . append ( x ) print ( items1 ) # \u521b\u5efa\u4e00\u4e2a\u7531'hello world'\u4e2d\u9664\u7a7a\u683c\u548c\u5143\u97f3\u5b57\u6bcd\u5916\u7684\u5b57\u7b26\u6784\u6210\u7684\u5217\u8868 items2 = [] for x in 'hello world' : if x not in ' aeiou' : items2 . append ( x ) print ( items2 ) # \u521b\u5efa\u4e00\u4e2a\u7531\u4e2a\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u7b1b\u5361\u5c14\u79ef\u6784\u6210\u7684\u5217\u8868 items3 = [] for x in 'ABC' : for y in '12' : items3 . append ( x + y ) print ( items3 ) \u901a\u8fc7\u751f\u6210\u5f0f\u521b\u5efa\u5217\u8868\u3002 # \u521b\u5efa\u4e00\u4e2a\u75311\u52309\u7684\u6570\u5b57\u6784\u6210\u7684\u5217\u8868 items1 = [ x for x in range ( 1 , 10 )] print ( items1 ) # [1, 2, 3, 4, 5, 6, 7, 8, 9] # \u521b\u5efa\u4e00\u4e2a\u7531'hello world'\u4e2d\u9664\u7a7a\u683c\u548c\u5143\u97f3\u5b57\u6bcd\u5916\u7684\u5b57\u7b26\u6784\u6210\u7684\u5217\u8868 items2 = [ x for x in 'hello world' if x not in ' aeiou' ] print ( items2 ) # ['h', 'l', 'l', 'w', 'r', 'l', 'd'] # \u521b\u5efa\u4e00\u4e2a\u7531\u4e2a\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u7b1b\u5361\u5c14\u79ef\u6784\u6210\u7684\u5217\u8868 items3 = [ x + y for x in 'ABC' for y in '12' ] print ( items3 ) # ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'] \u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u4ec5\u4ee3\u7801\u7b80\u5355\u4f18\u96c5\uff0c\u800c\u4e14\u6027\u80fd\u4e5f\u4f18\u4e8e\u4e0a\u9762\u4f7f\u7528 for \u5faa\u73af\u548c append \u65b9\u6cd5\u5411\u7a7a\u5217\u8868\u4e2d\u8ffd\u52a0\u5143\u7d20\u7684\u65b9\u5f0f\u3002\u53ef\u4ee5\u7b80\u5355\u8ddf\u5927\u5bb6\u4ea4\u5f85\u4e0b\u4e3a\u4ec0\u4e48\u751f\u6210\u5f0f\u62e5\u6709\u66f4\u597d\u7684\u6027\u80fd\uff0c\u90a3\u662f\u56e0\u4e3aPython\u89e3\u91ca\u5668\u7684\u5b57\u8282\u7801\u6307\u4ee4\u4e2d\u6709\u4e13\u95e8\u9488\u5bf9\u751f\u6210\u5f0f\u7684\u6307\u4ee4\uff08 LIST_APPEND \u6307\u4ee4\uff09\uff1b\u800c for \u5faa\u73af\u662f\u901a\u8fc7\u65b9\u6cd5\u8c03\u7528\uff08 LOAD_METHOD \u548c CALL_METHOD \u6307\u4ee4\uff09\u7684\u65b9\u5f0f\u4e3a\u5217\u8868\u6dfb\u52a0\u5143\u7d20\uff0c\u65b9\u6cd5\u8c03\u7528\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u76f8\u5bf9\u8017\u65f6\u7684\u64cd\u4f5c\u3002\u5bf9\u8fd9\u4e00\u70b9\u4e0d\u7406\u89e3\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u8bb0\u4f4f\u201c \u5f3a\u70c8\u5efa\u8bae\u7528\u751f\u6210\u5f0f\u8bed\u6cd5\u6765\u521b\u5efa\u5217\u8868 \u201d\u8fd9\u4e2a\u7ed3\u8bba\u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u5217\u8868\u7684\u751f\u6210\u5f0f"},{"location":"%E7%AC%AC08%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%97%E8%A1%A8/#_9","text":"Python\u8bed\u8a00\u6ca1\u6709\u9650\u5b9a\u5217\u8868\u4e2d\u7684\u5143\u7d20\u5fc5\u987b\u662f\u76f8\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u5217\u8868\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u4efb\u610f\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5f53\u7136\u4e5f\u5305\u62ec\u5217\u8868\u3002\u5982\u679c\u5217\u8868\u4e2d\u7684\u5143\u7d20\u53c8\u662f\u5217\u8868\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u5d4c\u5957\u7684\u5217\u8868\u3002\u5d4c\u5957\u7684\u5217\u8868\u53ef\u4ee5\u7528\u6765\u8868\u793a\u8868\u683c\u6216\u6570\u5b66\u4e0a\u7684\u77e9\u9635\uff0c\u4f8b\u5982\uff1a\u6211\u4eec\u60f3\u4fdd\u5b585\u4e2a\u5b66\u751f3\u95e8\u8bfe\u7a0b\u7684\u6210\u7ee9\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u4fdd\u5b585\u4e2a\u5143\u7d20\u7684\u5217\u8868\u4fdd\u5b585\u4e2a\u5b66\u751f\u7684\u4fe1\u606f\uff0c\u800c\u6bcf\u4e2a\u5217\u8868\u5143\u7d20\u53c8\u662f3\u4e2a\u5143\u7d20\u6784\u6210\u7684\u5217\u8868\uff0c\u5206\u522b\u4ee3\u88683\u95e8\u8bfe\u7a0b\u7684\u6210\u7ee9\u3002\u4f46\u662f\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u6709\u95ee\u9898\u7684\u3002 scores = [[ 0 ] * 3 ] * 5 print ( scores ) # [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]] \u770b\u4e0a\u53bb\u6211\u4eec\u597d\u50cf\u521b\u5efa\u4e86\u4e00\u4e2a 5 * 3 \u7684\u5d4c\u5957\u5217\u8868\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f53\u6211\u4eec\u5f55\u5165\u7b2c\u4e00\u4e2a\u5b66\u751f\u7684\u7b2c\u4e00\u95e8\u6210\u7ee9\u540e\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u770b\u770b\u4e0b\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u3002 # \u5d4c\u5957\u7684\u5217\u8868\u9700\u8981\u591a\u6b21\u7d22\u5f15\u64cd\u4f5c\u624d\u80fd\u83b7\u53d6\u5143\u7d20 scores [ 0 ][ 0 ] = 95 print ( scores ) # [[95, 0, 0], [95, 0, 0], [95, 0, 0], [95, 0, 0], [95, 0, 0]] \u6211\u4eec\u4e0d\u53bb\u8fc7\u591a\u7684\u89e3\u91ca\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u5982\u679c\u60f3\u6df1\u5165\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7 Python Tutor \u7f51\u7ad9\u7684\u53ef\u89c6\u5316\u4ee3\u7801\u6267\u884c\u529f\u80fd\uff0c\u770b\u770b\u521b\u5efa\u5217\u8868\u65f6\u8ba1\u7b97\u673a\u5185\u5b58\u4e2d\u53d1\u751f\u4e86\u600e\u6837\u7684\u53d8\u5316\uff0c\u4e0b\u9762\u7684\u56fe\u5c31\u662f\u5728\u8fd9\u4e2a\u7f51\u7ad9\u4e0a\u751f\u6210\u7684\u3002\u5efa\u8bae\u5927\u5bb6\u4e0d\u53bb\u7ea0\u7ed3\u8fd9\u4e2a\u95ee\u9898\uff0c\u73b0\u9636\u6bb5\u53ea\u9700\u8981\u8bb0\u4f4f\u4e0d\u80fd\u7528 [[0] * 3] * 5] \u8fd9\u79cd\u65b9\u5f0f\u6765\u521b\u5efa\u5d4c\u5957\u5217\u8868\u5c31\u884c\u4e86\u3002\u90a3\u4e48\u521b\u5efa\u5d4c\u5957\u5217\u8868\u7684\u6b63\u786e\u505a\u6cd5\u662f\u4ec0\u4e48\u5462\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u7ed9\u4f60\u7b54\u6848\u3002 scores = [[ 0 ] * 3 for _ in range ( 5 )] scores [ 0 ][ 0 ] = 95 print ( scores ) # [[95, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]","title":"\u5d4c\u5957\u7684\u5217\u8868"},{"location":"%E7%AC%AC08%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%88%97%E8%A1%A8/#_10","text":"Python\u4e2d\u7684\u5217\u8868\u5e95\u5c42\u662f\u4e00\u4e2a\u53ef\u4ee5\u52a8\u6001\u6269\u5bb9\u7684\u6570\u7ec4\uff0c\u5217\u8868\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u4e5f\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b9e\u73b0\u968f\u673a\u8bbf\u95ee\uff08\u901a\u8fc7\u4e00\u4e2a\u6709\u6548\u7684\u7d22\u5f15\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u5143\u7d20\u4e14\u64cd\u4f5c\u65f6\u95f4\u4e0e\u5217\u8868\u5143\u7d20\u4e2a\u6570\u65e0\u5173\uff09\u3002\u6211\u4eec\u6682\u65f6\u4e0d\u53bb\u89e6\u78b0\u8fd9\u4e9b\u5e95\u5c42\u5b58\u50a8\u7ec6\u8282\u4ee5\u53ca\u5217\u8868\u6bcf\u4e2a\u65b9\u6cd5\u7684\u6e10\u8fd1\u65f6\u95f4\u590d\u6742\u5ea6\uff08\u6267\u884c\u8fd9\u4e2a\u65b9\u6cd5\u8017\u8d39\u7684\u65f6\u95f4\u8ddf\u5217\u8868\u5143\u7d20\u4e2a\u6570\u7684\u5173\u7cfb\uff09\uff0c\u7b49\u9700\u8981\u7684\u65f6\u5019\u518d\u544a\u8bc9\u5927\u5bb6\u3002\u73b0\u9636\u6bb5\uff0c\u5927\u5bb6\u53ea\u9700\u8981\u77e5\u9053 \u5217\u8868\u662f\u5bb9\u5668 \uff0c\u53ef\u4ee5 \u4fdd\u5b58\u5404\u79cd\u7c7b\u578b\u7684\u6570\u636e \uff0c \u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u64cd\u4f5c\u5217\u8868\u5143\u7d20 \uff0c\u77e5\u9053\u8fd9\u4e9b\u5c31\u8db3\u591f\u4e86\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC09%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%85%83%E7%BB%84/","text":"\u7b2c09\u8bfe\uff1a\u5e38\u7528\u6570\u636e\u7ed3\u6784\u4e4b\u5143\u7ec4 \u4e0a\u4e00\u8282\u8bfe\u4e3a\u5927\u5bb6\u8bb2\u89e3\u4e86Python\u4e2d\u7684\u5217\u8868\uff0c\u5b83\u662f\u4e00\u79cd\u5bb9\u5668\u578b\u6570\u636e\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u5217\u8868\u7c7b\u578b\u7684\u53d8\u91cf\u6765\u4fdd\u5b58\u548c\u64cd\u4f5c\u591a\u4e2a\u5143\u7d20\u3002\u5f53\u7136\uff0cPython\u4e2d\u5bb9\u5668\u578b\u7684\u6570\u636e\u7c7b\u578b\u80af\u5b9a\u4e0d\u6b62\u5217\u8868\u4e00\u79cd\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4e3a\u5927\u5bb6\u8bb2\u89e3\u53e6\u4e00\u79cd\u91cd\u8981\u7684\u5bb9\u5668\u578b\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u7684\u540d\u5b57\u53eb\u5143\u7ec4\uff08tuple\uff09\u3002 \u5b9a\u4e49\u548c\u4f7f\u7528\u5143\u7ec4 \u5728Python\u4e2d\uff0c\u5143\u7ec4\u4e5f\u662f\u591a\u4e2a\u5143\u7d20\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\u6784\u6210\u7684\u5e8f\u5217\u3002\u5143\u7ec4\u548c\u5217\u8868\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5143\u7ec4\u7c7b\u578b\u7684\u53d8\u91cf\u4e00\u65e6\u5b9a\u4e49\uff0c\u5176\u4e2d\u7684\u5143\u7d20\u4e0d\u80fd\u518d\u6dfb\u52a0\u6216\u5220\u9664\uff0c\u800c\u4e14\u5143\u7d20\u7684\u503c\u4e5f\u4e0d\u80fd\u8fdb\u884c\u4fee\u6539\u3002\u5b9a\u4e49\u5143\u7ec4\u901a\u5e38\u4f7f\u7528 () \u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u4e5f\u5efa\u8bae\u5927\u5bb6\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u521b\u5efa\u5143\u7ec4\u3002\u5143\u7ec4\u7c7b\u578b\u652f\u6301\u7684\u8fd0\u7b97\u7b26\u8ddf\u5217\u8868\u662f\u4e00\u6837\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5143\u7ec4\u7684\u5b9a\u4e49\u548c\u8fd0\u7b97\u3002 # \u5b9a\u4e49\u4e00\u4e2a\u4e09\u5143\u7ec4 t1 = ( 30 , 10 , 55 ) # \u5b9a\u4e49\u4e00\u4e2a\u56db\u5143\u7ec4 t2 = ( '\u9a86\u660a' , 40 , True , '\u56db\u5ddd\u6210\u90fd' ) # \u67e5\u770b\u53d8\u91cf\u7684\u7c7b\u578b print ( type ( t1 ), type ( t2 )) # <class 'tuple'> <class 'tuple'> # \u67e5\u770b\u5143\u7ec4\u4e2d\u5143\u7d20\u7684\u6570\u91cf print ( len ( t1 ), len ( t2 )) # 3 4 # \u901a\u8fc7\u7d22\u5f15\u8fd0\u7b97\u83b7\u53d6\u5143\u7ec4\u4e2d\u7684\u5143\u7d20 print ( t1 [ 0 ], t1 [ - 3 ]) # 30 30 print ( t2 [ 3 ], t2 [ - 1 ]) # \u56db\u5ddd\u6210\u90fd \u56db\u5ddd\u6210\u90fd # \u5faa\u73af\u904d\u5386\u5143\u7ec4\u4e2d\u7684\u5143\u7d20 for member in t2 : print ( member ) # \u6210\u5458\u8fd0\u7b97 print ( 100 in t1 ) # False print ( 40 in t2 ) # True # \u62fc\u63a5 t3 = t1 + t2 print ( t3 ) # (30, 10, 55, '\u9a86\u660a', 40, True, '\u56db\u5ddd\u6210\u90fd') # \u5207\u7247 print ( t3 [:: 3 ]) # (30, '\u9a86\u660a', '\u56db\u5ddd\u6210\u90fd') # \u6bd4\u8f83\u8fd0\u7b97 print ( t1 == t3 ) # False print ( t1 >= t3 ) # False print ( t1 < ( 30 , 11 , 55 )) # True \u4e00\u4e2a\u5143\u7ec4\u4e2d\u5982\u679c\u6709\u4e24\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u5c31\u79f0\u4e4b\u4e3a\u4e8c\u5143\u7ec4\uff1b\u4e00\u4e2a\u5143\u7ec4\u4e2d\u5982\u679c\u4e94\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u5c31\u79f0\u4e4b\u4e3a\u4e94\u5143\u7ec4\u3002\u9700\u8981\u63d0\u9192\u5927\u5bb6\u6ce8\u610f\u7684\u662f\uff0c () \u8868\u793a\u7a7a\u5143\u7ec4\uff0c\u4f46\u662f\u5982\u679c\u5143\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u9700\u8981\u52a0\u4e0a\u4e00\u4e2a\u9017\u53f7\uff0c\u5426\u5219 () \u5c31\u4e0d\u662f\u4ee3\u8868\u5143\u7ec4\u7684\u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u800c\u662f\u6539\u53d8\u8fd0\u7b97\u4f18\u5148\u7ea7\u7684\u5706\u62ec\u53f7\uff0c\u6240\u4ee5 ('hello', ) \u548c (100, ) \u624d\u662f\u4e00\u5143\u7ec4\uff0c\u800c ('hello') \u548c (100) \u53ea\u662f\u5b57\u7b26\u4e32\u548c\u6574\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u52a0\u4ee5\u9a8c\u8bc1\u3002 # \u7a7a\u5143\u7ec4 a = () print ( type ( a )) # <class 'tuple'> # \u4e0d\u662f\u5143\u7ec4 b = ( 'hello' ) print ( type ( b )) # <class 'str'> c = ( 100 ) print ( type ( c )) # <class 'int'> # \u4e00\u5143\u7ec4 d = ( 'hello' , ) print ( type ( d )) # <class 'tuple'> e = ( 100 , ) print ( type ( e )) # <class 'tuple'> \u5143\u7ec4\u7684\u5e94\u7528\u573a\u666f \u8bb2\u5230\u8fd9\u91cc\uff0c\u76f8\u4fe1\u5927\u5bb6\u4e00\u5b9a\u8feb\u5207\u7684\u60f3\u77e5\u9053\u5143\u7ec4\u6709\u54ea\u4e9b\u5e94\u7528\u573a\u666f\uff0c\u6211\u4eec\u7ed9\u5927\u5bb6\u4e3e\u51e0\u4e2a\u4f8b\u5b50\u3002 \u4f8b\u5b501\uff1a\u6253\u5305\u548c\u89e3\u5305\u64cd\u4f5c\u3002 \u5f53\u6211\u4eec\u628a\u591a\u4e2a\u7528\u9017\u53f7\u5206\u9694\u7684\u503c\u8d4b\u7ed9\u4e00\u4e2a\u53d8\u91cf\u65f6\uff0c\u591a\u4e2a\u503c\u4f1a\u6253\u5305\u6210\u4e00\u4e2a\u5143\u7ec4\u7c7b\u578b\uff1b\u5f53\u6211\u4eec\u628a\u4e00\u4e2a\u5143\u7ec4\u8d4b\u503c\u7ed9\u591a\u4e2a\u53d8\u91cf\u65f6\uff0c\u5143\u7ec4\u4f1a\u89e3\u5305\u6210\u591a\u4e2a\u503c\u7136\u540e\u5206\u522b\u8d4b\u7ed9\u5bf9\u5e94\u7684\u53d8\u91cf\uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6240\u793a\u3002 # \u6253\u5305 a = 1 , 10 , 100 print ( type ( a ), a ) # <class 'tuple'> (1, 10, 100) # \u89e3\u5305 i , j , k = a print ( i , j , k ) # 1 10 100 \u5728\u89e3\u5305\u65f6\uff0c\u5982\u679c\u89e3\u5305\u51fa\u6765\u7684\u5143\u7d20\u4e2a\u6570\u548c\u53d8\u91cf\u4e2a\u6570\u4e0d\u5bf9\u5e94\uff0c\u4f1a\u5f15\u53d1 ValueError \u5f02\u5e38\uff0c\u9519\u8bef\u4fe1\u606f\u4e3a\uff1a too many values to unpack \uff08\u89e3\u5305\u7684\u503c\u592a\u591a\uff09\u6216 not enough values to unpack \uff08\u89e3\u5305\u7684\u503c\u4e0d\u8db3\uff09\u3002 a = 1 , 10 , 100 , 1000 # i, j, k = a # ValueError: too many values to unpack (expected 3) # i, j, k, l, m, n = a # ValueError: not enough values to unpack (expected 6, got 4) \u6709\u4e00\u79cd\u89e3\u51b3\u53d8\u91cf\u4e2a\u6570\u5c11\u4e8e\u5143\u7d20\u7684\u4e2a\u6570\u65b9\u6cd5\uff0c\u5c31\u662f\u4f7f\u7528\u661f\u53f7\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u4e4b\u524d\u8bb2\u51fd\u6570\u7684\u53ef\u53d8\u53c2\u6570\u65f6\u4f7f\u7528\u8fc7\u661f\u53f7\u8868\u8fbe\u5f0f\u3002\u6709\u4e86\u661f\u53f7\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u53d8\u91cf\u63a5\u6536\u591a\u4e2a\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7528\u661f\u53f7\u8868\u8fbe\u5f0f\u4fee\u9970\u7684\u53d8\u91cf\u4f1a\u53d8\u6210\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u8868\u4e2d\u67090\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u3002\u8fd8\u6709\u5728\u89e3\u5305\u8bed\u6cd5\u4e2d\uff0c\u661f\u53f7\u8868\u8fbe\u5f0f\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 a = 1 , 10 , 100 , 1000 i , j , * k = a print ( i , j , k ) # 1 10 [100, 1000] i , * j , k = a print ( i , j , k ) # 1 [10, 100] 1000 * i , j , k = a print ( i , j , k ) # [1, 10] 100 1000 * i , j = a print ( i , j ) # [1, 10, 100] 1000 i , * j = a print ( i , j ) # 1 [10, 100, 1000] i , j , k , * l = a print ( i , j , k , l ) # 1 10 100 [1000] i , j , k , l , * m = a print ( i , j , k , l , m ) # 1 10 100 1000 [] \u9700\u8981\u8bf4\u660e\u4e00\u70b9\uff0c\u89e3\u5305\u8bed\u6cd5\u5bf9\u6240\u6709\u7684\u5e8f\u5217\u90fd\u6210\u7acb\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5bf9\u5217\u8868\u4ee5\u53ca\u6211\u4eec\u4e4b\u524d\u8bb2\u5230\u7684 range \u51fd\u6570\u8fd4\u56de\u7684\u8303\u56f4\u5e8f\u5217\u90fd\u53ef\u4ee5\u4f7f\u7528\u89e3\u5305\u8bed\u6cd5\u3002\u5927\u5bb6\u53ef\u4ee5\u5c1d\u8bd5\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u4f1a\u51fa\u73b0\u600e\u6837\u7684\u7ed3\u679c\u3002 a , b , * c = range ( 1 , 10 ) print ( a , b , c ) a , b , c = [ 1 , 10 , 100 ] print ( a , b , c ) a , * b , c = 'hello' print ( a , b , c ) \u4f8b\u5b502\uff1a\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\u3002 \u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\u662f\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u7ecf\u5178\u6848\u4f8b\uff0c\u5728\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\u90fd\u9700\u8981\u501f\u52a9\u4e00\u4e2a\u4e2d\u95f4\u53d8\u91cf\u624d\u80fd\u505a\u5230\uff0c\u5982\u679c\u4e0d\u7528\u4e2d\u95f4\u53d8\u91cf\u5c31\u9700\u8981\u4f7f\u7528\u6bd4\u8f83\u6666\u6da9\u7684\u4f4d\u8fd0\u7b97\u6765\u5b9e\u73b0\u3002\u5728Python\u4e2d\uff0c\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf a \u548c b \u7684\u503c\u53ea\u9700\u8981\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\u3002 a , b = b , a \u540c\u7406\uff0c\u5982\u679c\u8981\u5c06\u4e09\u4e2a\u53d8\u91cf a \u3001 b \u3001 c \u7684\u503c\u4e92\u6362\uff0c\u5373 b \u8d4b\u7ed9 a \uff0c c \u8d4b\u7ed9 b \uff0c a \u8d4b\u7ed9 c \uff0c\u4e5f\u53ef\u4ee5\u5982\u6cd5\u70ae\u5236\u3002 a , b , c = b , c , a \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u4e0a\u9762\u5e76\u6ca1\u6709\u7528\u5230\u6253\u5305\u548c\u89e3\u5305\u8bed\u6cd5\uff0cPython\u7684\u5b57\u8282\u7801\u6307\u4ee4\u4e2d\u6709 ROT_TWO \u548c ROT_THREE \u8fd9\u6837\u7684\u6307\u4ee4\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6548\u7387\u662f\u975e\u5e38\u9ad8\u7684\u3002\u4f46\u662f\u5982\u679c\u6709\u591a\u4e8e\u4e09\u4e2a\u53d8\u91cf\u7684\u503c\u8981\u4f9d\u6b21\u4e92\u6362\uff0c\u8fd9\u4e2a\u65f6\u5019\u6ca1\u6709\u76f4\u63a5\u53ef\u7528\u7684\u5b57\u8282\u7801\u6307\u4ee4\uff0c\u6267\u884c\u7684\u539f\u7406\u5c31\u662f\u6211\u4eec\u4e0a\u9762\u8bb2\u89e3\u7684\u6253\u5305\u548c\u89e3\u5305\u64cd\u4f5c\u3002 \u5143\u7ec4\u548c\u5217\u8868\u7684\u6bd4\u8f83 \u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u503c\u5f97\u63a2\u8ba8\u7684\u95ee\u9898\uff0cPython\u4e2d\u5df2\u7ecf\u6709\u4e86\u5217\u8868\u7c7b\u578b\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981\u5143\u7ec4\u8fd9\u6837\u7684\u7c7b\u578b\u5462\uff1f\u8fd9\u4e2a\u95ee\u9898\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u4f3c\u4e4e\u6709\u70b9\u56f0\u96be\uff0c\u4e0d\u8fc7\u6ca1\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u5148\u629b\u51fa\u89c2\u70b9\uff0c\u5927\u5bb6\u53ef\u4ee5\u4e00\u8fb9\u5b66\u4e60\u4e00\u8fb9\u6162\u6162\u4f53\u4f1a\u3002 \u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c \u4e0d\u53ef\u53d8\u7c7b\u578b\u66f4\u9002\u5408\u591a\u7ebf\u7a0b\u73af\u5883 \uff0c\u56e0\u4e3a\u5b83\u964d\u4f4e\u4e86\u5e76\u53d1\u8bbf\u95ee\u53d8\u91cf\u7684\u540c\u6b65\u5316\u5f00\u9500\u3002\u5173\u4e8e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u4f1a\u5728\u540e\u9762\u8bb2\u89e3\u591a\u7ebf\u7a0b\u7684\u65f6\u5019\u4e3a\u5927\u5bb6\u8be6\u7ec6\u8bba\u8ff0\u3002 \u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c\u901a\u5e38 \u4e0d\u53ef\u53d8\u7c7b\u578b\u5728\u521b\u5efa\u65f6\u95f4\u548c\u5360\u7528\u7a7a\u95f4\u4e0a\u9762\u90fd\u4f18\u4e8e\u5bf9\u5e94\u7684\u53ef\u53d8\u7c7b\u578b \u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 sys \u6a21\u5757\u7684 getsizeof \u51fd\u6570\u6765\u68c0\u67e5\u4fdd\u5b58\u76f8\u540c\u5143\u7d20\u7684\u5143\u7ec4\u548c\u5217\u8868\u5404\u81ea\u5360\u7528\u4e86\u591a\u5c11\u5185\u5b58\u7a7a\u95f4\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 timeit \u6a21\u5757\u7684 timeit \u51fd\u6570\u6765\u770b\u770b\u521b\u5efa\u4fdd\u5b58\u76f8\u540c\u5143\u7d20\u7684\u5143\u7ec4\u548c\u5217\u8868\u5404\u81ea\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import sys import timeit a = list ( range ( 100000 )) b = tuple ( range ( 100000 )) print ( sys . getsizeof ( a ), sys . getsizeof ( b )) # 900120 800056 print ( timeit . timeit ( '[1, 2, 3, 4, 5, 6, 7, 8, 9]' )) print ( timeit . timeit ( '(1, 2, 3, 4, 5, 6, 7, 8, 9)' )) Python\u4e2d\u7684\u5143\u7ec4\u548c\u5217\u8868\u662f\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u505a\u5230\u3002 # \u5c06\u5143\u7ec4\u8f6c\u6362\u6210\u5217\u8868 info = ( '\u9a86\u660a' , 175 , True , '\u56db\u5ddd\u6210\u90fd' ) print ( list ( info )) # ['\u9a86\u660a', 175, True, '\u56db\u5ddd\u6210\u90fd'] # \u5c06\u5217\u8868\u8f6c\u6362\u6210\u5143\u7ec4 fruits = [ 'apple' , 'banana' , 'orange' ] print ( tuple ( fruits )) # ('apple', 'banana', 'orange') \u7b80\u5355\u7684\u603b\u7ed3 \u5217\u8868\u548c\u5143\u7ec4\u90fd\u662f\u5bb9\u5668\u578b\u7684\u6570\u636e\u7c7b\u578b \uff0c\u5373\u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u4fdd\u5b58\u591a\u4e2a\u6570\u636e\u3002 \u5217\u8868\u662f\u53ef\u53d8\u6570\u636e\u7c7b\u578b \uff0c \u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b \uff0c\u6240\u4ee5\u5217\u8868\u6dfb\u52a0\u5143\u7d20\u3001\u5220\u9664\u5143\u7d20\u3001\u6e05\u7a7a\u3001\u6392\u5e8f\u7b49\u65b9\u6cd5\u5bf9\u4e8e\u5143\u7ec4\u6765\u8bf4\u662f\u4e0d\u6210\u7acb\u7684\u3002\u4f46\u662f\u5217\u8868\u548c\u5143\u7ec4\u90fd\u53ef\u4ee5\u8fdb\u884c \u62fc\u63a5 \u3001 \u6210\u5458\u8fd0\u7b97 \u3001 \u7d22\u5f15\u548c\u5207\u7247 \u8fd9\u4e9b\u64cd\u4f5c\uff0c\u540e\u9762\u6211\u4eec\u8981\u8bb2\u5230\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u4e5f\u662f\u8fd9\u6837\uff0c\u56e0\u4e3a\u5b57\u7b26\u4e32\u5c31\u662f\u5b57\u7b26\u6309\u4e00\u5b9a\u987a\u5e8f\u6784\u6210\u7684\u5e8f\u5217\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\u4e09\u8005\u5e76\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002\u6211\u4eec \u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u5217\u8868\u7684\u751f\u6210\u5f0f\u8bed\u6cd5\u6765\u521b\u5efa\u5217\u8868 \uff0c\u5b83\u5f88\u597d\u7528\uff0c\u4e5f\u662fPython\u4e2d\u975e\u5e38\u6709\u7279\u8272\u7684\u8bed\u6cd5\u3002","title":"\u7b2c09\u8bfe\uff1a\u5e38\u7528\u6570\u636e\u7ed3\u6784\u4e4b\u5143\u7ec4"},{"location":"%E7%AC%AC09%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%85%83%E7%BB%84/#09","text":"\u4e0a\u4e00\u8282\u8bfe\u4e3a\u5927\u5bb6\u8bb2\u89e3\u4e86Python\u4e2d\u7684\u5217\u8868\uff0c\u5b83\u662f\u4e00\u79cd\u5bb9\u5668\u578b\u6570\u636e\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u5217\u8868\u7c7b\u578b\u7684\u53d8\u91cf\u6765\u4fdd\u5b58\u548c\u64cd\u4f5c\u591a\u4e2a\u5143\u7d20\u3002\u5f53\u7136\uff0cPython\u4e2d\u5bb9\u5668\u578b\u7684\u6570\u636e\u7c7b\u578b\u80af\u5b9a\u4e0d\u6b62\u5217\u8868\u4e00\u79cd\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4e3a\u5927\u5bb6\u8bb2\u89e3\u53e6\u4e00\u79cd\u91cd\u8981\u7684\u5bb9\u5668\u578b\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u7684\u540d\u5b57\u53eb\u5143\u7ec4\uff08tuple\uff09\u3002","title":"\u7b2c09\u8bfe\uff1a\u5e38\u7528\u6570\u636e\u7ed3\u6784\u4e4b\u5143\u7ec4"},{"location":"%E7%AC%AC09%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%85%83%E7%BB%84/#_1","text":"\u5728Python\u4e2d\uff0c\u5143\u7ec4\u4e5f\u662f\u591a\u4e2a\u5143\u7d20\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\u6784\u6210\u7684\u5e8f\u5217\u3002\u5143\u7ec4\u548c\u5217\u8868\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5143\u7ec4\u7c7b\u578b\u7684\u53d8\u91cf\u4e00\u65e6\u5b9a\u4e49\uff0c\u5176\u4e2d\u7684\u5143\u7d20\u4e0d\u80fd\u518d\u6dfb\u52a0\u6216\u5220\u9664\uff0c\u800c\u4e14\u5143\u7d20\u7684\u503c\u4e5f\u4e0d\u80fd\u8fdb\u884c\u4fee\u6539\u3002\u5b9a\u4e49\u5143\u7ec4\u901a\u5e38\u4f7f\u7528 () \u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u4e5f\u5efa\u8bae\u5927\u5bb6\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u521b\u5efa\u5143\u7ec4\u3002\u5143\u7ec4\u7c7b\u578b\u652f\u6301\u7684\u8fd0\u7b97\u7b26\u8ddf\u5217\u8868\u662f\u4e00\u6837\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5143\u7ec4\u7684\u5b9a\u4e49\u548c\u8fd0\u7b97\u3002 # \u5b9a\u4e49\u4e00\u4e2a\u4e09\u5143\u7ec4 t1 = ( 30 , 10 , 55 ) # \u5b9a\u4e49\u4e00\u4e2a\u56db\u5143\u7ec4 t2 = ( '\u9a86\u660a' , 40 , True , '\u56db\u5ddd\u6210\u90fd' ) # \u67e5\u770b\u53d8\u91cf\u7684\u7c7b\u578b print ( type ( t1 ), type ( t2 )) # <class 'tuple'> <class 'tuple'> # \u67e5\u770b\u5143\u7ec4\u4e2d\u5143\u7d20\u7684\u6570\u91cf print ( len ( t1 ), len ( t2 )) # 3 4 # \u901a\u8fc7\u7d22\u5f15\u8fd0\u7b97\u83b7\u53d6\u5143\u7ec4\u4e2d\u7684\u5143\u7d20 print ( t1 [ 0 ], t1 [ - 3 ]) # 30 30 print ( t2 [ 3 ], t2 [ - 1 ]) # \u56db\u5ddd\u6210\u90fd \u56db\u5ddd\u6210\u90fd # \u5faa\u73af\u904d\u5386\u5143\u7ec4\u4e2d\u7684\u5143\u7d20 for member in t2 : print ( member ) # \u6210\u5458\u8fd0\u7b97 print ( 100 in t1 ) # False print ( 40 in t2 ) # True # \u62fc\u63a5 t3 = t1 + t2 print ( t3 ) # (30, 10, 55, '\u9a86\u660a', 40, True, '\u56db\u5ddd\u6210\u90fd') # \u5207\u7247 print ( t3 [:: 3 ]) # (30, '\u9a86\u660a', '\u56db\u5ddd\u6210\u90fd') # \u6bd4\u8f83\u8fd0\u7b97 print ( t1 == t3 ) # False print ( t1 >= t3 ) # False print ( t1 < ( 30 , 11 , 55 )) # True \u4e00\u4e2a\u5143\u7ec4\u4e2d\u5982\u679c\u6709\u4e24\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u5c31\u79f0\u4e4b\u4e3a\u4e8c\u5143\u7ec4\uff1b\u4e00\u4e2a\u5143\u7ec4\u4e2d\u5982\u679c\u4e94\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u5c31\u79f0\u4e4b\u4e3a\u4e94\u5143\u7ec4\u3002\u9700\u8981\u63d0\u9192\u5927\u5bb6\u6ce8\u610f\u7684\u662f\uff0c () \u8868\u793a\u7a7a\u5143\u7ec4\uff0c\u4f46\u662f\u5982\u679c\u5143\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u9700\u8981\u52a0\u4e0a\u4e00\u4e2a\u9017\u53f7\uff0c\u5426\u5219 () \u5c31\u4e0d\u662f\u4ee3\u8868\u5143\u7ec4\u7684\u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u800c\u662f\u6539\u53d8\u8fd0\u7b97\u4f18\u5148\u7ea7\u7684\u5706\u62ec\u53f7\uff0c\u6240\u4ee5 ('hello', ) \u548c (100, ) \u624d\u662f\u4e00\u5143\u7ec4\uff0c\u800c ('hello') \u548c (100) \u53ea\u662f\u5b57\u7b26\u4e32\u548c\u6574\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u52a0\u4ee5\u9a8c\u8bc1\u3002 # \u7a7a\u5143\u7ec4 a = () print ( type ( a )) # <class 'tuple'> # \u4e0d\u662f\u5143\u7ec4 b = ( 'hello' ) print ( type ( b )) # <class 'str'> c = ( 100 ) print ( type ( c )) # <class 'int'> # \u4e00\u5143\u7ec4 d = ( 'hello' , ) print ( type ( d )) # <class 'tuple'> e = ( 100 , ) print ( type ( e )) # <class 'tuple'>","title":"\u5b9a\u4e49\u548c\u4f7f\u7528\u5143\u7ec4"},{"location":"%E7%AC%AC09%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%85%83%E7%BB%84/#_2","text":"\u8bb2\u5230\u8fd9\u91cc\uff0c\u76f8\u4fe1\u5927\u5bb6\u4e00\u5b9a\u8feb\u5207\u7684\u60f3\u77e5\u9053\u5143\u7ec4\u6709\u54ea\u4e9b\u5e94\u7528\u573a\u666f\uff0c\u6211\u4eec\u7ed9\u5927\u5bb6\u4e3e\u51e0\u4e2a\u4f8b\u5b50\u3002","title":"\u5143\u7ec4\u7684\u5e94\u7528\u573a\u666f"},{"location":"%E7%AC%AC09%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%85%83%E7%BB%84/#1","text":"\u5f53\u6211\u4eec\u628a\u591a\u4e2a\u7528\u9017\u53f7\u5206\u9694\u7684\u503c\u8d4b\u7ed9\u4e00\u4e2a\u53d8\u91cf\u65f6\uff0c\u591a\u4e2a\u503c\u4f1a\u6253\u5305\u6210\u4e00\u4e2a\u5143\u7ec4\u7c7b\u578b\uff1b\u5f53\u6211\u4eec\u628a\u4e00\u4e2a\u5143\u7ec4\u8d4b\u503c\u7ed9\u591a\u4e2a\u53d8\u91cf\u65f6\uff0c\u5143\u7ec4\u4f1a\u89e3\u5305\u6210\u591a\u4e2a\u503c\u7136\u540e\u5206\u522b\u8d4b\u7ed9\u5bf9\u5e94\u7684\u53d8\u91cf\uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6240\u793a\u3002 # \u6253\u5305 a = 1 , 10 , 100 print ( type ( a ), a ) # <class 'tuple'> (1, 10, 100) # \u89e3\u5305 i , j , k = a print ( i , j , k ) # 1 10 100 \u5728\u89e3\u5305\u65f6\uff0c\u5982\u679c\u89e3\u5305\u51fa\u6765\u7684\u5143\u7d20\u4e2a\u6570\u548c\u53d8\u91cf\u4e2a\u6570\u4e0d\u5bf9\u5e94\uff0c\u4f1a\u5f15\u53d1 ValueError \u5f02\u5e38\uff0c\u9519\u8bef\u4fe1\u606f\u4e3a\uff1a too many values to unpack \uff08\u89e3\u5305\u7684\u503c\u592a\u591a\uff09\u6216 not enough values to unpack \uff08\u89e3\u5305\u7684\u503c\u4e0d\u8db3\uff09\u3002 a = 1 , 10 , 100 , 1000 # i, j, k = a # ValueError: too many values to unpack (expected 3) # i, j, k, l, m, n = a # ValueError: not enough values to unpack (expected 6, got 4) \u6709\u4e00\u79cd\u89e3\u51b3\u53d8\u91cf\u4e2a\u6570\u5c11\u4e8e\u5143\u7d20\u7684\u4e2a\u6570\u65b9\u6cd5\uff0c\u5c31\u662f\u4f7f\u7528\u661f\u53f7\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u4e4b\u524d\u8bb2\u51fd\u6570\u7684\u53ef\u53d8\u53c2\u6570\u65f6\u4f7f\u7528\u8fc7\u661f\u53f7\u8868\u8fbe\u5f0f\u3002\u6709\u4e86\u661f\u53f7\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u53d8\u91cf\u63a5\u6536\u591a\u4e2a\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7528\u661f\u53f7\u8868\u8fbe\u5f0f\u4fee\u9970\u7684\u53d8\u91cf\u4f1a\u53d8\u6210\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u8868\u4e2d\u67090\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u3002\u8fd8\u6709\u5728\u89e3\u5305\u8bed\u6cd5\u4e2d\uff0c\u661f\u53f7\u8868\u8fbe\u5f0f\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 a = 1 , 10 , 100 , 1000 i , j , * k = a print ( i , j , k ) # 1 10 [100, 1000] i , * j , k = a print ( i , j , k ) # 1 [10, 100] 1000 * i , j , k = a print ( i , j , k ) # [1, 10] 100 1000 * i , j = a print ( i , j ) # [1, 10, 100] 1000 i , * j = a print ( i , j ) # 1 [10, 100, 1000] i , j , k , * l = a print ( i , j , k , l ) # 1 10 100 [1000] i , j , k , l , * m = a print ( i , j , k , l , m ) # 1 10 100 1000 [] \u9700\u8981\u8bf4\u660e\u4e00\u70b9\uff0c\u89e3\u5305\u8bed\u6cd5\u5bf9\u6240\u6709\u7684\u5e8f\u5217\u90fd\u6210\u7acb\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5bf9\u5217\u8868\u4ee5\u53ca\u6211\u4eec\u4e4b\u524d\u8bb2\u5230\u7684 range \u51fd\u6570\u8fd4\u56de\u7684\u8303\u56f4\u5e8f\u5217\u90fd\u53ef\u4ee5\u4f7f\u7528\u89e3\u5305\u8bed\u6cd5\u3002\u5927\u5bb6\u53ef\u4ee5\u5c1d\u8bd5\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u4f1a\u51fa\u73b0\u600e\u6837\u7684\u7ed3\u679c\u3002 a , b , * c = range ( 1 , 10 ) print ( a , b , c ) a , b , c = [ 1 , 10 , 100 ] print ( a , b , c ) a , * b , c = 'hello' print ( a , b , c )","title":"\u4f8b\u5b501\uff1a\u6253\u5305\u548c\u89e3\u5305\u64cd\u4f5c\u3002"},{"location":"%E7%AC%AC09%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%85%83%E7%BB%84/#2","text":"\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\u662f\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u7ecf\u5178\u6848\u4f8b\uff0c\u5728\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\u90fd\u9700\u8981\u501f\u52a9\u4e00\u4e2a\u4e2d\u95f4\u53d8\u91cf\u624d\u80fd\u505a\u5230\uff0c\u5982\u679c\u4e0d\u7528\u4e2d\u95f4\u53d8\u91cf\u5c31\u9700\u8981\u4f7f\u7528\u6bd4\u8f83\u6666\u6da9\u7684\u4f4d\u8fd0\u7b97\u6765\u5b9e\u73b0\u3002\u5728Python\u4e2d\uff0c\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf a \u548c b \u7684\u503c\u53ea\u9700\u8981\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\u3002 a , b = b , a \u540c\u7406\uff0c\u5982\u679c\u8981\u5c06\u4e09\u4e2a\u53d8\u91cf a \u3001 b \u3001 c \u7684\u503c\u4e92\u6362\uff0c\u5373 b \u8d4b\u7ed9 a \uff0c c \u8d4b\u7ed9 b \uff0c a \u8d4b\u7ed9 c \uff0c\u4e5f\u53ef\u4ee5\u5982\u6cd5\u70ae\u5236\u3002 a , b , c = b , c , a \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u4e0a\u9762\u5e76\u6ca1\u6709\u7528\u5230\u6253\u5305\u548c\u89e3\u5305\u8bed\u6cd5\uff0cPython\u7684\u5b57\u8282\u7801\u6307\u4ee4\u4e2d\u6709 ROT_TWO \u548c ROT_THREE \u8fd9\u6837\u7684\u6307\u4ee4\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6548\u7387\u662f\u975e\u5e38\u9ad8\u7684\u3002\u4f46\u662f\u5982\u679c\u6709\u591a\u4e8e\u4e09\u4e2a\u53d8\u91cf\u7684\u503c\u8981\u4f9d\u6b21\u4e92\u6362\uff0c\u8fd9\u4e2a\u65f6\u5019\u6ca1\u6709\u76f4\u63a5\u53ef\u7528\u7684\u5b57\u8282\u7801\u6307\u4ee4\uff0c\u6267\u884c\u7684\u539f\u7406\u5c31\u662f\u6211\u4eec\u4e0a\u9762\u8bb2\u89e3\u7684\u6253\u5305\u548c\u89e3\u5305\u64cd\u4f5c\u3002","title":"\u4f8b\u5b502\uff1a\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\u3002"},{"location":"%E7%AC%AC09%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%85%83%E7%BB%84/#_3","text":"\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u503c\u5f97\u63a2\u8ba8\u7684\u95ee\u9898\uff0cPython\u4e2d\u5df2\u7ecf\u6709\u4e86\u5217\u8868\u7c7b\u578b\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981\u5143\u7ec4\u8fd9\u6837\u7684\u7c7b\u578b\u5462\uff1f\u8fd9\u4e2a\u95ee\u9898\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u4f3c\u4e4e\u6709\u70b9\u56f0\u96be\uff0c\u4e0d\u8fc7\u6ca1\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u5148\u629b\u51fa\u89c2\u70b9\uff0c\u5927\u5bb6\u53ef\u4ee5\u4e00\u8fb9\u5b66\u4e60\u4e00\u8fb9\u6162\u6162\u4f53\u4f1a\u3002 \u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c \u4e0d\u53ef\u53d8\u7c7b\u578b\u66f4\u9002\u5408\u591a\u7ebf\u7a0b\u73af\u5883 \uff0c\u56e0\u4e3a\u5b83\u964d\u4f4e\u4e86\u5e76\u53d1\u8bbf\u95ee\u53d8\u91cf\u7684\u540c\u6b65\u5316\u5f00\u9500\u3002\u5173\u4e8e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u4f1a\u5728\u540e\u9762\u8bb2\u89e3\u591a\u7ebf\u7a0b\u7684\u65f6\u5019\u4e3a\u5927\u5bb6\u8be6\u7ec6\u8bba\u8ff0\u3002 \u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c\u901a\u5e38 \u4e0d\u53ef\u53d8\u7c7b\u578b\u5728\u521b\u5efa\u65f6\u95f4\u548c\u5360\u7528\u7a7a\u95f4\u4e0a\u9762\u90fd\u4f18\u4e8e\u5bf9\u5e94\u7684\u53ef\u53d8\u7c7b\u578b \u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 sys \u6a21\u5757\u7684 getsizeof \u51fd\u6570\u6765\u68c0\u67e5\u4fdd\u5b58\u76f8\u540c\u5143\u7d20\u7684\u5143\u7ec4\u548c\u5217\u8868\u5404\u81ea\u5360\u7528\u4e86\u591a\u5c11\u5185\u5b58\u7a7a\u95f4\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 timeit \u6a21\u5757\u7684 timeit \u51fd\u6570\u6765\u770b\u770b\u521b\u5efa\u4fdd\u5b58\u76f8\u540c\u5143\u7d20\u7684\u5143\u7ec4\u548c\u5217\u8868\u5404\u81ea\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import sys import timeit a = list ( range ( 100000 )) b = tuple ( range ( 100000 )) print ( sys . getsizeof ( a ), sys . getsizeof ( b )) # 900120 800056 print ( timeit . timeit ( '[1, 2, 3, 4, 5, 6, 7, 8, 9]' )) print ( timeit . timeit ( '(1, 2, 3, 4, 5, 6, 7, 8, 9)' )) Python\u4e2d\u7684\u5143\u7ec4\u548c\u5217\u8868\u662f\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u505a\u5230\u3002 # \u5c06\u5143\u7ec4\u8f6c\u6362\u6210\u5217\u8868 info = ( '\u9a86\u660a' , 175 , True , '\u56db\u5ddd\u6210\u90fd' ) print ( list ( info )) # ['\u9a86\u660a', 175, True, '\u56db\u5ddd\u6210\u90fd'] # \u5c06\u5217\u8868\u8f6c\u6362\u6210\u5143\u7ec4 fruits = [ 'apple' , 'banana' , 'orange' ] print ( tuple ( fruits )) # ('apple', 'banana', 'orange')","title":"\u5143\u7ec4\u548c\u5217\u8868\u7684\u6bd4\u8f83"},{"location":"%E7%AC%AC09%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%85%83%E7%BB%84/#_4","text":"\u5217\u8868\u548c\u5143\u7ec4\u90fd\u662f\u5bb9\u5668\u578b\u7684\u6570\u636e\u7c7b\u578b \uff0c\u5373\u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u4fdd\u5b58\u591a\u4e2a\u6570\u636e\u3002 \u5217\u8868\u662f\u53ef\u53d8\u6570\u636e\u7c7b\u578b \uff0c \u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b \uff0c\u6240\u4ee5\u5217\u8868\u6dfb\u52a0\u5143\u7d20\u3001\u5220\u9664\u5143\u7d20\u3001\u6e05\u7a7a\u3001\u6392\u5e8f\u7b49\u65b9\u6cd5\u5bf9\u4e8e\u5143\u7ec4\u6765\u8bf4\u662f\u4e0d\u6210\u7acb\u7684\u3002\u4f46\u662f\u5217\u8868\u548c\u5143\u7ec4\u90fd\u53ef\u4ee5\u8fdb\u884c \u62fc\u63a5 \u3001 \u6210\u5458\u8fd0\u7b97 \u3001 \u7d22\u5f15\u548c\u5207\u7247 \u8fd9\u4e9b\u64cd\u4f5c\uff0c\u540e\u9762\u6211\u4eec\u8981\u8bb2\u5230\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u4e5f\u662f\u8fd9\u6837\uff0c\u56e0\u4e3a\u5b57\u7b26\u4e32\u5c31\u662f\u5b57\u7b26\u6309\u4e00\u5b9a\u987a\u5e8f\u6784\u6210\u7684\u5e8f\u5217\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\u4e09\u8005\u5e76\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002\u6211\u4eec \u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u5217\u8868\u7684\u751f\u6210\u5f0f\u8bed\u6cd5\u6765\u521b\u5efa\u5217\u8868 \uff0c\u5b83\u5f88\u597d\u7528\uff0c\u4e5f\u662fPython\u4e2d\u975e\u5e38\u6709\u7279\u8272\u7684\u8bed\u6cd5\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/","text":"\u7b2c10\u8bfe\uff1a\u5b57\u7b26\u4e32\u7684\u4f7f\u7528 \u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u4fc3\u4f7f\u4e86\u73b0\u4ee3\u7535\u5b50\u8ba1\u7b97\u673a\u7684\u8bde\u751f\uff0c\u4e16\u754c\u4e0a\u7684\u7b2c\u4e00\u53f0\u901a\u7528\u7535\u5b50\u8ba1\u7b97\u673a\u53ebENIAC\uff08\u7535\u5b50\u6570\u503c\u79ef\u5206\u8ba1\u7b97\u673a\uff09\uff0c\u8bde\u751f\u4e8e\u7f8e\u56fd\u7684\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\uff0c\u5360\u5730167\u5e73\u7c73\uff0c\u91cd\u91cf27\u5428\uff0c\u6bcf\u79d2\u949f\u5927\u7ea6\u80fd\u591f\u5b8c\u6210\u7ea65000\u6b21\u6d6e\u70b9\u8fd0\u7b97\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002ENIAC\u8bde\u751f\u4e4b\u540e\u88ab\u5e94\u7528\u4e8e\u5bfc\u5f39\u5f39\u9053\u7684\u8ba1\u7b97\uff0c\u800c\u6570\u503c\u8ba1\u7b97\u4e5f\u662f\u73b0\u4ee3\u7535\u5b50\u8ba1\u7b97\u673a\u6700\u4e3a\u91cd\u8981\u7684\u4e00\u9879\u529f\u80fd\u3002 \u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u867d\u7136\u6570\u503c\u8fd0\u7b97\u4ecd\u7136\u662f\u8ba1\u7b97\u673a\u65e5\u5e38\u5de5\u4f5c\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u4f46\u662f\u4eca\u5929\u7684\u8ba1\u7b97\u673a\u8fd8\u8981\u5904\u7406\u5927\u91cf\u7684\u4ee5\u6587\u672c\u5f62\u5f0f\u5b58\u5728\u7684\u4fe1\u606f\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7Python\u7a0b\u5e8f\u6765\u64cd\u4f5c\u672c\u8fd9\u4e9b\u6587\u672c\u4fe1\u606f\uff0c\u5c31\u5fc5\u987b\u8981\u5148\u4e86\u89e3\u5b57\u7b26\u4e32\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u4e0e\u5b83\u76f8\u5173\u7684\u77e5\u8bc6\u3002 \u5b57\u7b26\u4e32\u7684\u5b9a\u4e49 \u6240\u8c13 \u5b57\u7b26\u4e32 \uff0c\u5c31\u662f \u7531\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u6709\u9650\u5e8f\u5217 \uff0c\u4e00\u822c\u8bb0\u4e3a\uff1a $$ s = a_1a_2 \\cdots a_n \\,\\,\\,\\,\\, (0 \\le n \\le \\infty) $$ \u5728Python\u7a0b\u5e8f\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u628a\u5355\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u7528\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\u5305\u56f4\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u662f\u7279\u6b8a\u7b26\u53f7\u3001\u82f1\u6587\u5b57\u6bcd\u3001\u4e2d\u6587\u5b57\u7b26\u3001\u65e5\u6587\u7684\u5e73\u5047\u540d\u6216\u7247\u5047\u540d\u3001\u5e0c\u814a\u5b57\u6bcd\u3001 Emoji\u5b57\u7b26 \u7b49\u3002 s1 = 'hello, world!' s2 = \"\u4f60\u597d\uff0c\u4e16\u754c\uff01\" print ( s1 , s2 ) # \u4ee5\u4e09\u4e2a\u53cc\u5f15\u53f7\u6216\u5355\u5f15\u53f7\u5f00\u5934\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5\u6298\u884c s3 = ''' hello, world! ''' print ( s3 , end = '' ) \u63d0\u793a \uff1a print \u51fd\u6570\u4e2d\u7684 end='' \u8868\u793a\u8f93\u51fa\u540e\u4e0d\u6362\u884c\uff0c\u5373\u5c06\u9ed8\u8ba4\u7684\u7ed3\u675f\u7b26 \\n \uff08\u6362\u884c\u7b26\uff09\u66f4\u6362\u4e3a '' \uff08\u7a7a\u5b57\u7b26\uff09\u3002 \u8f6c\u4e49\u5b57\u7b26\u548c\u539f\u59cb\u5b57\u7b26\u4e32 \u53ef\u4ee5\u5728\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528 \\ \uff08\u53cd\u659c\u6760\uff09\u6765\u8868\u793a\u8f6c\u4e49\uff0c\u4e5f\u5c31\u662f\u8bf4 \\ \u540e\u9762\u7684\u5b57\u7b26\u4e0d\u518d\u662f\u5b83\u539f\u6765\u7684\u610f\u4e49\uff0c\u4f8b\u5982\uff1a \\n \u4e0d\u662f\u4ee3\u8868\u53cd\u659c\u6760\u548c\u5b57\u7b26 n \uff0c\u800c\u662f\u8868\u793a\u6362\u884c\uff1b \\t \u4e5f\u4e0d\u662f\u4ee3\u8868\u53cd\u659c\u6760\u548c\u5b57\u7b26 t \uff0c\u800c\u662f\u8868\u793a\u5236\u8868\u7b26\u3002\u6240\u4ee5\u5982\u679c\u5b57\u7b26\u4e32\u672c\u8eab\u53c8\u5305\u542b\u4e86 ' \u3001 \" \u3001 \\ \u8fd9\u4e9b\u7279\u6b8a\u7684\u5b57\u7b26\uff0c\u5fc5\u987b\u8981\u901a\u8fc7 \\ \u8fdb\u884c\u8f6c\u4e49\u5904\u7406\u3002\u4f8b\u5982\u8981\u8f93\u51fa\u4e00\u4e2a\u5e26\u5355\u5f15\u53f7\u6216\u53cd\u659c\u6760\u7684\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u7528\u5982\u4e0b\u6240\u793a\u7684\u65b9\u6cd5\u3002 s1 = ' \\' hello, world! \\' ' print ( s1 ) s2 = ' \\\\ hello, world! \\\\ ' print ( s2 ) Python\u4e2d\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5 r \u6216 R \u5f00\u5934\uff0c\u8fd9\u79cd\u5b57\u7b26\u4e32\u88ab\u79f0\u4e3a\u539f\u59cb\u5b57\u7b26\u4e32\uff0c\u610f\u601d\u662f\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u662f\u5b83\u672c\u6765\u7684\u542b\u4e49\uff0c\u6ca1\u6709\u6240\u8c13\u7684\u8f6c\u4e49\u5b57\u7b26\u3002\u4f8b\u5982\uff0c\u5728\u5b57\u7b26\u4e32 'hello\\n' \u4e2d\uff0c \\n \u8868\u793a\u6362\u884c\uff1b\u800c\u5728 r'hello\\n' \u4e2d\uff0c \\n \u4e0d\u518d\u8868\u793a\u6362\u884c\uff0c\u5c31\u662f\u53cd\u659c\u6760\u548c\u5b57\u7b26 n \u3002\u5927\u5bb6\u53ef\u4ee5\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u4f1a\u8f93\u51fa\u4ec0\u4e48\u3002 # \u5b57\u7b26\u4e32s1\u4e2d\\t\u662f\u5236\u8868\u7b26\uff0c\\n\u662f\u6362\u884c\u7b26 s1 = ' \\t ime up \\n ow' print ( s1 ) # \u5b57\u7b26\u4e32s2\u4e2d\u6ca1\u6709\u8f6c\u4e49\u5b57\u7b26\uff0c\u6bcf\u4e2a\u5b57\u7b26\u90fd\u662f\u539f\u59cb\u542b\u4e49 s2 = r '\\time up \\now' print ( s2 ) Python\u4e2d\u8fd8\u5141\u8bb8\u5728 \\ \u540e\u9762\u8fd8\u53ef\u4ee5\u8ddf\u4e00\u4e2a\u516b\u8fdb\u5236\u6216\u8005\u5341\u516d\u8fdb\u5236\u6570\u6765\u8868\u793a\u5b57\u7b26\uff0c\u4f8b\u5982 \\141 \u548c \\x61 \u90fd\u4ee3\u8868\u5c0f\u5199\u5b57\u6bcd a \uff0c\u524d\u8005\u662f\u516b\u8fdb\u5236\u7684\u8868\u793a\u6cd5\uff0c\u540e\u8005\u662f\u5341\u516d\u8fdb\u5236\u7684\u8868\u793a\u6cd5\u3002\u53e6\u5916\u4e00\u79cd\u8868\u793a\u5b57\u7b26\u7684\u65b9\u5f0f\u662f\u5728 \\u \u540e\u9762\u8ddfUnicode\u5b57\u7b26\u7f16\u7801\uff0c\u4f8b\u5982 \\u9a86\\u660a \u4ee3\u8868\u7684\u662f\u4e2d\u6587\u201c\u9a86\u660a\u201d\u3002\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u8f93\u51fa\u4e86\u4ec0\u4e48\u3002 s1 = ' \\141\\142\\143\\x61\\x62\\x63 ' s2 = ' \\u9a86\\u660a ' print ( s1 , s2 ) \u5b57\u7b26\u4e32\u7684\u8fd0\u7b97 Python\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 + \u8fd0\u7b97\u7b26\u6765\u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\uff0c\u53ef\u4ee5\u4f7f\u7528 * \u8fd0\u7b97\u7b26\u6765\u91cd\u590d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u7528 in \u548c not in \u6765\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u53e6\u5916\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 [] \u548c [:] \u8fd0\u7b97\u7b26\u4ece\u5b57\u7b26\u4e32\u53d6\u51fa\u67d0\u4e2a\u5b57\u7b26\u6216\u67d0\u4e9b\u5b57\u7b26\u3002 \u62fc\u63a5\u548c\u91cd\u590d \u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u4f7f\u7528 + \u548c * \u8fd0\u7b97\u7b26\u6765\u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u548c\u91cd\u590d\u64cd\u4f5c\u3002 s1 = 'hello' + ' ' + 'world' print ( s1 ) # hello world s2 = '!' * 3 print ( s2 ) # !!! s1 += s2 # s1 = s1 + s2 print ( s1 ) # hello world!!! s1 *= 2 # s1 = s1 * 2 print ( s1 ) # hello world!!!hello world!!! \u7528 * \u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u91cd\u590d\u662f\u975e\u5e38\u6709\u610f\u601d\u7684\u4e00\u4e2a\u8fd0\u7b97\u7b26\uff0c\u5728\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u8981\u8868\u793a\u4e00\u4e2a\u670910\u4e2a a \u7684\u5b57\u7b26\u4e32\uff0c\u4f60\u53ea\u80fd\u5199\u6210 \"aaaaaaaaaa\" \uff0c\u4f46\u662f\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u5199\u6210 'a' * 10 \u3002\u4f60\u53ef\u80fd\u89c9\u5f97 \"aaaaaaaaaa\" \u8fd9\u79cd\u5199\u6cd5\u4e5f\u6ca1\u6709\u4ec0\u4e48\u4e0d\u65b9\u4fbf\u7684\uff0c\u90a3\u4e48\u60f3\u4e00\u60f3\uff0c\u5982\u679c\u5b57\u7b26 a \u8981\u91cd\u590d100\u6b21\u6216\u80051000\u6b21\u53c8\u4f1a\u5982\u4f55\u5462\uff1f \u6bd4\u8f83\u8fd0\u7b97 \u5bf9\u4e8e\u4e24\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6bd4\u8f83\u8fd0\u7b97\u7b26\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u76f8\u7b49\u6027\u6216\u5927\u5c0f\u3002\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u56e0\u4e3a\u5b57\u7b26\u4e32\u5728\u8ba1\u7b97\u673a\u5185\u5b58\u4e2d\u4e5f\u662f\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b58\u5728\u7684\uff0c\u90a3\u4e48\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u6bd4\u8f83\u6bd4\u7684\u662f\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u7f16\u7801\u7684\u5927\u5c0f\u3002\u4f8b\u5982 A \u7684\u7f16\u7801\u662f 65 \uff0c \u800c a \u7684\u7f16\u7801\u662f 97 \uff0c\u6240\u4ee5 'A' < 'a' \u7684\u7ed3\u679c\u76f8\u5f53\u4e8e\u5c31\u662f 65 < 97 \u7684\u7ed3\u679c\uff0c\u5f88\u663e\u7136\u662f True \uff1b\u800c 'boy' < 'bad' \uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u90fd\u662f 'b' \u6bd4\u4e0d\u51fa\u5927\u5c0f\uff0c\u6240\u4ee5\u5b9e\u9645\u6bd4\u8f83\u7684\u662f\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684\u5927\u5c0f\uff0c\u663e\u7136 'o' < 'a' \u7684\u7ed3\u679c\u662f False \uff0c\u6240\u4ee5 'boy' < 'bad' \u7684\u7ed3\u679c\u4e5f\u662f False \u3002\u5982\u679c\u4e0d\u6e05\u695a\u4e24\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u7f16\u7801\u5230\u5e95\u662f\u591a\u5c11\uff0c\u53ef\u4ee5\u4f7f\u7528 ord \u51fd\u6570\u6765\u83b7\u5f97\uff0c\u4f8b\u5982 ord('A') \u7684\u503c\u662f 65 \uff0c\u800c ord('\u660a') \u7684\u503c\u662f 26122 \u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4e3a\u5927\u5bb6\u5c55\u793a\u4e86\u5b57\u7b26\u4e32\u7684\u6bd4\u8f83\u8fd0\u7b97\u3002 s1 = 'a whole new world' s2 = 'hello world' print ( s1 == s2 , s1 < s2 ) # False True print ( s2 == 'hello world' ) # True print ( s2 == 'Hello world' ) # False print ( s2 != 'Hello world' ) # True s3 = '\u9a86\u660a' print ( ord ( '\u9a86' ), ord ( '\u660a' )) # 39558 26122 s4 = '\u738b\u5927\u9524' print ( ord ( '\u738b' ), ord ( '\u5927' ), ord ( '\u9524' )) # 29579 22823 38180 print ( s3 > s4 , s3 <= s4 ) # True False \u9700\u8981\u5f3a\u8c03\u4e00\u4e0b\u7684\u662f\uff0c\u5b57\u7b26\u4e32\u7684\u6bd4\u8f83\u8fd0\u7b97\u6bd4\u8f83\u7684\u662f\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0cPython\u4e2d\u8fd8\u6709\u4e00\u4e2a is \u8fd0\u7b97\u7b26\uff08\u8eab\u4efd\u8fd0\u7b97\u7b26\uff09\uff0c\u5982\u679c\u7528 is \u6765\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b83\u6bd4\u8f83\u7684\u662f\u4e24\u4e2a\u53d8\u91cf\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\uff08\u4e0d\u7406\u89e3\u5148\u8df3\u8fc7\uff09\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e24\u4e2a\u53d8\u91cf\u662f\u5426\u5bf9\u5e94\u5185\u5b58\u4e2d\u7684\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u6bd4\u8f83\u6e05\u695a is \u8fd0\u7b97\u7b26\u7684\u4f5c\u7528\u4e86\u3002 s1 = 'hello world' s2 = 'hello world' s3 = s2 # \u6bd4\u8f83\u5b57\u7b26\u4e32\u7684\u5185\u5bb9 print ( s1 == s2 , s2 == s3 ) # True True # \u6bd4\u8f83\u5b57\u7b26\u4e32\u7684\u5185\u5b58\u5730\u5740 print ( s1 is s2 , s2 is s3 ) # False True \u6210\u5458\u8fd0\u7b97 Python\u4e2d\u53ef\u4ee5\u7528 in \u548c not in \u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u5b58\u5728\u53e6\u5916\u4e00\u4e2a\u5b57\u7b26\u6216\u5b57\u7b26\u4e32\uff0c in \u548c not in \u8fd0\u7b97\u901a\u5e38\u79f0\u4e3a\u6210\u5458\u8fd0\u7b97\uff0c\u4f1a\u4ea7\u751f\u5e03\u5c14\u503c True \u6216 False \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 s1 = 'hello, world' print ( 'wo' in s1 ) # True s2 = 'goodbye' print ( s2 in s1 ) # False \u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6 \u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6\u6ca1\u6709\u76f4\u63a5\u7684\u8fd0\u7b97\u7b26\uff0c\u800c\u662f\u4f7f\u7528\u5185\u7f6e\u51fd\u6570 len \uff0c\u6211\u4eec\u5728\u4e0a\u8282\u8bfe\u7684\u63d0\u5230\u8fc7\u8fd9\u4e2a\u5185\u7f6e\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 s = 'hello, world' print ( len ( s )) # 12 print ( len ( 'goodbye, world' )) # 14 \u7d22\u5f15\u548c\u5207\u7247 \u5982\u679c\u5e0c\u671b\u4ece\u5b57\u7b26\u4e32\u4e2d\u53d6\u51fa\u67d0\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u7d22\u5f15\u8fd0\u7b97\uff0c\u8fd0\u7b97\u7b26\u662f [n] \uff0c\u5176\u4e2d n \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u5047\u8bbe\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e3a N \uff0c\u90a3\u4e48 n \u53ef\u4ee5\u662f\u4ece 0 \u5230 N-1 \u7684\u6574\u6570\uff0c\u5176\u4e2d 0 \u662f\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\uff0c\u800c N-1 \u662f\u5b57\u7b26\u4e32\u4e2d\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\uff0c\u901a\u5e38\u79f0\u4e4b\u4e3a\u6b63\u5411\u7d22\u5f15\uff1b\u5728Python\u4e2d\uff0c\u5b57\u7b26\u4e32\u7684\u7d22\u5f15\u4e5f\u53ef\u4ee5\u662f\u4ece -1 \u5230 -N \u7684\u6574\u6570\uff0c\u5176\u4e2d -1 \u662f\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\uff0c\u800c -N \u5219\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\uff0c\u901a\u5e38\u79f0\u4e4b\u4e3a\u8d1f\u5411\u7d22\u5f15\u3002\u6ce8\u610f\uff0c\u56e0\u4e3a \u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b \uff0c\u6240\u4ee5 \u4e0d\u80fd\u901a\u8fc7\u7d22\u5f15\u8fd0\u7b97\u4fee\u6539\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26 \u3002 s = 'abc123456' N = len ( s ) # \u83b7\u53d6\u7b2c\u4e00\u4e2a\u5b57\u7b26 print ( s [ 0 ], s [ - N ]) # a a # \u83b7\u53d6\u6700\u540e\u4e00\u4e2a\u5b57\u7b26 print ( s [ N - 1 ], s [ - 1 ]) # 6 6 # \u83b7\u53d6\u7d22\u5f15\u4e3a2\u6216-7\u7684\u5b57\u7b26 print ( s [ 2 ], s [ - 7 ]) # c c # \u83b7\u53d6\u7d22\u5f15\u4e3a5\u548c-4\u7684\u5b57\u7b26 print ( s [ 5 ], s [ - 4 ]) # 3 3 \u9700\u8981\u63d0\u9192\u5927\u5bb6\u6ce8\u610f\u7684\u662f\uff0c\u5728\u8fdb\u884c\u7d22\u5f15\u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u7d22\u5f15\u8d8a\u754c\uff08\u6b63\u5411\u7d22\u5f15\u4e0d\u5728 0 \u5230 N-1 \u8303\u56f4\uff0c\u8d1f\u5411\u7d22\u5f15\u4e0d\u5728 -1 \u5230 -N \u8303\u56f4\uff09\uff0c\u4f1a\u5f15\u53d1 IndexError \u5f02\u5e38\uff0c\u9519\u8bef\u63d0\u793a\u4fe1\u606f\u4e3a\uff1a string index out of range \uff08\u5b57\u7b26\u4e32\u7d22\u5f15\u8d85\u51fa\u8303\u56f4\uff09\u3002 \u5982\u679c\u8981\u4ece\u5b57\u7b26\u4e32\u4e2d\u53d6\u51fa\u591a\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5207\u7247\uff0c\u8fd0\u7b97\u7b26\u662f [i:j:k] \uff0c\u5176\u4e2d i \u662f\u5f00\u59cb\u7d22\u5f15\uff0c\u7d22\u5f15\u5bf9\u5e94\u7684\u5b57\u7b26\u53ef\u4ee5\u53d6\u5230\uff1b j \u662f\u7ed3\u675f\u7d22\u5f15\uff0c\u7d22\u5f15\u5bf9\u5e94\u7684\u5b57\u7b26\u4e0d\u80fd\u53d6\u5230\uff1b k \u662f\u6b65\u957f\uff0c\u9ed8\u8ba4\u503c\u4e3a 1 \uff0c\u8868\u793a\u4ece\u524d\u5411\u540e\u83b7\u53d6\u76f8\u90bb\u5b57\u7b26\u7684\u8fde\u7eed\u5207\u7247\uff0c\u6240\u4ee5 :k \u90e8\u5206\u53ef\u4ee5\u7701\u7565\u3002\u5047\u8bbe\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e3a N \uff0c\u5f53 k > 0 \u65f6\u8868\u793a\u6b63\u5411\u5207\u7247\uff08\u4ece\u524d\u5411\u540e\u83b7\u53d6\u5b57\u7b26\uff09\uff0c\u5982\u679c\u6ca1\u6709\u7ed9\u51fa i \u548c j \u7684\u503c\uff0c\u5219 i \u7684\u9ed8\u8ba4\u503c\u662f 0 \uff0c j \u7684\u9ed8\u8ba4\u503c\u662f N \uff1b\u5f53 k < 0 \u65f6\u8868\u793a\u8d1f\u5411\u5207\u7247\uff08\u4ece\u540e\u5411\u524d\u83b7\u53d6\u5b57\u7b26\uff09\uff0c\u5982\u679c\u6ca1\u6709\u7ed9\u51fa i \u548c j \u7684\u503c\uff0c\u5219 i \u7684\u9ed8\u8ba4\u503c\u662f -1 \uff0cj\u7684\u9ed8\u8ba4\u503c\u662f -N - 1 \u3002\u5982\u679c\u4e0d\u7406\u89e3\uff0c\u76f4\u63a5\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u8bb0\u4f4f\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\u662f 0 \u6216 -N \uff0c\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\u662f N-1 \u6216 -1 \u5c31\u884c\u4e86\u3002 s = 'abc123456' # i=2, j=5, k=1\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ 2 : 5 ]) # c12 # i=-7, j=-4, k=1\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ - 7 : - 4 ]) # c12 # i=2, j=9, k=1\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ 2 :]) # c123456 # i=-7, j=9, k=1\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ - 7 :]) # c123456 # i=2, j=9, k=2\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ 2 :: 2 ]) # c246 # i=-7, j=9, k=2\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ - 7 :: 2 ]) # c246 # i=0, j=9, k=2\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [:: 2 ]) # ac246 # i=1, j=-1, k=2\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ 1 : - 1 : 2 ]) # b135 # i=7, j=1, k=-1\u7684\u8d1f\u5411\u5207\u7247\u64cd\u4f5c print ( s [ 7 : 1 : - 1 ]) # 54321c # i=-2, j=-8, k=-1\u7684\u8d1f\u5411\u5207\u7247\u64cd\u4f5c print ( s [ - 2 : - 8 : - 1 ]) # 54321c # i=7, j=-10, k=-1\u7684\u8d1f\u5411\u5207\u7247\u64cd\u4f5c print ( s [ 7 :: - 1 ]) # 54321cba # i=-1, j=1, k=-1\u7684\u8d1f\u5411\u5207\u7247\u64cd\u4f5c print ( s [: 1 : - 1 ]) # 654321c # i=0, j=9, k=1\u7684\u6b63\u5411\u5207\u7247 print ( s [:]) # abc123456 # i=0, j=9, k=2\u7684\u6b63\u5411\u5207\u7247 print ( s [:: 2 ]) # ac246 # i=-1, j=-10, k=-1\u7684\u8d1f\u5411\u5207\u7247 print ( s [:: - 1 ]) # 654321cba # i=-1, j=-10, k=-2\u7684\u8d1f\u5411\u5207\u7247 print ( s [:: - 2 ]) # 642ca \u5faa\u73af\u904d\u5386\u6bcf\u4e2a\u5b57\u7b26 \u5982\u679c\u5e0c\u671b\u4ece\u5b57\u7b26\u4e32\u4e2d\u53d6\u51fa\u6bcf\u4e2a\u5b57\u7b26\uff0c\u53ef\u4ee5\u4f7f\u7528 for \u5faa\u73af\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u904d\u5386\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u3002 \u65b9\u5f0f\u4e00\uff1a s1 = 'hello' for index in range ( len ( s1 )): print ( s1 [ index ]) \u65b9\u5f0f\u4e8c\uff1a s1 = 'hello' for ch in s1 : print ( ch ) \u5b57\u7b26\u4e32\u7684\u65b9\u6cd5 \u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u7c7b\u578b\u81ea\u5e26\u7684\u65b9\u6cd5\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u64cd\u4f5c\u548c\u5904\u7406\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 \u53d8\u91cf\u540d.\u65b9\u6cd5\u540d() \u7684\u65b9\u5f0f\u6765\u8c03\u7528\u5b83\u7684\u65b9\u6cd5\u3002\u6240\u8c13\u65b9\u6cd5\u5176\u5b9e\u5c31\u662f\u8ddf\u67d0\u4e2a\u7c7b\u578b\u7684\u53d8\u91cf\u7ed1\u5b9a\u7684\u51fd\u6570\uff0c\u540e\u9762\u6211\u4eec\u8bb2\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u65f6\u5019\u8fd8\u4f1a\u5bf9\u8fd9\u4e00\u6982\u5ff5\u8be6\u52a0\u8bf4\u660e\u3002 \u5927\u5c0f\u5199\u76f8\u5173\u64cd\u4f5c \u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u548c\u5b57\u7b26\u4e32\u5927\u5c0f\u5199\u53d8\u6362\u76f8\u5173\u7684\u65b9\u6cd5\u3002 s1 = 'hello, world!' # \u4f7f\u7528capitalize\u65b9\u6cd5\u83b7\u5f97\u5b57\u7b26\u4e32\u9996\u5b57\u6bcd\u5927\u5199\u540e\u7684\u5b57\u7b26\u4e32 print ( s1 . capitalize ()) # Hello, world! # \u4f7f\u7528title\u65b9\u6cd5\u83b7\u5f97\u5b57\u7b26\u4e32\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199\u540e\u7684\u5b57\u7b26\u4e32 print ( s1 . title ()) # Hello, World! # \u4f7f\u7528upper\u65b9\u6cd5\u83b7\u5f97\u5b57\u7b26\u4e32\u5927\u5199\u540e\u7684\u5b57\u7b26\u4e32 print ( s1 . upper ()) # HELLO, WORLD! s2 = 'GOODBYE' # \u4f7f\u7528lower\u65b9\u6cd5\u83b7\u5f97\u5b57\u7b26\u4e32\u5c0f\u5199\u540e\u7684\u5b57\u7b26\u4e32 print ( s2 . lower ()) # goodbye \u67e5\u627e\u64cd\u4f5c \u5982\u679c\u60f3\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4ece\u524d\u5411\u540e\u67e5\u627e\u6709\u6ca1\u6709\u53e6\u5916\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u7684 find \u6216 index \u65b9\u6cd5\u3002 s = 'hello, world!' # find\u65b9\u6cd5\u4ece\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u6240\u5728\u7684\u4f4d\u7f6e # \u627e\u5230\u4e86\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u9996\u5b57\u7b26\u7684\u7d22\u5f15 print ( s . find ( 'or' )) # 8 # \u627e\u4e0d\u5230\u8fd4\u56de-1 print ( s . find ( 'shit' )) # -1 # index\u65b9\u6cd5\u4e0efind\u65b9\u6cd5\u7c7b\u4f3c # \u627e\u5230\u4e86\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u9996\u5b57\u7b26\u7684\u7d22\u5f15 print ( s . index ( 'or' )) # 8 # \u627e\u4e0d\u5230\u5f15\u53d1\u5f02\u5e38 print ( s . index ( 'shit' )) # ValueError: substring not found \u5728\u4f7f\u7528 find \u548c index \u65b9\u6cd5\u65f6\u8fd8\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u7684\u53c2\u6570\u6765\u6307\u5b9a\u67e5\u627e\u7684\u8303\u56f4\uff0c\u4e5f\u5c31\u662f\u67e5\u627e\u4e0d\u5fc5\u4ece\u7d22\u5f15\u4e3a 0 \u7684\u4f4d\u7f6e\u5f00\u59cb\u3002 find \u548c index \u65b9\u6cd5\u8fd8\u6709\u9006\u5411\u67e5\u627e\uff08\u4ece\u540e\u5411\u524d\u67e5\u627e\uff09\u7684\u7248\u672c\uff0c\u5206\u522b\u662f rfind \u548c rindex \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 s = 'hello good world!' # \u4ece\u524d\u5411\u540e\u67e5\u627e\u5b57\u7b26o\u51fa\u73b0\u7684\u4f4d\u7f6e(\u76f8\u5f53\u4e8e\u7b2c\u4e00\u6b21\u51fa\u73b0) print ( s . find ( 'o' )) # 4 # \u4ece\u7d22\u5f15\u4e3a5\u7684\u4f4d\u7f6e\u5f00\u59cb\u67e5\u627e\u5b57\u7b26o\u51fa\u73b0\u7684\u4f4d\u7f6e print ( s . find ( 'o' , 5 )) # 7 # \u4ece\u540e\u5411\u524d\u67e5\u627e\u5b57\u7b26o\u51fa\u73b0\u7684\u4f4d\u7f6e(\u76f8\u5f53\u4e8e\u6700\u540e\u4e00\u6b21\u51fa\u73b0) print ( s . rfind ( 'o' )) # 12 \u6027\u8d28\u5224\u65ad \u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u7684 startswith \u3001 endswith \u6765\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u67d0\u4e2a\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\uff1b\u8fd8\u53ef\u4ee5\u7528 is \u5f00\u5934\u7684\u65b9\u6cd5\u5224\u65ad\u5b57\u7b26\u4e32\u7684\u7279\u5f81\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u8fd4\u56de\u5e03\u5c14\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 s1 = 'hello, world!' # startwith\u65b9\u6cd5\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u5f00\u5934\u8fd4\u56de\u5e03\u5c14\u503c print ( s1 . startswith ( 'He' )) # False print ( s1 . startswith ( 'hel' )) # True # endswith\u65b9\u6cd5\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u7ed3\u5c3e\u8fd4\u56de\u5e03\u5c14\u503c print ( s1 . endswith ( '!' )) # True s2 = 'abc123456' # isdigit\u65b9\u6cd5\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u7531\u6570\u5b57\u6784\u6210\u8fd4\u56de\u5e03\u5c14\u503c print ( s2 . isdigit ()) # False # isalpha\u65b9\u6cd5\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u5b57\u6bcd\u6784\u6210\u8fd4\u56de\u5e03\u5c14\u503c print ( s2 . isalpha ()) # False # isalnum\u65b9\u6cd5\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6570\u5b57\u548c\u5b57\u6bcd\u6784\u6210\u8fd4\u56de\u5e03\u5c14\u503c print ( s2 . isalnum ()) # True \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 \u5728Python\u4e2d\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b\u53ef\u4ee5\u901a\u8fc7 center \u3001 ljust \u3001 rjust \u65b9\u6cd5\u505a\u5c45\u4e2d\u3001\u5de6\u5bf9\u9f50\u548c\u53f3\u5bf9\u9f50\u7684\u5904\u7406\u3002\u5982\u679c\u8981\u5728\u5b57\u7b26\u4e32\u7684\u5de6\u4fa7\u8865\u96f6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 zfill \u65b9\u6cd5\u3002 s = 'hello, world' # center\u65b9\u6cd5\u4ee5\u5bbd\u5ea620\u5c06\u5b57\u7b26\u4e32\u5c45\u4e2d\u5e76\u5728\u4e24\u4fa7\u586b\u5145* print ( s . center ( 20 , '*' )) # ****hello, world**** # rjust\u65b9\u6cd5\u4ee5\u5bbd\u5ea620\u5c06\u5b57\u7b26\u4e32\u53f3\u5bf9\u9f50\u5e76\u5728\u5de6\u4fa7\u586b\u5145\u7a7a\u683c print ( s . rjust ( 20 )) # hello, world # ljust\u65b9\u6cd5\u4ee5\u5bbd\u5ea620\u5c06\u5b57\u7b26\u4e32\u5de6\u5bf9\u9f50\u5e76\u5728\u53f3\u4fa7\u586b\u5145~ print ( s . ljust ( 20 , '~' )) # hello, world~~~~~~~~ # \u5728\u5b57\u7b26\u4e32\u7684\u5de6\u4fa7\u8865\u96f6 print ( '33' . zfill ( 5 )) # 00033 print ( '-33' . zfill ( 5 )) # -0033 \u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\uff0c\u5728\u7528 print \u51fd\u6570\u8f93\u51fa\u5b57\u7b26\u4e32\u65f6\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u683c\u5f0f\u5316\u3002 a = 321 b = 123 print ( ' %d * %d = %d ' % ( a , b , a * b )) \u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 a = 321 b = 123 print ( ' {0} * {1} = {2} ' . format ( a , b , a * b )) \u4ecePython 3.6\u5f00\u59cb\uff0c\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u8fd8\u6709\u66f4\u4e3a\u7b80\u6d01\u7684\u4e66\u5199\u65b9\u5f0f\uff0c\u5c31\u662f\u5728\u5b57\u7b26\u4e32\u524d\u52a0\u4e0a f \u6765\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u5728\u8fd9\u79cd\u4ee5 f \u6253\u5934\u7684\u5b57\u7b26\u4e32\u4e2d\uff0c {\u53d8\u91cf\u540d} \u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u4f1a\u88ab\u53d8\u91cf\u5bf9\u5e94\u7684\u503c\u5c06\u5176\u66ff\u6362\u6389\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 a = 321 b = 123 print ( f ' { a } * { b } = { a * b } ' ) \u5982\u679c\u9700\u8981\u8fdb\u4e00\u6b65\u63a7\u5236\u683c\u5f0f\u5316\u8bed\u6cd5\u4e2d\u53d8\u91cf\u503c\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u53c2\u7167\u4e0b\u9762\u7684\u8868\u683c\u6765\u8fdb\u884c\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u64cd\u4f5c\u3002 \u53d8\u91cf\u503c \u5360\u4f4d\u7b26 \u683c\u5f0f\u5316\u7ed3\u679c \u8bf4\u660e 3.1415926 {:.2f} '3.14' \u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d 3.1415926 {:+.2f} '+3.14' \u5e26\u7b26\u53f7\u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d -1 {:+.2f} '-1.00' \u5e26\u7b26\u53f7\u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d 3.1415926 {:.0f} '3' \u4e0d\u5e26\u5c0f\u6570 123 {:0>10d} '0000000123' \u5de6\u8fb9\u8865 0 \uff0c\u8865\u591f10\u4f4d 123 {:x<10d} '123xxxxxxx' \u53f3\u8fb9\u8865 x \uff0c\u8865\u591f10\u4f4d 123 {:>10d} ' 123' \u5de6\u8fb9\u8865\u7a7a\u683c\uff0c\u8865\u591f10\u4f4d 123 {:<10d} '123 ' \u53f3\u8fb9\u8865\u7a7a\u683c\uff0c\u8865\u591f10\u4f4d 123456789 {:,} '123,456,789' \u9017\u53f7\u5206\u9694\u683c\u5f0f 0.123 {:.2%} '12.30%' \u767e\u5206\u6bd4\u683c\u5f0f 123456789 {:.2e} '1.23e+08' \u79d1\u5b66\u8ba1\u6570\u6cd5\u683c\u5f0f \u4fee\u526a\u64cd\u4f5c \u5b57\u7b26\u4e32\u7684 strip \u65b9\u6cd5\u53ef\u4ee5\u5e2e\u6211\u4eec\u83b7\u5f97\u5c06\u539f\u5b57\u7b26\u4e32\u4fee\u526a\u6389\u5de6\u53f3\u4e24\u7aef\u7a7a\u683c\u4e4b\u540e\u7684\u5b57\u7b26\u4e32\u3002\u8fd9\u4e2a\u65b9\u6cd5\u975e\u5e38\u6709\u5b9e\u7528\u4ef7\u503c\uff0c\u901a\u5e38\u7528\u6765\u5c06\u7528\u6237\u8f93\u5165\u4e2d\u56e0\u4e3a\u4e0d\u5c0f\u5fc3\u952e\u5165\u7684\u5934\u5c3e\u7a7a\u683c\u53bb\u6389\uff0c strip \u65b9\u6cd5\u8fd8\u6709 lstrip \u548c rstrip \u4e24\u4e2a\u7248\u672c\uff0c\u76f8\u4fe1\u4ece\u540d\u5b57\u5927\u5bb6\u5df2\u7ecf\u731c\u51fa\u6765\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u662f\u505a\u4ec0\u4e48\u7528\u7684\u3002 s = ' jackfrued@126.com \\t\\r\\n ' # strip\u65b9\u6cd5\u83b7\u5f97\u5b57\u7b26\u4e32\u4fee\u526a\u5de6\u53f3\u4e24\u4fa7\u7a7a\u683c\u4e4b\u540e\u7684\u5b57\u7b26\u4e32 print ( s . strip ()) # jackfrued@126.com \u66ff\u6362\u64cd\u4f5c \u5982\u679c\u5e0c\u671b\u7528\u65b0\u7684\u5185\u5bb9\u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u7528 replace \u65b9\u6cd5\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 replace \u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u88ab\u66ff\u6362\u7684\u5185\u5bb9\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u66ff\u6362\u540e\u7684\u5185\u5bb9\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e09\u4e2a\u53c2\u6570\u6307\u5b9a\u66ff\u6362\u7684\u6b21\u6570\u3002 s = 'hello, world' print ( s . replace ( 'o' , '@' )) # hell@, w@rld print ( s . replace ( 'o' , '@' , 1 )) # hell@, world \u62c6\u5206/\u5408\u5e76\u64cd\u4f5c \u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u7684 split \u65b9\u6cd5\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u62c6\u5206\u4e3a\u591a\u4e2a\u5b57\u7b26\u4e32\uff08\u653e\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff09\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u7684 join \u65b9\u6cd5\u5c06\u5217\u8868\u4e2d\u7684\u591a\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 s = 'I love you' words = s . split () print ( words ) # ['I', 'love', 'you'] print ( '#' . join ( words )) # I#love#you \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c split \u65b9\u6cd5\u9ed8\u8ba4\u4f7f\u7528\u7a7a\u683c\u8fdb\u884c\u62c6\u5206\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5176\u4ed6\u7684\u5b57\u7b26\u6765\u62c6\u5206\u5b57\u7b26\u4e32\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u6307\u5b9a\u6700\u5927\u62c6\u5206\u6b21\u6570\u6765\u63a7\u5236\u62c6\u5206\u7684\u6548\u679c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 s = 'I#love#you#so#much' words = s . split ( '#' ) print ( words ) # ['I', 'love', 'you', 'so', 'much'] words = s . split ( '#' , 3 ) print ( words ) # ['I', 'love', 'you', 'so#much'] \u7f16\u7801/\u89e3\u7801\u64cd\u4f5c Python\u4e2d\u9664\u4e86\u5b57\u7b26\u4e32 str \u7c7b\u578b\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u8868\u793a\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u5b57\u8282\u4e32\u7c7b\u578b\uff08 bytes \uff09\u3002\u6240\u8c13\u5b57\u8282\u4e32\uff0c\u5c31\u662f \u7531\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u8282\u7ec4\u6210\u7684\u6709\u9650\u5e8f\u5217 \u3002\u901a\u8fc7\u5b57\u7b26\u4e32\u7684 encode \u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u67d0\u79cd\u7f16\u7801\u65b9\u5f0f\u5c06\u5b57\u7b26\u4e32\u7f16\u7801\u4e3a\u5b57\u8282\u4e32\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b57\u8282\u4e32\u7684 decode \u65b9\u6cd5\uff0c\u5c06\u5b57\u8282\u4e32\u89e3\u7801\u4e3a\u5b57\u7b26\u4e32\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 a = '\u9a86\u660a' b = a . encode ( 'utf-8' ) c = a . encode ( 'gbk' ) print ( b , c ) # b'\\xe9\\xaa\\x86\\xe6\\x98\\x8a' b'\\xc2\\xe6\\xea\\xbb' print ( b . decode ( 'utf-8' )) print ( c . decode ( 'gbk' )) \u6ce8\u610f\uff0c\u5982\u679c\u7f16\u7801\u548c\u89e3\u7801\u7684\u65b9\u5f0f\u4e0d\u4e00\u81f4\uff0c\u4f1a\u5bfc\u81f4\u4e71\u7801\u95ee\u9898\uff08\u65e0\u6cd5\u518d\u73b0\u539f\u59cb\u7684\u5185\u5bb9\uff09\u6216\u5f15\u53d1 UnicodeDecodeError \u9519\u8bef\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002 \u5176\u4ed6\u65b9\u6cd5 \u5bf9\u4e8e\u5b57\u7b26\u4e32\u7c7b\u578b\u6765\u8bf4\uff0c\u8fd8\u6709\u4e00\u4e2a\u5e38\u7528\u7684\u64cd\u4f5c\u662f\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5339\u914d\u68c0\u67e5\uff0c\u5373\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6ee1\u8db3\u67d0\u79cd\u7279\u5b9a\u7684\u6a21\u5f0f\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u7f51\u7ad9\u5bf9\u7528\u6237\u6ce8\u518c\u4fe1\u606f\u4e2d\u7528\u6237\u540d\u548c\u90ae\u7bb1\u7684\u68c0\u67e5\uff0c\u5c31\u5c5e\u4e8e\u6a21\u5f0f\u5339\u914d\u68c0\u67e5\u3002\u5b9e\u73b0\u6a21\u5f0f\u5339\u914d\u68c0\u67e5\u7684\u5de5\u5177\u53eb\u505a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0cPython\u8bed\u8a00\u901a\u8fc7\u6807\u51c6\u5e93\u4e2d\u7684 re \u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u652f\u6301\uff0c\u6211\u4eec\u4f1a\u5728\u540e\u7eed\u7684\u8bfe\u7a0b\u4e2d\u4e3a\u5927\u5bb6\u8bb2\u89e3\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u3002 \u7b80\u5355\u7684\u603b\u7ed3 \u77e5\u9053\u5982\u4f55\u8868\u793a\u548c\u64cd\u4f5c\u5b57\u7b26\u4e32\u5bf9\u7a0b\u5e8f\u5458\u6765\u8bf4\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5904\u7406\u6587\u672c\u4fe1\u606f\uff0cPython\u4e2d\u64cd\u4f5c\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\u62fc\u63a5\u3001\u5207\u7247\u7b49\u8fd0\u7b97\u7b26\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u65b9\u6cd5\u3002","title":"\u7b2c10\u8bfe\uff1a\u5e38\u7528\u6570\u636e\u7ed3\u6784\u4e4b\u5b57\u7b26\u4e32"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#10","text":"\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u4fc3\u4f7f\u4e86\u73b0\u4ee3\u7535\u5b50\u8ba1\u7b97\u673a\u7684\u8bde\u751f\uff0c\u4e16\u754c\u4e0a\u7684\u7b2c\u4e00\u53f0\u901a\u7528\u7535\u5b50\u8ba1\u7b97\u673a\u53ebENIAC\uff08\u7535\u5b50\u6570\u503c\u79ef\u5206\u8ba1\u7b97\u673a\uff09\uff0c\u8bde\u751f\u4e8e\u7f8e\u56fd\u7684\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5927\u5b66\uff0c\u5360\u5730167\u5e73\u7c73\uff0c\u91cd\u91cf27\u5428\uff0c\u6bcf\u79d2\u949f\u5927\u7ea6\u80fd\u591f\u5b8c\u6210\u7ea65000\u6b21\u6d6e\u70b9\u8fd0\u7b97\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002ENIAC\u8bde\u751f\u4e4b\u540e\u88ab\u5e94\u7528\u4e8e\u5bfc\u5f39\u5f39\u9053\u7684\u8ba1\u7b97\uff0c\u800c\u6570\u503c\u8ba1\u7b97\u4e5f\u662f\u73b0\u4ee3\u7535\u5b50\u8ba1\u7b97\u673a\u6700\u4e3a\u91cd\u8981\u7684\u4e00\u9879\u529f\u80fd\u3002 \u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u867d\u7136\u6570\u503c\u8fd0\u7b97\u4ecd\u7136\u662f\u8ba1\u7b97\u673a\u65e5\u5e38\u5de5\u4f5c\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u4f46\u662f\u4eca\u5929\u7684\u8ba1\u7b97\u673a\u8fd8\u8981\u5904\u7406\u5927\u91cf\u7684\u4ee5\u6587\u672c\u5f62\u5f0f\u5b58\u5728\u7684\u4fe1\u606f\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u901a\u8fc7Python\u7a0b\u5e8f\u6765\u64cd\u4f5c\u672c\u8fd9\u4e9b\u6587\u672c\u4fe1\u606f\uff0c\u5c31\u5fc5\u987b\u8981\u5148\u4e86\u89e3\u5b57\u7b26\u4e32\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u4e0e\u5b83\u76f8\u5173\u7684\u77e5\u8bc6\u3002","title":"\u7b2c10\u8bfe\uff1a\u5b57\u7b26\u4e32\u7684\u4f7f\u7528"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_1","text":"\u6240\u8c13 \u5b57\u7b26\u4e32 \uff0c\u5c31\u662f \u7531\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u6709\u9650\u5e8f\u5217 \uff0c\u4e00\u822c\u8bb0\u4e3a\uff1a $$ s = a_1a_2 \\cdots a_n \\,\\,\\,\\,\\, (0 \\le n \\le \\infty) $$ \u5728Python\u7a0b\u5e8f\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u628a\u5355\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u7528\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\u5305\u56f4\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u662f\u7279\u6b8a\u7b26\u53f7\u3001\u82f1\u6587\u5b57\u6bcd\u3001\u4e2d\u6587\u5b57\u7b26\u3001\u65e5\u6587\u7684\u5e73\u5047\u540d\u6216\u7247\u5047\u540d\u3001\u5e0c\u814a\u5b57\u6bcd\u3001 Emoji\u5b57\u7b26 \u7b49\u3002 s1 = 'hello, world!' s2 = \"\u4f60\u597d\uff0c\u4e16\u754c\uff01\" print ( s1 , s2 ) # \u4ee5\u4e09\u4e2a\u53cc\u5f15\u53f7\u6216\u5355\u5f15\u53f7\u5f00\u5934\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5\u6298\u884c s3 = ''' hello, world! ''' print ( s3 , end = '' ) \u63d0\u793a \uff1a print \u51fd\u6570\u4e2d\u7684 end='' \u8868\u793a\u8f93\u51fa\u540e\u4e0d\u6362\u884c\uff0c\u5373\u5c06\u9ed8\u8ba4\u7684\u7ed3\u675f\u7b26 \\n \uff08\u6362\u884c\u7b26\uff09\u66f4\u6362\u4e3a '' \uff08\u7a7a\u5b57\u7b26\uff09\u3002","title":"\u5b57\u7b26\u4e32\u7684\u5b9a\u4e49"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_2","text":"\u53ef\u4ee5\u5728\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528 \\ \uff08\u53cd\u659c\u6760\uff09\u6765\u8868\u793a\u8f6c\u4e49\uff0c\u4e5f\u5c31\u662f\u8bf4 \\ \u540e\u9762\u7684\u5b57\u7b26\u4e0d\u518d\u662f\u5b83\u539f\u6765\u7684\u610f\u4e49\uff0c\u4f8b\u5982\uff1a \\n \u4e0d\u662f\u4ee3\u8868\u53cd\u659c\u6760\u548c\u5b57\u7b26 n \uff0c\u800c\u662f\u8868\u793a\u6362\u884c\uff1b \\t \u4e5f\u4e0d\u662f\u4ee3\u8868\u53cd\u659c\u6760\u548c\u5b57\u7b26 t \uff0c\u800c\u662f\u8868\u793a\u5236\u8868\u7b26\u3002\u6240\u4ee5\u5982\u679c\u5b57\u7b26\u4e32\u672c\u8eab\u53c8\u5305\u542b\u4e86 ' \u3001 \" \u3001 \\ \u8fd9\u4e9b\u7279\u6b8a\u7684\u5b57\u7b26\uff0c\u5fc5\u987b\u8981\u901a\u8fc7 \\ \u8fdb\u884c\u8f6c\u4e49\u5904\u7406\u3002\u4f8b\u5982\u8981\u8f93\u51fa\u4e00\u4e2a\u5e26\u5355\u5f15\u53f7\u6216\u53cd\u659c\u6760\u7684\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u7528\u5982\u4e0b\u6240\u793a\u7684\u65b9\u6cd5\u3002 s1 = ' \\' hello, world! \\' ' print ( s1 ) s2 = ' \\\\ hello, world! \\\\ ' print ( s2 ) Python\u4e2d\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5 r \u6216 R \u5f00\u5934\uff0c\u8fd9\u79cd\u5b57\u7b26\u4e32\u88ab\u79f0\u4e3a\u539f\u59cb\u5b57\u7b26\u4e32\uff0c\u610f\u601d\u662f\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u662f\u5b83\u672c\u6765\u7684\u542b\u4e49\uff0c\u6ca1\u6709\u6240\u8c13\u7684\u8f6c\u4e49\u5b57\u7b26\u3002\u4f8b\u5982\uff0c\u5728\u5b57\u7b26\u4e32 'hello\\n' \u4e2d\uff0c \\n \u8868\u793a\u6362\u884c\uff1b\u800c\u5728 r'hello\\n' \u4e2d\uff0c \\n \u4e0d\u518d\u8868\u793a\u6362\u884c\uff0c\u5c31\u662f\u53cd\u659c\u6760\u548c\u5b57\u7b26 n \u3002\u5927\u5bb6\u53ef\u4ee5\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u4f1a\u8f93\u51fa\u4ec0\u4e48\u3002 # \u5b57\u7b26\u4e32s1\u4e2d\\t\u662f\u5236\u8868\u7b26\uff0c\\n\u662f\u6362\u884c\u7b26 s1 = ' \\t ime up \\n ow' print ( s1 ) # \u5b57\u7b26\u4e32s2\u4e2d\u6ca1\u6709\u8f6c\u4e49\u5b57\u7b26\uff0c\u6bcf\u4e2a\u5b57\u7b26\u90fd\u662f\u539f\u59cb\u542b\u4e49 s2 = r '\\time up \\now' print ( s2 ) Python\u4e2d\u8fd8\u5141\u8bb8\u5728 \\ \u540e\u9762\u8fd8\u53ef\u4ee5\u8ddf\u4e00\u4e2a\u516b\u8fdb\u5236\u6216\u8005\u5341\u516d\u8fdb\u5236\u6570\u6765\u8868\u793a\u5b57\u7b26\uff0c\u4f8b\u5982 \\141 \u548c \\x61 \u90fd\u4ee3\u8868\u5c0f\u5199\u5b57\u6bcd a \uff0c\u524d\u8005\u662f\u516b\u8fdb\u5236\u7684\u8868\u793a\u6cd5\uff0c\u540e\u8005\u662f\u5341\u516d\u8fdb\u5236\u7684\u8868\u793a\u6cd5\u3002\u53e6\u5916\u4e00\u79cd\u8868\u793a\u5b57\u7b26\u7684\u65b9\u5f0f\u662f\u5728 \\u \u540e\u9762\u8ddfUnicode\u5b57\u7b26\u7f16\u7801\uff0c\u4f8b\u5982 \\u9a86\\u660a \u4ee3\u8868\u7684\u662f\u4e2d\u6587\u201c\u9a86\u660a\u201d\u3002\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u8f93\u51fa\u4e86\u4ec0\u4e48\u3002 s1 = ' \\141\\142\\143\\x61\\x62\\x63 ' s2 = ' \\u9a86\\u660a ' print ( s1 , s2 )","title":"\u8f6c\u4e49\u5b57\u7b26\u548c\u539f\u59cb\u5b57\u7b26\u4e32"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_3","text":"Python\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 + \u8fd0\u7b97\u7b26\u6765\u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\uff0c\u53ef\u4ee5\u4f7f\u7528 * \u8fd0\u7b97\u7b26\u6765\u91cd\u590d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u7528 in \u548c not in \u6765\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u53e6\u5916\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 [] \u548c [:] \u8fd0\u7b97\u7b26\u4ece\u5b57\u7b26\u4e32\u53d6\u51fa\u67d0\u4e2a\u5b57\u7b26\u6216\u67d0\u4e9b\u5b57\u7b26\u3002","title":"\u5b57\u7b26\u4e32\u7684\u8fd0\u7b97"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_4","text":"\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u4f7f\u7528 + \u548c * \u8fd0\u7b97\u7b26\u6765\u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u548c\u91cd\u590d\u64cd\u4f5c\u3002 s1 = 'hello' + ' ' + 'world' print ( s1 ) # hello world s2 = '!' * 3 print ( s2 ) # !!! s1 += s2 # s1 = s1 + s2 print ( s1 ) # hello world!!! s1 *= 2 # s1 = s1 * 2 print ( s1 ) # hello world!!!hello world!!! \u7528 * \u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u91cd\u590d\u662f\u975e\u5e38\u6709\u610f\u601d\u7684\u4e00\u4e2a\u8fd0\u7b97\u7b26\uff0c\u5728\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u8981\u8868\u793a\u4e00\u4e2a\u670910\u4e2a a \u7684\u5b57\u7b26\u4e32\uff0c\u4f60\u53ea\u80fd\u5199\u6210 \"aaaaaaaaaa\" \uff0c\u4f46\u662f\u5728Python\u4e2d\uff0c\u4f60\u53ef\u4ee5\u5199\u6210 'a' * 10 \u3002\u4f60\u53ef\u80fd\u89c9\u5f97 \"aaaaaaaaaa\" \u8fd9\u79cd\u5199\u6cd5\u4e5f\u6ca1\u6709\u4ec0\u4e48\u4e0d\u65b9\u4fbf\u7684\uff0c\u90a3\u4e48\u60f3\u4e00\u60f3\uff0c\u5982\u679c\u5b57\u7b26 a \u8981\u91cd\u590d100\u6b21\u6216\u80051000\u6b21\u53c8\u4f1a\u5982\u4f55\u5462\uff1f","title":"\u62fc\u63a5\u548c\u91cd\u590d"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_5","text":"\u5bf9\u4e8e\u4e24\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6bd4\u8f83\u8fd0\u7b97\u7b26\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u76f8\u7b49\u6027\u6216\u5927\u5c0f\u3002\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u56e0\u4e3a\u5b57\u7b26\u4e32\u5728\u8ba1\u7b97\u673a\u5185\u5b58\u4e2d\u4e5f\u662f\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b58\u5728\u7684\uff0c\u90a3\u4e48\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u6bd4\u8f83\u6bd4\u7684\u662f\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u7f16\u7801\u7684\u5927\u5c0f\u3002\u4f8b\u5982 A \u7684\u7f16\u7801\u662f 65 \uff0c \u800c a \u7684\u7f16\u7801\u662f 97 \uff0c\u6240\u4ee5 'A' < 'a' \u7684\u7ed3\u679c\u76f8\u5f53\u4e8e\u5c31\u662f 65 < 97 \u7684\u7ed3\u679c\uff0c\u5f88\u663e\u7136\u662f True \uff1b\u800c 'boy' < 'bad' \uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u90fd\u662f 'b' \u6bd4\u4e0d\u51fa\u5927\u5c0f\uff0c\u6240\u4ee5\u5b9e\u9645\u6bd4\u8f83\u7684\u662f\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684\u5927\u5c0f\uff0c\u663e\u7136 'o' < 'a' \u7684\u7ed3\u679c\u662f False \uff0c\u6240\u4ee5 'boy' < 'bad' \u7684\u7ed3\u679c\u4e5f\u662f False \u3002\u5982\u679c\u4e0d\u6e05\u695a\u4e24\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u7f16\u7801\u5230\u5e95\u662f\u591a\u5c11\uff0c\u53ef\u4ee5\u4f7f\u7528 ord \u51fd\u6570\u6765\u83b7\u5f97\uff0c\u4f8b\u5982 ord('A') \u7684\u503c\u662f 65 \uff0c\u800c ord('\u660a') \u7684\u503c\u662f 26122 \u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4e3a\u5927\u5bb6\u5c55\u793a\u4e86\u5b57\u7b26\u4e32\u7684\u6bd4\u8f83\u8fd0\u7b97\u3002 s1 = 'a whole new world' s2 = 'hello world' print ( s1 == s2 , s1 < s2 ) # False True print ( s2 == 'hello world' ) # True print ( s2 == 'Hello world' ) # False print ( s2 != 'Hello world' ) # True s3 = '\u9a86\u660a' print ( ord ( '\u9a86' ), ord ( '\u660a' )) # 39558 26122 s4 = '\u738b\u5927\u9524' print ( ord ( '\u738b' ), ord ( '\u5927' ), ord ( '\u9524' )) # 29579 22823 38180 print ( s3 > s4 , s3 <= s4 ) # True False \u9700\u8981\u5f3a\u8c03\u4e00\u4e0b\u7684\u662f\uff0c\u5b57\u7b26\u4e32\u7684\u6bd4\u8f83\u8fd0\u7b97\u6bd4\u8f83\u7684\u662f\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0cPython\u4e2d\u8fd8\u6709\u4e00\u4e2a is \u8fd0\u7b97\u7b26\uff08\u8eab\u4efd\u8fd0\u7b97\u7b26\uff09\uff0c\u5982\u679c\u7528 is \u6765\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b83\u6bd4\u8f83\u7684\u662f\u4e24\u4e2a\u53d8\u91cf\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\uff08\u4e0d\u7406\u89e3\u5148\u8df3\u8fc7\uff09\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e24\u4e2a\u53d8\u91cf\u662f\u5426\u5bf9\u5e94\u5185\u5b58\u4e2d\u7684\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u6bd4\u8f83\u6e05\u695a is \u8fd0\u7b97\u7b26\u7684\u4f5c\u7528\u4e86\u3002 s1 = 'hello world' s2 = 'hello world' s3 = s2 # \u6bd4\u8f83\u5b57\u7b26\u4e32\u7684\u5185\u5bb9 print ( s1 == s2 , s2 == s3 ) # True True # \u6bd4\u8f83\u5b57\u7b26\u4e32\u7684\u5185\u5b58\u5730\u5740 print ( s1 is s2 , s2 is s3 ) # False True","title":"\u6bd4\u8f83\u8fd0\u7b97"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_6","text":"Python\u4e2d\u53ef\u4ee5\u7528 in \u548c not in \u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u5b58\u5728\u53e6\u5916\u4e00\u4e2a\u5b57\u7b26\u6216\u5b57\u7b26\u4e32\uff0c in \u548c not in \u8fd0\u7b97\u901a\u5e38\u79f0\u4e3a\u6210\u5458\u8fd0\u7b97\uff0c\u4f1a\u4ea7\u751f\u5e03\u5c14\u503c True \u6216 False \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 s1 = 'hello, world' print ( 'wo' in s1 ) # True s2 = 'goodbye' print ( s2 in s1 ) # False","title":"\u6210\u5458\u8fd0\u7b97"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_7","text":"\u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6\u6ca1\u6709\u76f4\u63a5\u7684\u8fd0\u7b97\u7b26\uff0c\u800c\u662f\u4f7f\u7528\u5185\u7f6e\u51fd\u6570 len \uff0c\u6211\u4eec\u5728\u4e0a\u8282\u8bfe\u7684\u63d0\u5230\u8fc7\u8fd9\u4e2a\u5185\u7f6e\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 s = 'hello, world' print ( len ( s )) # 12 print ( len ( 'goodbye, world' )) # 14","title":"\u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_8","text":"\u5982\u679c\u5e0c\u671b\u4ece\u5b57\u7b26\u4e32\u4e2d\u53d6\u51fa\u67d0\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u7d22\u5f15\u8fd0\u7b97\uff0c\u8fd0\u7b97\u7b26\u662f [n] \uff0c\u5176\u4e2d n \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u5047\u8bbe\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e3a N \uff0c\u90a3\u4e48 n \u53ef\u4ee5\u662f\u4ece 0 \u5230 N-1 \u7684\u6574\u6570\uff0c\u5176\u4e2d 0 \u662f\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\uff0c\u800c N-1 \u662f\u5b57\u7b26\u4e32\u4e2d\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\uff0c\u901a\u5e38\u79f0\u4e4b\u4e3a\u6b63\u5411\u7d22\u5f15\uff1b\u5728Python\u4e2d\uff0c\u5b57\u7b26\u4e32\u7684\u7d22\u5f15\u4e5f\u53ef\u4ee5\u662f\u4ece -1 \u5230 -N \u7684\u6574\u6570\uff0c\u5176\u4e2d -1 \u662f\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\uff0c\u800c -N \u5219\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\uff0c\u901a\u5e38\u79f0\u4e4b\u4e3a\u8d1f\u5411\u7d22\u5f15\u3002\u6ce8\u610f\uff0c\u56e0\u4e3a \u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b \uff0c\u6240\u4ee5 \u4e0d\u80fd\u901a\u8fc7\u7d22\u5f15\u8fd0\u7b97\u4fee\u6539\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26 \u3002 s = 'abc123456' N = len ( s ) # \u83b7\u53d6\u7b2c\u4e00\u4e2a\u5b57\u7b26 print ( s [ 0 ], s [ - N ]) # a a # \u83b7\u53d6\u6700\u540e\u4e00\u4e2a\u5b57\u7b26 print ( s [ N - 1 ], s [ - 1 ]) # 6 6 # \u83b7\u53d6\u7d22\u5f15\u4e3a2\u6216-7\u7684\u5b57\u7b26 print ( s [ 2 ], s [ - 7 ]) # c c # \u83b7\u53d6\u7d22\u5f15\u4e3a5\u548c-4\u7684\u5b57\u7b26 print ( s [ 5 ], s [ - 4 ]) # 3 3 \u9700\u8981\u63d0\u9192\u5927\u5bb6\u6ce8\u610f\u7684\u662f\uff0c\u5728\u8fdb\u884c\u7d22\u5f15\u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u7d22\u5f15\u8d8a\u754c\uff08\u6b63\u5411\u7d22\u5f15\u4e0d\u5728 0 \u5230 N-1 \u8303\u56f4\uff0c\u8d1f\u5411\u7d22\u5f15\u4e0d\u5728 -1 \u5230 -N \u8303\u56f4\uff09\uff0c\u4f1a\u5f15\u53d1 IndexError \u5f02\u5e38\uff0c\u9519\u8bef\u63d0\u793a\u4fe1\u606f\u4e3a\uff1a string index out of range \uff08\u5b57\u7b26\u4e32\u7d22\u5f15\u8d85\u51fa\u8303\u56f4\uff09\u3002 \u5982\u679c\u8981\u4ece\u5b57\u7b26\u4e32\u4e2d\u53d6\u51fa\u591a\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5207\u7247\uff0c\u8fd0\u7b97\u7b26\u662f [i:j:k] \uff0c\u5176\u4e2d i \u662f\u5f00\u59cb\u7d22\u5f15\uff0c\u7d22\u5f15\u5bf9\u5e94\u7684\u5b57\u7b26\u53ef\u4ee5\u53d6\u5230\uff1b j \u662f\u7ed3\u675f\u7d22\u5f15\uff0c\u7d22\u5f15\u5bf9\u5e94\u7684\u5b57\u7b26\u4e0d\u80fd\u53d6\u5230\uff1b k \u662f\u6b65\u957f\uff0c\u9ed8\u8ba4\u503c\u4e3a 1 \uff0c\u8868\u793a\u4ece\u524d\u5411\u540e\u83b7\u53d6\u76f8\u90bb\u5b57\u7b26\u7684\u8fde\u7eed\u5207\u7247\uff0c\u6240\u4ee5 :k \u90e8\u5206\u53ef\u4ee5\u7701\u7565\u3002\u5047\u8bbe\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e3a N \uff0c\u5f53 k > 0 \u65f6\u8868\u793a\u6b63\u5411\u5207\u7247\uff08\u4ece\u524d\u5411\u540e\u83b7\u53d6\u5b57\u7b26\uff09\uff0c\u5982\u679c\u6ca1\u6709\u7ed9\u51fa i \u548c j \u7684\u503c\uff0c\u5219 i \u7684\u9ed8\u8ba4\u503c\u662f 0 \uff0c j \u7684\u9ed8\u8ba4\u503c\u662f N \uff1b\u5f53 k < 0 \u65f6\u8868\u793a\u8d1f\u5411\u5207\u7247\uff08\u4ece\u540e\u5411\u524d\u83b7\u53d6\u5b57\u7b26\uff09\uff0c\u5982\u679c\u6ca1\u6709\u7ed9\u51fa i \u548c j \u7684\u503c\uff0c\u5219 i \u7684\u9ed8\u8ba4\u503c\u662f -1 \uff0cj\u7684\u9ed8\u8ba4\u503c\u662f -N - 1 \u3002\u5982\u679c\u4e0d\u7406\u89e3\uff0c\u76f4\u63a5\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u8bb0\u4f4f\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\u662f 0 \u6216 -N \uff0c\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\u662f N-1 \u6216 -1 \u5c31\u884c\u4e86\u3002 s = 'abc123456' # i=2, j=5, k=1\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ 2 : 5 ]) # c12 # i=-7, j=-4, k=1\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ - 7 : - 4 ]) # c12 # i=2, j=9, k=1\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ 2 :]) # c123456 # i=-7, j=9, k=1\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ - 7 :]) # c123456 # i=2, j=9, k=2\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ 2 :: 2 ]) # c246 # i=-7, j=9, k=2\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ - 7 :: 2 ]) # c246 # i=0, j=9, k=2\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [:: 2 ]) # ac246 # i=1, j=-1, k=2\u7684\u6b63\u5411\u5207\u7247\u64cd\u4f5c print ( s [ 1 : - 1 : 2 ]) # b135 # i=7, j=1, k=-1\u7684\u8d1f\u5411\u5207\u7247\u64cd\u4f5c print ( s [ 7 : 1 : - 1 ]) # 54321c # i=-2, j=-8, k=-1\u7684\u8d1f\u5411\u5207\u7247\u64cd\u4f5c print ( s [ - 2 : - 8 : - 1 ]) # 54321c # i=7, j=-10, k=-1\u7684\u8d1f\u5411\u5207\u7247\u64cd\u4f5c print ( s [ 7 :: - 1 ]) # 54321cba # i=-1, j=1, k=-1\u7684\u8d1f\u5411\u5207\u7247\u64cd\u4f5c print ( s [: 1 : - 1 ]) # 654321c # i=0, j=9, k=1\u7684\u6b63\u5411\u5207\u7247 print ( s [:]) # abc123456 # i=0, j=9, k=2\u7684\u6b63\u5411\u5207\u7247 print ( s [:: 2 ]) # ac246 # i=-1, j=-10, k=-1\u7684\u8d1f\u5411\u5207\u7247 print ( s [:: - 1 ]) # 654321cba # i=-1, j=-10, k=-2\u7684\u8d1f\u5411\u5207\u7247 print ( s [:: - 2 ]) # 642ca","title":"\u7d22\u5f15\u548c\u5207\u7247"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_9","text":"\u5982\u679c\u5e0c\u671b\u4ece\u5b57\u7b26\u4e32\u4e2d\u53d6\u51fa\u6bcf\u4e2a\u5b57\u7b26\uff0c\u53ef\u4ee5\u4f7f\u7528 for \u5faa\u73af\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u904d\u5386\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u3002 \u65b9\u5f0f\u4e00\uff1a s1 = 'hello' for index in range ( len ( s1 )): print ( s1 [ index ]) \u65b9\u5f0f\u4e8c\uff1a s1 = 'hello' for ch in s1 : print ( ch )","title":"\u5faa\u73af\u904d\u5386\u6bcf\u4e2a\u5b57\u7b26"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_10","text":"\u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u7c7b\u578b\u81ea\u5e26\u7684\u65b9\u6cd5\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u64cd\u4f5c\u548c\u5904\u7406\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 \u53d8\u91cf\u540d.\u65b9\u6cd5\u540d() \u7684\u65b9\u5f0f\u6765\u8c03\u7528\u5b83\u7684\u65b9\u6cd5\u3002\u6240\u8c13\u65b9\u6cd5\u5176\u5b9e\u5c31\u662f\u8ddf\u67d0\u4e2a\u7c7b\u578b\u7684\u53d8\u91cf\u7ed1\u5b9a\u7684\u51fd\u6570\uff0c\u540e\u9762\u6211\u4eec\u8bb2\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u65f6\u5019\u8fd8\u4f1a\u5bf9\u8fd9\u4e00\u6982\u5ff5\u8be6\u52a0\u8bf4\u660e\u3002","title":"\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_11","text":"\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u548c\u5b57\u7b26\u4e32\u5927\u5c0f\u5199\u53d8\u6362\u76f8\u5173\u7684\u65b9\u6cd5\u3002 s1 = 'hello, world!' # \u4f7f\u7528capitalize\u65b9\u6cd5\u83b7\u5f97\u5b57\u7b26\u4e32\u9996\u5b57\u6bcd\u5927\u5199\u540e\u7684\u5b57\u7b26\u4e32 print ( s1 . capitalize ()) # Hello, world! # \u4f7f\u7528title\u65b9\u6cd5\u83b7\u5f97\u5b57\u7b26\u4e32\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199\u540e\u7684\u5b57\u7b26\u4e32 print ( s1 . title ()) # Hello, World! # \u4f7f\u7528upper\u65b9\u6cd5\u83b7\u5f97\u5b57\u7b26\u4e32\u5927\u5199\u540e\u7684\u5b57\u7b26\u4e32 print ( s1 . upper ()) # HELLO, WORLD! s2 = 'GOODBYE' # \u4f7f\u7528lower\u65b9\u6cd5\u83b7\u5f97\u5b57\u7b26\u4e32\u5c0f\u5199\u540e\u7684\u5b57\u7b26\u4e32 print ( s2 . lower ()) # goodbye","title":"\u5927\u5c0f\u5199\u76f8\u5173\u64cd\u4f5c"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_12","text":"\u5982\u679c\u60f3\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4ece\u524d\u5411\u540e\u67e5\u627e\u6709\u6ca1\u6709\u53e6\u5916\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u7684 find \u6216 index \u65b9\u6cd5\u3002 s = 'hello, world!' # find\u65b9\u6cd5\u4ece\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u6240\u5728\u7684\u4f4d\u7f6e # \u627e\u5230\u4e86\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u9996\u5b57\u7b26\u7684\u7d22\u5f15 print ( s . find ( 'or' )) # 8 # \u627e\u4e0d\u5230\u8fd4\u56de-1 print ( s . find ( 'shit' )) # -1 # index\u65b9\u6cd5\u4e0efind\u65b9\u6cd5\u7c7b\u4f3c # \u627e\u5230\u4e86\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u9996\u5b57\u7b26\u7684\u7d22\u5f15 print ( s . index ( 'or' )) # 8 # \u627e\u4e0d\u5230\u5f15\u53d1\u5f02\u5e38 print ( s . index ( 'shit' )) # ValueError: substring not found \u5728\u4f7f\u7528 find \u548c index \u65b9\u6cd5\u65f6\u8fd8\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u7684\u53c2\u6570\u6765\u6307\u5b9a\u67e5\u627e\u7684\u8303\u56f4\uff0c\u4e5f\u5c31\u662f\u67e5\u627e\u4e0d\u5fc5\u4ece\u7d22\u5f15\u4e3a 0 \u7684\u4f4d\u7f6e\u5f00\u59cb\u3002 find \u548c index \u65b9\u6cd5\u8fd8\u6709\u9006\u5411\u67e5\u627e\uff08\u4ece\u540e\u5411\u524d\u67e5\u627e\uff09\u7684\u7248\u672c\uff0c\u5206\u522b\u662f rfind \u548c rindex \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 s = 'hello good world!' # \u4ece\u524d\u5411\u540e\u67e5\u627e\u5b57\u7b26o\u51fa\u73b0\u7684\u4f4d\u7f6e(\u76f8\u5f53\u4e8e\u7b2c\u4e00\u6b21\u51fa\u73b0) print ( s . find ( 'o' )) # 4 # \u4ece\u7d22\u5f15\u4e3a5\u7684\u4f4d\u7f6e\u5f00\u59cb\u67e5\u627e\u5b57\u7b26o\u51fa\u73b0\u7684\u4f4d\u7f6e print ( s . find ( 'o' , 5 )) # 7 # \u4ece\u540e\u5411\u524d\u67e5\u627e\u5b57\u7b26o\u51fa\u73b0\u7684\u4f4d\u7f6e(\u76f8\u5f53\u4e8e\u6700\u540e\u4e00\u6b21\u51fa\u73b0) print ( s . rfind ( 'o' )) # 12","title":"\u67e5\u627e\u64cd\u4f5c"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_13","text":"\u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u7684 startswith \u3001 endswith \u6765\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u67d0\u4e2a\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\uff1b\u8fd8\u53ef\u4ee5\u7528 is \u5f00\u5934\u7684\u65b9\u6cd5\u5224\u65ad\u5b57\u7b26\u4e32\u7684\u7279\u5f81\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u8fd4\u56de\u5e03\u5c14\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 s1 = 'hello, world!' # startwith\u65b9\u6cd5\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u5f00\u5934\u8fd4\u56de\u5e03\u5c14\u503c print ( s1 . startswith ( 'He' )) # False print ( s1 . startswith ( 'hel' )) # True # endswith\u65b9\u6cd5\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u7ed3\u5c3e\u8fd4\u56de\u5e03\u5c14\u503c print ( s1 . endswith ( '!' )) # True s2 = 'abc123456' # isdigit\u65b9\u6cd5\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u7531\u6570\u5b57\u6784\u6210\u8fd4\u56de\u5e03\u5c14\u503c print ( s2 . isdigit ()) # False # isalpha\u65b9\u6cd5\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u5b57\u6bcd\u6784\u6210\u8fd4\u56de\u5e03\u5c14\u503c print ( s2 . isalpha ()) # False # isalnum\u65b9\u6cd5\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6570\u5b57\u548c\u5b57\u6bcd\u6784\u6210\u8fd4\u56de\u5e03\u5c14\u503c print ( s2 . isalnum ()) # True","title":"\u6027\u8d28\u5224\u65ad"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_14","text":"\u5728Python\u4e2d\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b\u53ef\u4ee5\u901a\u8fc7 center \u3001 ljust \u3001 rjust \u65b9\u6cd5\u505a\u5c45\u4e2d\u3001\u5de6\u5bf9\u9f50\u548c\u53f3\u5bf9\u9f50\u7684\u5904\u7406\u3002\u5982\u679c\u8981\u5728\u5b57\u7b26\u4e32\u7684\u5de6\u4fa7\u8865\u96f6\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 zfill \u65b9\u6cd5\u3002 s = 'hello, world' # center\u65b9\u6cd5\u4ee5\u5bbd\u5ea620\u5c06\u5b57\u7b26\u4e32\u5c45\u4e2d\u5e76\u5728\u4e24\u4fa7\u586b\u5145* print ( s . center ( 20 , '*' )) # ****hello, world**** # rjust\u65b9\u6cd5\u4ee5\u5bbd\u5ea620\u5c06\u5b57\u7b26\u4e32\u53f3\u5bf9\u9f50\u5e76\u5728\u5de6\u4fa7\u586b\u5145\u7a7a\u683c print ( s . rjust ( 20 )) # hello, world # ljust\u65b9\u6cd5\u4ee5\u5bbd\u5ea620\u5c06\u5b57\u7b26\u4e32\u5de6\u5bf9\u9f50\u5e76\u5728\u53f3\u4fa7\u586b\u5145~ print ( s . ljust ( 20 , '~' )) # hello, world~~~~~~~~ # \u5728\u5b57\u7b26\u4e32\u7684\u5de6\u4fa7\u8865\u96f6 print ( '33' . zfill ( 5 )) # 00033 print ( '-33' . zfill ( 5 )) # -0033 \u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\uff0c\u5728\u7528 print \u51fd\u6570\u8f93\u51fa\u5b57\u7b26\u4e32\u65f6\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u683c\u5f0f\u5316\u3002 a = 321 b = 123 print ( ' %d * %d = %d ' % ( a , b , a * b )) \u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 a = 321 b = 123 print ( ' {0} * {1} = {2} ' . format ( a , b , a * b )) \u4ecePython 3.6\u5f00\u59cb\uff0c\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u8fd8\u6709\u66f4\u4e3a\u7b80\u6d01\u7684\u4e66\u5199\u65b9\u5f0f\uff0c\u5c31\u662f\u5728\u5b57\u7b26\u4e32\u524d\u52a0\u4e0a f \u6765\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u5728\u8fd9\u79cd\u4ee5 f \u6253\u5934\u7684\u5b57\u7b26\u4e32\u4e2d\uff0c {\u53d8\u91cf\u540d} \u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u4f1a\u88ab\u53d8\u91cf\u5bf9\u5e94\u7684\u503c\u5c06\u5176\u66ff\u6362\u6389\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 a = 321 b = 123 print ( f ' { a } * { b } = { a * b } ' ) \u5982\u679c\u9700\u8981\u8fdb\u4e00\u6b65\u63a7\u5236\u683c\u5f0f\u5316\u8bed\u6cd5\u4e2d\u53d8\u91cf\u503c\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u53c2\u7167\u4e0b\u9762\u7684\u8868\u683c\u6765\u8fdb\u884c\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u64cd\u4f5c\u3002 \u53d8\u91cf\u503c \u5360\u4f4d\u7b26 \u683c\u5f0f\u5316\u7ed3\u679c \u8bf4\u660e 3.1415926 {:.2f} '3.14' \u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d 3.1415926 {:+.2f} '+3.14' \u5e26\u7b26\u53f7\u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d -1 {:+.2f} '-1.00' \u5e26\u7b26\u53f7\u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d 3.1415926 {:.0f} '3' \u4e0d\u5e26\u5c0f\u6570 123 {:0>10d} '0000000123' \u5de6\u8fb9\u8865 0 \uff0c\u8865\u591f10\u4f4d 123 {:x<10d} '123xxxxxxx' \u53f3\u8fb9\u8865 x \uff0c\u8865\u591f10\u4f4d 123 {:>10d} ' 123' \u5de6\u8fb9\u8865\u7a7a\u683c\uff0c\u8865\u591f10\u4f4d 123 {:<10d} '123 ' \u53f3\u8fb9\u8865\u7a7a\u683c\uff0c\u8865\u591f10\u4f4d 123456789 {:,} '123,456,789' \u9017\u53f7\u5206\u9694\u683c\u5f0f 0.123 {:.2%} '12.30%' \u767e\u5206\u6bd4\u683c\u5f0f 123456789 {:.2e} '1.23e+08' \u79d1\u5b66\u8ba1\u6570\u6cd5\u683c\u5f0f","title":"\u683c\u5f0f\u5316\u5b57\u7b26\u4e32"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_15","text":"\u5b57\u7b26\u4e32\u7684 strip \u65b9\u6cd5\u53ef\u4ee5\u5e2e\u6211\u4eec\u83b7\u5f97\u5c06\u539f\u5b57\u7b26\u4e32\u4fee\u526a\u6389\u5de6\u53f3\u4e24\u7aef\u7a7a\u683c\u4e4b\u540e\u7684\u5b57\u7b26\u4e32\u3002\u8fd9\u4e2a\u65b9\u6cd5\u975e\u5e38\u6709\u5b9e\u7528\u4ef7\u503c\uff0c\u901a\u5e38\u7528\u6765\u5c06\u7528\u6237\u8f93\u5165\u4e2d\u56e0\u4e3a\u4e0d\u5c0f\u5fc3\u952e\u5165\u7684\u5934\u5c3e\u7a7a\u683c\u53bb\u6389\uff0c strip \u65b9\u6cd5\u8fd8\u6709 lstrip \u548c rstrip \u4e24\u4e2a\u7248\u672c\uff0c\u76f8\u4fe1\u4ece\u540d\u5b57\u5927\u5bb6\u5df2\u7ecf\u731c\u51fa\u6765\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u662f\u505a\u4ec0\u4e48\u7528\u7684\u3002 s = ' jackfrued@126.com \\t\\r\\n ' # strip\u65b9\u6cd5\u83b7\u5f97\u5b57\u7b26\u4e32\u4fee\u526a\u5de6\u53f3\u4e24\u4fa7\u7a7a\u683c\u4e4b\u540e\u7684\u5b57\u7b26\u4e32 print ( s . strip ()) # jackfrued@126.com","title":"\u4fee\u526a\u64cd\u4f5c"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_16","text":"\u5982\u679c\u5e0c\u671b\u7528\u65b0\u7684\u5185\u5bb9\u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u7528 replace \u65b9\u6cd5\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 replace \u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u88ab\u66ff\u6362\u7684\u5185\u5bb9\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u66ff\u6362\u540e\u7684\u5185\u5bb9\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e09\u4e2a\u53c2\u6570\u6307\u5b9a\u66ff\u6362\u7684\u6b21\u6570\u3002 s = 'hello, world' print ( s . replace ( 'o' , '@' )) # hell@, w@rld print ( s . replace ( 'o' , '@' , 1 )) # hell@, world","title":"\u66ff\u6362\u64cd\u4f5c"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_17","text":"\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u7684 split \u65b9\u6cd5\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u62c6\u5206\u4e3a\u591a\u4e2a\u5b57\u7b26\u4e32\uff08\u653e\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff09\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u7684 join \u65b9\u6cd5\u5c06\u5217\u8868\u4e2d\u7684\u591a\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 s = 'I love you' words = s . split () print ( words ) # ['I', 'love', 'you'] print ( '#' . join ( words )) # I#love#you \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c split \u65b9\u6cd5\u9ed8\u8ba4\u4f7f\u7528\u7a7a\u683c\u8fdb\u884c\u62c6\u5206\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5176\u4ed6\u7684\u5b57\u7b26\u6765\u62c6\u5206\u5b57\u7b26\u4e32\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u6307\u5b9a\u6700\u5927\u62c6\u5206\u6b21\u6570\u6765\u63a7\u5236\u62c6\u5206\u7684\u6548\u679c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 s = 'I#love#you#so#much' words = s . split ( '#' ) print ( words ) # ['I', 'love', 'you', 'so', 'much'] words = s . split ( '#' , 3 ) print ( words ) # ['I', 'love', 'you', 'so#much']","title":"\u62c6\u5206/\u5408\u5e76\u64cd\u4f5c"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_18","text":"Python\u4e2d\u9664\u4e86\u5b57\u7b26\u4e32 str \u7c7b\u578b\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u8868\u793a\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u5b57\u8282\u4e32\u7c7b\u578b\uff08 bytes \uff09\u3002\u6240\u8c13\u5b57\u8282\u4e32\uff0c\u5c31\u662f \u7531\u96f6\u4e2a\u6216\u591a\u4e2a\u5b57\u8282\u7ec4\u6210\u7684\u6709\u9650\u5e8f\u5217 \u3002\u901a\u8fc7\u5b57\u7b26\u4e32\u7684 encode \u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u67d0\u79cd\u7f16\u7801\u65b9\u5f0f\u5c06\u5b57\u7b26\u4e32\u7f16\u7801\u4e3a\u5b57\u8282\u4e32\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b57\u8282\u4e32\u7684 decode \u65b9\u6cd5\uff0c\u5c06\u5b57\u8282\u4e32\u89e3\u7801\u4e3a\u5b57\u7b26\u4e32\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 a = '\u9a86\u660a' b = a . encode ( 'utf-8' ) c = a . encode ( 'gbk' ) print ( b , c ) # b'\\xe9\\xaa\\x86\\xe6\\x98\\x8a' b'\\xc2\\xe6\\xea\\xbb' print ( b . decode ( 'utf-8' )) print ( c . decode ( 'gbk' )) \u6ce8\u610f\uff0c\u5982\u679c\u7f16\u7801\u548c\u89e3\u7801\u7684\u65b9\u5f0f\u4e0d\u4e00\u81f4\uff0c\u4f1a\u5bfc\u81f4\u4e71\u7801\u95ee\u9898\uff08\u65e0\u6cd5\u518d\u73b0\u539f\u59cb\u7684\u5185\u5bb9\uff09\u6216\u5f15\u53d1 UnicodeDecodeError \u9519\u8bef\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002","title":"\u7f16\u7801/\u89e3\u7801\u64cd\u4f5c"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_19","text":"\u5bf9\u4e8e\u5b57\u7b26\u4e32\u7c7b\u578b\u6765\u8bf4\uff0c\u8fd8\u6709\u4e00\u4e2a\u5e38\u7528\u7684\u64cd\u4f5c\u662f\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5339\u914d\u68c0\u67e5\uff0c\u5373\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6ee1\u8db3\u67d0\u79cd\u7279\u5b9a\u7684\u6a21\u5f0f\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u7f51\u7ad9\u5bf9\u7528\u6237\u6ce8\u518c\u4fe1\u606f\u4e2d\u7528\u6237\u540d\u548c\u90ae\u7bb1\u7684\u68c0\u67e5\uff0c\u5c31\u5c5e\u4e8e\u6a21\u5f0f\u5339\u914d\u68c0\u67e5\u3002\u5b9e\u73b0\u6a21\u5f0f\u5339\u914d\u68c0\u67e5\u7684\u5de5\u5177\u53eb\u505a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0cPython\u8bed\u8a00\u901a\u8fc7\u6807\u51c6\u5e93\u4e2d\u7684 re \u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u652f\u6301\uff0c\u6211\u4eec\u4f1a\u5728\u540e\u7eed\u7684\u8bfe\u7a0b\u4e2d\u4e3a\u5927\u5bb6\u8bb2\u89e3\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u3002","title":"\u5176\u4ed6\u65b9\u6cd5"},{"location":"%E7%AC%AC10%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_20","text":"\u77e5\u9053\u5982\u4f55\u8868\u793a\u548c\u64cd\u4f5c\u5b57\u7b26\u4e32\u5bf9\u7a0b\u5e8f\u5458\u6765\u8bf4\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5904\u7406\u6587\u672c\u4fe1\u606f\uff0cPython\u4e2d\u64cd\u4f5c\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\u62fc\u63a5\u3001\u5207\u7247\u7b49\u8fd0\u7b97\u7b26\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u65b9\u6cd5\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC11%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%9B%86%E5%90%88/","text":"\u7b2c11\u8bfe\uff1a\u5e38\u7528\u6570\u636e\u7ed3\u6784\u4e4b\u96c6\u5408 \u5728\u5b66\u4e60\u4e86\u5217\u8868\u548c\u5143\u7ec4\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u6765\u5b66\u4e60\u4e00\u79cd\u5bb9\u5668\u578b\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u7684\u540d\u5b57\u53eb\u96c6\u5408\uff08set\uff09\u3002\u8bf4\u5230\u96c6\u5408\u8fd9\u4e2a\u8bcd\u5927\u5bb6\u4e00\u5b9a\u4e0d\u4f1a\u964c\u751f\uff0c\u5728\u6570\u5b66\u8bfe\u672c\u4e0a\u5c31\u6709\u8fd9\u4e2a\u6982\u5ff5\u3002\u901a\u5e38\u6211\u4eec\u5bf9\u96c6\u5408\u7684\u5b9a\u4e49\u662f\u201c \u628a\u4e00\u5b9a\u8303\u56f4\u7684\u3001\u786e\u5b9a\u7684\u3001\u53ef\u4ee5\u533a\u522b\u7684\u4e8b\u7269\u5f53\u4f5c\u4e00\u4e2a\u6574\u4f53\u6765\u770b\u5f85 \u201d\uff0c\u96c6\u5408\u4e2d\u7684\u5404\u4e2a\u4e8b\u7269\u901a\u5e38\u79f0\u4e3a\u96c6\u5408\u7684 \u5143\u7d20 \u3002\u96c6\u5408\u5e94\u8be5\u6ee1\u8db3\u4ee5\u4e0b\u7279\u6027\uff1a \u65e0\u5e8f\u6027 \uff1a\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u6bcf\u4e2a\u5143\u7d20\u7684\u5730\u4f4d\u90fd\u662f\u76f8\u540c\u7684\uff0c\u5143\u7d20\u4e4b\u95f4\u662f\u65e0\u5e8f\u7684\u3002 \u4e92\u5f02\u6027 \uff1a\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u4efb\u4f55\u4e24\u4e2a\u5143\u7d20\u90fd\u662f\u4e0d\u76f8\u540c\u7684\uff0c\u5373\u5143\u7d20\u5728\u96c6\u5408\u4e2d\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u786e\u5b9a\u6027 \uff1a\u7ed9\u5b9a\u4e00\u4e2a\u96c6\u5408\u548c\u4e00\u4e2a\u4efb\u610f\u5143\u7d20\uff0c\u8be5\u5143\u7d20\u8981\u4e48\u5c5e\u8fd9\u4e2a\u96c6\u5408\uff0c\u8981\u4e48\u4e0d\u5c5e\u4e8e\u8fd9\u4e2a\u96c6\u5408\uff0c\u4e8c\u8005\u5fc5\u5c45\u5176\u4e00\uff0c\u4e0d\u5141\u8bb8\u6709\u6a21\u68f1\u4e24\u53ef\u7684\u60c5\u51b5\u51fa\u73b0\u3002 Python\u7a0b\u5e8f\u4e2d\u7684\u96c6\u5408\u8ddf\u6570\u5b66\u4e0a\u7684\u96c6\u5408\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u9700\u8981\u5f3a\u8c03\u7684\u662f\u4e0a\u9762\u6240\u8bf4\u7684\u65e0\u5e8f\u6027\u548c\u4e92\u5f02\u6027\u3002\u65e0\u5e8f\u6027\u8bf4\u660e\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u5e76\u4e0d\u50cf\u5217\u4e2d\u7684\u5143\u7d20\u90a3\u6837\u4e00\u4e2a\u6328\u7740\u4e00\u4e2a\uff0c\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u5b9e\u73b0\u968f\u673a\u8bbf\u95ee\uff08\u968f\u673a\u8bbf\u95ee\u6307\u7684\u662f\u7ed9\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u8303\u56f4\uff0c\u968f\u673a\u62bd\u53d6\u51fa\u4e00\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u6570\u5b57\u53ef\u4ee5\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u5143\u7d20\uff09\uff0c\u6240\u4ee5Python\u4e2d\u7684 \u96c6\u5408\u80af\u5b9a\u4e0d\u80fd\u591f\u652f\u6301\u7d22\u5f15\u8fd0\u7b97 \u3002\u53e6\u5916\uff0c\u96c6\u5408\u7684\u4e92\u5f02\u6027\u51b3\u5b9a\u4e86 \u96c6\u5408\u4e2d\u4e0d\u80fd\u6709\u91cd\u590d\u5143\u7d20 \uff0c\u8fd9\u4e00\u70b9\u4e5f\u662f\u96c6\u5408\u533a\u522b\u4e8e\u5217\u8868\u7684\u5173\u952e\uff0c\u8bf4\u5f97\u66f4\u76f4\u767d\u4e00\u4e9b\u5c31\u662f\uff0cPython\u4e2d\u7684\u96c6\u5408\u7c7b\u578b\u4f1a\u5bf9\u5176\u4e2d\u7684\u5143\u7d20\u505a\u53bb\u91cd\u5904\u7406\u3002Python\u4e2d\u7684\u96c6\u5408\u4e00\u5b9a\u662f\u652f\u6301 in \u548c not in \u6210\u5458\u8fd0\u7b97\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5c5e\u4e8e\u96c6\u5408\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u6240\u8bf4\u7684\u96c6\u5408\u7684\u786e\u5b9a\u6027\u3002 \u96c6\u5408\u7684\u6210\u5458\u8fd0\u7b97\u5728\u6027\u80fd\u4e0a\u8981\u4f18\u4e8e\u5217\u8868\u7684\u6210\u5458\u8fd0\u7b97 \uff0c\u8fd9\u662f\u96c6\u5408\u7684\u5e95\u5c42\u5b58\u50a8\u7279\u6027\uff08\u54c8\u5e0c\u5b58\u50a8\uff09\u51b3\u5b9a\u7684\uff0c\u6b64\u5904\u6211\u4eec\u6682\u65f6\u4e0d\u505a\u8ba8\u8bba\uff0c\u5927\u5bb6\u53ef\u4ee5\u5148\u8bb0\u4e0b\u8fd9\u4e2a\u7ed3\u8bba\u3002 \u521b\u5efa\u96c6\u5408 \u5728Python\u4e2d\uff0c\u521b\u5efa\u96c6\u5408\u53ef\u4ee5\u4f7f\u7528 {} \u5b57\u9762\u91cf\u8bed\u6cd5\uff0c {} \u4e2d\u9700\u8981\u81f3\u5c11\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u56e0\u4e3a\u6ca1\u6709\u5143\u7d20\u7684 {} \u5e76\u4e0d\u662f\u7a7a\u96c6\u5408\u800c\u662f\u4e00\u4e2a\u7a7a\u5b57\u5178\uff0c\u6211\u4eec\u4e0b\u4e00\u8282\u8bfe\u5c31\u4f1a\u5927\u5bb6\u4ecb\u7ecd\u5b57\u5178\u7684\u77e5\u8bc6\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570 set \u6765\u521b\u5efa\u4e00\u4e2a\u96c6\u5408\uff0c\u51c6\u786e\u7684\u8bf4 set \u5e76\u4e0d\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u662f\u521b\u5efa\u96c6\u5408\u5bf9\u8c61\u7684\u6784\u9020\u5668\uff0c\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u6211\u4eec\u5f88\u5feb\u4e5f\u4f1a\u8bb2\u5230\uff0c\u73b0\u5728\u4e0d\u7406\u89e3\u8df3\u8fc7\u5b83\u5c31\u53ef\u4ee5\u4e86\u3002\u8981\u521b\u5efa\u7a7a\u96c6\u5408\u53ef\u4ee5\u4f7f\u7528 set() \uff1b\u4e5f\u53ef\u4ee5\u5c06\u5176\u4ed6\u5e8f\u5217\u8f6c\u6362\u6210\u96c6\u5408\uff0c\u4f8b\u5982\uff1a set('hello') \u4f1a\u5f97\u5230\u4e00\u4e2a\u5305\u542b\u4e864\u4e2a\u5b57\u7b26\u7684\u96c6\u5408\uff08\u91cd\u590d\u7684 l \u4f1a\u88ab\u53bb\u6389\uff09\u3002\u9664\u4e86\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u751f\u6210\u5f0f\u8bed\u6cd5\u6765\u521b\u5efa\u96c6\u5408\uff0c\u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u7528\u751f\u6210\u5f0f\u521b\u5efa\u5217\u8868\u90a3\u6837\u3002\u8981\u77e5\u9053\u96c6\u5408\u4e2d\u6709\u591a\u5c11\u4e2a\u5143\u7d20\uff0c\u8fd8\u662f\u4f7f\u7528\u5185\u7f6e\u51fd\u6570 len \uff1b\u4f7f\u7528 for \u5faa\u73af\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u96c6\u5408\u5143\u7d20\u7684\u904d\u5386\u3002 # \u521b\u5efa\u96c6\u5408\u7684\u5b57\u9762\u91cf\u8bed\u6cd5(\u91cd\u590d\u5143\u7d20\u4e0d\u4f1a\u51fa\u73b0\u5728\u96c6\u5408\u4e2d) set1 = { 1 , 2 , 3 , 3 , 3 , 2 } print ( set1 ) # {1, 2, 3} print ( len ( set1 )) # 3 # \u521b\u5efa\u96c6\u5408\u7684\u6784\u9020\u5668\u8bed\u6cd5(\u540e\u9762\u4f1a\u8bb2\u5230\u4ec0\u4e48\u662f\u6784\u9020\u5668) set2 = set ( 'hello' ) print ( set2 ) # {'h', 'l', 'o', 'e'} # \u5c06\u5217\u8868\u8f6c\u6362\u6210\u96c6\u5408(\u53ef\u4ee5\u53bb\u6389\u5217\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20) set3 = set ([ 1 , 2 , 3 , 3 , 2 , 1 ]) print ( set3 ) # {1, 2, 3} # \u521b\u5efa\u96c6\u5408\u7684\u751f\u6210\u5f0f\u8bed\u6cd5(\u5c06\u5217\u8868\u751f\u6210\u5f0f\u7684[]\u6362\u6210{}) set4 = { num for num in range ( 1 , 20 ) if num % 3 == 0 or num % 5 == 0 } print ( set4 ) # {3, 5, 6, 9, 10, 12, 15, 18} # \u96c6\u5408\u5143\u7d20\u7684\u5faa\u73af\u904d\u5386 for elem in set4 : print ( elem ) \u9700\u8981\u63d0\u9192\u5927\u5bb6\uff0c\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u5fc5\u987b\u662f hashable \u7c7b\u578b\u3002\u6240\u8c13 hashable \u7c7b\u578b\u6307\u7684\u662f\u80fd\u591f\u8ba1\u7b97\u51fa\u54c8\u5e0c\u7801\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5927\u5bb6\u53ef\u4ee5\u6682\u65f6\u5c06\u54c8\u5e0c\u7801\u7406\u89e3\u4e3a\u548c\u53d8\u91cf\u5bf9\u5e94\u7684\u552f\u4e00\u7684ID\u503c\u3002\u901a\u5e38\u4e0d\u53ef\u53d8\u7c7b\u578b\u90fd\u662f hashable \u7c7b\u578b\uff0c\u5982\u6574\u6570\u3001\u6d6e\u70b9\u3001\u5b57\u7b26\u4e32\u3001\u5143\u7ec4\u7b49\uff0c\u800c\u53ef\u53d8\u7c7b\u578b\u90fd\u4e0d\u662f hashable \u7c7b\u578b\uff0c\u56e0\u4e3a\u53ef\u53d8\u7c7b\u578b\u65e0\u6cd5\u786e\u5b9a\u552f\u4e00\u7684ID\u503c\uff0c\u6240\u4ee5\u4e5f\u5c31\u4e0d\u80fd\u653e\u5230\u96c6\u5408\u4e2d\u3002\u96c6\u5408\u672c\u8eab\u4e5f\u662f\u53ef\u53d8\u7c7b\u578b\uff0c\u6240\u4ee5\u96c6\u5408\u4e0d\u80fd\u591f\u4f5c\u4e3a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u8fd9\u4e00\u70b9\u5728\u4f7f\u7528\u96c6\u5408\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\u3002 \u96c6\u5408\u7684\u8fd0\u7b97 Python\u4e3a\u96c6\u5408\u7c7b\u578b\u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u8fd0\u7b97\u7b26\uff0c\u4e3b\u8981\u5305\u62ec\uff1a\u6210\u5458\u8fd0\u7b97\u3001\u4ea4\u96c6\u8fd0\u7b97\u3001\u5e76\u96c6\u8fd0\u7b97\u3001\u5dee\u96c6\u8fd0\u7b97\u3001\u6bd4\u8f83\u8fd0\u7b97\uff08\u76f8\u7b49\u6027\u3001\u5b50\u96c6\u3001\u8d85\u96c6\uff09\u7b49\u3002 \u6210\u5458\u8fd0\u7b97 \u53ef\u4ee5\u901a\u8fc7\u6210\u5458\u8fd0\u7b97 in \u548c not in \u68c0\u67e5\u5143\u7d20\u662f\u5426\u5728\u96c6\u5408\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 set1 = { 11 , 12 , 13 , 14 , 15 } print ( 10 in set1 ) # False print ( 15 in set1 ) # True set2 = { 'Python' , 'Java' , 'Go' , 'Swift' } print ( 'Ruby' in set2 ) # False print ( 'Java' in set2 ) # True \u4ea4\u5e76\u5dee\u8fd0\u7b97 Python\u4e2d\u7684\u96c6\u5408\u8ddf\u6570\u5b66\u4e0a\u7684\u96c6\u5408\u4e00\u6837\uff0c\u53ef\u4ee5\u8fdb\u884c\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u7b49\u8fd0\u7b97\uff0c\u800c\u4e14\u53ef\u4ee5\u901a\u8fc7\u8fd0\u7b97\u7b26\u548c\u65b9\u6cd5\u8c03\u7528\u4e24\u79cd\u65b9\u5f0f\u6765\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 set1 = { 1 , 2 , 3 , 4 , 5 , 6 , 7 } set2 = { 2 , 4 , 6 , 8 , 10 } # \u4ea4\u96c6 # \u65b9\u6cd5\u4e00: \u4f7f\u7528 & \u8fd0\u7b97\u7b26 print ( set1 & set2 ) # {2, 4, 6} # \u65b9\u6cd5\u4e8c: \u4f7f\u7528intersection\u65b9\u6cd5 print ( set1 . intersection ( set2 )) # {2, 4, 6} # \u5e76\u96c6 # \u65b9\u6cd5\u4e00: \u4f7f\u7528 | \u8fd0\u7b97\u7b26 print ( set1 | set2 ) # {1, 2, 3, 4, 5, 6, 7, 8, 10} # \u65b9\u6cd5\u4e8c: \u4f7f\u7528union\u65b9\u6cd5 print ( set1 . union ( set2 )) # {1, 2, 3, 4, 5, 6, 7, 8, 10} # \u5dee\u96c6 # \u65b9\u6cd5\u4e00: \u4f7f\u7528 - \u8fd0\u7b97\u7b26 print ( set1 - set2 ) # {1, 3, 5, 7} # \u65b9\u6cd5\u4e8c: \u4f7f\u7528difference\u65b9\u6cd5 print ( set1 . difference ( set2 )) # {1, 3, 5, 7} # \u5bf9\u79f0\u5dee # \u65b9\u6cd5\u4e00: \u4f7f\u7528 ^ \u8fd0\u7b97\u7b26 print ( set1 ^ set2 ) # {1, 3, 5, 7, 8, 10} # \u65b9\u6cd5\u4e8c: \u4f7f\u7528symmetric_difference\u65b9\u6cd5 print ( set1 . symmetric_difference ( set2 )) # {1, 3, 5, 7, 8, 10} # \u65b9\u6cd5\u4e09: \u5bf9\u79f0\u5dee\u76f8\u5f53\u4e8e\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6\u51cf\u53bb\u4ea4\u96c6 print (( set1 | set2 ) - ( set1 & set2 )) # {1, 3, 5, 7, 8, 10} \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5bf9\u4e24\u4e2a\u96c6\u5408\u6c42\u4ea4\u96c6\uff0c & \u8fd0\u7b97\u7b26\u548c intersection \u65b9\u6cd5\u7684\u4f5c\u7528\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u4f7f\u7528\u8fd0\u7b97\u7b26\u7684\u65b9\u5f0f\u66f4\u76f4\u89c2\u800c\u4e14\u4ee3\u7801\u4e5f\u6bd4\u8f83\u7b80\u77ed\u3002\u76f8\u4fe1\u5927\u5bb6\u5bf9\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u3001\u5bf9\u79f0\u5dee\u8fd9\u51e0\u4e2a\u6982\u5ff5\u662f\u6bd4\u8f83\u6e05\u695a\u7684\uff0c\u5982\u679c\u6ca1\u4ec0\u4e48\u5370\u8c61\u4e86\u53ef\u4ee5\u770b\u770b\u4e0b\u9762\u7684\u56fe\u3002 \u96c6\u5408\u7684\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u8fd0\u7b97\u8fd8\u53ef\u4ee5\u8ddf\u8d4b\u503c\u8fd0\u7b97\u4e00\u8d77\u6784\u6210\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\uff0c\u5982\u4e0b\u6240\u793a\u3002 set1 = { 1 , 3 , 5 , 7 } set2 = { 2 , 4 , 6 } # \u5c06set1\u548cset2\u6c42\u5e76\u96c6\u518d\u8d4b\u503c\u7ed9set1 # \u4e5f\u53ef\u4ee5\u901a\u8fc7set1.update(set2)\u6765\u5b9e\u73b0 set1 |= set2 print ( set1 ) # {1, 2, 3, 4, 5, 6, 7} set3 = { 3 , 6 , 9 } # \u5c06set1\u548cset3\u6c42\u4ea4\u96c6\u518d\u8d4b\u503c\u7ed9set1 # \u4e5f\u53ef\u4ee5\u901a\u8fc7set1.intersection_update(set3)\u6765\u5b9e\u73b0 set1 &= set3 print ( set1 ) # {3, 6} \u6bd4\u8f83\u8fd0\u7b97 \u4e24\u4e2a\u96c6\u5408\u53ef\u4ee5\u7528 == \u548c != \u8fdb\u884c\u76f8\u7b49\u6027\u5224\u65ad\uff0c\u5982\u679c\u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u5b8c\u5168\u76f8\u540c\uff0c\u90a3\u4e48 == \u6bd4\u8f83\u7684\u7ed3\u679c\u5c31\u662f True \uff0c\u5426\u5219\u5c31\u662f False \u3002\u5982\u679c\u96c6\u5408 A \u7684\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u96c6\u5408 B \u7684\u5143\u7d20\uff0c\u90a3\u4e48\u96c6\u5408 A \u79f0\u4e3a\u96c6\u5408 B \u7684\u5b50\u96c6\uff0c\u5373\u5bf9\u4e8e$ \\forall{a} \\in {A}$\uff0c\u5747\u6709$ {a} \\in {B} $\uff0c\u5219$ {A} \\subseteq {B} $\uff0c A \u662f B \u7684\u5b50\u96c6\uff0c\u53cd\u8fc7\u6765\u4e5f\u53ef\u4ee5\u79f0 B \u662f A \u7684\u8d85\u96c6\u3002\u5982\u679c A \u662f B \u7684\u5b50\u96c6\u4e14 A \u4e0d\u7b49\u4e8e B \uff0c\u90a3\u4e48 A \u5c31\u662f B \u7684\u771f\u5b50\u96c6\u3002Python\u4e3a\u96c6\u5408\u7c7b\u578b\u63d0\u4f9b\u4e86\u5224\u65ad\u5b50\u96c6\u548c\u8d85\u96c6\u7684\u8fd0\u7b97\u7b26\uff0c\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u975e\u5e38\u719f\u6089\u7684 < \u548c > \u8fd0\u7b97\u7b26\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 set1 = { 1 , 3 , 5 } set2 = { 1 , 2 , 3 , 4 , 5 } set3 = set2 # <\u8fd0\u7b97\u7b26\u8868\u793a\u771f\u5b50\u96c6\uff0c<=\u8fd0\u7b97\u7b26\u8868\u793a\u5b50\u96c6 print ( set1 < set2 , set1 <= set2 ) # True True print ( set2 < set3 , set2 <= set3 ) # False True # \u901a\u8fc7issubset\u65b9\u6cd5\u4e5f\u80fd\u8fdb\u884c\u5b50\u96c6\u5224\u65ad print ( set1 . issubset ( set2 )) # True # \u53cd\u8fc7\u6765\u53ef\u4ee5\u7528issuperset\u6216>\u8fd0\u7b97\u7b26\u8fdb\u884c\u8d85\u96c6\u5224\u65ad print ( set2 . issuperset ( set1 )) # True print ( set2 > set1 ) # True \u96c6\u5408\u7684\u65b9\u6cd5 Python\u4e2d\u7684\u96c6\u5408\u662f\u53ef\u53d8\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u96c6\u5408\u7c7b\u578b\u7684\u65b9\u6cd5\u4e3a\u96c6\u5408\u6dfb\u52a0\u6216\u5220\u9664\u5143\u7d20\u3002 # \u521b\u5efa\u4e00\u4e2a\u7a7a\u96c6\u5408 set1 = set () # \u901a\u8fc7add\u65b9\u6cd5\u6dfb\u52a0\u5143\u7d20 set1 . add ( 33 ) set1 . add ( 55 ) set1 . update ({ 1 , 10 , 100 , 1000 }) print ( set1 ) # {33, 1, 100, 55, 1000, 10} # \u901a\u8fc7discard\u65b9\u6cd5\u5220\u9664\u6307\u5b9a\u5143\u7d20 set1 . discard ( 100 ) set1 . discard ( 99 ) print ( set1 ) # {1, 10, 33, 55, 1000} # \u901a\u8fc7remove\u65b9\u6cd5\u5220\u9664\u6307\u5b9a\u5143\u7d20\uff0c\u5efa\u8bae\u5148\u505a\u6210\u5458\u8fd0\u7b97\u518d\u5220\u9664 # \u5426\u5219\u5143\u7d20\u5982\u679c\u4e0d\u5728\u96c6\u5408\u4e2d\u5c31\u4f1a\u5f15\u53d1KeyError\u5f02\u5e38 if 10 in set1 : set1 . remove ( 10 ) print ( set1 ) # {33, 1, 55, 1000} # pop\u65b9\u6cd5\u53ef\u4ee5\u4ece\u96c6\u5408\u4e2d\u968f\u673a\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u5e76\u8fd4\u56de\u8be5\u5143\u7d20 print ( set1 . pop ()) # clear\u65b9\u6cd5\u53ef\u4ee5\u6e05\u7a7a\u6574\u4e2a\u96c6\u5408 set1 . clear () print ( set1 ) # set() \u5982\u679c\u8981\u5224\u65ad\u4e24\u4e2a\u96c6\u5408\u6709\u6ca1\u6709\u76f8\u540c\u7684\u5143\u7d20\u53ef\u4ee5\u4f7f\u7528 isdisjoint \u65b9\u6cd5\uff0c\u6ca1\u6709\u76f8\u540c\u5143\u7d20\u8fd4\u56de True \uff0c\u5426\u5219\u8fd4\u56de False \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 set1 = { 'Java' , 'Python' , 'Go' , 'Kotlin' } set2 = { 'Kotlin' , 'Swift' , 'Java' , 'Objective-C' , 'Dart' } set3 = { 'HTML' , 'CSS' , 'JavaScript' } print ( set1 . isdisjoint ( set2 )) # False print ( set1 . isdisjoint ( set3 )) # True \u4e0d\u53ef\u53d8\u96c6\u5408 Python\u4e2d\u8fd8\u6709\u4e00\u79cd\u4e0d\u53ef\u53d8\u7c7b\u578b\u7684\u96c6\u5408\uff0c\u540d\u5b57\u53eb frozenset \u3002 set \u8ddf frozenset \u7684\u533a\u522b\u5c31\u5982\u540c list \u8ddf tuple \u7684\u533a\u522b\uff0c frozenset \u7531\u4e8e\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c\u80fd\u591f\u8ba1\u7b97\u51fa\u54c8\u5e0c\u7801\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u4f5c\u4e3a set \u4e2d\u7684\u5143\u7d20\u3002\u9664\u4e86\u4e0d\u80fd\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\uff0c frozenset \u5728\u5176\u4ed6\u65b9\u9762\u8ddf set \u57fa\u672c\u662f\u4e00\u6837\u7684\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u7b80\u5355\u7684\u5c55\u793a\u4e86 frozenset \u7684\u7528\u6cd5\u3002 set1 = frozenset ({ 1 , 3 , 5 , 7 }) set2 = frozenset ( range ( 1 , 6 )) print ( set1 & set2 ) # frozenset({1, 3, 5}) print ( set1 | set2 ) # frozenset({1, 2, 3, 4, 5, 7}) print ( set1 - set2 ) # frozenset({7}) print ( set1 < set2 ) # False \u7b80\u5355\u7684\u603b\u7ed3 Python\u4e2d\u7684\u96c6\u5408\u5e95\u5c42\u4f7f\u7528\u4e86 \u54c8\u5e0c\u5b58\u50a8 \u7684\u65b9\u5f0f\uff0c\u5bf9\u4e8e\u8fd9\u4e00\u70b9\u6211\u4eec\u6682\u65f6\u4e0d\u505a\u4ecb\u7ecd\uff0c\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u6709\u9700\u8981\u7684\u65f6\u5019\u518d\u4e3a\u5927\u5bb6\u8bb2\u89e3\u96c6\u5408\u7684\u5e95\u5c42\u539f\u7406\uff0c\u73b0\u9636\u6bb5\u5927\u5bb6\u53ea\u9700\u8981\u77e5\u9053 \u96c6\u5408\u662f\u4e00\u79cd\u5bb9\u5668 \uff0c\u5143\u7d20\u5fc5\u987b\u662f hashable \u7c7b\u578b\uff0c\u4e0e\u5217\u8868\u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e\u96c6\u5408\u4e2d\u7684\u5143\u7d20 \u6ca1\u6709\u5e8f \u3001 \u4e0d\u80fd\u7528\u7d22\u5f15\u8fd0\u7b97 \u3001 \u4e0d\u80fd\u91cd\u590d \u3002","title":"\u7b2c11\u8bfe\uff1a\u5e38\u7528\u6570\u636e\u7ed3\u6784\u4e4b\u96c6\u5408"},{"location":"%E7%AC%AC11%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%9B%86%E5%90%88/#11","text":"\u5728\u5b66\u4e60\u4e86\u5217\u8868\u548c\u5143\u7ec4\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u6765\u5b66\u4e60\u4e00\u79cd\u5bb9\u5668\u578b\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u7684\u540d\u5b57\u53eb\u96c6\u5408\uff08set\uff09\u3002\u8bf4\u5230\u96c6\u5408\u8fd9\u4e2a\u8bcd\u5927\u5bb6\u4e00\u5b9a\u4e0d\u4f1a\u964c\u751f\uff0c\u5728\u6570\u5b66\u8bfe\u672c\u4e0a\u5c31\u6709\u8fd9\u4e2a\u6982\u5ff5\u3002\u901a\u5e38\u6211\u4eec\u5bf9\u96c6\u5408\u7684\u5b9a\u4e49\u662f\u201c \u628a\u4e00\u5b9a\u8303\u56f4\u7684\u3001\u786e\u5b9a\u7684\u3001\u53ef\u4ee5\u533a\u522b\u7684\u4e8b\u7269\u5f53\u4f5c\u4e00\u4e2a\u6574\u4f53\u6765\u770b\u5f85 \u201d\uff0c\u96c6\u5408\u4e2d\u7684\u5404\u4e2a\u4e8b\u7269\u901a\u5e38\u79f0\u4e3a\u96c6\u5408\u7684 \u5143\u7d20 \u3002\u96c6\u5408\u5e94\u8be5\u6ee1\u8db3\u4ee5\u4e0b\u7279\u6027\uff1a \u65e0\u5e8f\u6027 \uff1a\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u6bcf\u4e2a\u5143\u7d20\u7684\u5730\u4f4d\u90fd\u662f\u76f8\u540c\u7684\uff0c\u5143\u7d20\u4e4b\u95f4\u662f\u65e0\u5e8f\u7684\u3002 \u4e92\u5f02\u6027 \uff1a\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u4efb\u4f55\u4e24\u4e2a\u5143\u7d20\u90fd\u662f\u4e0d\u76f8\u540c\u7684\uff0c\u5373\u5143\u7d20\u5728\u96c6\u5408\u4e2d\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u786e\u5b9a\u6027 \uff1a\u7ed9\u5b9a\u4e00\u4e2a\u96c6\u5408\u548c\u4e00\u4e2a\u4efb\u610f\u5143\u7d20\uff0c\u8be5\u5143\u7d20\u8981\u4e48\u5c5e\u8fd9\u4e2a\u96c6\u5408\uff0c\u8981\u4e48\u4e0d\u5c5e\u4e8e\u8fd9\u4e2a\u96c6\u5408\uff0c\u4e8c\u8005\u5fc5\u5c45\u5176\u4e00\uff0c\u4e0d\u5141\u8bb8\u6709\u6a21\u68f1\u4e24\u53ef\u7684\u60c5\u51b5\u51fa\u73b0\u3002 Python\u7a0b\u5e8f\u4e2d\u7684\u96c6\u5408\u8ddf\u6570\u5b66\u4e0a\u7684\u96c6\u5408\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u9700\u8981\u5f3a\u8c03\u7684\u662f\u4e0a\u9762\u6240\u8bf4\u7684\u65e0\u5e8f\u6027\u548c\u4e92\u5f02\u6027\u3002\u65e0\u5e8f\u6027\u8bf4\u660e\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u5e76\u4e0d\u50cf\u5217\u4e2d\u7684\u5143\u7d20\u90a3\u6837\u4e00\u4e2a\u6328\u7740\u4e00\u4e2a\uff0c\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u5b9e\u73b0\u968f\u673a\u8bbf\u95ee\uff08\u968f\u673a\u8bbf\u95ee\u6307\u7684\u662f\u7ed9\u5b9a\u4e00\u4e2a\u6709\u6548\u7684\u8303\u56f4\uff0c\u968f\u673a\u62bd\u53d6\u51fa\u4e00\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u6570\u5b57\u53ef\u4ee5\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u5143\u7d20\uff09\uff0c\u6240\u4ee5Python\u4e2d\u7684 \u96c6\u5408\u80af\u5b9a\u4e0d\u80fd\u591f\u652f\u6301\u7d22\u5f15\u8fd0\u7b97 \u3002\u53e6\u5916\uff0c\u96c6\u5408\u7684\u4e92\u5f02\u6027\u51b3\u5b9a\u4e86 \u96c6\u5408\u4e2d\u4e0d\u80fd\u6709\u91cd\u590d\u5143\u7d20 \uff0c\u8fd9\u4e00\u70b9\u4e5f\u662f\u96c6\u5408\u533a\u522b\u4e8e\u5217\u8868\u7684\u5173\u952e\uff0c\u8bf4\u5f97\u66f4\u76f4\u767d\u4e00\u4e9b\u5c31\u662f\uff0cPython\u4e2d\u7684\u96c6\u5408\u7c7b\u578b\u4f1a\u5bf9\u5176\u4e2d\u7684\u5143\u7d20\u505a\u53bb\u91cd\u5904\u7406\u3002Python\u4e2d\u7684\u96c6\u5408\u4e00\u5b9a\u662f\u652f\u6301 in \u548c not in \u6210\u5458\u8fd0\u7b97\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5c5e\u4e8e\u96c6\u5408\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u6240\u8bf4\u7684\u96c6\u5408\u7684\u786e\u5b9a\u6027\u3002 \u96c6\u5408\u7684\u6210\u5458\u8fd0\u7b97\u5728\u6027\u80fd\u4e0a\u8981\u4f18\u4e8e\u5217\u8868\u7684\u6210\u5458\u8fd0\u7b97 \uff0c\u8fd9\u662f\u96c6\u5408\u7684\u5e95\u5c42\u5b58\u50a8\u7279\u6027\uff08\u54c8\u5e0c\u5b58\u50a8\uff09\u51b3\u5b9a\u7684\uff0c\u6b64\u5904\u6211\u4eec\u6682\u65f6\u4e0d\u505a\u8ba8\u8bba\uff0c\u5927\u5bb6\u53ef\u4ee5\u5148\u8bb0\u4e0b\u8fd9\u4e2a\u7ed3\u8bba\u3002","title":"\u7b2c11\u8bfe\uff1a\u5e38\u7528\u6570\u636e\u7ed3\u6784\u4e4b\u96c6\u5408"},{"location":"%E7%AC%AC11%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%9B%86%E5%90%88/#_1","text":"\u5728Python\u4e2d\uff0c\u521b\u5efa\u96c6\u5408\u53ef\u4ee5\u4f7f\u7528 {} \u5b57\u9762\u91cf\u8bed\u6cd5\uff0c {} \u4e2d\u9700\u8981\u81f3\u5c11\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u56e0\u4e3a\u6ca1\u6709\u5143\u7d20\u7684 {} \u5e76\u4e0d\u662f\u7a7a\u96c6\u5408\u800c\u662f\u4e00\u4e2a\u7a7a\u5b57\u5178\uff0c\u6211\u4eec\u4e0b\u4e00\u8282\u8bfe\u5c31\u4f1a\u5927\u5bb6\u4ecb\u7ecd\u5b57\u5178\u7684\u77e5\u8bc6\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570 set \u6765\u521b\u5efa\u4e00\u4e2a\u96c6\u5408\uff0c\u51c6\u786e\u7684\u8bf4 set \u5e76\u4e0d\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u662f\u521b\u5efa\u96c6\u5408\u5bf9\u8c61\u7684\u6784\u9020\u5668\uff0c\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u6211\u4eec\u5f88\u5feb\u4e5f\u4f1a\u8bb2\u5230\uff0c\u73b0\u5728\u4e0d\u7406\u89e3\u8df3\u8fc7\u5b83\u5c31\u53ef\u4ee5\u4e86\u3002\u8981\u521b\u5efa\u7a7a\u96c6\u5408\u53ef\u4ee5\u4f7f\u7528 set() \uff1b\u4e5f\u53ef\u4ee5\u5c06\u5176\u4ed6\u5e8f\u5217\u8f6c\u6362\u6210\u96c6\u5408\uff0c\u4f8b\u5982\uff1a set('hello') \u4f1a\u5f97\u5230\u4e00\u4e2a\u5305\u542b\u4e864\u4e2a\u5b57\u7b26\u7684\u96c6\u5408\uff08\u91cd\u590d\u7684 l \u4f1a\u88ab\u53bb\u6389\uff09\u3002\u9664\u4e86\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u751f\u6210\u5f0f\u8bed\u6cd5\u6765\u521b\u5efa\u96c6\u5408\uff0c\u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u7528\u751f\u6210\u5f0f\u521b\u5efa\u5217\u8868\u90a3\u6837\u3002\u8981\u77e5\u9053\u96c6\u5408\u4e2d\u6709\u591a\u5c11\u4e2a\u5143\u7d20\uff0c\u8fd8\u662f\u4f7f\u7528\u5185\u7f6e\u51fd\u6570 len \uff1b\u4f7f\u7528 for \u5faa\u73af\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u96c6\u5408\u5143\u7d20\u7684\u904d\u5386\u3002 # \u521b\u5efa\u96c6\u5408\u7684\u5b57\u9762\u91cf\u8bed\u6cd5(\u91cd\u590d\u5143\u7d20\u4e0d\u4f1a\u51fa\u73b0\u5728\u96c6\u5408\u4e2d) set1 = { 1 , 2 , 3 , 3 , 3 , 2 } print ( set1 ) # {1, 2, 3} print ( len ( set1 )) # 3 # \u521b\u5efa\u96c6\u5408\u7684\u6784\u9020\u5668\u8bed\u6cd5(\u540e\u9762\u4f1a\u8bb2\u5230\u4ec0\u4e48\u662f\u6784\u9020\u5668) set2 = set ( 'hello' ) print ( set2 ) # {'h', 'l', 'o', 'e'} # \u5c06\u5217\u8868\u8f6c\u6362\u6210\u96c6\u5408(\u53ef\u4ee5\u53bb\u6389\u5217\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20) set3 = set ([ 1 , 2 , 3 , 3 , 2 , 1 ]) print ( set3 ) # {1, 2, 3} # \u521b\u5efa\u96c6\u5408\u7684\u751f\u6210\u5f0f\u8bed\u6cd5(\u5c06\u5217\u8868\u751f\u6210\u5f0f\u7684[]\u6362\u6210{}) set4 = { num for num in range ( 1 , 20 ) if num % 3 == 0 or num % 5 == 0 } print ( set4 ) # {3, 5, 6, 9, 10, 12, 15, 18} # \u96c6\u5408\u5143\u7d20\u7684\u5faa\u73af\u904d\u5386 for elem in set4 : print ( elem ) \u9700\u8981\u63d0\u9192\u5927\u5bb6\uff0c\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u5fc5\u987b\u662f hashable \u7c7b\u578b\u3002\u6240\u8c13 hashable \u7c7b\u578b\u6307\u7684\u662f\u80fd\u591f\u8ba1\u7b97\u51fa\u54c8\u5e0c\u7801\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5927\u5bb6\u53ef\u4ee5\u6682\u65f6\u5c06\u54c8\u5e0c\u7801\u7406\u89e3\u4e3a\u548c\u53d8\u91cf\u5bf9\u5e94\u7684\u552f\u4e00\u7684ID\u503c\u3002\u901a\u5e38\u4e0d\u53ef\u53d8\u7c7b\u578b\u90fd\u662f hashable \u7c7b\u578b\uff0c\u5982\u6574\u6570\u3001\u6d6e\u70b9\u3001\u5b57\u7b26\u4e32\u3001\u5143\u7ec4\u7b49\uff0c\u800c\u53ef\u53d8\u7c7b\u578b\u90fd\u4e0d\u662f hashable \u7c7b\u578b\uff0c\u56e0\u4e3a\u53ef\u53d8\u7c7b\u578b\u65e0\u6cd5\u786e\u5b9a\u552f\u4e00\u7684ID\u503c\uff0c\u6240\u4ee5\u4e5f\u5c31\u4e0d\u80fd\u653e\u5230\u96c6\u5408\u4e2d\u3002\u96c6\u5408\u672c\u8eab\u4e5f\u662f\u53ef\u53d8\u7c7b\u578b\uff0c\u6240\u4ee5\u96c6\u5408\u4e0d\u80fd\u591f\u4f5c\u4e3a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u8fd9\u4e00\u70b9\u5728\u4f7f\u7528\u96c6\u5408\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\u3002","title":"\u521b\u5efa\u96c6\u5408"},{"location":"%E7%AC%AC11%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%9B%86%E5%90%88/#_2","text":"Python\u4e3a\u96c6\u5408\u7c7b\u578b\u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u8fd0\u7b97\u7b26\uff0c\u4e3b\u8981\u5305\u62ec\uff1a\u6210\u5458\u8fd0\u7b97\u3001\u4ea4\u96c6\u8fd0\u7b97\u3001\u5e76\u96c6\u8fd0\u7b97\u3001\u5dee\u96c6\u8fd0\u7b97\u3001\u6bd4\u8f83\u8fd0\u7b97\uff08\u76f8\u7b49\u6027\u3001\u5b50\u96c6\u3001\u8d85\u96c6\uff09\u7b49\u3002","title":"\u96c6\u5408\u7684\u8fd0\u7b97"},{"location":"%E7%AC%AC11%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%9B%86%E5%90%88/#_3","text":"\u53ef\u4ee5\u901a\u8fc7\u6210\u5458\u8fd0\u7b97 in \u548c not in \u68c0\u67e5\u5143\u7d20\u662f\u5426\u5728\u96c6\u5408\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 set1 = { 11 , 12 , 13 , 14 , 15 } print ( 10 in set1 ) # False print ( 15 in set1 ) # True set2 = { 'Python' , 'Java' , 'Go' , 'Swift' } print ( 'Ruby' in set2 ) # False print ( 'Java' in set2 ) # True","title":"\u6210\u5458\u8fd0\u7b97"},{"location":"%E7%AC%AC11%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%9B%86%E5%90%88/#_4","text":"Python\u4e2d\u7684\u96c6\u5408\u8ddf\u6570\u5b66\u4e0a\u7684\u96c6\u5408\u4e00\u6837\uff0c\u53ef\u4ee5\u8fdb\u884c\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u7b49\u8fd0\u7b97\uff0c\u800c\u4e14\u53ef\u4ee5\u901a\u8fc7\u8fd0\u7b97\u7b26\u548c\u65b9\u6cd5\u8c03\u7528\u4e24\u79cd\u65b9\u5f0f\u6765\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 set1 = { 1 , 2 , 3 , 4 , 5 , 6 , 7 } set2 = { 2 , 4 , 6 , 8 , 10 } # \u4ea4\u96c6 # \u65b9\u6cd5\u4e00: \u4f7f\u7528 & \u8fd0\u7b97\u7b26 print ( set1 & set2 ) # {2, 4, 6} # \u65b9\u6cd5\u4e8c: \u4f7f\u7528intersection\u65b9\u6cd5 print ( set1 . intersection ( set2 )) # {2, 4, 6} # \u5e76\u96c6 # \u65b9\u6cd5\u4e00: \u4f7f\u7528 | \u8fd0\u7b97\u7b26 print ( set1 | set2 ) # {1, 2, 3, 4, 5, 6, 7, 8, 10} # \u65b9\u6cd5\u4e8c: \u4f7f\u7528union\u65b9\u6cd5 print ( set1 . union ( set2 )) # {1, 2, 3, 4, 5, 6, 7, 8, 10} # \u5dee\u96c6 # \u65b9\u6cd5\u4e00: \u4f7f\u7528 - \u8fd0\u7b97\u7b26 print ( set1 - set2 ) # {1, 3, 5, 7} # \u65b9\u6cd5\u4e8c: \u4f7f\u7528difference\u65b9\u6cd5 print ( set1 . difference ( set2 )) # {1, 3, 5, 7} # \u5bf9\u79f0\u5dee # \u65b9\u6cd5\u4e00: \u4f7f\u7528 ^ \u8fd0\u7b97\u7b26 print ( set1 ^ set2 ) # {1, 3, 5, 7, 8, 10} # \u65b9\u6cd5\u4e8c: \u4f7f\u7528symmetric_difference\u65b9\u6cd5 print ( set1 . symmetric_difference ( set2 )) # {1, 3, 5, 7, 8, 10} # \u65b9\u6cd5\u4e09: \u5bf9\u79f0\u5dee\u76f8\u5f53\u4e8e\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6\u51cf\u53bb\u4ea4\u96c6 print (( set1 | set2 ) - ( set1 & set2 )) # {1, 3, 5, 7, 8, 10} \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5bf9\u4e24\u4e2a\u96c6\u5408\u6c42\u4ea4\u96c6\uff0c & \u8fd0\u7b97\u7b26\u548c intersection \u65b9\u6cd5\u7684\u4f5c\u7528\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u4f7f\u7528\u8fd0\u7b97\u7b26\u7684\u65b9\u5f0f\u66f4\u76f4\u89c2\u800c\u4e14\u4ee3\u7801\u4e5f\u6bd4\u8f83\u7b80\u77ed\u3002\u76f8\u4fe1\u5927\u5bb6\u5bf9\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u3001\u5bf9\u79f0\u5dee\u8fd9\u51e0\u4e2a\u6982\u5ff5\u662f\u6bd4\u8f83\u6e05\u695a\u7684\uff0c\u5982\u679c\u6ca1\u4ec0\u4e48\u5370\u8c61\u4e86\u53ef\u4ee5\u770b\u770b\u4e0b\u9762\u7684\u56fe\u3002 \u96c6\u5408\u7684\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u8fd0\u7b97\u8fd8\u53ef\u4ee5\u8ddf\u8d4b\u503c\u8fd0\u7b97\u4e00\u8d77\u6784\u6210\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\uff0c\u5982\u4e0b\u6240\u793a\u3002 set1 = { 1 , 3 , 5 , 7 } set2 = { 2 , 4 , 6 } # \u5c06set1\u548cset2\u6c42\u5e76\u96c6\u518d\u8d4b\u503c\u7ed9set1 # \u4e5f\u53ef\u4ee5\u901a\u8fc7set1.update(set2)\u6765\u5b9e\u73b0 set1 |= set2 print ( set1 ) # {1, 2, 3, 4, 5, 6, 7} set3 = { 3 , 6 , 9 } # \u5c06set1\u548cset3\u6c42\u4ea4\u96c6\u518d\u8d4b\u503c\u7ed9set1 # \u4e5f\u53ef\u4ee5\u901a\u8fc7set1.intersection_update(set3)\u6765\u5b9e\u73b0 set1 &= set3 print ( set1 ) # {3, 6}","title":"\u4ea4\u5e76\u5dee\u8fd0\u7b97"},{"location":"%E7%AC%AC11%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%9B%86%E5%90%88/#_5","text":"\u4e24\u4e2a\u96c6\u5408\u53ef\u4ee5\u7528 == \u548c != \u8fdb\u884c\u76f8\u7b49\u6027\u5224\u65ad\uff0c\u5982\u679c\u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u5b8c\u5168\u76f8\u540c\uff0c\u90a3\u4e48 == \u6bd4\u8f83\u7684\u7ed3\u679c\u5c31\u662f True \uff0c\u5426\u5219\u5c31\u662f False \u3002\u5982\u679c\u96c6\u5408 A \u7684\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u96c6\u5408 B \u7684\u5143\u7d20\uff0c\u90a3\u4e48\u96c6\u5408 A \u79f0\u4e3a\u96c6\u5408 B \u7684\u5b50\u96c6\uff0c\u5373\u5bf9\u4e8e$ \\forall{a} \\in {A}$\uff0c\u5747\u6709$ {a} \\in {B} $\uff0c\u5219$ {A} \\subseteq {B} $\uff0c A \u662f B \u7684\u5b50\u96c6\uff0c\u53cd\u8fc7\u6765\u4e5f\u53ef\u4ee5\u79f0 B \u662f A \u7684\u8d85\u96c6\u3002\u5982\u679c A \u662f B \u7684\u5b50\u96c6\u4e14 A \u4e0d\u7b49\u4e8e B \uff0c\u90a3\u4e48 A \u5c31\u662f B \u7684\u771f\u5b50\u96c6\u3002Python\u4e3a\u96c6\u5408\u7c7b\u578b\u63d0\u4f9b\u4e86\u5224\u65ad\u5b50\u96c6\u548c\u8d85\u96c6\u7684\u8fd0\u7b97\u7b26\uff0c\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u975e\u5e38\u719f\u6089\u7684 < \u548c > \u8fd0\u7b97\u7b26\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 set1 = { 1 , 3 , 5 } set2 = { 1 , 2 , 3 , 4 , 5 } set3 = set2 # <\u8fd0\u7b97\u7b26\u8868\u793a\u771f\u5b50\u96c6\uff0c<=\u8fd0\u7b97\u7b26\u8868\u793a\u5b50\u96c6 print ( set1 < set2 , set1 <= set2 ) # True True print ( set2 < set3 , set2 <= set3 ) # False True # \u901a\u8fc7issubset\u65b9\u6cd5\u4e5f\u80fd\u8fdb\u884c\u5b50\u96c6\u5224\u65ad print ( set1 . issubset ( set2 )) # True # \u53cd\u8fc7\u6765\u53ef\u4ee5\u7528issuperset\u6216>\u8fd0\u7b97\u7b26\u8fdb\u884c\u8d85\u96c6\u5224\u65ad print ( set2 . issuperset ( set1 )) # True print ( set2 > set1 ) # True","title":"\u6bd4\u8f83\u8fd0\u7b97"},{"location":"%E7%AC%AC11%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%9B%86%E5%90%88/#_6","text":"Python\u4e2d\u7684\u96c6\u5408\u662f\u53ef\u53d8\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u96c6\u5408\u7c7b\u578b\u7684\u65b9\u6cd5\u4e3a\u96c6\u5408\u6dfb\u52a0\u6216\u5220\u9664\u5143\u7d20\u3002 # \u521b\u5efa\u4e00\u4e2a\u7a7a\u96c6\u5408 set1 = set () # \u901a\u8fc7add\u65b9\u6cd5\u6dfb\u52a0\u5143\u7d20 set1 . add ( 33 ) set1 . add ( 55 ) set1 . update ({ 1 , 10 , 100 , 1000 }) print ( set1 ) # {33, 1, 100, 55, 1000, 10} # \u901a\u8fc7discard\u65b9\u6cd5\u5220\u9664\u6307\u5b9a\u5143\u7d20 set1 . discard ( 100 ) set1 . discard ( 99 ) print ( set1 ) # {1, 10, 33, 55, 1000} # \u901a\u8fc7remove\u65b9\u6cd5\u5220\u9664\u6307\u5b9a\u5143\u7d20\uff0c\u5efa\u8bae\u5148\u505a\u6210\u5458\u8fd0\u7b97\u518d\u5220\u9664 # \u5426\u5219\u5143\u7d20\u5982\u679c\u4e0d\u5728\u96c6\u5408\u4e2d\u5c31\u4f1a\u5f15\u53d1KeyError\u5f02\u5e38 if 10 in set1 : set1 . remove ( 10 ) print ( set1 ) # {33, 1, 55, 1000} # pop\u65b9\u6cd5\u53ef\u4ee5\u4ece\u96c6\u5408\u4e2d\u968f\u673a\u5220\u9664\u4e00\u4e2a\u5143\u7d20\u5e76\u8fd4\u56de\u8be5\u5143\u7d20 print ( set1 . pop ()) # clear\u65b9\u6cd5\u53ef\u4ee5\u6e05\u7a7a\u6574\u4e2a\u96c6\u5408 set1 . clear () print ( set1 ) # set() \u5982\u679c\u8981\u5224\u65ad\u4e24\u4e2a\u96c6\u5408\u6709\u6ca1\u6709\u76f8\u540c\u7684\u5143\u7d20\u53ef\u4ee5\u4f7f\u7528 isdisjoint \u65b9\u6cd5\uff0c\u6ca1\u6709\u76f8\u540c\u5143\u7d20\u8fd4\u56de True \uff0c\u5426\u5219\u8fd4\u56de False \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 set1 = { 'Java' , 'Python' , 'Go' , 'Kotlin' } set2 = { 'Kotlin' , 'Swift' , 'Java' , 'Objective-C' , 'Dart' } set3 = { 'HTML' , 'CSS' , 'JavaScript' } print ( set1 . isdisjoint ( set2 )) # False print ( set1 . isdisjoint ( set3 )) # True","title":"\u96c6\u5408\u7684\u65b9\u6cd5"},{"location":"%E7%AC%AC11%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%9B%86%E5%90%88/#_7","text":"Python\u4e2d\u8fd8\u6709\u4e00\u79cd\u4e0d\u53ef\u53d8\u7c7b\u578b\u7684\u96c6\u5408\uff0c\u540d\u5b57\u53eb frozenset \u3002 set \u8ddf frozenset \u7684\u533a\u522b\u5c31\u5982\u540c list \u8ddf tuple \u7684\u533a\u522b\uff0c frozenset \u7531\u4e8e\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c\u80fd\u591f\u8ba1\u7b97\u51fa\u54c8\u5e0c\u7801\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u4f5c\u4e3a set \u4e2d\u7684\u5143\u7d20\u3002\u9664\u4e86\u4e0d\u80fd\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\uff0c frozenset \u5728\u5176\u4ed6\u65b9\u9762\u8ddf set \u57fa\u672c\u662f\u4e00\u6837\u7684\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u7b80\u5355\u7684\u5c55\u793a\u4e86 frozenset \u7684\u7528\u6cd5\u3002 set1 = frozenset ({ 1 , 3 , 5 , 7 }) set2 = frozenset ( range ( 1 , 6 )) print ( set1 & set2 ) # frozenset({1, 3, 5}) print ( set1 | set2 ) # frozenset({1, 2, 3, 4, 5, 7}) print ( set1 - set2 ) # frozenset({7}) print ( set1 < set2 ) # False","title":"\u4e0d\u53ef\u53d8\u96c6\u5408"},{"location":"%E7%AC%AC11%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%9B%86%E5%90%88/#_8","text":"Python\u4e2d\u7684\u96c6\u5408\u5e95\u5c42\u4f7f\u7528\u4e86 \u54c8\u5e0c\u5b58\u50a8 \u7684\u65b9\u5f0f\uff0c\u5bf9\u4e8e\u8fd9\u4e00\u70b9\u6211\u4eec\u6682\u65f6\u4e0d\u505a\u4ecb\u7ecd\uff0c\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u6709\u9700\u8981\u7684\u65f6\u5019\u518d\u4e3a\u5927\u5bb6\u8bb2\u89e3\u96c6\u5408\u7684\u5e95\u5c42\u539f\u7406\uff0c\u73b0\u9636\u6bb5\u5927\u5bb6\u53ea\u9700\u8981\u77e5\u9053 \u96c6\u5408\u662f\u4e00\u79cd\u5bb9\u5668 \uff0c\u5143\u7d20\u5fc5\u987b\u662f hashable \u7c7b\u578b\uff0c\u4e0e\u5217\u8868\u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e\u96c6\u5408\u4e2d\u7684\u5143\u7d20 \u6ca1\u6709\u5e8f \u3001 \u4e0d\u80fd\u7528\u7d22\u5f15\u8fd0\u7b97 \u3001 \u4e0d\u80fd\u91cd\u590d \u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC12%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E5%85%B8/","text":"\u7b2c12\u8bfe\uff1a\u5e38\u7528\u6570\u636e\u7ed3\u6784\u4e4b\u5b57\u5178 \u8fc4\u4eca\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u4e86Python\u4e2d\u7684\u4e09\u79cd\u5bb9\u5668\u578b\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u662f\u8fd9\u4e9b\u6570\u636e\u7c7b\u578b\u4ecd\u7136\u4e0d\u8db3\u4ee5\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u6240\u6709\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u8981\u4fdd\u5b58\u4e00\u4e2a\u4eba\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u59d3\u540d\u3001\u5e74\u9f84\u3001\u4f53\u91cd\u3001\u5355\u4f4d\u5730\u5740\u3001\u5bb6\u5ead\u4f4f\u5740\u3001\u672c\u4eba\u624b\u673a\u53f7\u3001\u7d27\u6025\u8054\u7cfb\u4eba\u624b\u673a\u53f7\u7b49\u4fe1\u606f\uff0c\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u4e4b\u524d\u5b66\u8fc7\u7684\u5217\u8868\u3001\u5143\u7ec4\u548c\u96c6\u5408\u90fd\u4e0d\u662f\u6700\u7406\u60f3\u7684\u9009\u62e9\u3002 person1 = [ '\u738b\u5927\u9524' , 55 , 60 , '\u79d1\u534e\u5317\u8def62\u53f7' , '\u4e2d\u540c\u4ec1\u8def8\u53f7' , '13122334455' , '13800998877' ] person2 = ( '\u738b\u5927\u9524' , 55 , 60 , '\u79d1\u534e\u5317\u8def62\u53f7' , '\u4e2d\u540c\u4ec1\u8def8\u53f7' , '13122334455' , '13800998877' ) person3 = { '\u738b\u5927\u9524' , 55 , 60 , '\u79d1\u534e\u5317\u8def62\u53f7' , '\u4e2d\u540c\u4ec1\u8def8\u53f7' , '13122334455' , '13800998877' } \u96c6\u5408\u80af\u5b9a\u662f\u6700\u4e0d\u5408\u9002\u7684\uff0c\u56e0\u4e3a\u96c6\u5408\u6709\u53bb\u91cd\u7279\u6027\uff0c\u5982\u679c\u4e00\u4e2a\u4eba\u7684\u5e74\u9f84\u548c\u4f53\u91cd\u76f8\u540c\uff0c\u90a3\u4e48\u96c6\u5408\u4e2d\u5c31\u4f1a\u5c11\u4e00\u9879\u4fe1\u606f\uff1b\u540c\u7406\uff0c\u5982\u679c\u8fd9\u4e2a\u4eba\u7684\u5bb6\u5ead\u4f4f\u5740\u548c\u5355\u4f4d\u5730\u5740\u662f\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u96c6\u5408\u4e2d\u53c8\u4f1a\u5c11\u4e00\u9879\u4fe1\u606f\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u867d\u7136\u5217\u8868\u548c\u5143\u7ec4\u53ef\u4ee5\u628a\u4e00\u4e2a\u4eba\u7684\u6240\u6709\u4fe1\u606f\u90fd\u4fdd\u5b58\u4e0b\u6765\uff0c\u4f46\u662f\u5f53\u4f60\u60f3\u8981\u83b7\u53d6\u8fd9\u4e2a\u4eba\u7684\u624b\u673a\u53f7\u65f6\uff0c\u4f60\u5f97\u5148\u77e5\u9053\u4ed6\u7684\u624b\u673a\u53f7\u662f\u5217\u8868\u6216\u5143\u7ec4\u4e2d\u7684\u7b2c6\u4e2a\u8fd8\u662f\u7b2c7\u4e2a\u5143\u7d20\uff1b\u5f53\u4f60\u60f3\u83b7\u53d6\u4e00\u4e2a\u4eba\u7684\u5bb6\u5ead\u4f4f\u5740\u65f6\uff0c\u4f60\u8fd8\u5f97\u77e5\u9053\u5bb6\u5ead\u4f4f\u5740\u662f\u5217\u8868\u6216\u5143\u7ec4\u4e2d\u7684\u7b2c\u51e0\u9879\u3002\u603b\u4e4b\uff0c\u5728\u9047\u5230\u4e0a\u8ff0\u7684\u573a\u666f\u65f6\uff0c\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u90fd\u4e0d\u662f\u6700\u5408\u9002\u7684\u9009\u62e9\uff0c\u6211\u4eec\u8fd8\u9700\u5b57\u5178\uff08dictionary\uff09\u7c7b\u578b\uff0c\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u6700\u9002\u5408\u628a\u76f8\u5173\u8054\u7684\u4fe1\u606f\u7ec4\u88c5\u5230\u4e00\u8d77\uff0c\u5e76\u4e14\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u7a0b\u5e8f\u4e2d\u4e3a\u771f\u5b9e\u4e8b\u7269\u5efa\u6a21\u7684\u95ee\u9898\u3002 \u8bf4\u5230\u5b57\u5178\u8fd9\u4e2a\u8bcd\uff0c\u5927\u5bb6\u4e00\u5b9a\u4e0d\u964c\u751f\uff0c\u8bfb\u5c0f\u5b66\u7684\u65f6\u5019\u6bcf\u4e2a\u4eba\u57fa\u672c\u4e0a\u90fd\u6709\u4e00\u672c\u300a\u65b0\u534e\u5b57\u5178\u300b\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 Python\u7a0b\u5e8f\u4e2d\u7684\u5b57\u5178\u8ddf\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u5b57\u5178\u5f88\u50cf\uff0c\u5b83\u4ee5\u952e\u503c\u5bf9\uff08\u952e\u548c\u503c\u7684\u7ec4\u5408\uff09\u7684\u65b9\u5f0f\u628a\u6570\u636e\u7ec4\u7ec7\u5230\u4e00\u8d77\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u952e\u627e\u5230\u4e0e\u4e4b\u5bf9\u5e94\u7684\u503c\u5e76\u8fdb\u884c\u64cd\u4f5c\u3002\u5c31\u50cf\u300a\u65b0\u534e\u5b57\u5178\u300b\u4e2d\uff0c\u6bcf\u4e2a\u5b57\uff08\u952e\uff09\u90fd\u6709\u4e0e\u5b83\u5bf9\u5e94\u7684\u89e3\u91ca\uff08\u503c\uff09\u4e00\u6837\uff0c\u6bcf\u4e2a\u5b57\u548c\u5b83\u7684\u89e3\u91ca\u5408\u5728\u4e00\u8d77\u5c31\u662f\u5b57\u5178\u4e2d\u7684\u4e00\u4e2a\u6761\u76ee\uff0c\u800c\u5b57\u5178\u4e2d\u901a\u5e38\u5305\u542b\u4e86\u5f88\u591a\u4e2a\u8fd9\u6837\u7684\u6761\u76ee\u3002 \u521b\u5efa\u548c\u4f7f\u7528\u5b57\u5178 \u5728Python\u4e2d\u521b\u5efa\u5b57\u5178\u53ef\u4ee5\u4f7f\u7528 {} \u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u8fd9\u4e00\u70b9\u8ddf\u4e0a\u4e00\u8282\u8bfe\u8bb2\u7684\u96c6\u5408\u662f\u4e00\u6837\u7684\u3002\u4f46\u662f\u5b57\u5178\u7684 {} \u4e2d\u7684\u5143\u7d20\u662f\u4ee5\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u5b58\u5728\u7684\uff0c\u6bcf\u4e2a\u5143\u7d20\u7531 : \u5206\u9694\u7684\u4e24\u4e2a\u503c\u6784\u6210\uff0c : \u524d\u9762\u662f\u952e\uff0c : \u540e\u9762\u662f\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 xinhua = { '\u9e93' : '\u5c71\u811a\u4e0b' , '\u8def' : '\u9053\uff0c\u5f80\u6765\u901a\u884c\u7684\u5730\u65b9\uff1b\u65b9\u9762\uff0c\u5730\u533a\uff1a\u5357\uff5e\u8d27\uff0c\u5916\uff5e\u8d27\uff1b\u79cd\u7c7b\uff1a\u4ed6\u4fe9\u662f\u4e00\uff5e\u4eba' , '\u8557' : '\u7518\u8349\u7684\u522b\u540d' , '\u6f5e' : '\u6f5e\u6c34\uff0c\u6c34\u540d\uff0c\u5373\u4eca\u5c71\u897f\u7701\u7684\u6d4a\u6f33\u6cb3\uff1b\u6f5e\u6c5f\uff0c\u6c34\u540d\uff0c\u5373\u4e91\u5357\u7701\u7684\u6012\u6c5f' } print ( xinhua ) person = { 'name' : '\u738b\u5927\u9524' , 'age' : 55 , 'weight' : 60 , 'office' : '\u79d1\u534e\u5317\u8def62\u53f7' , 'home' : '\u4e2d\u540c\u4ec1\u8def8\u53f7' , 'tel' : '13122334455' , 'econtact' : '13800998877' } print ( person ) \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u770b\u51fa\u6765\u4e86\uff0c\u7528\u5b57\u5178\u6765\u4fdd\u5b58\u4e00\u4e2a\u4eba\u7684\u4fe1\u606f\u8fdc\u8fdc\u4f18\u4e8e\u4f7f\u7528\u5217\u8868\u6216\u5143\u7ec4\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u7528 : \u524d\u9762\u7684\u952e\u6765\u8868\u793a\u6761\u76ee\u7684\u542b\u4e49\uff0c\u800c : \u540e\u9762\u5c31\u662f\u8fd9\u4e2a\u6761\u76ee\u6240\u5bf9\u5e94\u7684\u503c\u3002 \u5f53\u7136\uff0c\u5982\u679c\u613f\u610f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570 dict \u6216\u8005\u662f\u5b57\u5178\u7684\u751f\u6210\u5f0f\u8bed\u6cd5\u6765\u521b\u5efa\u5b57\u5178\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 # dict\u51fd\u6570(\u6784\u9020\u5668)\u4e2d\u7684\u6bcf\u4e00\u7ec4\u53c2\u6570\u5c31\u662f\u5b57\u5178\u4e2d\u7684\u4e00\u7ec4\u952e\u503c\u5bf9 person = dict ( name = '\u738b\u5927\u9524' , age = 55 , weight = 60 , home = '\u4e2d\u540c\u4ec1\u8def8\u53f7' ) print ( person ) # {'name': '\u738b\u5927\u9524', 'age': 55, 'weight': 60, 'home': '\u4e2d\u540c\u4ec1\u8def8\u53f7'} # \u53ef\u4ee5\u901a\u8fc7Python\u5185\u7f6e\u51fd\u6570zip\u538b\u7f29\u4e24\u4e2a\u5e8f\u5217\u5e76\u521b\u5efa\u5b57\u5178 items1 = dict ( zip ( 'ABCDE' , '12345' )) print ( items1 ) # {'A': '1', 'B': '2', 'C': '3', 'D': '4', 'E': '5'} items2 = dict ( zip ( 'ABCDE' , range ( 1 , 10 ))) print ( items2 ) # {'A': 1, 'B': 2, 'C': 3, 'D': 4, 'E': 5} # \u7528\u5b57\u5178\u751f\u6210\u5f0f\u8bed\u6cd5\u521b\u5efa\u5b57\u5178 items3 = { x : x ** 3 for x in range ( 1 , 6 )} print ( items3 ) # {1: 1, 2: 8, 3: 27, 4: 64, 5: 125} \u60f3\u77e5\u9053\u5b57\u5178\u4e2d\u4e00\u5171\u6709\u591a\u5c11\u7ec4\u952e\u503c\u5bf9\uff0c\u4ecd\u7136\u662f\u4f7f\u7528 len \u51fd\u6570\uff1b\u5982\u679c\u60f3\u5bf9\u5b57\u5178\u8fdb\u884c\u904d\u5386\uff0c\u53ef\u4ee5\u7528 for \u5faa\u73af\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\uff0c for \u5faa\u73af\u53ea\u662f\u5bf9\u5b57\u5178\u7684\u952e\u8fdb\u884c\u4e86\u904d\u5386\uff0c\u4e0d\u8fc7\u6ca1\u5173\u7cfb\uff0c\u5728\u8bb2\u5b8c\u5b57\u5178\u7684\u8fd0\u7b97\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b57\u5178\u7684\u952e\u83b7\u53d6\u5230\u548c\u8fd9\u4e2a\u952e\u5bf9\u5e94\u7684\u503c\u3002 person = { 'name' : '\u738b\u5927\u9524' , 'age' : 55 , 'weight' : 60 , 'office' : '\u79d1\u534e\u5317\u8def62\u53f7' } print ( len ( person )) # 4 for key in person : print ( key ) \u5b57\u5178\u7684\u8fd0\u7b97 \u5bf9\u4e8e\u5b57\u5178\u7c7b\u578b\u6765\u8bf4\uff0c\u6210\u5458\u8fd0\u7b97\u548c\u7d22\u5f15\u8fd0\u7b97\u80af\u5b9a\u662f\u6700\u4e3a\u91cd\u8981\u7684\uff0c\u524d\u8005\u53ef\u4ee5\u5224\u5b9a\u6307\u5b9a\u7684\u952e\u5728\u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u540e\u8005\u53ef\u4ee5\u901a\u8fc7\u952e\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u6216\u8005\u5411\u5b57\u5178\u4e2d\u52a0\u5165\u65b0\u7684\u952e\u503c\u5bf9\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5b57\u5178\u7684\u7d22\u5f15\u4e0d\u540c\u4e8e\u5217\u8868\u7684\u7d22\u5f15\uff0c\u5217\u8868\u4e2d\u7684\u5143\u7d20\u56e0\u4e3a\u6709\u5c5e\u4e8e\u81ea\u5df1\u6709\u5e8f\u53f7\uff0c\u6240\u4ee5\u5217\u8868\u7684\u7d22\u5f15\u662f\u4e00\u4e2a\u6574\u6570\uff1b\u5b57\u5178\u4e2d\u56e0\u4e3a\u4fdd\u5b58\u7684\u662f\u952e\u503c\u5bf9\uff0c\u6240\u4ee5\u5b57\u5178\u7684\u7d22\u5f15\u662f\u952e\u503c\u5bf9\u4e2d\u7684\u952e\uff0c\u901a\u8fc7\u7d22\u5f15\u64cd\u4f5c\u53ef\u4ee5\u4fee\u6539\u539f\u6765\u7684\u503c\u6216\u8005\u5411\u5b57\u5178\u4e2d\u5b58\u5165\u65b0\u7684\u952e\u503c\u5bf9\u3002\u9700\u8981 \u7279\u522b\u63d0\u9192 \u5927\u5bb6\u6ce8\u610f\u7684\u662f\uff0c \u5b57\u5178\u4e2d\u7684\u952e\u5fc5\u987b\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b \uff0c\u4f8b\u5982\u6574\u6570\uff08 int \uff09\u3001\u6d6e\u70b9\u6570\uff08 float \uff09\u3001\u5b57\u7b26\u4e32\uff08 str \uff09\u3001\u5143\u7ec4\uff08 tuple \uff09\u7b49\u7c7b\u578b\u7684\u503c\uff1b\u663e\u7136\uff0c\u5217\u8868\uff08 list \uff09\u548c\u96c6\u5408\uff08 set \uff09\u662f\u4e0d\u80fd\u4f5c\u4e3a\u5b57\u5178\u4e2d\u7684\u952e\u7684\uff0c\u5f53\u7136\u5b57\u5178\u7c7b\u578b\u672c\u8eab\u4e5f\u4e0d\u80fd\u518d\u4f5c\u4e3a\u5b57\u5178\u4e2d\u7684\u952e\uff0c\u56e0\u4e3a\u5b57\u5178\u4e5f\u662f\u53ef\u53d8\u7c7b\u578b\uff0c\u4f46\u662f\u5b57\u5178\u53ef\u4ee5\u4f5c\u4e3a\u5b57\u5178\u4e2d\u7684\u503c\u3002\u5173\u4e8e\u53ef\u53d8\u7c7b\u578b\u4e0d\u80fd\u4f5c\u4e3a\u5b57\u5178\u4e2d\u7684\u952e\u7684\u539f\u56e0\uff0c\u6211\u4eec\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u518d\u4e3a\u5927\u5bb6\u8be6\u7ec6\u8bf4\u660e\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5148\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u4e86\u89e3\u4e00\u4e0b\u5b57\u5178\u7684\u6210\u5458\u8fd0\u7b97\u548c\u7d22\u5f15\u8fd0\u7b97\u3002 person = { 'name' : '\u738b\u5927\u9524' , 'age' : 55 , 'weight' : 60 , 'office' : '\u79d1\u534e\u5317\u8def62\u53f7' } # \u68c0\u67e5name\u548ctel\u4e24\u4e2a\u952e\u5728\u4e0d\u5728person\u5b57\u5178\u4e2d print ( 'name' in person , 'tel' in person ) # True False # \u901a\u8fc7age\u4fee\u5c06person\u5b57\u5178\u4e2d\u5bf9\u5e94\u7684\u503c\u4fee\u6539\u4e3a25 if 'age' in person : person [ 'age' ] = 25 # \u901a\u8fc7\u7d22\u5f15\u64cd\u4f5c\u5411person\u5b57\u5178\u4e2d\u5b58\u5165\u65b0\u7684\u952e\u503c\u5bf9 person [ 'tel' ] = '13122334455' person [ 'signature' ] = '\u4f60\u7684\u7537\u670b\u53cb\u662f\u4e00\u4e2a\u76d6\u4e16\u5783\u573e\uff0c\u4ed6\u4f1a\u8e0f\u7740\u4e94\u5f69\u7965\u4e91\u53bb\u8fce\u5a36\u4f60\u7684\u95fa\u871c' print ( 'name' in person , 'tel' in person ) # True True # \u68c0\u67e5person\u5b57\u5178\u4e2d\u952e\u503c\u5bf9\u7684\u6570\u91cf print ( len ( person )) # 6 # \u5bf9\u5b57\u5178\u7684\u952e\u8fdb\u884c\u5faa\u73af\u5e76\u901a\u7d22\u5f15\u8fd0\u7b97\u83b7\u53d6\u952e\u5bf9\u5e94\u7684\u503c for key in person : print ( f ' { key } : { person [ key ] } ' ) \u9700\u8981\u6ce8\u610f\uff0c\u5728\u901a\u8fc7\u7d22\u5f15\u8fd0\u7b97\u83b7\u53d6\u5b57\u5178\u4e2d\u7684\u503c\u65f6\uff0c\u5982\u6307\u5b9a\u7684\u952e\u6ca1\u6709\u5728\u5b57\u5178\u4e2d\uff0c\u5c06\u4f1a\u5f15\u53d1 KeyError \u5f02\u5e38\u3002 \u5b57\u5178\u7684\u65b9\u6cd5 \u5b57\u5178\u7c7b\u578b\u7684\u65b9\u6cd5\u57fa\u672c\u4e0a\u90fd\u8ddf\u5b57\u5178\u7684\u952e\u503c\u5bf9\u64cd\u4f5c\u76f8\u5173\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4f8b\u5b50\u6765\u4e86\u89e3\u8fd9\u4e9b\u65b9\u6cd5\u7684\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u8981\u7528\u4e00\u4e2a\u5b57\u5178\u6765\u4fdd\u5b58\u5b66\u751f\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b66\u751f\u7684\u5b66\u53f7\u4f5c\u4e3a\u5b57\u5178\u4e2d\u7684\u952e\uff0c\u901a\u8fc7\u5b66\u53f7\u505a\u7d22\u5f15\u8fd0\u7b97\u5c31\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b66\u751f\uff1b\u6211\u4eec\u53ef\u4ee5\u628a\u5b57\u5178\u7684\u503c\u4e5f\u505a\u6210\u4e00\u4e2a\u5b57\u5178\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u591a\u7ec4\u952e\u503c\u5bf9\u5206\u522b\u5b58\u50a8\u5b66\u751f\u7684\u59d3\u540d\u3001\u6027\u522b\u3001\u5e74\u9f84\u3001\u7c4d\u8d2f\u7b49\u4fe1\u606f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 # \u5b57\u5178\u4e2d\u7684\u503c\u53c8\u662f\u4e00\u4e2a\u5b57\u5178(\u5d4c\u5957\u7684\u5b57\u5178) students = { 1001 : { 'name' : '\u72c4\u4ec1\u6770' , 'sex' : True , 'age' : 22 , 'place' : '\u5c71\u897f\u5927\u540c' }, 1002 : { 'name' : '\u767d\u5143\u82b3' , 'sex' : True , 'age' : 23 , 'place' : '\u6cb3\u5317\u4fdd\u5b9a' }, 1003 : { 'name' : '\u6b66\u5219\u5929' , 'sex' : False , 'age' : 20 , 'place' : '\u56db\u5ddd\u5e7f\u5143' } } # \u4f7f\u7528get\u65b9\u6cd5\u901a\u8fc7\u952e\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\uff0c\u5982\u679c\u53d6\u4e0d\u5230\u4e0d\u4f1a\u5f15\u53d1KeyError\u5f02\u5e38\u800c\u662f\u8fd4\u56deNone\u6216\u8bbe\u5b9a\u7684\u9ed8\u8ba4\u503c print ( students . get ( 1002 )) # {'name': '\u767d\u5143\u82b3', 'sex': True, 'age': 23, 'place': '\u6cb3\u5317\u4fdd\u5b9a'} print ( students . get ( 1005 )) # None print ( students . get ( 1005 , { 'name' : '\u65e0\u540d\u6c0f' })) # {'name': '\u65e0\u540d\u6c0f'} # \u83b7\u53d6\u5b57\u5178\u4e2d\u6240\u6709\u7684\u952e print ( students . keys ()) # dict_keys([1001, 1002, 1003]) # \u83b7\u53d6\u5b57\u5178\u4e2d\u6240\u6709\u7684\u503c print ( students . values ()) # dict_values([{...}, {...}, {...}]) # \u83b7\u53d6\u5b57\u5178\u4e2d\u6240\u6709\u7684\u952e\u503c\u5bf9 print ( students . items ()) # dict_items([(1001, {...}), (1002, {....}), (1003, {...})]) # \u5bf9\u5b57\u5178\u4e2d\u6240\u6709\u7684\u952e\u503c\u5bf9\u8fdb\u884c\u5faa\u73af\u904d\u5386 for key , value in students . items (): print ( key , '--->' , value ) # \u4f7f\u7528pop\u65b9\u6cd5\u901a\u8fc7\u952e\u5220\u9664\u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u5e76\u8fd4\u56de\u8be5\u503c stu1 = students . pop ( 1002 ) print ( stu1 ) # {'name': '\u767d\u5143\u82b3', 'sex': True, 'age': 23, 'place': '\u6cb3\u5317\u4fdd\u5b9a'} print ( len ( students )) # 2 # stu2 = students.pop(1005) # KeyError: 1005 stu2 = students . pop ( 1005 , {}) print ( stu2 ) # {} # \u4f7f\u7528popitem\u65b9\u6cd5\u5220\u9664\u5b57\u5178\u4e2d\u6700\u540e\u4e00\u7ec4\u952e\u503c\u5bf9\u5e76\u8fd4\u56de\u5bf9\u5e94\u7684\u4e8c\u5143\u7ec4 # \u5982\u679c\u5b57\u5178\u4e2d\u6ca1\u6709\u5143\u7d20\uff0c\u8c03\u7528\u8be5\u65b9\u6cd5\u5c06\u5f15\u53d1KeyError\u5f02\u5e38 key , value = students . popitem () print ( key , value ) # 1003 {'name': '\u6b66\u5219\u5929', 'sex': False, 'age': 20, 'place': '\u56db\u5ddd\u5e7f\u5143'} # \u5982\u679c\u8fd9\u4e2a\u952e\u5728\u5b57\u5178\u4e2d\u5b58\u5728\uff0csetdefault\u8fd4\u56de\u539f\u6765\u4e0e\u8fd9\u4e2a\u952e\u5bf9\u5e94\u7684\u503c # \u5982\u679c\u8fd9\u4e2a\u952e\u5728\u5b57\u5178\u4e2d\u4e0d\u5b58\u5728\uff0c\u5411\u5b57\u5178\u4e2d\u6dfb\u52a0\u952e\u503c\u5bf9\uff0c\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u503c\uff0c\u9ed8\u8ba4\u4e3aNone result = students . setdefault ( 1005 , { 'name' : '\u65b9\u542f\u9e64' , 'sex' : True }) print ( result ) # {'name': '\u65b9\u542f\u9e64', 'sex': True} print ( students ) # {1001: {...}, 1005: {...}} # \u4f7f\u7528update\u66f4\u65b0\u5b57\u5178\u5143\u7d20\uff0c\u76f8\u540c\u7684\u952e\u4f1a\u7528\u65b0\u503c\u8986\u76d6\u6389\u65e7\u503c\uff0c\u4e0d\u540c\u7684\u952e\u4f1a\u6dfb\u52a0\u5230\u5b57\u5178\u4e2d others = { 1005 : { 'name' : '\u4e54\u5cf0' , 'sex' : True , 'age' : 32 , 'place' : '\u5317\u4eac\u5927\u5174' }, 1010 : { 'name' : '\u738b\u8bed\u5ae3' , 'sex' : False , 'age' : 19 }, 1008 : { 'name' : '\u949f\u7075' , 'sex' : False } } students . update ( others ) print ( students ) # {1001: {...}, 1005: {...}, 1010: {...}, 1008: {...}} \u8ddf\u5217\u8868\u4e00\u6837\uff0c\u4ece\u5b57\u5178\u4e2d\u5220\u9664\u5143\u7d20\u4e5f\u53ef\u4ee5\u4f7f\u7528 del \u5173\u952e\u5b57\uff0c\u5728\u5220\u9664\u5143\u7d20\u7684\u65f6\u5019\u5982\u679c\u6307\u5b9a\u7684\u952e\u7d22\u5f15\u4e0d\u5230\u5bf9\u5e94\u7684\u503c\uff0c\u4e00\u6837\u4f1a\u5f15\u53d1 KeyError \u5f02\u5e38\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u5982\u4e0b\u6240\u793a\u3002 person = { 'name' : '\u738b\u5927\u9524' , 'age' : 25 , 'sex' : True } del person [ 'age' ] print ( person ) # {'name': '\u738b\u5927\u9524', 'sex': True} \u5b57\u5178\u7684\u5e94\u7528 \u6211\u4eec\u901a\u8fc7\u51e0\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bb2\u89e3\u5b57\u5178\u7684\u5e94\u7528\u3002 \u4f8b\u5b501 \uff1a\u8f93\u5165\u4e00\u6bb5\u8bdd\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u82f1\u6587\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\u3002 sentence = input ( '\u8bf7\u8f93\u5165\u4e00\u6bb5\u8bdd: ' ) counter = {} for ch in sentence : if 'A' <= ch <= 'Z' or 'a' <= ch <= 'z' : counter [ ch ] = counter . get ( ch , 0 ) + 1 for key , value in counter . items (): print ( f '\u5b57\u6bcd { key } \u51fa\u73b0\u4e86 { value } \u6b21.' ) \u4f8b\u5b502 \uff1a\u5728\u4e00\u4e2a\u5b57\u5178\u4e2d\u4fdd\u5b58\u4e86\u80a1\u7968\u7684\u4ee3\u7801\u548c\u4ef7\u683c\uff0c\u627e\u51fa\u80a1\u4ef7\u5927\u4e8e100\u5143\u7684\u80a1\u7968\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b57\u5178\u3002 \u8bf4\u660e \uff1a\u53ef\u4ee5\u7528\u5b57\u5178\u7684\u751f\u6210\u5f0f\u8bed\u6cd5\u6765\u521b\u5efa\u8fd9\u4e2a\u65b0\u5b57\u5178\u3002 stocks = { 'AAPL' : 191.88 , 'GOOG' : 1186.96 , 'IBM' : 149.24 , 'ORCL' : 48.44 , 'ACN' : 166.89 , 'FB' : 208.09 , 'SYMC' : 21.29 } stocks2 = { key : value for key , value in stocks . items () if value > 100 } print ( stocks2 ) \u7b80\u5355\u7684\u603b\u7ed3 Python\u7a0b\u5e8f\u4e2d\u7684\u5b57\u5178\u8ddf\u73b0\u5b9e\u751f\u6d3b\u4e2d\u5b57\u5178\u975e\u5e38\u50cf\uff0c\u5141\u8bb8\u6211\u4eec \u4ee5\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u4fdd\u5b58\u6570\u636e \uff0c\u518d \u901a\u8fc7\u952e\u7d22\u5f15\u5bf9\u5e94\u7684\u503c \u3002\u8fd9\u662f\u4e00\u79cd\u975e\u5e38 \u6709\u5229\u4e8e\u6570\u636e\u68c0\u7d22 \u7684\u6570\u636e\u7c7b\u578b\uff0c\u5e95\u5c42\u539f\u7406\u6211\u4eec\u5728\u540e\u7eed\u7684\u8bfe\u7a0b\u4e2d\u4e3a\u5927\u5bb6\u8bb2\u89e3\u3002\u518d\u6b21\u63d0\u9192\u5927\u5bb6\u6ce8\u610f\uff0c \u5b57\u5178\u4e2d\u7684\u952e\u5fc5\u987b\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b \uff0c\u5b57\u5178\u4e2d\u7684\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\u3002","title":"\u7b2c12\u8bfe\uff1a\u5e38\u7528\u6570\u636e\u7ed3\u6784\u4e4b\u5b57\u5178"},{"location":"%E7%AC%AC12%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E5%85%B8/#12","text":"\u8fc4\u4eca\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u4e86Python\u4e2d\u7684\u4e09\u79cd\u5bb9\u5668\u578b\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u662f\u8fd9\u4e9b\u6570\u636e\u7c7b\u578b\u4ecd\u7136\u4e0d\u8db3\u4ee5\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u6240\u6709\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u8981\u4fdd\u5b58\u4e00\u4e2a\u4eba\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u59d3\u540d\u3001\u5e74\u9f84\u3001\u4f53\u91cd\u3001\u5355\u4f4d\u5730\u5740\u3001\u5bb6\u5ead\u4f4f\u5740\u3001\u672c\u4eba\u624b\u673a\u53f7\u3001\u7d27\u6025\u8054\u7cfb\u4eba\u624b\u673a\u53f7\u7b49\u4fe1\u606f\uff0c\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u4e4b\u524d\u5b66\u8fc7\u7684\u5217\u8868\u3001\u5143\u7ec4\u548c\u96c6\u5408\u90fd\u4e0d\u662f\u6700\u7406\u60f3\u7684\u9009\u62e9\u3002 person1 = [ '\u738b\u5927\u9524' , 55 , 60 , '\u79d1\u534e\u5317\u8def62\u53f7' , '\u4e2d\u540c\u4ec1\u8def8\u53f7' , '13122334455' , '13800998877' ] person2 = ( '\u738b\u5927\u9524' , 55 , 60 , '\u79d1\u534e\u5317\u8def62\u53f7' , '\u4e2d\u540c\u4ec1\u8def8\u53f7' , '13122334455' , '13800998877' ) person3 = { '\u738b\u5927\u9524' , 55 , 60 , '\u79d1\u534e\u5317\u8def62\u53f7' , '\u4e2d\u540c\u4ec1\u8def8\u53f7' , '13122334455' , '13800998877' } \u96c6\u5408\u80af\u5b9a\u662f\u6700\u4e0d\u5408\u9002\u7684\uff0c\u56e0\u4e3a\u96c6\u5408\u6709\u53bb\u91cd\u7279\u6027\uff0c\u5982\u679c\u4e00\u4e2a\u4eba\u7684\u5e74\u9f84\u548c\u4f53\u91cd\u76f8\u540c\uff0c\u90a3\u4e48\u96c6\u5408\u4e2d\u5c31\u4f1a\u5c11\u4e00\u9879\u4fe1\u606f\uff1b\u540c\u7406\uff0c\u5982\u679c\u8fd9\u4e2a\u4eba\u7684\u5bb6\u5ead\u4f4f\u5740\u548c\u5355\u4f4d\u5730\u5740\u662f\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u96c6\u5408\u4e2d\u53c8\u4f1a\u5c11\u4e00\u9879\u4fe1\u606f\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u867d\u7136\u5217\u8868\u548c\u5143\u7ec4\u53ef\u4ee5\u628a\u4e00\u4e2a\u4eba\u7684\u6240\u6709\u4fe1\u606f\u90fd\u4fdd\u5b58\u4e0b\u6765\uff0c\u4f46\u662f\u5f53\u4f60\u60f3\u8981\u83b7\u53d6\u8fd9\u4e2a\u4eba\u7684\u624b\u673a\u53f7\u65f6\uff0c\u4f60\u5f97\u5148\u77e5\u9053\u4ed6\u7684\u624b\u673a\u53f7\u662f\u5217\u8868\u6216\u5143\u7ec4\u4e2d\u7684\u7b2c6\u4e2a\u8fd8\u662f\u7b2c7\u4e2a\u5143\u7d20\uff1b\u5f53\u4f60\u60f3\u83b7\u53d6\u4e00\u4e2a\u4eba\u7684\u5bb6\u5ead\u4f4f\u5740\u65f6\uff0c\u4f60\u8fd8\u5f97\u77e5\u9053\u5bb6\u5ead\u4f4f\u5740\u662f\u5217\u8868\u6216\u5143\u7ec4\u4e2d\u7684\u7b2c\u51e0\u9879\u3002\u603b\u4e4b\uff0c\u5728\u9047\u5230\u4e0a\u8ff0\u7684\u573a\u666f\u65f6\uff0c\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u90fd\u4e0d\u662f\u6700\u5408\u9002\u7684\u9009\u62e9\uff0c\u6211\u4eec\u8fd8\u9700\u5b57\u5178\uff08dictionary\uff09\u7c7b\u578b\uff0c\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u6700\u9002\u5408\u628a\u76f8\u5173\u8054\u7684\u4fe1\u606f\u7ec4\u88c5\u5230\u4e00\u8d77\uff0c\u5e76\u4e14\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u7a0b\u5e8f\u4e2d\u4e3a\u771f\u5b9e\u4e8b\u7269\u5efa\u6a21\u7684\u95ee\u9898\u3002 \u8bf4\u5230\u5b57\u5178\u8fd9\u4e2a\u8bcd\uff0c\u5927\u5bb6\u4e00\u5b9a\u4e0d\u964c\u751f\uff0c\u8bfb\u5c0f\u5b66\u7684\u65f6\u5019\u6bcf\u4e2a\u4eba\u57fa\u672c\u4e0a\u90fd\u6709\u4e00\u672c\u300a\u65b0\u534e\u5b57\u5178\u300b\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 Python\u7a0b\u5e8f\u4e2d\u7684\u5b57\u5178\u8ddf\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u5b57\u5178\u5f88\u50cf\uff0c\u5b83\u4ee5\u952e\u503c\u5bf9\uff08\u952e\u548c\u503c\u7684\u7ec4\u5408\uff09\u7684\u65b9\u5f0f\u628a\u6570\u636e\u7ec4\u7ec7\u5230\u4e00\u8d77\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u952e\u627e\u5230\u4e0e\u4e4b\u5bf9\u5e94\u7684\u503c\u5e76\u8fdb\u884c\u64cd\u4f5c\u3002\u5c31\u50cf\u300a\u65b0\u534e\u5b57\u5178\u300b\u4e2d\uff0c\u6bcf\u4e2a\u5b57\uff08\u952e\uff09\u90fd\u6709\u4e0e\u5b83\u5bf9\u5e94\u7684\u89e3\u91ca\uff08\u503c\uff09\u4e00\u6837\uff0c\u6bcf\u4e2a\u5b57\u548c\u5b83\u7684\u89e3\u91ca\u5408\u5728\u4e00\u8d77\u5c31\u662f\u5b57\u5178\u4e2d\u7684\u4e00\u4e2a\u6761\u76ee\uff0c\u800c\u5b57\u5178\u4e2d\u901a\u5e38\u5305\u542b\u4e86\u5f88\u591a\u4e2a\u8fd9\u6837\u7684\u6761\u76ee\u3002","title":"\u7b2c12\u8bfe\uff1a\u5e38\u7528\u6570\u636e\u7ed3\u6784\u4e4b\u5b57\u5178"},{"location":"%E7%AC%AC12%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E5%85%B8/#_1","text":"\u5728Python\u4e2d\u521b\u5efa\u5b57\u5178\u53ef\u4ee5\u4f7f\u7528 {} \u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u8fd9\u4e00\u70b9\u8ddf\u4e0a\u4e00\u8282\u8bfe\u8bb2\u7684\u96c6\u5408\u662f\u4e00\u6837\u7684\u3002\u4f46\u662f\u5b57\u5178\u7684 {} \u4e2d\u7684\u5143\u7d20\u662f\u4ee5\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u5b58\u5728\u7684\uff0c\u6bcf\u4e2a\u5143\u7d20\u7531 : \u5206\u9694\u7684\u4e24\u4e2a\u503c\u6784\u6210\uff0c : \u524d\u9762\u662f\u952e\uff0c : \u540e\u9762\u662f\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 xinhua = { '\u9e93' : '\u5c71\u811a\u4e0b' , '\u8def' : '\u9053\uff0c\u5f80\u6765\u901a\u884c\u7684\u5730\u65b9\uff1b\u65b9\u9762\uff0c\u5730\u533a\uff1a\u5357\uff5e\u8d27\uff0c\u5916\uff5e\u8d27\uff1b\u79cd\u7c7b\uff1a\u4ed6\u4fe9\u662f\u4e00\uff5e\u4eba' , '\u8557' : '\u7518\u8349\u7684\u522b\u540d' , '\u6f5e' : '\u6f5e\u6c34\uff0c\u6c34\u540d\uff0c\u5373\u4eca\u5c71\u897f\u7701\u7684\u6d4a\u6f33\u6cb3\uff1b\u6f5e\u6c5f\uff0c\u6c34\u540d\uff0c\u5373\u4e91\u5357\u7701\u7684\u6012\u6c5f' } print ( xinhua ) person = { 'name' : '\u738b\u5927\u9524' , 'age' : 55 , 'weight' : 60 , 'office' : '\u79d1\u534e\u5317\u8def62\u53f7' , 'home' : '\u4e2d\u540c\u4ec1\u8def8\u53f7' , 'tel' : '13122334455' , 'econtact' : '13800998877' } print ( person ) \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u770b\u51fa\u6765\u4e86\uff0c\u7528\u5b57\u5178\u6765\u4fdd\u5b58\u4e00\u4e2a\u4eba\u7684\u4fe1\u606f\u8fdc\u8fdc\u4f18\u4e8e\u4f7f\u7528\u5217\u8868\u6216\u5143\u7ec4\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u7528 : \u524d\u9762\u7684\u952e\u6765\u8868\u793a\u6761\u76ee\u7684\u542b\u4e49\uff0c\u800c : \u540e\u9762\u5c31\u662f\u8fd9\u4e2a\u6761\u76ee\u6240\u5bf9\u5e94\u7684\u503c\u3002 \u5f53\u7136\uff0c\u5982\u679c\u613f\u610f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570 dict \u6216\u8005\u662f\u5b57\u5178\u7684\u751f\u6210\u5f0f\u8bed\u6cd5\u6765\u521b\u5efa\u5b57\u5178\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 # dict\u51fd\u6570(\u6784\u9020\u5668)\u4e2d\u7684\u6bcf\u4e00\u7ec4\u53c2\u6570\u5c31\u662f\u5b57\u5178\u4e2d\u7684\u4e00\u7ec4\u952e\u503c\u5bf9 person = dict ( name = '\u738b\u5927\u9524' , age = 55 , weight = 60 , home = '\u4e2d\u540c\u4ec1\u8def8\u53f7' ) print ( person ) # {'name': '\u738b\u5927\u9524', 'age': 55, 'weight': 60, 'home': '\u4e2d\u540c\u4ec1\u8def8\u53f7'} # \u53ef\u4ee5\u901a\u8fc7Python\u5185\u7f6e\u51fd\u6570zip\u538b\u7f29\u4e24\u4e2a\u5e8f\u5217\u5e76\u521b\u5efa\u5b57\u5178 items1 = dict ( zip ( 'ABCDE' , '12345' )) print ( items1 ) # {'A': '1', 'B': '2', 'C': '3', 'D': '4', 'E': '5'} items2 = dict ( zip ( 'ABCDE' , range ( 1 , 10 ))) print ( items2 ) # {'A': 1, 'B': 2, 'C': 3, 'D': 4, 'E': 5} # \u7528\u5b57\u5178\u751f\u6210\u5f0f\u8bed\u6cd5\u521b\u5efa\u5b57\u5178 items3 = { x : x ** 3 for x in range ( 1 , 6 )} print ( items3 ) # {1: 1, 2: 8, 3: 27, 4: 64, 5: 125} \u60f3\u77e5\u9053\u5b57\u5178\u4e2d\u4e00\u5171\u6709\u591a\u5c11\u7ec4\u952e\u503c\u5bf9\uff0c\u4ecd\u7136\u662f\u4f7f\u7528 len \u51fd\u6570\uff1b\u5982\u679c\u60f3\u5bf9\u5b57\u5178\u8fdb\u884c\u904d\u5386\uff0c\u53ef\u4ee5\u7528 for \u5faa\u73af\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\uff0c for \u5faa\u73af\u53ea\u662f\u5bf9\u5b57\u5178\u7684\u952e\u8fdb\u884c\u4e86\u904d\u5386\uff0c\u4e0d\u8fc7\u6ca1\u5173\u7cfb\uff0c\u5728\u8bb2\u5b8c\u5b57\u5178\u7684\u8fd0\u7b97\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b57\u5178\u7684\u952e\u83b7\u53d6\u5230\u548c\u8fd9\u4e2a\u952e\u5bf9\u5e94\u7684\u503c\u3002 person = { 'name' : '\u738b\u5927\u9524' , 'age' : 55 , 'weight' : 60 , 'office' : '\u79d1\u534e\u5317\u8def62\u53f7' } print ( len ( person )) # 4 for key in person : print ( key )","title":"\u521b\u5efa\u548c\u4f7f\u7528\u5b57\u5178"},{"location":"%E7%AC%AC12%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E5%85%B8/#_2","text":"\u5bf9\u4e8e\u5b57\u5178\u7c7b\u578b\u6765\u8bf4\uff0c\u6210\u5458\u8fd0\u7b97\u548c\u7d22\u5f15\u8fd0\u7b97\u80af\u5b9a\u662f\u6700\u4e3a\u91cd\u8981\u7684\uff0c\u524d\u8005\u53ef\u4ee5\u5224\u5b9a\u6307\u5b9a\u7684\u952e\u5728\u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u540e\u8005\u53ef\u4ee5\u901a\u8fc7\u952e\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\u6216\u8005\u5411\u5b57\u5178\u4e2d\u52a0\u5165\u65b0\u7684\u952e\u503c\u5bf9\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5b57\u5178\u7684\u7d22\u5f15\u4e0d\u540c\u4e8e\u5217\u8868\u7684\u7d22\u5f15\uff0c\u5217\u8868\u4e2d\u7684\u5143\u7d20\u56e0\u4e3a\u6709\u5c5e\u4e8e\u81ea\u5df1\u6709\u5e8f\u53f7\uff0c\u6240\u4ee5\u5217\u8868\u7684\u7d22\u5f15\u662f\u4e00\u4e2a\u6574\u6570\uff1b\u5b57\u5178\u4e2d\u56e0\u4e3a\u4fdd\u5b58\u7684\u662f\u952e\u503c\u5bf9\uff0c\u6240\u4ee5\u5b57\u5178\u7684\u7d22\u5f15\u662f\u952e\u503c\u5bf9\u4e2d\u7684\u952e\uff0c\u901a\u8fc7\u7d22\u5f15\u64cd\u4f5c\u53ef\u4ee5\u4fee\u6539\u539f\u6765\u7684\u503c\u6216\u8005\u5411\u5b57\u5178\u4e2d\u5b58\u5165\u65b0\u7684\u952e\u503c\u5bf9\u3002\u9700\u8981 \u7279\u522b\u63d0\u9192 \u5927\u5bb6\u6ce8\u610f\u7684\u662f\uff0c \u5b57\u5178\u4e2d\u7684\u952e\u5fc5\u987b\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b \uff0c\u4f8b\u5982\u6574\u6570\uff08 int \uff09\u3001\u6d6e\u70b9\u6570\uff08 float \uff09\u3001\u5b57\u7b26\u4e32\uff08 str \uff09\u3001\u5143\u7ec4\uff08 tuple \uff09\u7b49\u7c7b\u578b\u7684\u503c\uff1b\u663e\u7136\uff0c\u5217\u8868\uff08 list \uff09\u548c\u96c6\u5408\uff08 set \uff09\u662f\u4e0d\u80fd\u4f5c\u4e3a\u5b57\u5178\u4e2d\u7684\u952e\u7684\uff0c\u5f53\u7136\u5b57\u5178\u7c7b\u578b\u672c\u8eab\u4e5f\u4e0d\u80fd\u518d\u4f5c\u4e3a\u5b57\u5178\u4e2d\u7684\u952e\uff0c\u56e0\u4e3a\u5b57\u5178\u4e5f\u662f\u53ef\u53d8\u7c7b\u578b\uff0c\u4f46\u662f\u5b57\u5178\u53ef\u4ee5\u4f5c\u4e3a\u5b57\u5178\u4e2d\u7684\u503c\u3002\u5173\u4e8e\u53ef\u53d8\u7c7b\u578b\u4e0d\u80fd\u4f5c\u4e3a\u5b57\u5178\u4e2d\u7684\u952e\u7684\u539f\u56e0\uff0c\u6211\u4eec\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u518d\u4e3a\u5927\u5bb6\u8be6\u7ec6\u8bf4\u660e\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5148\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u4e86\u89e3\u4e00\u4e0b\u5b57\u5178\u7684\u6210\u5458\u8fd0\u7b97\u548c\u7d22\u5f15\u8fd0\u7b97\u3002 person = { 'name' : '\u738b\u5927\u9524' , 'age' : 55 , 'weight' : 60 , 'office' : '\u79d1\u534e\u5317\u8def62\u53f7' } # \u68c0\u67e5name\u548ctel\u4e24\u4e2a\u952e\u5728\u4e0d\u5728person\u5b57\u5178\u4e2d print ( 'name' in person , 'tel' in person ) # True False # \u901a\u8fc7age\u4fee\u5c06person\u5b57\u5178\u4e2d\u5bf9\u5e94\u7684\u503c\u4fee\u6539\u4e3a25 if 'age' in person : person [ 'age' ] = 25 # \u901a\u8fc7\u7d22\u5f15\u64cd\u4f5c\u5411person\u5b57\u5178\u4e2d\u5b58\u5165\u65b0\u7684\u952e\u503c\u5bf9 person [ 'tel' ] = '13122334455' person [ 'signature' ] = '\u4f60\u7684\u7537\u670b\u53cb\u662f\u4e00\u4e2a\u76d6\u4e16\u5783\u573e\uff0c\u4ed6\u4f1a\u8e0f\u7740\u4e94\u5f69\u7965\u4e91\u53bb\u8fce\u5a36\u4f60\u7684\u95fa\u871c' print ( 'name' in person , 'tel' in person ) # True True # \u68c0\u67e5person\u5b57\u5178\u4e2d\u952e\u503c\u5bf9\u7684\u6570\u91cf print ( len ( person )) # 6 # \u5bf9\u5b57\u5178\u7684\u952e\u8fdb\u884c\u5faa\u73af\u5e76\u901a\u7d22\u5f15\u8fd0\u7b97\u83b7\u53d6\u952e\u5bf9\u5e94\u7684\u503c for key in person : print ( f ' { key } : { person [ key ] } ' ) \u9700\u8981\u6ce8\u610f\uff0c\u5728\u901a\u8fc7\u7d22\u5f15\u8fd0\u7b97\u83b7\u53d6\u5b57\u5178\u4e2d\u7684\u503c\u65f6\uff0c\u5982\u6307\u5b9a\u7684\u952e\u6ca1\u6709\u5728\u5b57\u5178\u4e2d\uff0c\u5c06\u4f1a\u5f15\u53d1 KeyError \u5f02\u5e38\u3002","title":"\u5b57\u5178\u7684\u8fd0\u7b97"},{"location":"%E7%AC%AC12%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E5%85%B8/#_3","text":"\u5b57\u5178\u7c7b\u578b\u7684\u65b9\u6cd5\u57fa\u672c\u4e0a\u90fd\u8ddf\u5b57\u5178\u7684\u952e\u503c\u5bf9\u64cd\u4f5c\u76f8\u5173\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4f8b\u5b50\u6765\u4e86\u89e3\u8fd9\u4e9b\u65b9\u6cd5\u7684\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u8981\u7528\u4e00\u4e2a\u5b57\u5178\u6765\u4fdd\u5b58\u5b66\u751f\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b66\u751f\u7684\u5b66\u53f7\u4f5c\u4e3a\u5b57\u5178\u4e2d\u7684\u952e\uff0c\u901a\u8fc7\u5b66\u53f7\u505a\u7d22\u5f15\u8fd0\u7b97\u5c31\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b66\u751f\uff1b\u6211\u4eec\u53ef\u4ee5\u628a\u5b57\u5178\u7684\u503c\u4e5f\u505a\u6210\u4e00\u4e2a\u5b57\u5178\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u591a\u7ec4\u952e\u503c\u5bf9\u5206\u522b\u5b58\u50a8\u5b66\u751f\u7684\u59d3\u540d\u3001\u6027\u522b\u3001\u5e74\u9f84\u3001\u7c4d\u8d2f\u7b49\u4fe1\u606f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 # \u5b57\u5178\u4e2d\u7684\u503c\u53c8\u662f\u4e00\u4e2a\u5b57\u5178(\u5d4c\u5957\u7684\u5b57\u5178) students = { 1001 : { 'name' : '\u72c4\u4ec1\u6770' , 'sex' : True , 'age' : 22 , 'place' : '\u5c71\u897f\u5927\u540c' }, 1002 : { 'name' : '\u767d\u5143\u82b3' , 'sex' : True , 'age' : 23 , 'place' : '\u6cb3\u5317\u4fdd\u5b9a' }, 1003 : { 'name' : '\u6b66\u5219\u5929' , 'sex' : False , 'age' : 20 , 'place' : '\u56db\u5ddd\u5e7f\u5143' } } # \u4f7f\u7528get\u65b9\u6cd5\u901a\u8fc7\u952e\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\uff0c\u5982\u679c\u53d6\u4e0d\u5230\u4e0d\u4f1a\u5f15\u53d1KeyError\u5f02\u5e38\u800c\u662f\u8fd4\u56deNone\u6216\u8bbe\u5b9a\u7684\u9ed8\u8ba4\u503c print ( students . get ( 1002 )) # {'name': '\u767d\u5143\u82b3', 'sex': True, 'age': 23, 'place': '\u6cb3\u5317\u4fdd\u5b9a'} print ( students . get ( 1005 )) # None print ( students . get ( 1005 , { 'name' : '\u65e0\u540d\u6c0f' })) # {'name': '\u65e0\u540d\u6c0f'} # \u83b7\u53d6\u5b57\u5178\u4e2d\u6240\u6709\u7684\u952e print ( students . keys ()) # dict_keys([1001, 1002, 1003]) # \u83b7\u53d6\u5b57\u5178\u4e2d\u6240\u6709\u7684\u503c print ( students . values ()) # dict_values([{...}, {...}, {...}]) # \u83b7\u53d6\u5b57\u5178\u4e2d\u6240\u6709\u7684\u952e\u503c\u5bf9 print ( students . items ()) # dict_items([(1001, {...}), (1002, {....}), (1003, {...})]) # \u5bf9\u5b57\u5178\u4e2d\u6240\u6709\u7684\u952e\u503c\u5bf9\u8fdb\u884c\u5faa\u73af\u904d\u5386 for key , value in students . items (): print ( key , '--->' , value ) # \u4f7f\u7528pop\u65b9\u6cd5\u901a\u8fc7\u952e\u5220\u9664\u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u5e76\u8fd4\u56de\u8be5\u503c stu1 = students . pop ( 1002 ) print ( stu1 ) # {'name': '\u767d\u5143\u82b3', 'sex': True, 'age': 23, 'place': '\u6cb3\u5317\u4fdd\u5b9a'} print ( len ( students )) # 2 # stu2 = students.pop(1005) # KeyError: 1005 stu2 = students . pop ( 1005 , {}) print ( stu2 ) # {} # \u4f7f\u7528popitem\u65b9\u6cd5\u5220\u9664\u5b57\u5178\u4e2d\u6700\u540e\u4e00\u7ec4\u952e\u503c\u5bf9\u5e76\u8fd4\u56de\u5bf9\u5e94\u7684\u4e8c\u5143\u7ec4 # \u5982\u679c\u5b57\u5178\u4e2d\u6ca1\u6709\u5143\u7d20\uff0c\u8c03\u7528\u8be5\u65b9\u6cd5\u5c06\u5f15\u53d1KeyError\u5f02\u5e38 key , value = students . popitem () print ( key , value ) # 1003 {'name': '\u6b66\u5219\u5929', 'sex': False, 'age': 20, 'place': '\u56db\u5ddd\u5e7f\u5143'} # \u5982\u679c\u8fd9\u4e2a\u952e\u5728\u5b57\u5178\u4e2d\u5b58\u5728\uff0csetdefault\u8fd4\u56de\u539f\u6765\u4e0e\u8fd9\u4e2a\u952e\u5bf9\u5e94\u7684\u503c # \u5982\u679c\u8fd9\u4e2a\u952e\u5728\u5b57\u5178\u4e2d\u4e0d\u5b58\u5728\uff0c\u5411\u5b57\u5178\u4e2d\u6dfb\u52a0\u952e\u503c\u5bf9\uff0c\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u503c\uff0c\u9ed8\u8ba4\u4e3aNone result = students . setdefault ( 1005 , { 'name' : '\u65b9\u542f\u9e64' , 'sex' : True }) print ( result ) # {'name': '\u65b9\u542f\u9e64', 'sex': True} print ( students ) # {1001: {...}, 1005: {...}} # \u4f7f\u7528update\u66f4\u65b0\u5b57\u5178\u5143\u7d20\uff0c\u76f8\u540c\u7684\u952e\u4f1a\u7528\u65b0\u503c\u8986\u76d6\u6389\u65e7\u503c\uff0c\u4e0d\u540c\u7684\u952e\u4f1a\u6dfb\u52a0\u5230\u5b57\u5178\u4e2d others = { 1005 : { 'name' : '\u4e54\u5cf0' , 'sex' : True , 'age' : 32 , 'place' : '\u5317\u4eac\u5927\u5174' }, 1010 : { 'name' : '\u738b\u8bed\u5ae3' , 'sex' : False , 'age' : 19 }, 1008 : { 'name' : '\u949f\u7075' , 'sex' : False } } students . update ( others ) print ( students ) # {1001: {...}, 1005: {...}, 1010: {...}, 1008: {...}} \u8ddf\u5217\u8868\u4e00\u6837\uff0c\u4ece\u5b57\u5178\u4e2d\u5220\u9664\u5143\u7d20\u4e5f\u53ef\u4ee5\u4f7f\u7528 del \u5173\u952e\u5b57\uff0c\u5728\u5220\u9664\u5143\u7d20\u7684\u65f6\u5019\u5982\u679c\u6307\u5b9a\u7684\u952e\u7d22\u5f15\u4e0d\u5230\u5bf9\u5e94\u7684\u503c\uff0c\u4e00\u6837\u4f1a\u5f15\u53d1 KeyError \u5f02\u5e38\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u5982\u4e0b\u6240\u793a\u3002 person = { 'name' : '\u738b\u5927\u9524' , 'age' : 25 , 'sex' : True } del person [ 'age' ] print ( person ) # {'name': '\u738b\u5927\u9524', 'sex': True}","title":"\u5b57\u5178\u7684\u65b9\u6cd5"},{"location":"%E7%AC%AC12%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E5%85%B8/#_4","text":"\u6211\u4eec\u901a\u8fc7\u51e0\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bb2\u89e3\u5b57\u5178\u7684\u5e94\u7528\u3002 \u4f8b\u5b501 \uff1a\u8f93\u5165\u4e00\u6bb5\u8bdd\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u82f1\u6587\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\u3002 sentence = input ( '\u8bf7\u8f93\u5165\u4e00\u6bb5\u8bdd: ' ) counter = {} for ch in sentence : if 'A' <= ch <= 'Z' or 'a' <= ch <= 'z' : counter [ ch ] = counter . get ( ch , 0 ) + 1 for key , value in counter . items (): print ( f '\u5b57\u6bcd { key } \u51fa\u73b0\u4e86 { value } \u6b21.' ) \u4f8b\u5b502 \uff1a\u5728\u4e00\u4e2a\u5b57\u5178\u4e2d\u4fdd\u5b58\u4e86\u80a1\u7968\u7684\u4ee3\u7801\u548c\u4ef7\u683c\uff0c\u627e\u51fa\u80a1\u4ef7\u5927\u4e8e100\u5143\u7684\u80a1\u7968\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b57\u5178\u3002 \u8bf4\u660e \uff1a\u53ef\u4ee5\u7528\u5b57\u5178\u7684\u751f\u6210\u5f0f\u8bed\u6cd5\u6765\u521b\u5efa\u8fd9\u4e2a\u65b0\u5b57\u5178\u3002 stocks = { 'AAPL' : 191.88 , 'GOOG' : 1186.96 , 'IBM' : 149.24 , 'ORCL' : 48.44 , 'ACN' : 166.89 , 'FB' : 208.09 , 'SYMC' : 21.29 } stocks2 = { key : value for key , value in stocks . items () if value > 100 } print ( stocks2 )","title":"\u5b57\u5178\u7684\u5e94\u7528"},{"location":"%E7%AC%AC12%E8%AF%BE%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E5%85%B8/#_5","text":"Python\u7a0b\u5e8f\u4e2d\u7684\u5b57\u5178\u8ddf\u73b0\u5b9e\u751f\u6d3b\u4e2d\u5b57\u5178\u975e\u5e38\u50cf\uff0c\u5141\u8bb8\u6211\u4eec \u4ee5\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u4fdd\u5b58\u6570\u636e \uff0c\u518d \u901a\u8fc7\u952e\u7d22\u5f15\u5bf9\u5e94\u7684\u503c \u3002\u8fd9\u662f\u4e00\u79cd\u975e\u5e38 \u6709\u5229\u4e8e\u6570\u636e\u68c0\u7d22 \u7684\u6570\u636e\u7c7b\u578b\uff0c\u5e95\u5c42\u539f\u7406\u6211\u4eec\u5728\u540e\u7eed\u7684\u8bfe\u7a0b\u4e2d\u4e3a\u5927\u5bb6\u8bb2\u89e3\u3002\u518d\u6b21\u63d0\u9192\u5927\u5bb6\u6ce8\u610f\uff0c \u5b57\u5178\u4e2d\u7684\u952e\u5fc5\u987b\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b \uff0c\u5b57\u5178\u4e2d\u7684\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC13%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97/","text":"\u7b2c13\u8bfe\uff1a\u51fd\u6570\u548c\u6a21\u5757 \u5728\u8bb2\u89e3\u672c\u8282\u8bfe\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u7814\u7a76\u4e00\u9053\u6570\u5b66\u9898\uff0c\u8bf7\u8bf4\u51fa\u4e0b\u9762\u7684\u65b9\u7a0b\u6709\u591a\u5c11\u7ec4\u6b63\u6574\u6570\u89e3\u3002 $$ x_1 + x_2 + x_3 + x_4 = 8 $$ \u4f60\u53ef\u80fd\u5df2\u7ecf\u60f3\u5230\u4e86\uff0c\u8fd9\u4e2a\u95ee\u9898\u5176\u5b9e\u7b49\u540c\u4e8e\u5c06 8 \u4e2a\u82f9\u679c\u5206\u6210\u56db\u7ec4\u4e14\u6bcf\u7ec4\u81f3\u5c11\u4e00\u4e2a\u82f9\u679c\u6709\u591a\u5c11\u79cd\u65b9\u6848\uff0c\u56e0\u6b64\u8be5\u95ee\u9898\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7b49\u4ef7\u4e8e\u5728\u5206\u9694 8 \u4e2a\u82f9\u679c\u7684 7 \u4e2a\u7a7a\u9699\u4e4b\u95f4\u63d2\u5165\u4e09\u4e2a\u9694\u677f\u5c06\u82f9\u679c\u5206\u6210\u56db\u7ec4\u6709\u591a\u5c11\u79cd\u65b9\u6848\uff0c\u4e5f\u5c31\u662f\u4ece 7 \u4e2a\u7a7a\u9699\u9009\u51fa 3 \u4e2a\u7a7a\u9699\u653e\u5165\u9694\u677f\u7684\u7ec4\u5408\u6570\uff0c\u6240\u4ee5\u7b54\u6848\u662f$ C_7^3=35 $\u3002\u7ec4\u5408\u6570\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\u6240\u793a\u3002 $$ C_M^N = \\frac {M!} {N!(M-N)!} $$ \u6839\u636e\u6211\u4eec\u524d\u9762\u5b66\u4e60\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u7528\u5faa\u73af\u505a\u7d2f\u4e58\u7684\u65b9\u5f0f\u6765\u8ba1\u7b97\u9636\u4e58\uff0c\u90a3\u4e48\u901a\u8fc7\u4e0b\u9762\u7684Python\u4ee3\u7801\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u7ec4\u5408\u6570$ C_M^N $\u7684\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \"\"\" \u8f93\u5165M\u548cN\u8ba1\u7b97C(M,N) Version: 0.1 Author: \u9a86\u660a \"\"\" m = int ( input ( 'm = ' )) n = int ( input ( 'n = ' )) # \u8ba1\u7b97m\u7684\u9636\u4e58 fm = 1 for num in range ( 1 , m + 1 ): fm *= num # \u8ba1\u7b97n\u7684\u9636\u4e58 fn = 1 for num in range ( 1 , n + 1 ): fn *= num # \u8ba1\u7b97m-n\u7684\u9636\u4e58 fk = 1 for num in range ( 1 , m - n + 1 ): fk *= num # \u8ba1\u7b97C(M,N)\u7684\u503c print ( fm // fn // fk ) \u51fd\u6570\u7684\u4f5c\u7528 \u4e0d\u77e5\u5927\u5bb6\u662f\u5426\u6ce8\u610f\u5230\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u505a\u4e86\u4e09\u6b21\u6c42\u9636\u4e58\uff0c\u867d\u7136 m \u3001 n \u3001 m - n \u7684\u503c\u5404\u4e0d\u76f8\u540c\uff0c\u4f46\u662f\u4e09\u6bb5\u4ee3\u7801\u5e76\u6ca1\u6709\u5b9e\u8d28\u6027\u7684\u533a\u522b\uff0c\u5c5e\u4e8e\u91cd\u590d\u4ee3\u7801\u3002\u4e16\u754c\u7ea7\u7684\u7f16\u7a0b\u5927\u5e08 Martin Fowler \u5148\u751f\u66fe\u7ecf\u8bf4\u8fc7\uff1a\u201c \u4ee3\u7801\u6709\u5f88\u591a\u79cd\u574f\u5473\u9053\uff0c\u91cd\u590d\u662f\u6700\u574f\u7684\u4e00\u79cd\uff01 \u201d\u3002\u8981\u5199\u51fa\u9ad8\u8d28\u91cf\u7684\u4ee3\u7801\u9996\u5148\u8981\u89e3\u51b3\u7684\u5c31\u662f\u91cd\u590d\u4ee3\u7801\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u4ee3\u7801\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8ba1\u7b97\u9636\u4e58\u7684\u529f\u80fd\u5c01\u88c5\u5230\u4e00\u4e2a\u79f0\u4e3a\u201c\u51fd\u6570\u201d\u7684\u4ee3\u7801\u5757\u4e2d\uff0c\u5728\u9700\u8981\u8ba1\u7b97\u9636\u4e58\u7684\u5730\u65b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u201c\u8c03\u7528\u51fd\u6570\u201d\u5c31\u53ef\u4ee5\u4e86\u3002 \u5b9a\u4e49\u51fd\u6570 \u6570\u5b66\u4e0a\u7684\u51fd\u6570\u901a\u5e38\u5f62\u5982 y = f(x) \u6216\u8005 z = g(x, y) \u8fd9\u6837\u7684\u5f62\u5f0f\uff0c\u5728 y = f(x) \u4e2d\uff0c f \u662f\u51fd\u6570\u7684\u540d\u5b57\uff0c x \u662f\u51fd\u6570\u7684\u81ea\u53d8\u91cf\uff0c y \u662f\u51fd\u6570\u7684\u56e0\u53d8\u91cf\uff1b\u800c\u5728 z = g(x, y) \u4e2d\uff0c g \u662f\u51fd\u6570\u540d\uff0c x \u548c y \u662f\u51fd\u6570\u7684\u81ea\u53d8\u91cf\uff0c z \u662f\u51fd\u6570\u7684\u56e0\u53d8\u91cf\u3002Python\u4e2d\u7684\u51fd\u6570\u8ddf\u8fd9\u4e2a\u7ed3\u6784\u662f\u4e00\u81f4\u7684\uff0c\u6bcf\u4e2a\u51fd\u6570\u90fd\u6709\u81ea\u5df1\u7684\u540d\u5b57\u3001\u81ea\u53d8\u91cf\u548c\u56e0\u53d8\u91cf\u3002\u6211\u4eec\u901a\u5e38\u628aPython\u4e2d\u51fd\u6570\u7684\u81ea\u53d8\u91cf\u79f0\u4e3a\u51fd\u6570\u7684\u53c2\u6570\uff0c\u800c\u56e0\u53d8\u91cf\u79f0\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002 \u5728Python\u4e2d\u53ef\u4ee5\u4f7f\u7528 def \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u51fd\u6570\uff0c\u548c\u53d8\u91cf\u4e00\u6837\u6bcf\u4e2a\u51fd\u6570\u4e5f\u5e94\u8be5\u6709\u4e00\u4e2a\u6f02\u4eae\u7684\u540d\u5b57\uff0c\u547d\u540d\u89c4\u5219\u8ddf\u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219\u662f\u4e00\u81f4\u7684\uff08\u8d76\u7d27\u60f3\u4e00\u60f3\u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\u7684\u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219\uff09\u3002\u5728\u51fd\u6570\u540d\u540e\u9762\u7684\u5706\u62ec\u53f7\u4e2d\u53ef\u4ee5\u653e\u7f6e\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5c31\u662f\u6211\u4eec\u521a\u624d\u8bf4\u5230\u7684\u51fd\u6570\u7684\u81ea\u53d8\u91cf\uff0c\u800c\u51fd\u6570\u6267\u884c\u5b8c\u6210\u540e\u6211\u4eec\u4f1a\u901a\u8fc7 return \u5173\u952e\u5b57\u6765\u8fd4\u56de\u51fd\u6570\u7684\u6267\u884c\u7ed3\u679c\uff0c\u5c31\u662f\u6211\u4eec\u521a\u624d\u8bf4\u7684\u51fd\u6570\u7684\u56e0\u53d8\u91cf\u3002\u4e00\u4e2a\u51fd\u6570\u8981\u6267\u884c\u7684\u4ee3\u7801\u5757\uff08\u8981\u505a\u7684\u4e8b\u60c5\uff09\u4e5f\u662f\u901a\u8fc7\u7f29\u8fdb\u7684\u65b9\u5f0f\u6765\u8868\u793a\u7684\uff0c\u8ddf\u4e4b\u524d\u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u7684\u4ee3\u7801\u5757\u662f\u4e00\u6837\u7684\u3002\u5927\u5bb6\u4e0d\u8981\u5fd8\u4e86 def \u90a3\u4e00\u884c\u7684\u6700\u540e\u9762\u8fd8\u6709\u4e00\u4e2a : \uff0c\u4e4b\u524d\u63d0\u9192\u8fc7\u5927\u5bb6\uff0c\u90a3\u662f\u5728\u82f1\u6587\u8f93\u5165\u6cd5\u72b6\u6001\u4e0b\u8f93\u5165\u7684\u5192\u53f7\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u91cd\u6784\u3002 \u6240\u8c13\u91cd\u6784\uff0c\u662f\u5728\u4e0d\u5f71\u54cd\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u7684\u524d\u63d0\u4e0b\u5bf9\u4ee3\u7801\u7684\u7ed3\u6784\u8fdb\u884c\u8c03\u6574\u3002 \u91cd\u6784\u4e4b\u540e\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \"\"\" \u8f93\u5165M\u548cN\u8ba1\u7b97C(M,N) Version: 0.1 Author: \u9a86\u660a \"\"\" # \u5b9a\u4e49\u51fd\u6570\uff1adef\u662f\u5b9a\u4e49\u51fd\u6570\u7684\u5173\u952e\u5b57\u3001fac\u662f\u51fd\u6570\u540d\uff0cnum\u662f\u53c2\u6570\uff08\u81ea\u53d8\u91cf\uff09 def fac ( num ): \"\"\"\u6c42\u9636\u4e58\"\"\" result = 1 for n in range ( 1 , num + 1 ): result *= n # \u8fd4\u56denum\u7684\u9636\u4e58\uff08\u56e0\u53d8\u91cf\uff09 return result m = int ( input ( 'm = ' )) n = int ( input ( 'n = ' )) # \u5f53\u9700\u8981\u8ba1\u7b97\u9636\u4e58\u7684\u65f6\u5019\u4e0d\u7528\u518d\u5199\u91cd\u590d\u7684\u4ee3\u7801\u800c\u662f\u76f4\u63a5\u8c03\u7528\u51fd\u6570fac # \u8c03\u7528\u51fd\u6570\u7684\u8bed\u6cd5\u662f\u5728\u51fd\u6570\u540d\u540e\u9762\u8ddf\u4e0a\u5706\u62ec\u53f7\u5e76\u4f20\u5165\u53c2\u6570 print ( fac ( m ) // fac ( n ) // fac ( m - n )) \u8bf4\u660e \uff1a\u4e8b\u5b9e\u4e0a\uff0cPython\u6807\u51c6\u5e93\u7684 math \u6a21\u5757\u4e2d\u6709\u4e00\u4e2a\u540d\u4e3a factorial \u7684\u51fd\u6570\u5df2\u7ecf\u5b9e\u73b0\u4e86\u6c42\u9636\u4e58\u7684\u529f\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8be5\u51fd\u6570\u6765\u8ba1\u7b97\u9636\u4e58\u3002 \u5c06\u6765\u6211\u4eec\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u8981\u4e48\u662f\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u8981\u4e48\u662fPython\u6807\u51c6\u5e93\u6216\u8005\u4e09\u65b9\u5e93\u4e2d\u63d0\u4f9b\u7684\u51fd\u6570 \u3002 \u51fd\u6570\u7684\u53c2\u6570 \u53c2\u6570\u7684\u9ed8\u8ba4\u503c \u5982\u679c\u51fd\u6570\u4e2d\u6ca1\u6709 return \u8bed\u53e5\uff0c\u90a3\u4e48\u51fd\u6570\u9ed8\u8ba4\u8fd4\u56de\u4ee3\u8868\u7a7a\u503c\u7684 None \u3002\u53e6\u5916\uff0c\u5728\u5b9a\u4e49\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u4e5f\u53ef\u4ee5\u6ca1\u6709\u81ea\u53d8\u91cf\uff0c\u4f46\u662f\u51fd\u6570\u540d\u540e\u9762\u7684\u5706\u62ec\u53f7\u662f\u5fc5\u987b\u6709\u7684\u3002Python\u4e2d\u8fd8\u5141\u8bb8\u51fd\u6570\u7684\u53c2\u6570\u62e5\u6709\u9ed8\u8ba4\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e4b\u524d\u8bb2\u8fc7\u7684\u4e00\u4e2a\u4f8b\u5b50\u201cCRAPS\u8d4c\u535a\u6e38\u620f\u201d\u4e2d\u6447\u8272\u5b50\u83b7\u5f97\u70b9\u6570\u7684\u529f\u80fd\u5c01\u88c5\u6210\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \"\"\" \u53c2\u6570\u7684\u9ed8\u8ba4\u503c Version: 0.1 Author: \u9a86\u660a \"\"\" from random import randint # \u5b9a\u4e49\u6447\u8272\u5b50\u7684\u51fd\u6570\uff0cn\u8868\u793a\u8272\u5b50\u7684\u4e2a\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a2 def roll_dice ( n = 2 ): \"\"\"\u6447\u8272\u5b50\u8fd4\u56de\u603b\u7684\u70b9\u6570\"\"\" total = 0 for _ in range ( n ): total += randint ( 1 , 6 ) return total # \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\uff0c\u90a3\u4e48n\u4f7f\u7528\u9ed8\u8ba4\u503c2\uff0c\u8868\u793a\u6447\u4e24\u9897\u8272\u5b50 print ( roll_dice ()) # \u4f20\u5165\u53c2\u65703\uff0c\u53d8\u91cfn\u88ab\u8d4b\u503c\u4e3a3\uff0c\u8868\u793a\u6447\u4e09\u9897\u8272\u5b50\u83b7\u5f97\u70b9\u6570 print ( roll_dice ( 3 )) \u6211\u4eec\u518d\u6765\u770b\u4e00\u4e2a\u66f4\u4e3a\u7b80\u5355\u7684\u4f8b\u5b50\u3002 def add ( a = 0 , b = 0 , c = 0 ): \"\"\"\u4e09\u4e2a\u6570\u76f8\u52a0\u6c42\u548c\"\"\" return a + b + c # \u8c03\u7528add\u51fd\u6570\uff0c\u6ca1\u6709\u4f20\u5165\u53c2\u6570\uff0c\u90a3\u4e48a\u3001b\u3001c\u90fd\u4f7f\u7528\u9ed8\u8ba4\u503c0 print ( add ()) # 0 # \u8c03\u7528add\u51fd\u6570\uff0c\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u90a3\u4e48\u8be5\u53c2\u6570\u8d4b\u503c\u7ed9\u53d8\u91cfa, \u53d8\u91cfb\u548cc\u4f7f\u7528\u9ed8\u8ba4\u503c0 print ( add ( 1 )) # 1 # \u8c03\u7528add\u51fd\u6570\uff0c\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\uff0c1\u548c2\u5206\u522b\u8d4b\u503c\u7ed9\u53d8\u91cfa\u548cb\uff0c\u53d8\u91cfc\u4f7f\u7528\u9ed8\u8ba4\u503c0 print ( add ( 1 , 2 )) # 3 # \u8c03\u7528add\u51fd\u6570\uff0c\u4f20\u5165\u4e09\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u8d4b\u503c\u7ed9a\u3001b\u3001c\u4e09\u4e2a\u53d8\u91cf print ( add ( 1 , 2 , 3 )) # 6 # \u4f20\u9012\u53c2\u6570\u65f6\u53ef\u4ee5\u4e0d\u6309\u7167\u8bbe\u5b9a\u7684\u987a\u5e8f\u8fdb\u884c\u4f20\u9012\uff0c\u4f46\u662f\u8981\u7528\u201c\u53c2\u6570\u540d=\u53c2\u6570\u503c\u201d\u7684\u5f62\u5f0f print ( add ( c = 50 , a = 100 , b = 200 )) # 350 \u6ce8\u610f \uff1a\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u5fc5\u987b\u653e\u5728\u4e0d\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u4e4b\u540e\uff0c\u5426\u5219\u5c06\u4ea7\u751f SyntaxError \u9519\u8bef\uff0c\u9519\u8bef\u6d88\u606f\u662f\uff1a non-default argument follows default argument \uff0c\u7ffb\u8bd1\u6210\u4e2d\u6587\u7684\u610f\u601d\u662f\u201c\u6ca1\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u653e\u5728\u4e86\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u540e\u9762\u201d\u3002 \u53ef\u53d8\u53c2\u6570 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u5bf9\u4efb\u610f\u591a\u4e2a\u6570\u6c42\u548c\u7684 add \u51fd\u6570\uff0c\u56e0\u4e3aPython\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u661f\u53f7\u8868\u8fbe\u5f0f\u8bed\u6cd5\u6765\u652f\u6301\u53ef\u53d8\u53c2\u6570\u3002\u6240\u8c13\u53ef\u53d8\u53c2\u6570\u6307\u7684\u662f\u5728\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u5411\u51fd\u6570\u4f20\u5165 0 \u4e2a\u6216\u4efb\u610f\u591a\u4e2a\u53c2\u6570\u3002\u5c06\u6765\u6211\u4eec\u4ee5\u56e2\u961f\u534f\u4f5c\u7684\u65b9\u5f0f\u5f00\u53d1\u5546\u4e1a\u9879\u76ee\u65f6\uff0c\u5f88\u6709\u53ef\u80fd\u8981\u8bbe\u8ba1\u51fd\u6570\u7ed9\u5176\u4ed6\u4eba\u4f7f\u7528\uff0c\u4f46\u6709\u7684\u65f6\u5019\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u51fd\u6570\u7684\u8c03\u7528\u8005\u4f1a\u5411\u8be5\u51fd\u6570\u4f20\u5165\u591a\u5c11\u4e2a\u53c2\u6570\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u53d8\u53c2\u6570\u5c31\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u7528\u53ef\u53d8\u53c2\u6570\u5b9e\u73b0\u5bf9\u4efb\u610f\u591a\u4e2a\u6570\u6c42\u548c\u7684 add \u51fd\u6570\u3002 \"\"\" \u53ef\u53d8\u53c2\u6570 Version: 0.1 Author: \u9a86\u660a \"\"\" # \u7528\u661f\u53f7\u8868\u8fbe\u5f0f\u6765\u8868\u793aargs\u53ef\u4ee5\u63a5\u65360\u4e2a\u6216\u4efb\u610f\u591a\u4e2a\u53c2\u6570 def add ( * args ): total = 0 # \u53ef\u53d8\u53c2\u6570\u53ef\u4ee5\u653e\u5728for\u5faa\u73af\u4e2d\u53d6\u51fa\u6bcf\u4e2a\u53c2\u6570\u7684\u503c for val in args : if type ( val ) in ( int , float ): total += val return total # \u5728\u8c03\u7528add\u51fd\u6570\u65f6\u53ef\u4ee5\u4f20\u51650\u4e2a\u6216\u4efb\u610f\u591a\u4e2a\u53c2\u6570 print ( add ()) print ( add ( 1 )) print ( add ( 1 , 2 )) print ( add ( 1 , 2 , 3 )) print ( add ( 1 , 3 , 5 , 7 , 9 )) \u7528\u6a21\u5757\u7ba1\u7406\u51fd\u6570 \u4e0d\u7ba1\u7528\u4ec0\u4e48\u6837\u7684\u7f16\u7a0b\u8bed\u8a00\u6765\u5199\u4ee3\u7801\uff0c\u7ed9\u53d8\u91cf\u3001\u51fd\u6570\u8d77\u540d\u5b57\u90fd\u662f\u4e00\u4e2a\u8ba9\u4eba\u5934\u75bc\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u4f1a\u9047\u5230 \u547d\u540d\u51b2\u7a81 \u8fd9\u79cd\u5c34\u5c2c\u7684\u60c5\u51b5\u3002\u6700\u7b80\u5355\u7684\u573a\u666f\u5c31\u662f\u5728\u540c\u4e00\u4e2a .py \u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u4e24\u4e2a\u540c\u540d\u7684\u51fd\u6570\uff0c\u5982\u4e0b\u6240\u793a\u3002 def foo (): print ( 'hello, world!' ) def foo (): print ( 'goodbye, world!' ) foo () # \u5927\u5bb6\u731c\u731c\u8c03\u7528foo\u51fd\u6570\u4f1a\u8f93\u51fa\u4ec0\u4e48 \u5f53\u7136\u4e0a\u9762\u7684\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u907f\u514d\uff0c\u4f46\u662f\u5982\u679c\u9879\u76ee\u662f\u56e2\u961f\u534f\u4f5c\u591a\u4eba\u5f00\u53d1\u7684\u65f6\u5019\uff0c\u56e2\u961f\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5b9a\u4e49\u4e86\u540d\u4e3a foo \u7684\u51fd\u6570\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u600e\u4e48\u89e3\u51b3\u547d\u540d\u51b2\u7a81\u5462\uff1f\u7b54\u6848\u5176\u5b9e\u5f88\u7b80\u5355\uff0cPython\u4e2d\u6bcf\u4e2a\u6587\u4ef6\u5c31\u4ee3\u8868\u4e86\u4e00\u4e2a\u6a21\u5757\uff08module\uff09\uff0c\u6211\u4eec\u5728\u4e0d\u540c\u7684\u6a21\u5757\u4e2d\u53ef\u4ee5\u6709\u540c\u540d\u7684\u51fd\u6570\uff0c\u5728\u4f7f\u7528\u51fd\u6570\u7684\u65f6\u5019\u6211\u4eec\u901a\u8fc7 import \u5173\u952e\u5b57\u5bfc\u5165\u6307\u5b9a\u7684\u6a21\u5757\u518d\u4f7f\u7528 \u5b8c\u5168\u9650\u5b9a\u540d \u7684\u8c03\u7528\u65b9\u5f0f\u5c31\u53ef\u4ee5\u533a\u5206\u5230\u5e95\u8981\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u6a21\u5757\u4e2d\u7684 foo \u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 module1.py def foo (): print ( 'hello, world!' ) module2.py def foo (): print ( 'goodbye, world!' ) test.py import module1 import module2 # \u7528\u201c\u6a21\u5757\u540d.\u51fd\u6570\u540d\u201d\u7684\u65b9\u5f0f\uff08\u5b8c\u5168\u9650\u5b9a\u540d\uff09\u8c03\u7528\u51fd\u6570\uff0c module1 . foo () # hello, world! module2 . foo () # goodbye, world! \u5728\u5bfc\u5165\u6a21\u5757\u65f6\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 as \u5173\u952e\u5b57\u5bf9\u6a21\u5757\u8fdb\u884c\u522b\u540d\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u66f4\u4e3a\u7b80\u77ed\u7684\u5b8c\u5168\u9650\u5b9a\u540d\u3002 test.py import module1 as m1 import module2 as m2 m1 . foo () # hello, world! m2 . foo () # goodbye, world! \u4e0a\u9762\u7684\u4ee3\u7801\u6211\u4eec\u5bfc\u5165\u4e86\u5b9a\u4e49\u51fd\u6570\u7684\u6a21\u5757\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 from...import... \u8bed\u6cd5\u4ece\u6a21\u5757\u4e2d\u76f4\u63a5\u5bfc\u5165\u9700\u8981\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 test.py from module1 import foo foo () # hello, world! from module2 import foo foo () # goodbye, world! \u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u5982\u679c\u4ece\u4e24\u4e2a\u4e0d\u540c\u7684\u6a21\u5757\u4e2d\u5bfc\u5165\u4e86\u540c\u540d\u7684\u51fd\u6570\uff0c\u540e\u5bfc\u5165\u7684\u51fd\u6570\u4f1a\u8986\u76d6\u6389\u5148\u524d\u7684\u5bfc\u5165\uff0c\u5c31\u50cf\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u8c03\u7528 foo \u4f1a\u8f93\u51fa hello, world! \uff0c\u56e0\u4e3a\u6211\u4eec\u5148\u5bfc\u5165\u4e86 module2 \u7684 foo \uff0c\u540e\u5bfc\u5165\u4e86 module1 \u7684 foo \u3002\u5982\u679c\u4e24\u4e2a from...import... \u53cd\u8fc7\u6765\u5199\uff0c\u5c31\u662f\u53e6\u5916\u4e00\u756a\u5149\u666f\u4e86\u3002 test.py from module2 import foo from module1 import foo foo () # hello, world! \u5982\u679c\u60f3\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u540c\u65f6\u4f7f\u7528\u6765\u81ea\u4e24\u4e2a\u6a21\u5757\u4e2d\u7684 foo \u51fd\u6570\u4e5f\u662f\u6709\u529e\u6cd5\u7684\uff0c\u5927\u5bb6\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\u4e86\uff0c\u8fd8\u662f\u7528 as \u5173\u952e\u5b57\u5bf9\u5bfc\u5165\u7684\u51fd\u6570\u8fdb\u884c\u522b\u540d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 test.py from module1 import foo as f1 from module2 import foo as f2 f1 () # hello, world! f2 () # goodbye, world! \u6807\u51c6\u5e93\u4e2d\u7684\u6a21\u5757\u548c\u51fd\u6570 Python\u6807\u51c6\u5e93\u4e2d\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u6a21\u5757\u548c\u51fd\u6570\u6765\u7b80\u5316\u6211\u4eec\u7684\u5f00\u53d1\u5de5\u4f5c\uff0c\u6211\u4eec\u4e4b\u524d\u7528\u8fc7\u7684 random \u6a21\u5757\u5c31\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u751f\u6210\u968f\u673a\u6570\u548c\u8fdb\u884c\u968f\u673a\u62bd\u6837\u7684\u51fd\u6570\uff1b\u800c time \u6a21\u5757\u5219\u63d0\u4f9b\u4e86\u548c\u65f6\u95f4\u64cd\u4f5c\u76f8\u5173\u7684\u51fd\u6570\uff1b\u4e0a\u9762\u6c42\u9636\u4e58\u7684\u51fd\u6570\u5728Python\u6807\u51c6\u5e93\u4e2d\u7684 math \u6a21\u5757\u4e2d\u5df2\u7ecf\u6709\u4e86\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u5e76\u4e0d\u9700\u8981\u6211\u4eec\u81ea\u5df1\u7f16\u5199\uff0c\u800c math \u6a21\u5757\u4e2d\u8fd8\u5305\u62ec\u4e86\u8ba1\u7b97\u6b63\u5f26\u3001\u4f59\u5f26\u3001\u6307\u6570\u3001\u5bf9\u6570\u7b49\u4e00\u7cfb\u5217\u7684\u6570\u5b66\u51fd\u6570\u3002\u968f\u7740\u6211\u4eec\u8fdb\u4e00\u6b65\u7684\u5b66\u4e60Python\u7f16\u7a0b\u77e5\u8bc6\uff0c\u6211\u4eec\u8fd8\u4f1a\u7528\u5230\u66f4\u591a\u7684\u6a21\u5757\u548c\u51fd\u6570\u3002 Python\u6807\u51c6\u5e93\u4e2d\u8fd8\u6709\u4e00\u7c7b\u51fd\u6570\u662f\u4e0d\u9700\u8981 import \u5c31\u80fd\u591f\u76f4\u63a5\u4f7f\u7528\u7684\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e4b\u4e3a\u5185\u7f6e\u51fd\u6570\uff0c\u8fd9\u4e9b\u5185\u7f6e\u51fd\u6570\u90fd\u662f\u5f88\u6709\u7528\u4e5f\u662f\u6700\u5e38\u7528\u7684\uff0c\u4e0b\u9762\u7684\u8868\u683c\u5217\u51fa\u4e86\u4e00\u90e8\u5206\u7684\u5185\u7f6e\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e abs \u8fd4\u56de\u4e00\u4e2a\u6570\u7684\u7edd\u5bf9\u503c\uff0c\u4f8b\u5982\uff1a abs(-1.3) \u4f1a\u8fd4\u56de 1.3 \u3002 bin \u628a\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u6210\u4ee5 '0b' \u5f00\u5934\u7684\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a bin(123) \u4f1a\u8fd4\u56de '0b1111011' \u3002 chr \u5c06Unicode\u7f16\u7801\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u5b57\u7b26\uff0c\u4f8b\u5982\uff1a chr(8364) \u4f1a\u8fd4\u56de '\u20ac' \u3002 hex \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u6210\u4ee5 '0x' \u5f00\u5934\u7684\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a hex(123) \u4f1a\u8fd4\u56de '0x7b' \u3002 input \u4ece\u8f93\u5165\u4e2d\u8bfb\u53d6\u4e00\u884c\uff0c\u8fd4\u56de\u8bfb\u5230\u7684\u5b57\u7b26\u4e32\u3002 len \u83b7\u53d6\u5b57\u7b26\u4e32\u3001\u5217\u8868\u7b49\u7684\u957f\u5ea6\u3002 max \u8fd4\u56de\u591a\u4e2a\u53c2\u6570\u6216\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u6700\u5927\u503c\uff0c\u4f8b\u5982\uff1a max(12, 95, 37) \u4f1a\u8fd4\u56de 95 \u3002 min \u8fd4\u56de\u591a\u4e2a\u53c2\u6570\u6216\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u4f8b\u5982\uff1a min(12, 95, 37) \u4f1a\u8fd4\u56de 12 \u3002 oct \u628a\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u6210\u4ee5 '0o' \u5f00\u5934\u7684\u516b\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a oct(123) \u4f1a\u8fd4\u56de '0o173' \u3002 open \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u5e76\u8fd4\u56de\u6587\u4ef6\u5bf9\u8c61\u3002 ord \u5c06\u5b57\u7b26\u8f6c\u6362\u6210\u5bf9\u5e94\u7684Unicode\u7f16\u7801\uff0c\u4f8b\u5982\uff1a ord('\u20ac') \u4f1a\u8fd4\u56de 8364 \u3002 pow \u6c42\u5e42\u8fd0\u7b97\uff0c\u4f8b\u5982\uff1a pow(2, 3) \u4f1a\u8fd4\u56de 8 \uff1b pow(2, 0.5) \u4f1a\u8fd4\u56de 1.4142135623730951 \u3002 print \u6253\u5370\u8f93\u51fa\u3002 range \u6784\u9020\u4e00\u4e2a\u8303\u56f4\u5e8f\u5217\uff0c\u4f8b\u5982\uff1a range(100) \u4f1a\u4ea7\u751f 0 \u5230 99 \u7684\u6574\u6570\u5e8f\u5217\u3002 round \u6309\u7167\u6307\u5b9a\u7684\u7cbe\u5ea6\u5bf9\u6570\u503c\u8fdb\u884c\u56db\u820d\u4e94\u5165\uff0c\u4f8b\u5982\uff1a round(1.23456, 4) \u4f1a\u8fd4\u56de 1.2346 \u3002 sum \u5bf9\u4e00\u4e2a\u5e8f\u5217\u4e2d\u7684\u9879\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\u6c42\u548c\u8fd0\u7b97\uff0c\u4f8b\u5982\uff1a sum(range(1, 101)) \u4f1a\u8fd4\u56de 5050 \u3002 type \u8fd4\u56de\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a type(10) \u4f1a\u8fd4\u56de int \uff1b\u800c type('hello') \u4f1a\u8fd4\u56de str \u3002 \u7b80\u5355\u7684\u603b\u7ed3 \u51fd\u6570\u662f\u5bf9\u529f\u80fd\u76f8\u5bf9\u72ec\u7acb\u4e14\u4f1a\u91cd\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u7684\u5c01\u88c5 \u3002\u5b66\u4f1a\u4f7f\u7528\u5b9a\u4e49\u548c\u4f7f\u7528\u51fd\u6570\uff0c\u5c31\u80fd\u591f\u5199\u51fa\u66f4\u4e3a\u4f18\u8d28\u7684\u4ee3\u7801\u3002\u5f53\u7136\uff0cPython\u8bed\u8a00\u7684\u6807\u51c6\u5e93\u4e2d\u5df2\u7ecf\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u6a21\u5757\u548c\u5e38\u7528\u7684\u51fd\u6570\uff0c\u7528\u597d\u8fd9\u4e9b\u6a21\u5757\u548c\u51fd\u6570\u5c31\u80fd\u591f\u7528\u66f4\u5c11\u7684\u4ee3\u7801\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff1b\u5982\u679c\u8fd9\u4e9b\u6a21\u5757\u548c\u51fd\u6570\u4e0d\u80fd\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42\uff0c\u6211\u4eec\u5c31\u9700\u8981\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u7136\u540e\u7528\u6a21\u5757\u7684\u6982\u5ff5\u6765\u7ba1\u7406\u8fd9\u4e9b\u81ea\u5b9a\u4e49\u51fd\u6570\u3002","title":"\u7b2c13\u8bfe\uff1a\u51fd\u6570\u548c\u6a21\u5757"},{"location":"%E7%AC%AC13%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97/#13","text":"\u5728\u8bb2\u89e3\u672c\u8282\u8bfe\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u7814\u7a76\u4e00\u9053\u6570\u5b66\u9898\uff0c\u8bf7\u8bf4\u51fa\u4e0b\u9762\u7684\u65b9\u7a0b\u6709\u591a\u5c11\u7ec4\u6b63\u6574\u6570\u89e3\u3002 $$ x_1 + x_2 + x_3 + x_4 = 8 $$ \u4f60\u53ef\u80fd\u5df2\u7ecf\u60f3\u5230\u4e86\uff0c\u8fd9\u4e2a\u95ee\u9898\u5176\u5b9e\u7b49\u540c\u4e8e\u5c06 8 \u4e2a\u82f9\u679c\u5206\u6210\u56db\u7ec4\u4e14\u6bcf\u7ec4\u81f3\u5c11\u4e00\u4e2a\u82f9\u679c\u6709\u591a\u5c11\u79cd\u65b9\u6848\uff0c\u56e0\u6b64\u8be5\u95ee\u9898\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7b49\u4ef7\u4e8e\u5728\u5206\u9694 8 \u4e2a\u82f9\u679c\u7684 7 \u4e2a\u7a7a\u9699\u4e4b\u95f4\u63d2\u5165\u4e09\u4e2a\u9694\u677f\u5c06\u82f9\u679c\u5206\u6210\u56db\u7ec4\u6709\u591a\u5c11\u79cd\u65b9\u6848\uff0c\u4e5f\u5c31\u662f\u4ece 7 \u4e2a\u7a7a\u9699\u9009\u51fa 3 \u4e2a\u7a7a\u9699\u653e\u5165\u9694\u677f\u7684\u7ec4\u5408\u6570\uff0c\u6240\u4ee5\u7b54\u6848\u662f$ C_7^3=35 $\u3002\u7ec4\u5408\u6570\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\u6240\u793a\u3002 $$ C_M^N = \\frac {M!} {N!(M-N)!} $$ \u6839\u636e\u6211\u4eec\u524d\u9762\u5b66\u4e60\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u7528\u5faa\u73af\u505a\u7d2f\u4e58\u7684\u65b9\u5f0f\u6765\u8ba1\u7b97\u9636\u4e58\uff0c\u90a3\u4e48\u901a\u8fc7\u4e0b\u9762\u7684Python\u4ee3\u7801\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u7ec4\u5408\u6570$ C_M^N $\u7684\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \"\"\" \u8f93\u5165M\u548cN\u8ba1\u7b97C(M,N) Version: 0.1 Author: \u9a86\u660a \"\"\" m = int ( input ( 'm = ' )) n = int ( input ( 'n = ' )) # \u8ba1\u7b97m\u7684\u9636\u4e58 fm = 1 for num in range ( 1 , m + 1 ): fm *= num # \u8ba1\u7b97n\u7684\u9636\u4e58 fn = 1 for num in range ( 1 , n + 1 ): fn *= num # \u8ba1\u7b97m-n\u7684\u9636\u4e58 fk = 1 for num in range ( 1 , m - n + 1 ): fk *= num # \u8ba1\u7b97C(M,N)\u7684\u503c print ( fm // fn // fk )","title":"\u7b2c13\u8bfe\uff1a\u51fd\u6570\u548c\u6a21\u5757"},{"location":"%E7%AC%AC13%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97/#_1","text":"\u4e0d\u77e5\u5927\u5bb6\u662f\u5426\u6ce8\u610f\u5230\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u505a\u4e86\u4e09\u6b21\u6c42\u9636\u4e58\uff0c\u867d\u7136 m \u3001 n \u3001 m - n \u7684\u503c\u5404\u4e0d\u76f8\u540c\uff0c\u4f46\u662f\u4e09\u6bb5\u4ee3\u7801\u5e76\u6ca1\u6709\u5b9e\u8d28\u6027\u7684\u533a\u522b\uff0c\u5c5e\u4e8e\u91cd\u590d\u4ee3\u7801\u3002\u4e16\u754c\u7ea7\u7684\u7f16\u7a0b\u5927\u5e08 Martin Fowler \u5148\u751f\u66fe\u7ecf\u8bf4\u8fc7\uff1a\u201c \u4ee3\u7801\u6709\u5f88\u591a\u79cd\u574f\u5473\u9053\uff0c\u91cd\u590d\u662f\u6700\u574f\u7684\u4e00\u79cd\uff01 \u201d\u3002\u8981\u5199\u51fa\u9ad8\u8d28\u91cf\u7684\u4ee3\u7801\u9996\u5148\u8981\u89e3\u51b3\u7684\u5c31\u662f\u91cd\u590d\u4ee3\u7801\u7684\u95ee\u9898\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u4ee3\u7801\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8ba1\u7b97\u9636\u4e58\u7684\u529f\u80fd\u5c01\u88c5\u5230\u4e00\u4e2a\u79f0\u4e3a\u201c\u51fd\u6570\u201d\u7684\u4ee3\u7801\u5757\u4e2d\uff0c\u5728\u9700\u8981\u8ba1\u7b97\u9636\u4e58\u7684\u5730\u65b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u201c\u8c03\u7528\u51fd\u6570\u201d\u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u51fd\u6570\u7684\u4f5c\u7528"},{"location":"%E7%AC%AC13%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97/#_2","text":"\u6570\u5b66\u4e0a\u7684\u51fd\u6570\u901a\u5e38\u5f62\u5982 y = f(x) \u6216\u8005 z = g(x, y) \u8fd9\u6837\u7684\u5f62\u5f0f\uff0c\u5728 y = f(x) \u4e2d\uff0c f \u662f\u51fd\u6570\u7684\u540d\u5b57\uff0c x \u662f\u51fd\u6570\u7684\u81ea\u53d8\u91cf\uff0c y \u662f\u51fd\u6570\u7684\u56e0\u53d8\u91cf\uff1b\u800c\u5728 z = g(x, y) \u4e2d\uff0c g \u662f\u51fd\u6570\u540d\uff0c x \u548c y \u662f\u51fd\u6570\u7684\u81ea\u53d8\u91cf\uff0c z \u662f\u51fd\u6570\u7684\u56e0\u53d8\u91cf\u3002Python\u4e2d\u7684\u51fd\u6570\u8ddf\u8fd9\u4e2a\u7ed3\u6784\u662f\u4e00\u81f4\u7684\uff0c\u6bcf\u4e2a\u51fd\u6570\u90fd\u6709\u81ea\u5df1\u7684\u540d\u5b57\u3001\u81ea\u53d8\u91cf\u548c\u56e0\u53d8\u91cf\u3002\u6211\u4eec\u901a\u5e38\u628aPython\u4e2d\u51fd\u6570\u7684\u81ea\u53d8\u91cf\u79f0\u4e3a\u51fd\u6570\u7684\u53c2\u6570\uff0c\u800c\u56e0\u53d8\u91cf\u79f0\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002 \u5728Python\u4e2d\u53ef\u4ee5\u4f7f\u7528 def \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u51fd\u6570\uff0c\u548c\u53d8\u91cf\u4e00\u6837\u6bcf\u4e2a\u51fd\u6570\u4e5f\u5e94\u8be5\u6709\u4e00\u4e2a\u6f02\u4eae\u7684\u540d\u5b57\uff0c\u547d\u540d\u89c4\u5219\u8ddf\u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219\u662f\u4e00\u81f4\u7684\uff08\u8d76\u7d27\u60f3\u4e00\u60f3\u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\u7684\u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219\uff09\u3002\u5728\u51fd\u6570\u540d\u540e\u9762\u7684\u5706\u62ec\u53f7\u4e2d\u53ef\u4ee5\u653e\u7f6e\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5c31\u662f\u6211\u4eec\u521a\u624d\u8bf4\u5230\u7684\u51fd\u6570\u7684\u81ea\u53d8\u91cf\uff0c\u800c\u51fd\u6570\u6267\u884c\u5b8c\u6210\u540e\u6211\u4eec\u4f1a\u901a\u8fc7 return \u5173\u952e\u5b57\u6765\u8fd4\u56de\u51fd\u6570\u7684\u6267\u884c\u7ed3\u679c\uff0c\u5c31\u662f\u6211\u4eec\u521a\u624d\u8bf4\u7684\u51fd\u6570\u7684\u56e0\u53d8\u91cf\u3002\u4e00\u4e2a\u51fd\u6570\u8981\u6267\u884c\u7684\u4ee3\u7801\u5757\uff08\u8981\u505a\u7684\u4e8b\u60c5\uff09\u4e5f\u662f\u901a\u8fc7\u7f29\u8fdb\u7684\u65b9\u5f0f\u6765\u8868\u793a\u7684\uff0c\u8ddf\u4e4b\u524d\u5206\u652f\u548c\u5faa\u73af\u7ed3\u6784\u7684\u4ee3\u7801\u5757\u662f\u4e00\u6837\u7684\u3002\u5927\u5bb6\u4e0d\u8981\u5fd8\u4e86 def \u90a3\u4e00\u884c\u7684\u6700\u540e\u9762\u8fd8\u6709\u4e00\u4e2a : \uff0c\u4e4b\u524d\u63d0\u9192\u8fc7\u5927\u5bb6\uff0c\u90a3\u662f\u5728\u82f1\u6587\u8f93\u5165\u6cd5\u72b6\u6001\u4e0b\u8f93\u5165\u7684\u5192\u53f7\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u91cd\u6784\u3002 \u6240\u8c13\u91cd\u6784\uff0c\u662f\u5728\u4e0d\u5f71\u54cd\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u7684\u524d\u63d0\u4e0b\u5bf9\u4ee3\u7801\u7684\u7ed3\u6784\u8fdb\u884c\u8c03\u6574\u3002 \u91cd\u6784\u4e4b\u540e\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \"\"\" \u8f93\u5165M\u548cN\u8ba1\u7b97C(M,N) Version: 0.1 Author: \u9a86\u660a \"\"\" # \u5b9a\u4e49\u51fd\u6570\uff1adef\u662f\u5b9a\u4e49\u51fd\u6570\u7684\u5173\u952e\u5b57\u3001fac\u662f\u51fd\u6570\u540d\uff0cnum\u662f\u53c2\u6570\uff08\u81ea\u53d8\u91cf\uff09 def fac ( num ): \"\"\"\u6c42\u9636\u4e58\"\"\" result = 1 for n in range ( 1 , num + 1 ): result *= n # \u8fd4\u56denum\u7684\u9636\u4e58\uff08\u56e0\u53d8\u91cf\uff09 return result m = int ( input ( 'm = ' )) n = int ( input ( 'n = ' )) # \u5f53\u9700\u8981\u8ba1\u7b97\u9636\u4e58\u7684\u65f6\u5019\u4e0d\u7528\u518d\u5199\u91cd\u590d\u7684\u4ee3\u7801\u800c\u662f\u76f4\u63a5\u8c03\u7528\u51fd\u6570fac # \u8c03\u7528\u51fd\u6570\u7684\u8bed\u6cd5\u662f\u5728\u51fd\u6570\u540d\u540e\u9762\u8ddf\u4e0a\u5706\u62ec\u53f7\u5e76\u4f20\u5165\u53c2\u6570 print ( fac ( m ) // fac ( n ) // fac ( m - n )) \u8bf4\u660e \uff1a\u4e8b\u5b9e\u4e0a\uff0cPython\u6807\u51c6\u5e93\u7684 math \u6a21\u5757\u4e2d\u6709\u4e00\u4e2a\u540d\u4e3a factorial \u7684\u51fd\u6570\u5df2\u7ecf\u5b9e\u73b0\u4e86\u6c42\u9636\u4e58\u7684\u529f\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8be5\u51fd\u6570\u6765\u8ba1\u7b97\u9636\u4e58\u3002 \u5c06\u6765\u6211\u4eec\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u8981\u4e48\u662f\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u8981\u4e48\u662fPython\u6807\u51c6\u5e93\u6216\u8005\u4e09\u65b9\u5e93\u4e2d\u63d0\u4f9b\u7684\u51fd\u6570 \u3002","title":"\u5b9a\u4e49\u51fd\u6570"},{"location":"%E7%AC%AC13%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97/#_3","text":"","title":"\u51fd\u6570\u7684\u53c2\u6570"},{"location":"%E7%AC%AC13%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97/#_4","text":"\u5982\u679c\u51fd\u6570\u4e2d\u6ca1\u6709 return \u8bed\u53e5\uff0c\u90a3\u4e48\u51fd\u6570\u9ed8\u8ba4\u8fd4\u56de\u4ee3\u8868\u7a7a\u503c\u7684 None \u3002\u53e6\u5916\uff0c\u5728\u5b9a\u4e49\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u4e5f\u53ef\u4ee5\u6ca1\u6709\u81ea\u53d8\u91cf\uff0c\u4f46\u662f\u51fd\u6570\u540d\u540e\u9762\u7684\u5706\u62ec\u53f7\u662f\u5fc5\u987b\u6709\u7684\u3002Python\u4e2d\u8fd8\u5141\u8bb8\u51fd\u6570\u7684\u53c2\u6570\u62e5\u6709\u9ed8\u8ba4\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e4b\u524d\u8bb2\u8fc7\u7684\u4e00\u4e2a\u4f8b\u5b50\u201cCRAPS\u8d4c\u535a\u6e38\u620f\u201d\u4e2d\u6447\u8272\u5b50\u83b7\u5f97\u70b9\u6570\u7684\u529f\u80fd\u5c01\u88c5\u6210\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \"\"\" \u53c2\u6570\u7684\u9ed8\u8ba4\u503c Version: 0.1 Author: \u9a86\u660a \"\"\" from random import randint # \u5b9a\u4e49\u6447\u8272\u5b50\u7684\u51fd\u6570\uff0cn\u8868\u793a\u8272\u5b50\u7684\u4e2a\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a2 def roll_dice ( n = 2 ): \"\"\"\u6447\u8272\u5b50\u8fd4\u56de\u603b\u7684\u70b9\u6570\"\"\" total = 0 for _ in range ( n ): total += randint ( 1 , 6 ) return total # \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\uff0c\u90a3\u4e48n\u4f7f\u7528\u9ed8\u8ba4\u503c2\uff0c\u8868\u793a\u6447\u4e24\u9897\u8272\u5b50 print ( roll_dice ()) # \u4f20\u5165\u53c2\u65703\uff0c\u53d8\u91cfn\u88ab\u8d4b\u503c\u4e3a3\uff0c\u8868\u793a\u6447\u4e09\u9897\u8272\u5b50\u83b7\u5f97\u70b9\u6570 print ( roll_dice ( 3 )) \u6211\u4eec\u518d\u6765\u770b\u4e00\u4e2a\u66f4\u4e3a\u7b80\u5355\u7684\u4f8b\u5b50\u3002 def add ( a = 0 , b = 0 , c = 0 ): \"\"\"\u4e09\u4e2a\u6570\u76f8\u52a0\u6c42\u548c\"\"\" return a + b + c # \u8c03\u7528add\u51fd\u6570\uff0c\u6ca1\u6709\u4f20\u5165\u53c2\u6570\uff0c\u90a3\u4e48a\u3001b\u3001c\u90fd\u4f7f\u7528\u9ed8\u8ba4\u503c0 print ( add ()) # 0 # \u8c03\u7528add\u51fd\u6570\uff0c\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u90a3\u4e48\u8be5\u53c2\u6570\u8d4b\u503c\u7ed9\u53d8\u91cfa, \u53d8\u91cfb\u548cc\u4f7f\u7528\u9ed8\u8ba4\u503c0 print ( add ( 1 )) # 1 # \u8c03\u7528add\u51fd\u6570\uff0c\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\uff0c1\u548c2\u5206\u522b\u8d4b\u503c\u7ed9\u53d8\u91cfa\u548cb\uff0c\u53d8\u91cfc\u4f7f\u7528\u9ed8\u8ba4\u503c0 print ( add ( 1 , 2 )) # 3 # \u8c03\u7528add\u51fd\u6570\uff0c\u4f20\u5165\u4e09\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u8d4b\u503c\u7ed9a\u3001b\u3001c\u4e09\u4e2a\u53d8\u91cf print ( add ( 1 , 2 , 3 )) # 6 # \u4f20\u9012\u53c2\u6570\u65f6\u53ef\u4ee5\u4e0d\u6309\u7167\u8bbe\u5b9a\u7684\u987a\u5e8f\u8fdb\u884c\u4f20\u9012\uff0c\u4f46\u662f\u8981\u7528\u201c\u53c2\u6570\u540d=\u53c2\u6570\u503c\u201d\u7684\u5f62\u5f0f print ( add ( c = 50 , a = 100 , b = 200 )) # 350 \u6ce8\u610f \uff1a\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u5fc5\u987b\u653e\u5728\u4e0d\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u4e4b\u540e\uff0c\u5426\u5219\u5c06\u4ea7\u751f SyntaxError \u9519\u8bef\uff0c\u9519\u8bef\u6d88\u606f\u662f\uff1a non-default argument follows default argument \uff0c\u7ffb\u8bd1\u6210\u4e2d\u6587\u7684\u610f\u601d\u662f\u201c\u6ca1\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u653e\u5728\u4e86\u5e26\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u540e\u9762\u201d\u3002","title":"\u53c2\u6570\u7684\u9ed8\u8ba4\u503c"},{"location":"%E7%AC%AC13%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97/#_5","text":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u5bf9\u4efb\u610f\u591a\u4e2a\u6570\u6c42\u548c\u7684 add \u51fd\u6570\uff0c\u56e0\u4e3aPython\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u661f\u53f7\u8868\u8fbe\u5f0f\u8bed\u6cd5\u6765\u652f\u6301\u53ef\u53d8\u53c2\u6570\u3002\u6240\u8c13\u53ef\u53d8\u53c2\u6570\u6307\u7684\u662f\u5728\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u5411\u51fd\u6570\u4f20\u5165 0 \u4e2a\u6216\u4efb\u610f\u591a\u4e2a\u53c2\u6570\u3002\u5c06\u6765\u6211\u4eec\u4ee5\u56e2\u961f\u534f\u4f5c\u7684\u65b9\u5f0f\u5f00\u53d1\u5546\u4e1a\u9879\u76ee\u65f6\uff0c\u5f88\u6709\u53ef\u80fd\u8981\u8bbe\u8ba1\u51fd\u6570\u7ed9\u5176\u4ed6\u4eba\u4f7f\u7528\uff0c\u4f46\u6709\u7684\u65f6\u5019\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u51fd\u6570\u7684\u8c03\u7528\u8005\u4f1a\u5411\u8be5\u51fd\u6570\u4f20\u5165\u591a\u5c11\u4e2a\u53c2\u6570\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u53d8\u53c2\u6570\u5c31\u53ef\u4ee5\u6d3e\u4e0a\u7528\u573a\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u7528\u53ef\u53d8\u53c2\u6570\u5b9e\u73b0\u5bf9\u4efb\u610f\u591a\u4e2a\u6570\u6c42\u548c\u7684 add \u51fd\u6570\u3002 \"\"\" \u53ef\u53d8\u53c2\u6570 Version: 0.1 Author: \u9a86\u660a \"\"\" # \u7528\u661f\u53f7\u8868\u8fbe\u5f0f\u6765\u8868\u793aargs\u53ef\u4ee5\u63a5\u65360\u4e2a\u6216\u4efb\u610f\u591a\u4e2a\u53c2\u6570 def add ( * args ): total = 0 # \u53ef\u53d8\u53c2\u6570\u53ef\u4ee5\u653e\u5728for\u5faa\u73af\u4e2d\u53d6\u51fa\u6bcf\u4e2a\u53c2\u6570\u7684\u503c for val in args : if type ( val ) in ( int , float ): total += val return total # \u5728\u8c03\u7528add\u51fd\u6570\u65f6\u53ef\u4ee5\u4f20\u51650\u4e2a\u6216\u4efb\u610f\u591a\u4e2a\u53c2\u6570 print ( add ()) print ( add ( 1 )) print ( add ( 1 , 2 )) print ( add ( 1 , 2 , 3 )) print ( add ( 1 , 3 , 5 , 7 , 9 ))","title":"\u53ef\u53d8\u53c2\u6570"},{"location":"%E7%AC%AC13%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97/#_6","text":"\u4e0d\u7ba1\u7528\u4ec0\u4e48\u6837\u7684\u7f16\u7a0b\u8bed\u8a00\u6765\u5199\u4ee3\u7801\uff0c\u7ed9\u53d8\u91cf\u3001\u51fd\u6570\u8d77\u540d\u5b57\u90fd\u662f\u4e00\u4e2a\u8ba9\u4eba\u5934\u75bc\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u4f1a\u9047\u5230 \u547d\u540d\u51b2\u7a81 \u8fd9\u79cd\u5c34\u5c2c\u7684\u60c5\u51b5\u3002\u6700\u7b80\u5355\u7684\u573a\u666f\u5c31\u662f\u5728\u540c\u4e00\u4e2a .py \u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u4e24\u4e2a\u540c\u540d\u7684\u51fd\u6570\uff0c\u5982\u4e0b\u6240\u793a\u3002 def foo (): print ( 'hello, world!' ) def foo (): print ( 'goodbye, world!' ) foo () # \u5927\u5bb6\u731c\u731c\u8c03\u7528foo\u51fd\u6570\u4f1a\u8f93\u51fa\u4ec0\u4e48 \u5f53\u7136\u4e0a\u9762\u7684\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u907f\u514d\uff0c\u4f46\u662f\u5982\u679c\u9879\u76ee\u662f\u56e2\u961f\u534f\u4f5c\u591a\u4eba\u5f00\u53d1\u7684\u65f6\u5019\uff0c\u56e2\u961f\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5b9a\u4e49\u4e86\u540d\u4e3a foo \u7684\u51fd\u6570\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u600e\u4e48\u89e3\u51b3\u547d\u540d\u51b2\u7a81\u5462\uff1f\u7b54\u6848\u5176\u5b9e\u5f88\u7b80\u5355\uff0cPython\u4e2d\u6bcf\u4e2a\u6587\u4ef6\u5c31\u4ee3\u8868\u4e86\u4e00\u4e2a\u6a21\u5757\uff08module\uff09\uff0c\u6211\u4eec\u5728\u4e0d\u540c\u7684\u6a21\u5757\u4e2d\u53ef\u4ee5\u6709\u540c\u540d\u7684\u51fd\u6570\uff0c\u5728\u4f7f\u7528\u51fd\u6570\u7684\u65f6\u5019\u6211\u4eec\u901a\u8fc7 import \u5173\u952e\u5b57\u5bfc\u5165\u6307\u5b9a\u7684\u6a21\u5757\u518d\u4f7f\u7528 \u5b8c\u5168\u9650\u5b9a\u540d \u7684\u8c03\u7528\u65b9\u5f0f\u5c31\u53ef\u4ee5\u533a\u5206\u5230\u5e95\u8981\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u6a21\u5757\u4e2d\u7684 foo \u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 module1.py def foo (): print ( 'hello, world!' ) module2.py def foo (): print ( 'goodbye, world!' ) test.py import module1 import module2 # \u7528\u201c\u6a21\u5757\u540d.\u51fd\u6570\u540d\u201d\u7684\u65b9\u5f0f\uff08\u5b8c\u5168\u9650\u5b9a\u540d\uff09\u8c03\u7528\u51fd\u6570\uff0c module1 . foo () # hello, world! module2 . foo () # goodbye, world! \u5728\u5bfc\u5165\u6a21\u5757\u65f6\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 as \u5173\u952e\u5b57\u5bf9\u6a21\u5757\u8fdb\u884c\u522b\u540d\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u66f4\u4e3a\u7b80\u77ed\u7684\u5b8c\u5168\u9650\u5b9a\u540d\u3002 test.py import module1 as m1 import module2 as m2 m1 . foo () # hello, world! m2 . foo () # goodbye, world! \u4e0a\u9762\u7684\u4ee3\u7801\u6211\u4eec\u5bfc\u5165\u4e86\u5b9a\u4e49\u51fd\u6570\u7684\u6a21\u5757\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 from...import... \u8bed\u6cd5\u4ece\u6a21\u5757\u4e2d\u76f4\u63a5\u5bfc\u5165\u9700\u8981\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 test.py from module1 import foo foo () # hello, world! from module2 import foo foo () # goodbye, world! \u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u5982\u679c\u4ece\u4e24\u4e2a\u4e0d\u540c\u7684\u6a21\u5757\u4e2d\u5bfc\u5165\u4e86\u540c\u540d\u7684\u51fd\u6570\uff0c\u540e\u5bfc\u5165\u7684\u51fd\u6570\u4f1a\u8986\u76d6\u6389\u5148\u524d\u7684\u5bfc\u5165\uff0c\u5c31\u50cf\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u8c03\u7528 foo \u4f1a\u8f93\u51fa hello, world! \uff0c\u56e0\u4e3a\u6211\u4eec\u5148\u5bfc\u5165\u4e86 module2 \u7684 foo \uff0c\u540e\u5bfc\u5165\u4e86 module1 \u7684 foo \u3002\u5982\u679c\u4e24\u4e2a from...import... \u53cd\u8fc7\u6765\u5199\uff0c\u5c31\u662f\u53e6\u5916\u4e00\u756a\u5149\u666f\u4e86\u3002 test.py from module2 import foo from module1 import foo foo () # hello, world! \u5982\u679c\u60f3\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u540c\u65f6\u4f7f\u7528\u6765\u81ea\u4e24\u4e2a\u6a21\u5757\u4e2d\u7684 foo \u51fd\u6570\u4e5f\u662f\u6709\u529e\u6cd5\u7684\uff0c\u5927\u5bb6\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\u4e86\uff0c\u8fd8\u662f\u7528 as \u5173\u952e\u5b57\u5bf9\u5bfc\u5165\u7684\u51fd\u6570\u8fdb\u884c\u522b\u540d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 test.py from module1 import foo as f1 from module2 import foo as f2 f1 () # hello, world! f2 () # goodbye, world!","title":"\u7528\u6a21\u5757\u7ba1\u7406\u51fd\u6570"},{"location":"%E7%AC%AC13%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97/#_7","text":"Python\u6807\u51c6\u5e93\u4e2d\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u6a21\u5757\u548c\u51fd\u6570\u6765\u7b80\u5316\u6211\u4eec\u7684\u5f00\u53d1\u5de5\u4f5c\uff0c\u6211\u4eec\u4e4b\u524d\u7528\u8fc7\u7684 random \u6a21\u5757\u5c31\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u751f\u6210\u968f\u673a\u6570\u548c\u8fdb\u884c\u968f\u673a\u62bd\u6837\u7684\u51fd\u6570\uff1b\u800c time \u6a21\u5757\u5219\u63d0\u4f9b\u4e86\u548c\u65f6\u95f4\u64cd\u4f5c\u76f8\u5173\u7684\u51fd\u6570\uff1b\u4e0a\u9762\u6c42\u9636\u4e58\u7684\u51fd\u6570\u5728Python\u6807\u51c6\u5e93\u4e2d\u7684 math \u6a21\u5757\u4e2d\u5df2\u7ecf\u6709\u4e86\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u5e76\u4e0d\u9700\u8981\u6211\u4eec\u81ea\u5df1\u7f16\u5199\uff0c\u800c math \u6a21\u5757\u4e2d\u8fd8\u5305\u62ec\u4e86\u8ba1\u7b97\u6b63\u5f26\u3001\u4f59\u5f26\u3001\u6307\u6570\u3001\u5bf9\u6570\u7b49\u4e00\u7cfb\u5217\u7684\u6570\u5b66\u51fd\u6570\u3002\u968f\u7740\u6211\u4eec\u8fdb\u4e00\u6b65\u7684\u5b66\u4e60Python\u7f16\u7a0b\u77e5\u8bc6\uff0c\u6211\u4eec\u8fd8\u4f1a\u7528\u5230\u66f4\u591a\u7684\u6a21\u5757\u548c\u51fd\u6570\u3002 Python\u6807\u51c6\u5e93\u4e2d\u8fd8\u6709\u4e00\u7c7b\u51fd\u6570\u662f\u4e0d\u9700\u8981 import \u5c31\u80fd\u591f\u76f4\u63a5\u4f7f\u7528\u7684\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e4b\u4e3a\u5185\u7f6e\u51fd\u6570\uff0c\u8fd9\u4e9b\u5185\u7f6e\u51fd\u6570\u90fd\u662f\u5f88\u6709\u7528\u4e5f\u662f\u6700\u5e38\u7528\u7684\uff0c\u4e0b\u9762\u7684\u8868\u683c\u5217\u51fa\u4e86\u4e00\u90e8\u5206\u7684\u5185\u7f6e\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e abs \u8fd4\u56de\u4e00\u4e2a\u6570\u7684\u7edd\u5bf9\u503c\uff0c\u4f8b\u5982\uff1a abs(-1.3) \u4f1a\u8fd4\u56de 1.3 \u3002 bin \u628a\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u6210\u4ee5 '0b' \u5f00\u5934\u7684\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a bin(123) \u4f1a\u8fd4\u56de '0b1111011' \u3002 chr \u5c06Unicode\u7f16\u7801\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u5b57\u7b26\uff0c\u4f8b\u5982\uff1a chr(8364) \u4f1a\u8fd4\u56de '\u20ac' \u3002 hex \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u6210\u4ee5 '0x' \u5f00\u5934\u7684\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a hex(123) \u4f1a\u8fd4\u56de '0x7b' \u3002 input \u4ece\u8f93\u5165\u4e2d\u8bfb\u53d6\u4e00\u884c\uff0c\u8fd4\u56de\u8bfb\u5230\u7684\u5b57\u7b26\u4e32\u3002 len \u83b7\u53d6\u5b57\u7b26\u4e32\u3001\u5217\u8868\u7b49\u7684\u957f\u5ea6\u3002 max \u8fd4\u56de\u591a\u4e2a\u53c2\u6570\u6216\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u6700\u5927\u503c\uff0c\u4f8b\u5982\uff1a max(12, 95, 37) \u4f1a\u8fd4\u56de 95 \u3002 min \u8fd4\u56de\u591a\u4e2a\u53c2\u6570\u6216\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u4f8b\u5982\uff1a min(12, 95, 37) \u4f1a\u8fd4\u56de 12 \u3002 oct \u628a\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u6210\u4ee5 '0o' \u5f00\u5934\u7684\u516b\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a oct(123) \u4f1a\u8fd4\u56de '0o173' \u3002 open \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u5e76\u8fd4\u56de\u6587\u4ef6\u5bf9\u8c61\u3002 ord \u5c06\u5b57\u7b26\u8f6c\u6362\u6210\u5bf9\u5e94\u7684Unicode\u7f16\u7801\uff0c\u4f8b\u5982\uff1a ord('\u20ac') \u4f1a\u8fd4\u56de 8364 \u3002 pow \u6c42\u5e42\u8fd0\u7b97\uff0c\u4f8b\u5982\uff1a pow(2, 3) \u4f1a\u8fd4\u56de 8 \uff1b pow(2, 0.5) \u4f1a\u8fd4\u56de 1.4142135623730951 \u3002 print \u6253\u5370\u8f93\u51fa\u3002 range \u6784\u9020\u4e00\u4e2a\u8303\u56f4\u5e8f\u5217\uff0c\u4f8b\u5982\uff1a range(100) \u4f1a\u4ea7\u751f 0 \u5230 99 \u7684\u6574\u6570\u5e8f\u5217\u3002 round \u6309\u7167\u6307\u5b9a\u7684\u7cbe\u5ea6\u5bf9\u6570\u503c\u8fdb\u884c\u56db\u820d\u4e94\u5165\uff0c\u4f8b\u5982\uff1a round(1.23456, 4) \u4f1a\u8fd4\u56de 1.2346 \u3002 sum \u5bf9\u4e00\u4e2a\u5e8f\u5217\u4e2d\u7684\u9879\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\u6c42\u548c\u8fd0\u7b97\uff0c\u4f8b\u5982\uff1a sum(range(1, 101)) \u4f1a\u8fd4\u56de 5050 \u3002 type \u8fd4\u56de\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a type(10) \u4f1a\u8fd4\u56de int \uff1b\u800c type('hello') \u4f1a\u8fd4\u56de str \u3002","title":"\u6807\u51c6\u5e93\u4e2d\u7684\u6a21\u5757\u548c\u51fd\u6570"},{"location":"%E7%AC%AC13%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E5%92%8C%E6%A8%A1%E5%9D%97/#_8","text":"\u51fd\u6570\u662f\u5bf9\u529f\u80fd\u76f8\u5bf9\u72ec\u7acb\u4e14\u4f1a\u91cd\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u7684\u5c01\u88c5 \u3002\u5b66\u4f1a\u4f7f\u7528\u5b9a\u4e49\u548c\u4f7f\u7528\u51fd\u6570\uff0c\u5c31\u80fd\u591f\u5199\u51fa\u66f4\u4e3a\u4f18\u8d28\u7684\u4ee3\u7801\u3002\u5f53\u7136\uff0cPython\u8bed\u8a00\u7684\u6807\u51c6\u5e93\u4e2d\u5df2\u7ecf\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u6a21\u5757\u548c\u5e38\u7528\u7684\u51fd\u6570\uff0c\u7528\u597d\u8fd9\u4e9b\u6a21\u5757\u548c\u51fd\u6570\u5c31\u80fd\u591f\u7528\u66f4\u5c11\u7684\u4ee3\u7801\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff1b\u5982\u679c\u8fd9\u4e9b\u6a21\u5757\u548c\u51fd\u6570\u4e0d\u80fd\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42\uff0c\u6211\u4eec\u5c31\u9700\u8981\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u7136\u540e\u7528\u6a21\u5757\u7684\u6982\u5ff5\u6765\u7ba1\u7406\u8fd9\u4e9b\u81ea\u5b9a\u4e49\u51fd\u6570\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC14%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8/","text":"\u7b2c14\u8bfe\uff1a\u51fd\u6570\u7684\u5e94\u7528 \u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7\u4e00\u4e9b\u6848\u4f8b\u6765\u4e3a\u5927\u5bb6\u8bb2\u89e3\u51fd\u6570\u7684\u5e94\u7528\u3002 \u7ecf\u5178\u5c0f\u6848\u4f8b \u6848\u4f8b1\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u751f\u6210\u9a8c\u8bc1\u7801\u7684\u51fd\u6570\u3002 \u8bf4\u660e \uff1a\u9a8c\u8bc1\u7801\u7531\u6570\u5b57\u548c\u82f1\u6587\u5927\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\uff0c\u957f\u5ea6\u53ef\u4ee5\u7528\u53c2\u6570\u6307\u5b9a\u3002 import random import string ALL_CHARS = string . digits + string . ascii_letters def generate_code ( code_len = 4 ): \"\"\"\u751f\u6210\u6307\u5b9a\u957f\u5ea6\u7684\u9a8c\u8bc1\u7801 :param code_len: \u9a8c\u8bc1\u7801\u7684\u957f\u5ea6(\u9ed8\u8ba44\u4e2a\u5b57\u7b26) :return: \u7531\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u548c\u6570\u5b57\u6784\u6210\u7684\u968f\u673a\u9a8c\u8bc1\u7801\u5b57\u7b26\u4e32 \"\"\" return '' . join ( random . choices ( ALL_CHARS , k = code_len )) \u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u751f\u621010\u7ec4\u968f\u673a\u9a8c\u8bc1\u7801\u6765\u6d4b\u8bd5\u4e0a\u9762\u7684\u51fd\u6570\u3002 for _ in range ( 10 ): print ( generate_code ()) \u8bf4\u660e \uff1a random \u6a21\u5757\u7684 sample \u548c choices \u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\u968f\u673a\u62bd\u6837\uff0c sample \u5b9e\u73b0\u65e0\u653e\u56de\u62bd\u6837\uff0c\u8fd9\u610f\u5473\u7740\u62bd\u6837\u53d6\u51fa\u7684\u5b57\u7b26\u662f\u4e0d\u91cd\u590d\u7684\uff1b choices \u5b9e\u73b0\u6709\u653e\u56de\u62bd\u6837\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u80fd\u4f1a\u91cd\u590d\u9009\u4e2d\u67d0\u4e9b\u5b57\u7b26\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4ee3\u8868\u62bd\u6837\u7684\u603b\u4f53\uff0c\u800c\u53c2\u6570 k \u4ee3\u8868\u62bd\u6837\u7684\u6570\u91cf\u3002 \u6848\u4f8b2\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u7ed9\u5b9a\u6587\u4ef6\u7684\u540e\u7f00\u540d\u3002 \u8bf4\u660e \uff1a\u6587\u4ef6\u540d\u901a\u5e38\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u800c\u6587\u4ef6\u7684\u540e\u7f00\u540d\u6307\u7684\u662f\u6587\u4ef6\u540d\u4e2d\u6700\u540e\u4e00\u4e2a . \u540e\u9762\u7684\u90e8\u5206\uff0c\u4e5f\u79f0\u4e3a\u6587\u4ef6\u7684\u6269\u5c55\u540d\uff0c\u5b83\u662f\u67d0\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u7528\u6765\u6807\u8bb0\u6587\u4ef6\u7c7b\u578b\u7684\u4e00\u79cd\u673a\u5236\uff0c\u4f8b\u5982\u5728Windows\u7cfb\u7edf\u4e0a\uff0c\u540e\u7f00\u540d exe \u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u800c\u540e\u7f00\u540d txt \u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u7eaf\u6587\u672c\u6587\u4ef6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728Linux\u548cmacOS\u7cfb\u7edf\u4e0a\uff0c\u6587\u4ef6\u540d\u53ef\u4ee5\u4ee5 . \u5f00\u5934\uff0c\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u9690\u85cf\u6587\u4ef6\uff0c\u50cf .gitignore \u8fd9\u6837\u7684\u6587\u4ef6\u540d\uff0c . \u540e\u9762\u5e76\u4e0d\u662f\u540e\u7f00\u540d\uff0c\u8fd9\u4e2a\u6587\u4ef6\u6ca1\u6709\u540e\u7f00\u540d\u6216\u8005\u8bf4\u540e\u7f00\u540d\u4e3a '' \u3002 def get_suffix ( filename , ignore_dot = True ): \"\"\"\u83b7\u53d6\u6587\u4ef6\u540d\u7684\u540e\u7f00\u540d :param filename: \u6587\u4ef6\u540d :param ignore_dot: \u662f\u5426\u5ffd\u7565\u540e\u7f00\u540d\u524d\u9762\u7684\u70b9 :return: \u6587\u4ef6\u7684\u540e\u7f00\u540d \"\"\" # \u4ece\u5b57\u7b26\u4e32\u4e2d\u9006\u5411\u67e5\u627e.\u51fa\u73b0\u7684\u4f4d\u7f6e pos = filename . rfind ( '.' ) # \u901a\u8fc7\u5207\u7247\u64cd\u4f5c\u4ece\u6587\u4ef6\u540d\u4e2d\u53d6\u51fa\u540e\u7f00\u540d if pos <= 0 : return '' return filename [ pos + 1 :] if ignore_dot else filename [ pos :] \u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u5bf9\u4e0a\u9762\u7684\u51fd\u6570\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u9a8c\u3002 print ( get_suffix ( 'readme.txt' )) # txt print ( get_suffix ( 'readme.txt.md' )) # md print ( get_suffix ( '.readme' )) # print ( get_suffix ( 'readme.' )) # print ( get_suffix ( 'readme' )) # \u4e0a\u9762\u7684 get_suffix \u51fd\u6570\u8fd8\u6709\u4e00\u4e2a\u66f4\u4e3a\u4fbf\u6377\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5c31\u662f\u76f4\u63a5\u4f7f\u7528 os.path \u6a21\u5757\u7684 splitext \u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5c06\u6587\u4ef6\u540d\u62c6\u5206\u6210\u5e26\u8def\u5f84\u7684\u6587\u4ef6\u540d\u548c\u6269\u5c55\u540d\u4e24\u4e2a\u90e8\u5206\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff0c\u4e8c\u5143\u7ec4\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5c31\u662f\u6587\u4ef6\u7684\u540e\u7f00\u540d\uff08\u5305\u542b . \uff09\uff0c\u5982\u679c\u8981\u53bb\u6389\u540e\u7f00\u540d\u4e2d\u7684 . \uff0c\u53ef\u4ee5\u505a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5207\u7247\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from os.path import splitext def get_suffix ( filename , ignore_dot = True ): return splitext ( filename )[ 1 ][ 1 :] \u601d\u8003 \uff1a\u5982\u679c\u8981\u7ed9\u4e0a\u9762\u7684\u51fd\u6570\u589e\u52a0\u4e00\u4e2a\u53c2\u6570\uff0c\u7528\u6765\u63a7\u5236\u6587\u4ef6\u7684\u540e\u7f00\u540d\u662f\u5426\u5305\u542b . \uff0c\u5e94\u8be5\u600e\u4e48\u505a\uff1f \u6848\u4f8b3\uff1a\u5199\u4e00\u4e2a\u5224\u65ad\u7ed9\u5b9a\u7684\u6b63\u6574\u6570\u662f\u4e0d\u662f\u8d28\u6570\u7684\u51fd\u6570\u3002 def is_prime ( num : int ) -> bool : \"\"\"\u5224\u65ad\u4e00\u4e2a\u6b63\u6574\u6570\u662f\u4e0d\u662f\u8d28\u6570 :param num: \u6b63\u6574\u6570 :return: \u5982\u679c\u662f\u8d28\u6570\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse \"\"\" for i in range ( 2 , int ( num ** 0.5 ) + 1 ): if num % i == 0 : return False return num != 1 \u6848\u4f8b4\uff1a\u5199\u51fa\u8ba1\u7b97\u4e24\u4e2a\u6b63\u6574\u6570\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u7684\u51fd\u6570\u3002 \u4ee3\u7801\u4e00\uff1a def gcd_and_lcm ( x : int , y : int ) -> int : \"\"\"\u6c42\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\"\"\" a , b = x , y while b % a != 0 : a , b = b % a , a return a , x * y // a \u4ee3\u7801\u4e8c\uff1a def gcd ( x : int , y : int ) -> int : \"\"\"\u6c42\u6700\u5927\u516c\u7ea6\u6570\"\"\" while y % x != 0 : x , y = y % x , x return x def lcm ( x : int , y : int ) -> int : \"\"\"\u6c42\u6700\u5c0f\u516c\u500d\u6570\"\"\" return x * y // gcd ( x , y ) \u601d\u8003 \uff1a\u8bf7\u6bd4\u8f83\u4e0a\u9762\u7684\u4ee3\u7801\u4e00\u548c\u4ee3\u7801\u4e8c\uff0c\u60f3\u60f3\u54ea\u79cd\u505a\u6cd5\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002 \u6848\u4f8b5\uff1a\u5199\u51fa\u8ba1\u7b97\u4e00\u7ec4\u6837\u672c\u6570\u636e\u63cf\u8ff0\u6027\u7edf\u8ba1\u4fe1\u606f\u7684\u51fd\u6570\u3002 import math def ptp ( data ): \"\"\"\u6c42\u6781\u5dee\uff08\u5168\u8ddd\uff09\"\"\" return max ( data ) - min ( data ) def average ( data ): \"\"\"\u6c42\u5747\u503c\"\"\" return sum ( data ) / len ( data ) def variance ( data ): \"\"\"\u6c42\u65b9\u5dee\"\"\" x_bar = average ( data ) temp = [( num - x_bar ) ** 2 for num in data ] return sum ( temp ) / ( len ( temp ) - 1 ) def standard_deviation ( data ): \"\"\"\u6c42\u6807\u51c6\u5dee\"\"\" return math . sqrt ( variance ( data )) def median ( data ): \"\"\"\u627e\u4e2d\u4f4d\u6570\"\"\" temp , size = sorted ( data ), len ( data ) if size % 2 != 0 : return temp [ size // 2 ] else : return average ( temp [ size // 2 - 1 : size // 2 + 1 ]) \u7b80\u5355\u7684\u603b\u7ed3 \u5728\u5199\u4ee3\u7801\u5c24\u5176\u662f\u5f00\u53d1\u5546\u4e1a\u9879\u76ee\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u8981\u6709\u610f\u8bc6\u7684 \u5c06\u76f8\u5bf9\u72ec\u7acb\u4e14\u91cd\u590d\u51fa\u73b0\u7684\u529f\u80fd\u5c01\u88c5\u6210\u51fd\u6570 \uff0c\u8fd9\u6837\u4e0d\u7ba1\u662f\u81ea\u5df1\u8fd8\u662f\u56e2\u961f\u7684\u5176\u4ed6\u6210\u5458\u90fd\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u51fd\u6570\u7684\u65b9\u5f0f\u6765\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u3002","title":"\u7b2c14\u8bfe\uff1a\u51fd\u6570\u7684\u5e94\u7528"},{"location":"%E7%AC%AC14%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8/#14","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7\u4e00\u4e9b\u6848\u4f8b\u6765\u4e3a\u5927\u5bb6\u8bb2\u89e3\u51fd\u6570\u7684\u5e94\u7528\u3002","title":"\u7b2c14\u8bfe\uff1a\u51fd\u6570\u7684\u5e94\u7528"},{"location":"%E7%AC%AC14%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8/#_1","text":"","title":"\u7ecf\u5178\u5c0f\u6848\u4f8b"},{"location":"%E7%AC%AC14%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8/#1","text":"\u8bf4\u660e \uff1a\u9a8c\u8bc1\u7801\u7531\u6570\u5b57\u548c\u82f1\u6587\u5927\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\uff0c\u957f\u5ea6\u53ef\u4ee5\u7528\u53c2\u6570\u6307\u5b9a\u3002 import random import string ALL_CHARS = string . digits + string . ascii_letters def generate_code ( code_len = 4 ): \"\"\"\u751f\u6210\u6307\u5b9a\u957f\u5ea6\u7684\u9a8c\u8bc1\u7801 :param code_len: \u9a8c\u8bc1\u7801\u7684\u957f\u5ea6(\u9ed8\u8ba44\u4e2a\u5b57\u7b26) :return: \u7531\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u548c\u6570\u5b57\u6784\u6210\u7684\u968f\u673a\u9a8c\u8bc1\u7801\u5b57\u7b26\u4e32 \"\"\" return '' . join ( random . choices ( ALL_CHARS , k = code_len )) \u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u751f\u621010\u7ec4\u968f\u673a\u9a8c\u8bc1\u7801\u6765\u6d4b\u8bd5\u4e0a\u9762\u7684\u51fd\u6570\u3002 for _ in range ( 10 ): print ( generate_code ()) \u8bf4\u660e \uff1a random \u6a21\u5757\u7684 sample \u548c choices \u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\u968f\u673a\u62bd\u6837\uff0c sample \u5b9e\u73b0\u65e0\u653e\u56de\u62bd\u6837\uff0c\u8fd9\u610f\u5473\u7740\u62bd\u6837\u53d6\u51fa\u7684\u5b57\u7b26\u662f\u4e0d\u91cd\u590d\u7684\uff1b choices \u5b9e\u73b0\u6709\u653e\u56de\u62bd\u6837\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u80fd\u4f1a\u91cd\u590d\u9009\u4e2d\u67d0\u4e9b\u5b57\u7b26\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4ee3\u8868\u62bd\u6837\u7684\u603b\u4f53\uff0c\u800c\u53c2\u6570 k \u4ee3\u8868\u62bd\u6837\u7684\u6570\u91cf\u3002","title":"\u6848\u4f8b1\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u751f\u6210\u9a8c\u8bc1\u7801\u7684\u51fd\u6570\u3002"},{"location":"%E7%AC%AC14%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8/#2","text":"\u8bf4\u660e \uff1a\u6587\u4ef6\u540d\u901a\u5e38\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u800c\u6587\u4ef6\u7684\u540e\u7f00\u540d\u6307\u7684\u662f\u6587\u4ef6\u540d\u4e2d\u6700\u540e\u4e00\u4e2a . \u540e\u9762\u7684\u90e8\u5206\uff0c\u4e5f\u79f0\u4e3a\u6587\u4ef6\u7684\u6269\u5c55\u540d\uff0c\u5b83\u662f\u67d0\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u7528\u6765\u6807\u8bb0\u6587\u4ef6\u7c7b\u578b\u7684\u4e00\u79cd\u673a\u5236\uff0c\u4f8b\u5982\u5728Windows\u7cfb\u7edf\u4e0a\uff0c\u540e\u7f00\u540d exe \u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u800c\u540e\u7f00\u540d txt \u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u7eaf\u6587\u672c\u6587\u4ef6\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728Linux\u548cmacOS\u7cfb\u7edf\u4e0a\uff0c\u6587\u4ef6\u540d\u53ef\u4ee5\u4ee5 . \u5f00\u5934\uff0c\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u9690\u85cf\u6587\u4ef6\uff0c\u50cf .gitignore \u8fd9\u6837\u7684\u6587\u4ef6\u540d\uff0c . \u540e\u9762\u5e76\u4e0d\u662f\u540e\u7f00\u540d\uff0c\u8fd9\u4e2a\u6587\u4ef6\u6ca1\u6709\u540e\u7f00\u540d\u6216\u8005\u8bf4\u540e\u7f00\u540d\u4e3a '' \u3002 def get_suffix ( filename , ignore_dot = True ): \"\"\"\u83b7\u53d6\u6587\u4ef6\u540d\u7684\u540e\u7f00\u540d :param filename: \u6587\u4ef6\u540d :param ignore_dot: \u662f\u5426\u5ffd\u7565\u540e\u7f00\u540d\u524d\u9762\u7684\u70b9 :return: \u6587\u4ef6\u7684\u540e\u7f00\u540d \"\"\" # \u4ece\u5b57\u7b26\u4e32\u4e2d\u9006\u5411\u67e5\u627e.\u51fa\u73b0\u7684\u4f4d\u7f6e pos = filename . rfind ( '.' ) # \u901a\u8fc7\u5207\u7247\u64cd\u4f5c\u4ece\u6587\u4ef6\u540d\u4e2d\u53d6\u51fa\u540e\u7f00\u540d if pos <= 0 : return '' return filename [ pos + 1 :] if ignore_dot else filename [ pos :] \u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u5bf9\u4e0a\u9762\u7684\u51fd\u6570\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u9a8c\u3002 print ( get_suffix ( 'readme.txt' )) # txt print ( get_suffix ( 'readme.txt.md' )) # md print ( get_suffix ( '.readme' )) # print ( get_suffix ( 'readme.' )) # print ( get_suffix ( 'readme' )) # \u4e0a\u9762\u7684 get_suffix \u51fd\u6570\u8fd8\u6709\u4e00\u4e2a\u66f4\u4e3a\u4fbf\u6377\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5c31\u662f\u76f4\u63a5\u4f7f\u7528 os.path \u6a21\u5757\u7684 splitext \u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5c06\u6587\u4ef6\u540d\u62c6\u5206\u6210\u5e26\u8def\u5f84\u7684\u6587\u4ef6\u540d\u548c\u6269\u5c55\u540d\u4e24\u4e2a\u90e8\u5206\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff0c\u4e8c\u5143\u7ec4\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5c31\u662f\u6587\u4ef6\u7684\u540e\u7f00\u540d\uff08\u5305\u542b . \uff09\uff0c\u5982\u679c\u8981\u53bb\u6389\u540e\u7f00\u540d\u4e2d\u7684 . \uff0c\u53ef\u4ee5\u505a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5207\u7247\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from os.path import splitext def get_suffix ( filename , ignore_dot = True ): return splitext ( filename )[ 1 ][ 1 :] \u601d\u8003 \uff1a\u5982\u679c\u8981\u7ed9\u4e0a\u9762\u7684\u51fd\u6570\u589e\u52a0\u4e00\u4e2a\u53c2\u6570\uff0c\u7528\u6765\u63a7\u5236\u6587\u4ef6\u7684\u540e\u7f00\u540d\u662f\u5426\u5305\u542b . \uff0c\u5e94\u8be5\u600e\u4e48\u505a\uff1f","title":"\u6848\u4f8b2\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u7ed9\u5b9a\u6587\u4ef6\u7684\u540e\u7f00\u540d\u3002"},{"location":"%E7%AC%AC14%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8/#3","text":"def is_prime ( num : int ) -> bool : \"\"\"\u5224\u65ad\u4e00\u4e2a\u6b63\u6574\u6570\u662f\u4e0d\u662f\u8d28\u6570 :param num: \u6b63\u6574\u6570 :return: \u5982\u679c\u662f\u8d28\u6570\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse \"\"\" for i in range ( 2 , int ( num ** 0.5 ) + 1 ): if num % i == 0 : return False return num != 1","title":"\u6848\u4f8b3\uff1a\u5199\u4e00\u4e2a\u5224\u65ad\u7ed9\u5b9a\u7684\u6b63\u6574\u6570\u662f\u4e0d\u662f\u8d28\u6570\u7684\u51fd\u6570\u3002"},{"location":"%E7%AC%AC14%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8/#4","text":"\u4ee3\u7801\u4e00\uff1a def gcd_and_lcm ( x : int , y : int ) -> int : \"\"\"\u6c42\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\"\"\" a , b = x , y while b % a != 0 : a , b = b % a , a return a , x * y // a \u4ee3\u7801\u4e8c\uff1a def gcd ( x : int , y : int ) -> int : \"\"\"\u6c42\u6700\u5927\u516c\u7ea6\u6570\"\"\" while y % x != 0 : x , y = y % x , x return x def lcm ( x : int , y : int ) -> int : \"\"\"\u6c42\u6700\u5c0f\u516c\u500d\u6570\"\"\" return x * y // gcd ( x , y ) \u601d\u8003 \uff1a\u8bf7\u6bd4\u8f83\u4e0a\u9762\u7684\u4ee3\u7801\u4e00\u548c\u4ee3\u7801\u4e8c\uff0c\u60f3\u60f3\u54ea\u79cd\u505a\u6cd5\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002","title":"\u6848\u4f8b4\uff1a\u5199\u51fa\u8ba1\u7b97\u4e24\u4e2a\u6b63\u6574\u6570\u6700\u5927\u516c\u7ea6\u6570\u548c\u6700\u5c0f\u516c\u500d\u6570\u7684\u51fd\u6570\u3002"},{"location":"%E7%AC%AC14%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8/#5","text":"import math def ptp ( data ): \"\"\"\u6c42\u6781\u5dee\uff08\u5168\u8ddd\uff09\"\"\" return max ( data ) - min ( data ) def average ( data ): \"\"\"\u6c42\u5747\u503c\"\"\" return sum ( data ) / len ( data ) def variance ( data ): \"\"\"\u6c42\u65b9\u5dee\"\"\" x_bar = average ( data ) temp = [( num - x_bar ) ** 2 for num in data ] return sum ( temp ) / ( len ( temp ) - 1 ) def standard_deviation ( data ): \"\"\"\u6c42\u6807\u51c6\u5dee\"\"\" return math . sqrt ( variance ( data )) def median ( data ): \"\"\"\u627e\u4e2d\u4f4d\u6570\"\"\" temp , size = sorted ( data ), len ( data ) if size % 2 != 0 : return temp [ size // 2 ] else : return average ( temp [ size // 2 - 1 : size // 2 + 1 ])","title":"\u6848\u4f8b5\uff1a\u5199\u51fa\u8ba1\u7b97\u4e00\u7ec4\u6837\u672c\u6570\u636e\u63cf\u8ff0\u6027\u7edf\u8ba1\u4fe1\u606f\u7684\u51fd\u6570\u3002"},{"location":"%E7%AC%AC14%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8/#_2","text":"\u5728\u5199\u4ee3\u7801\u5c24\u5176\u662f\u5f00\u53d1\u5546\u4e1a\u9879\u76ee\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u8981\u6709\u610f\u8bc6\u7684 \u5c06\u76f8\u5bf9\u72ec\u7acb\u4e14\u91cd\u590d\u51fa\u73b0\u7684\u529f\u80fd\u5c01\u88c5\u6210\u51fd\u6570 \uff0c\u8fd9\u6837\u4e0d\u7ba1\u662f\u81ea\u5df1\u8fd8\u662f\u56e2\u961f\u7684\u5176\u4ed6\u6210\u5458\u90fd\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u51fd\u6570\u7684\u65b9\u5f0f\u6765\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC15%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E8%BF%9B%E9%98%B6/","text":"\u7b2c15\u8bfe\uff1a\u51fd\u6570\u4f7f\u7528\u8fdb\u9636 \u524d\u9762\u6211\u4eec\u8bb2\u5230\u4e86\u5173\u4e8e\u51fd\u6570\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u8fd8\u8bb2\u5230\u8fc7Python\u4e2d\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b\uff0c\u8fd9\u4e9b\u7c7b\u578b\u7684\u53d8\u91cf\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u6216\u8fd4\u56de\u503c\uff0c\u7528\u597d\u51fd\u6570\u8fd8\u53ef\u4ee5\u8ba9\u6211\u4eec\u505a\u66f4\u591a\u7684\u4e8b\u60c5\u3002 \u5173\u952e\u5b57\u53c2\u6570 \u4e0b\u9762\u662f\u4e00\u4e2a\u5224\u65ad\u4f20\u5165\u7684\u4e09\u6761\u8fb9\u957f\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62\u7684\u51fd\u6570\uff0c\u5728\u8c03\u7528\u51fd\u6570\u4f20\u5165\u53c2\u6570\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u53c2\u6570\u540d\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u6307\u5b9a\u53c2\u6570\u540d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def is_triangle ( a , b , c ): print ( f 'a = { a } , b = { b } , c = { c } ' ) return a + b > c and b + c > a and a + c > b # \u8c03\u7528\u51fd\u6570\u4f20\u5165\u53c2\u6570\u4e0d\u6307\u5b9a\u53c2\u6570\u540d\u6309\u4f4d\u7f6e\u5bf9\u53f7\u5165\u5ea7 print ( is_triangle ( 1 , 2 , 3 )) # \u8c03\u7528\u51fd\u6570\u901a\u8fc7\u201c\u53c2\u6570\u540d=\u53c2\u6570\u503c\u201d\u7684\u5f62\u5f0f\u6309\u987a\u5e8f\u4f20\u5165\u53c2\u6570 print ( is_triangle ( a = 1 , b = 2 , c = 3 )) # \u8c03\u7528\u51fd\u6570\u901a\u8fc7\u201c\u53c2\u6570\u540d=\u53c2\u6570\u503c\u201d\u7684\u5f62\u5f0f\u4e0d\u6309\u987a\u5e8f\u4f20\u5165\u53c2\u6570 print ( is_triangle ( c = 3 , a = 1 , b = 2 )) \u5728\u6ca1\u6709\u7279\u6b8a\u5904\u7406\u7684\u60c5\u51b5\u4e0b\uff0c\u51fd\u6570\u7684\u53c2\u6570\u90fd\u662f \u4f4d\u7f6e\u53c2\u6570 \uff0c\u4e5f\u5c31\u610f\u5473\u7740\u4f20\u5165\u53c2\u6570\u7684\u65f6\u5019\u5bf9\u53f7\u5165\u5ea7\u5373\u53ef\uff0c\u5982\u4e0a\u9762\u4ee3\u7801\u7684\u7b2c7\u884c\u6240\u793a\uff0c\u4f20\u5165\u7684\u53c2\u6570\u503c 1 \u3001 2 \u3001 3 \u4f1a\u4f9d\u6b21\u8d4b\u503c\u7ed9\u53c2\u6570 a \u3001 b \u3001 c \u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u53c2\u6570\u540d=\u53c2\u6570\u503c \u7684\u65b9\u5f0f\u4f20\u5165\u51fd\u6570\u6240\u9700\u7684\u53c2\u6570\uff0c\u56e0\u4e3a\u6307\u5b9a\u4e86\u53c2\u6570\u540d\uff0c\u4f20\u5165\u53c2\u6570\u7684\u987a\u5e8f\u53ef\u4ee5\u8fdb\u884c\u8c03\u6574\uff0c\u5982\u4e0a\u9762\u4ee3\u7801\u7684\u7b2c9\u884c\u548c\u7b2c11\u884c\u6240\u793a\u3002 \u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5982\u679c\u5e0c\u671b\u51fd\u6570\u7684\u8c03\u7528\u8005\u5fc5\u987b\u4ee5 \u53c2\u6570\u540d=\u53c2\u6570\u503c \u7684\u65b9\u5f0f\u4f20\u53c2\uff0c\u53ef\u4ee5\u7528 \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570 \uff08keyword-only argument\uff09\u53d6\u4ee3\u4f4d\u7f6e\u53c2\u6570\u3002\u6240\u8c13\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\uff0c\u662f\u5728\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e2d\uff0c\u5199\u5728 * \u4e4b\u540e\u7684\u53c2\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def is_triangle ( * , a , b , c ): print ( f 'a = { a } , b = { b } , c = { c } ' ) return a + b > c and b + c > a and a + c > b # TypeError: is_triangle() takes 0 positional arguments but 3 were given # print(is_triangle(3, 4, 5)) # \u4f20\u53c2\u65f6\u5fc5\u987b\u4f7f\u7528\u201c\u53c2\u6570\u540d=\u53c2\u6570\u503c\u201d\u7684\u65b9\u5f0f\uff0c\u4f4d\u7f6e\u4e0d\u91cd\u8981 print ( is_triangle ( a = 3 , b = 4 , c = 5 )) print ( is_triangle ( c = 5 , b = 4 , a = 3 )) \u6ce8\u610f \uff1a\u4e0a\u9762\u7684 is_triangle \u51fd\u6570\uff0c\u53c2\u6570\u5217\u8868\u4e2d\u7684 * \u662f\u4e00\u4e2a\u5206\u9694\u7b26\uff0c * \u524d\u9762\u7684\u53c2\u6570\u90fd\u662f\u4f4d\u7f6e\u53c2\u6570\uff0c\u800c * \u540e\u9762\u7684\u53c2\u6570\u5c31\u662f\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u3002 \u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\u5728\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e2d\u53ef\u4ee5\u4f7f\u7528 \u53ef\u53d8\u53c2\u6570 *args \u6765\u63a5\u6536\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u770b\u770b\uff0c *args \u662f\u5426\u80fd\u591f\u63a5\u6536\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\u3002 def calc ( * args ): result = 0 for arg in args : if type ( arg ) in ( int , float ): result += arg return result print ( calc ( a = 1 , b = 2 , c = 3 )) \u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u5f15\u53d1 TypeError \u9519\u8bef\uff0c\u9519\u8bef\u6d88\u606f\u4e3a calc() got an unexpected keyword argument 'a' \uff0c\u7531\u6b64\u53ef\u89c1\uff0c *args \u5e76\u4e0d\u80fd\u5904\u7406\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\u3002\u6211\u4eec\u5728\u8bbe\u8ba1\u51fd\u6570\u65f6\uff0c\u5982\u679c\u65e2\u4e0d\u77e5\u9053\u8c03\u7528\u8005\u4f1a\u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\uff0c\u4e5f\u4e0d\u77e5\u9053\u8c03\u7528\u8005\u4f1a\u4e0d\u4f1a\u6307\u5b9a\u53c2\u6570\u540d\uff0c\u90a3\u4e48\u540c\u65f6\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u548c \u5173\u952e\u5b57\u53c2\u6570 \u3002\u5173\u952e\u5b57\u53c2\u6570\u4f1a\u5c06\u4f20\u5165\u7684\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\u7ec4\u88c5\u6210\u4e00\u4e2a\u5b57\u5178\uff0c\u53c2\u6570\u540d\u5c31\u662f\u5b57\u5178\u4e2d\u952e\u503c\u5bf9\u7684\u952e\uff0c\u800c\u53c2\u6570\u503c\u5c31\u662f\u5b57\u5178\u4e2d\u952e\u503c\u5bf9\u7684\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def calc ( * args , ** kwargs ): result = 0 for arg in args : if type ( arg ) in ( int , float ): result += arg for value in kwargs . values (): if type ( value ) in ( int , float ): result += value return result print ( calc ()) # 0 print ( calc ( 1 , 2 , 3 )) # 6 print ( calc ( a = 1 , b = 2 , c = 3 )) # 6 print ( calc ( 1 , 2 , c = 3 , d = 4 )) # 10 \u63d0\u793a \uff1a \u4e0d\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\uff08\u4f4d\u7f6e\u53c2\u6570\uff09\u5fc5\u987b\u51fa\u73b0\u5728\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\uff08\u5173\u952e\u5b57\u53c2\u6570\uff09\u4e4b\u524d \uff0c\u5426\u5219\u5c06\u4f1a\u5f15\u53d1\u5f02\u5e38\u3002\u4f8b\u5982\uff0c\u6267\u884c calc(1, 2, c=3, d=4, 5) \u5c06\u4f1a\u5f15\u53d1 SyntaxError \u9519\u8bef\uff0c\u9519\u8bef\u6d88\u606f\u4e3a positional argument follows keyword argument \uff0c\u7ffb\u8bd1\u6210\u4e2d\u6587\u610f\u601d\u662f\u201c\u4f4d\u7f6e\u53c2\u6570\u51fa\u73b0\u5728\u5173\u952e\u5b57\u53c2\u6570\u4e4b\u540e\u201d\u3002 \u9ad8\u9636\u51fd\u6570\u7684\u7528\u6cd5 \u5728\u524d\u9762\u51e0\u8282\u8bfe\u4e2d\uff0c\u6211\u4eec\u8bb2\u5230\u4e86\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u5728\u9762\u5411\u5bf9\u8c61\u7684\u4e16\u754c\u4e2d\uff0c\u4e00\u5207\u7686\u4e3a\u5bf9\u8c61\uff0c\u6240\u4ee5\u7c7b\u548c\u51fd\u6570\u4e5f\u662f\u5bf9\u8c61\u3002\u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u8fd9\u5c31\u610f\u5473\u7740 \u51fd\u6570\u672c\u8eab\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u6216\u8fd4\u56de\u503c \uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684 \u9ad8\u9636\u51fd\u6570 \u3002 \u5982\u679c\u6211\u4eec\u5e0c\u671b\u4e0a\u9762\u7684 calc \u51fd\u6570\u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u505a\u591a\u4e2a\u53c2\u6570\u6c42\u548c\uff0c\u8fd8\u53ef\u4ee5\u505a\u591a\u4e2a\u53c2\u6570\u6c42\u4e58\u79ef\u751a\u81f3\u66f4\u591a\u7684\u4e8c\u5143\u8fd0\u7b97\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u9ad8\u9636\u51fd\u6570\u7684\u65b9\u5f0f\u6765\u6539\u5199\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5c06\u52a0\u6cd5\u8fd0\u7b97\u4ece\u51fd\u6570\u4e2d\u79fb\u9664\u6389\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u5982\u4e0b\u6240\u793a\u3002 def calc ( * args , init_value , op , ** kwargs ): result = init_value for arg in args : if type ( arg ) in ( int , float ): result = op ( result , arg ) for value in kwargs . values (): if type ( value ) in ( int , float ): result = op ( result , value ) return result \u6ce8\u610f\uff0c\u4e0a\u9762\u7684\u51fd\u6570\u589e\u52a0\u4e86\u4e24\u4e2a\u53c2\u6570\uff0c\u5176\u4e2d init_value \u4ee3\u8868\u8fd0\u7b97\u7684\u521d\u59cb\u503c\uff0c op \u4ee3\u8868\u4e8c\u5143\u8fd0\u7b97\u51fd\u6570\u3002\u7ecf\u8fc7\u6539\u9020\u7684 calc \u51fd\u6570\u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u53c2\u6570\u7684\u7d2f\u52a0\u6c42\u548c\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u53c2\u6570\u7684\u7d2f\u4e58\u8fd0\u7b97\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def add ( x , y ): return x + y def mul ( x , y ): return x * y print ( calc ( 1 , 2 , 3 , init_value = 0 , op = add , x = 4 , y = 5 )) # 15 print ( calc ( 1 , 2 , x = 3 , y = 4 , z = 5 , init_value = 1 , op = mul )) # 120 \u901a\u8fc7\u5bf9\u9ad8\u9636\u51fd\u6570\u7684\u8fd0\u7528\uff0c calc \u51fd\u6570\u4e0d\u518d\u548c\u52a0\u6cd5\u8fd0\u7b97\u8026\u5408\uff0c\u6240\u4ee5\u7075\u6d3b\u6027\u548c\u901a\u7528\u6027\u4f1a\u53d8\u5f3a\uff0c\u8fd9\u662f\u4e00\u79cd\u89e3\u8026\u5408\u7684\u7f16\u7a0b\u6280\u5de7\uff0c\u4f46\u662f\u6700\u521d\u5b66\u8005\u6765\u8bf4\u53ef\u80fd\u4f1a\u7a0d\u5fae\u6709\u70b9\u96be\u4ee5\u7406\u89e3\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u548c\u8c03\u7528\u51fd\u6570\u662f\u6709\u663e\u8457\u7684\u533a\u522b\u7684\uff0c \u8c03\u7528\u51fd\u6570\u9700\u8981\u5728\u51fd\u6570\u540d\u540e\u9762\u8ddf\u4e0a\u5706\u62ec\u53f7\uff0c\u800c\u628a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u65f6\u53ea\u9700\u8981\u51fd\u6570\u540d\u5373\u53ef \u3002\u4e0a\u9762\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u4e0d\u7528\u5b9a\u4e49 add \u548c mul \u51fd\u6570\uff0c\u56e0\u4e3aPython\u6807\u51c6\u5e93\u4e2d\u7684 operator \u6a21\u5757\u63d0\u4f9b\u4e86\u4ee3\u8868\u52a0\u6cd5\u8fd0\u7b97\u7684 add \u548c\u4ee3\u8868\u4e58\u6cd5\u8fd0\u7b97\u7684 mul \u51fd\u6570\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u5373\u53ef\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import operator print ( calc ( 1 , 2 , 3 , init_value = 0 , op = operator . add , x = 4 , y = 5 )) # 15 print ( calc ( 1 , 2 , x = 3 , y = 4 , z = 5 , init_value = 1 , op = operator . mul )) # 120 Python\u5185\u7f6e\u51fd\u6570\u4e2d\u6709\u4e0d\u5c11\u9ad8\u9636\u51fd\u6570\uff0c\u6211\u4eec\u524d\u9762\u63d0\u5230\u8fc7\u7684 filter \u548c map \u51fd\u6570\u5c31\u662f\u9ad8\u9636\u51fd\u6570\uff0c\u524d\u8005\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u5e8f\u5217\u4e2d\u5143\u7d20\u7684\u8fc7\u6ee4\uff0c\u540e\u8005\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u5e8f\u5217\u4e2d\u5143\u7d20\u7684\u6620\u5c04\uff0c\u4f8b\u5982\u6211\u4eec\u8981\u53bb\u6389\u4e00\u4e2a\u6574\u6570\u5217\u8868\u4e2d\u7684\u5947\u6570\uff0c\u5e76\u5bf9\u6240\u6709\u7684\u5076\u6570\u6c42\u5e73\u65b9\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u5217\u8868\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u6765\u505a\u5230\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u662f\u5982\u4e0b\u6240\u793a\u3002 def is_even ( num ): return num % 2 == 0 def square ( num ): return num ** 2 numbers1 = [ 35 , 12 , 8 , 99 , 60 , 52 ] numbers2 = list ( map ( square , filter ( is_even , numbers1 ))) print ( numbers2 ) # [144, 64, 3600, 2704] \u5f53\u7136\uff0c\u8981\u5b8c\u6210\u4e0a\u9762\u4ee3\u7801\u7684\u529f\u80fd\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u751f\u6210\u5f0f\uff0c\u5217\u8868\u751f\u6210\u5f0f\u7684\u505a\u6cd5\u66f4\u4e3a\u7b80\u5355\u4f18\u96c5\u3002 numbers1 = [ 35 , 12 , 8 , 99 , 60 , 52 ] numbers2 = [ num ** 2 for num in numbers1 if num % 2 == 0 ] print ( numbers2 ) # [144, 64, 3600, 2704] Lambda\u51fd\u6570 \u5728\u4f7f\u7528\u9ad8\u9636\u51fd\u6570\u7684\u65f6\u5019\uff0c\u5982\u679c\u4f5c\u4e3a\u53c2\u6570\u6216\u8005\u8fd4\u56de\u503c\u7684\u51fd\u6570\u672c\u8eab\u975e\u5e38\u7b80\u5355\uff0c\u4e00\u884c\u4ee3\u7801\u5c31\u80fd\u591f\u5b8c\u6210\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Lambda\u51fd\u6570 \u6765\u8868\u793a\u3002Python\u4e2d\u7684Lambda\u51fd\u6570\u662f\u6ca1\u6709\u7684\u540d\u5b57\u51fd\u6570\uff0c\u6240\u4ee5\u5f88\u591a\u4eba\u4e5f\u628a\u5b83\u53eb\u505a \u533f\u540d\u51fd\u6570 \uff0c\u533f\u540d\u51fd\u6570\u53ea\u80fd\u6709\u4e00\u884c\u4ee3\u7801\uff0c\u4ee3\u7801\u4e2d\u7684\u8868\u8fbe\u5f0f\u4ea7\u751f\u7684\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f\u8fd9\u4e2a\u533f\u540d\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 is_even \u548c square \u51fd\u6570\u90fd\u53ea\u6709\u4e00\u884c\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u7528Lambda\u51fd\u6570\u6765\u66ff\u6362\u6389\u5b83\u4eec\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 numbers1 = [ 35 , 12 , 8 , 99 , 60 , 52 ] numbers2 = list ( map ( lambda x : x ** 2 , filter ( lambda x : x % 2 == 0 , numbers1 ))) print ( numbers2 ) # [144, 64, 3600, 2704] \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5b9a\u4e49Lambda\u51fd\u6570\u7684\u5173\u952e\u5b57\u662f lambda \uff0c\u540e\u9762\u8ddf\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5982\u679c\u6709\u591a\u4e2a\u53c2\u6570\u7528\u9017\u53f7\u8fdb\u884c\u5206\u9694\uff1b\u5192\u53f7\u540e\u9762\u7684\u90e8\u5206\u5c31\u662f\u51fd\u6570\u7684\u6267\u884c\u4f53\uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u7684\u8fd0\u7b97\u7ed3\u679c\u5c31\u662fLambda\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u4e0d\u9700\u8981\u5199 return \u5173\u952e\u5b57\u3002 \u5982\u679c\u9700\u8981\u4f7f\u7528\u52a0\u51cf\u4e58\u9664\u8fd9\u79cd\u7b80\u5355\u7684\u4e8c\u5143\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u7528Lambda\u51fd\u6570\u6765\u4e66\u5199\uff0c\u4f8b\u5982\u8c03\u7528\u4e0a\u9762\u7684 calc \u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f20\u5165Lambda\u51fd\u6570\u6765\u4f5c\u4e3a op \u53c2\u6570\u7684\u53c2\u6570\u503c\u3002\u5f53\u7136\uff0c op \u53c2\u6570\u4e5f\u53ef\u4ee5\u6709\u9ed8\u8ba4\u503c\uff0c\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4ee3\u8868\u52a0\u6cd5\u8fd0\u7b97\u7684Lambda\u51fd\u6570\u6765\u4f5c\u4e3a op \u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u3002 def calc ( * args , init_value = 0 , op = lambda x , y : x + y , ** kwargs ): result = init_value for arg in args : if type ( arg ) in ( int , float ): result = op ( result , arg ) for value in kwargs . values (): if type ( value ) in ( int , float ): result = op ( result , value ) return result # \u8c03\u7528calc\u51fd\u6570\uff0c\u4f7f\u7528init_value\u548cop\u7684\u9ed8\u8ba4\u503c print ( calc ( 1 , 2 , 3 , x = 4 , y = 5 )) # 15 # \u8c03\u7528calc\u51fd\u6570\uff0c\u901a\u8fc7lambda\u51fd\u6570\u7ed9op\u53c2\u6570\u8d4b\u503c print ( calc ( 1 , 2 , 3 , x = 4 , y = 5 , init_value = 1 , op = lambda x , y : x * y )) # 120 \u63d0\u793a \uff1a\u6ce8\u610f\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u7684 calc \u51fd\u6570\uff0c\u5b83\u540c\u65f6\u4f7f\u7528\u4e86\u53ef\u53d8\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\u3001\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\uff0c\u5176\u4e2d\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u8981\u653e\u5728\u53ef\u53d8\u53c2\u6570\u548c\u5173\u952e\u5b57\u53c2\u6570\u4e4b\u95f4\uff0c\u4f20\u53c2\u65f6\u5148\u4f20\u5165\u53ef\u53d8\u53c2\u6570\uff0c\u5173\u952e\u5b57\u53c2\u6570\u548c\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u7684\u5148\u540e\u987a\u5e8f\u5e76\u4e0d\u91cd\u8981\u3002 \u6709\u5f88\u591a\u51fd\u6570\u5728Python\u4e2d\u7528\u4e00\u884c\u4ee3\u7801\u5c31\u80fd\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u7528Lambda\u51fd\u6570\u6765\u5b9a\u4e49\u8fd9\u4e9b\u51fd\u6570\uff0c\u8c03\u7528Lambda\u51fd\u6570\u5c31\u8ddf\u8c03\u7528\u666e\u901a\u51fd\u6570\u4e00\u6837\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import operator , functools # \u4e00\u884c\u4ee3\u7801\u5b9a\u4e49\u6c42\u9636\u4e58\u7684\u51fd\u6570 fac = lambda num : functools . reduce ( operator . mul , range ( 1 , num + 1 ), 1 ) # \u4e00\u884c\u4ee3\u7801\u5b9a\u4e49\u5224\u65ad\u7d20\u6570\u7684\u51fd\u6570 is_prime = lambda x : x > 1 and all ( map ( lambda f : x % f , range ( 2 , int ( x ** 0.5 ) + 1 ))) # \u8c03\u7528Lambda\u51fd\u6570 print ( fac ( 10 )) # 3628800 print ( is_prime ( 9 )) # False \u63d0\u793a1 \uff1a\u4e0a\u9762\u4f7f\u7528\u7684 reduce \u51fd\u6570\u662fPython\u6807\u51c6\u5e93 functools \u6a21\u5757\u4e2d\u7684\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u6570\u636e\u7684\u5f52\u7ea6\u64cd\u4f5c\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c \u8fc7\u6ee4 \uff08filter\uff09\u3001 \u6620\u5c04 \uff08map\uff09\u548c \u5f52\u7ea6 \uff08reduce\uff09\u662f\u5904\u7406\u6570\u636e\u4e2d\u975e\u5e38\u5173\u952e\u7684\u4e09\u4e2a\u6b65\u9aa4\uff0c\u800cPython\u7684\u6807\u51c6\u5e93\u4e5f\u63d0\u4f9b\u4e86\u5bf9\u8fd9\u4e09\u4e2a\u64cd\u4f5c\u7684\u652f\u6301\u3002 \u63d0\u793a2 \uff1a\u4e0a\u9762\u4f7f\u7528\u7684 all \u51fd\u6570\u662fPython\u5185\u7f6e\u51fd\u6570\uff0c\u5982\u679c\u4f20\u5165\u7684\u5e8f\u5217\u4e2d\u6240\u6709\u5e03\u5c14\u503c\u90fd\u662f True \uff0c all \u51fd\u6570\u5c31\u8fd4\u56de True \uff0c\u5426\u5219 all \u51fd\u6570\u5c31\u8fd4\u56de False \u3002 \u7b80\u5355\u7684\u603b\u7ed3 Python\u4e2d\u7684\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u53ef\u53d8\u53c2\u6570 *args \u548c\u5173\u952e\u5b57\u53c2\u6570 **kwargs \u6765\u63a5\u6536\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff0c\u800c\u4e14\u4f20\u5165\u53c2\u6570\u65f6\u53ef\u4ee5\u5e26\u4e0a\u53c2\u6570\u540d\u4e5f\u53ef\u4ee5\u6ca1\u6709\u53c2\u6570\u540d\uff0c\u53ef\u53d8\u53c2\u6570\u4f1a\u88ab\u5904\u7406\u6210\u4e00\u4e2a\u5143\u7ec4\uff0c\u800c\u5173\u952e\u5b57\u53c2\u6570\u4f1a\u88ab\u5904\u7406\u6210\u4e00\u4e2a\u5b57\u5178\u3002 Python\u4e2d\u7684\u51fd\u6570\u662f\u4e00\u7b49\u51fd\u6570\uff0c\u53ef\u4ee5\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c \uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5728Python\u4e2d\u4f7f\u7528\u9ad8\u9636\u51fd\u6570\u3002\u5982\u679c\u6211\u4eec\u8981\u5b9a\u4e49\u7684\u51fd\u6570\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u6709\u4e00\u884c\u4ee3\u7801\u4e14\u4e0d\u9700\u8981\u51fd\u6570\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528Lambda\u51fd\u6570\uff08\u533f\u540d\u51fd\u6570\uff09\u3002","title":"\u7b2c15\u8bfe\uff1a\u51fd\u6570\u4f7f\u7528\u8fdb\u9636"},{"location":"%E7%AC%AC15%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E8%BF%9B%E9%98%B6/#15","text":"\u524d\u9762\u6211\u4eec\u8bb2\u5230\u4e86\u5173\u4e8e\u51fd\u6570\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u8fd8\u8bb2\u5230\u8fc7Python\u4e2d\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b\uff0c\u8fd9\u4e9b\u7c7b\u578b\u7684\u53d8\u91cf\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u6216\u8fd4\u56de\u503c\uff0c\u7528\u597d\u51fd\u6570\u8fd8\u53ef\u4ee5\u8ba9\u6211\u4eec\u505a\u66f4\u591a\u7684\u4e8b\u60c5\u3002","title":"\u7b2c15\u8bfe\uff1a\u51fd\u6570\u4f7f\u7528\u8fdb\u9636"},{"location":"%E7%AC%AC15%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E8%BF%9B%E9%98%B6/#_1","text":"\u4e0b\u9762\u662f\u4e00\u4e2a\u5224\u65ad\u4f20\u5165\u7684\u4e09\u6761\u8fb9\u957f\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62\u7684\u51fd\u6570\uff0c\u5728\u8c03\u7528\u51fd\u6570\u4f20\u5165\u53c2\u6570\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u53c2\u6570\u540d\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u6307\u5b9a\u53c2\u6570\u540d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def is_triangle ( a , b , c ): print ( f 'a = { a } , b = { b } , c = { c } ' ) return a + b > c and b + c > a and a + c > b # \u8c03\u7528\u51fd\u6570\u4f20\u5165\u53c2\u6570\u4e0d\u6307\u5b9a\u53c2\u6570\u540d\u6309\u4f4d\u7f6e\u5bf9\u53f7\u5165\u5ea7 print ( is_triangle ( 1 , 2 , 3 )) # \u8c03\u7528\u51fd\u6570\u901a\u8fc7\u201c\u53c2\u6570\u540d=\u53c2\u6570\u503c\u201d\u7684\u5f62\u5f0f\u6309\u987a\u5e8f\u4f20\u5165\u53c2\u6570 print ( is_triangle ( a = 1 , b = 2 , c = 3 )) # \u8c03\u7528\u51fd\u6570\u901a\u8fc7\u201c\u53c2\u6570\u540d=\u53c2\u6570\u503c\u201d\u7684\u5f62\u5f0f\u4e0d\u6309\u987a\u5e8f\u4f20\u5165\u53c2\u6570 print ( is_triangle ( c = 3 , a = 1 , b = 2 )) \u5728\u6ca1\u6709\u7279\u6b8a\u5904\u7406\u7684\u60c5\u51b5\u4e0b\uff0c\u51fd\u6570\u7684\u53c2\u6570\u90fd\u662f \u4f4d\u7f6e\u53c2\u6570 \uff0c\u4e5f\u5c31\u610f\u5473\u7740\u4f20\u5165\u53c2\u6570\u7684\u65f6\u5019\u5bf9\u53f7\u5165\u5ea7\u5373\u53ef\uff0c\u5982\u4e0a\u9762\u4ee3\u7801\u7684\u7b2c7\u884c\u6240\u793a\uff0c\u4f20\u5165\u7684\u53c2\u6570\u503c 1 \u3001 2 \u3001 3 \u4f1a\u4f9d\u6b21\u8d4b\u503c\u7ed9\u53c2\u6570 a \u3001 b \u3001 c \u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u53c2\u6570\u540d=\u53c2\u6570\u503c \u7684\u65b9\u5f0f\u4f20\u5165\u51fd\u6570\u6240\u9700\u7684\u53c2\u6570\uff0c\u56e0\u4e3a\u6307\u5b9a\u4e86\u53c2\u6570\u540d\uff0c\u4f20\u5165\u53c2\u6570\u7684\u987a\u5e8f\u53ef\u4ee5\u8fdb\u884c\u8c03\u6574\uff0c\u5982\u4e0a\u9762\u4ee3\u7801\u7684\u7b2c9\u884c\u548c\u7b2c11\u884c\u6240\u793a\u3002 \u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5982\u679c\u5e0c\u671b\u51fd\u6570\u7684\u8c03\u7528\u8005\u5fc5\u987b\u4ee5 \u53c2\u6570\u540d=\u53c2\u6570\u503c \u7684\u65b9\u5f0f\u4f20\u53c2\uff0c\u53ef\u4ee5\u7528 \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570 \uff08keyword-only argument\uff09\u53d6\u4ee3\u4f4d\u7f6e\u53c2\u6570\u3002\u6240\u8c13\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\uff0c\u662f\u5728\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e2d\uff0c\u5199\u5728 * \u4e4b\u540e\u7684\u53c2\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def is_triangle ( * , a , b , c ): print ( f 'a = { a } , b = { b } , c = { c } ' ) return a + b > c and b + c > a and a + c > b # TypeError: is_triangle() takes 0 positional arguments but 3 were given # print(is_triangle(3, 4, 5)) # \u4f20\u53c2\u65f6\u5fc5\u987b\u4f7f\u7528\u201c\u53c2\u6570\u540d=\u53c2\u6570\u503c\u201d\u7684\u65b9\u5f0f\uff0c\u4f4d\u7f6e\u4e0d\u91cd\u8981 print ( is_triangle ( a = 3 , b = 4 , c = 5 )) print ( is_triangle ( c = 5 , b = 4 , a = 3 )) \u6ce8\u610f \uff1a\u4e0a\u9762\u7684 is_triangle \u51fd\u6570\uff0c\u53c2\u6570\u5217\u8868\u4e2d\u7684 * \u662f\u4e00\u4e2a\u5206\u9694\u7b26\uff0c * \u524d\u9762\u7684\u53c2\u6570\u90fd\u662f\u4f4d\u7f6e\u53c2\u6570\uff0c\u800c * \u540e\u9762\u7684\u53c2\u6570\u5c31\u662f\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u3002 \u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\u5728\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e2d\u53ef\u4ee5\u4f7f\u7528 \u53ef\u53d8\u53c2\u6570 *args \u6765\u63a5\u6536\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u770b\u770b\uff0c *args \u662f\u5426\u80fd\u591f\u63a5\u6536\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\u3002 def calc ( * args ): result = 0 for arg in args : if type ( arg ) in ( int , float ): result += arg return result print ( calc ( a = 1 , b = 2 , c = 3 )) \u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u5f15\u53d1 TypeError \u9519\u8bef\uff0c\u9519\u8bef\u6d88\u606f\u4e3a calc() got an unexpected keyword argument 'a' \uff0c\u7531\u6b64\u53ef\u89c1\uff0c *args \u5e76\u4e0d\u80fd\u5904\u7406\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\u3002\u6211\u4eec\u5728\u8bbe\u8ba1\u51fd\u6570\u65f6\uff0c\u5982\u679c\u65e2\u4e0d\u77e5\u9053\u8c03\u7528\u8005\u4f1a\u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\uff0c\u4e5f\u4e0d\u77e5\u9053\u8c03\u7528\u8005\u4f1a\u4e0d\u4f1a\u6307\u5b9a\u53c2\u6570\u540d\uff0c\u90a3\u4e48\u540c\u65f6\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u548c \u5173\u952e\u5b57\u53c2\u6570 \u3002\u5173\u952e\u5b57\u53c2\u6570\u4f1a\u5c06\u4f20\u5165\u7684\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\u7ec4\u88c5\u6210\u4e00\u4e2a\u5b57\u5178\uff0c\u53c2\u6570\u540d\u5c31\u662f\u5b57\u5178\u4e2d\u952e\u503c\u5bf9\u7684\u952e\uff0c\u800c\u53c2\u6570\u503c\u5c31\u662f\u5b57\u5178\u4e2d\u952e\u503c\u5bf9\u7684\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def calc ( * args , ** kwargs ): result = 0 for arg in args : if type ( arg ) in ( int , float ): result += arg for value in kwargs . values (): if type ( value ) in ( int , float ): result += value return result print ( calc ()) # 0 print ( calc ( 1 , 2 , 3 )) # 6 print ( calc ( a = 1 , b = 2 , c = 3 )) # 6 print ( calc ( 1 , 2 , c = 3 , d = 4 )) # 10 \u63d0\u793a \uff1a \u4e0d\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\uff08\u4f4d\u7f6e\u53c2\u6570\uff09\u5fc5\u987b\u51fa\u73b0\u5728\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\uff08\u5173\u952e\u5b57\u53c2\u6570\uff09\u4e4b\u524d \uff0c\u5426\u5219\u5c06\u4f1a\u5f15\u53d1\u5f02\u5e38\u3002\u4f8b\u5982\uff0c\u6267\u884c calc(1, 2, c=3, d=4, 5) \u5c06\u4f1a\u5f15\u53d1 SyntaxError \u9519\u8bef\uff0c\u9519\u8bef\u6d88\u606f\u4e3a positional argument follows keyword argument \uff0c\u7ffb\u8bd1\u6210\u4e2d\u6587\u610f\u601d\u662f\u201c\u4f4d\u7f6e\u53c2\u6570\u51fa\u73b0\u5728\u5173\u952e\u5b57\u53c2\u6570\u4e4b\u540e\u201d\u3002","title":"\u5173\u952e\u5b57\u53c2\u6570"},{"location":"%E7%AC%AC15%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E8%BF%9B%E9%98%B6/#_2","text":"\u5728\u524d\u9762\u51e0\u8282\u8bfe\u4e2d\uff0c\u6211\u4eec\u8bb2\u5230\u4e86\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u5728\u9762\u5411\u5bf9\u8c61\u7684\u4e16\u754c\u4e2d\uff0c\u4e00\u5207\u7686\u4e3a\u5bf9\u8c61\uff0c\u6240\u4ee5\u7c7b\u548c\u51fd\u6570\u4e5f\u662f\u5bf9\u8c61\u3002\u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u8fd9\u5c31\u610f\u5473\u7740 \u51fd\u6570\u672c\u8eab\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u6216\u8fd4\u56de\u503c \uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684 \u9ad8\u9636\u51fd\u6570 \u3002 \u5982\u679c\u6211\u4eec\u5e0c\u671b\u4e0a\u9762\u7684 calc \u51fd\u6570\u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u505a\u591a\u4e2a\u53c2\u6570\u6c42\u548c\uff0c\u8fd8\u53ef\u4ee5\u505a\u591a\u4e2a\u53c2\u6570\u6c42\u4e58\u79ef\u751a\u81f3\u66f4\u591a\u7684\u4e8c\u5143\u8fd0\u7b97\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u9ad8\u9636\u51fd\u6570\u7684\u65b9\u5f0f\u6765\u6539\u5199\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5c06\u52a0\u6cd5\u8fd0\u7b97\u4ece\u51fd\u6570\u4e2d\u79fb\u9664\u6389\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u5982\u4e0b\u6240\u793a\u3002 def calc ( * args , init_value , op , ** kwargs ): result = init_value for arg in args : if type ( arg ) in ( int , float ): result = op ( result , arg ) for value in kwargs . values (): if type ( value ) in ( int , float ): result = op ( result , value ) return result \u6ce8\u610f\uff0c\u4e0a\u9762\u7684\u51fd\u6570\u589e\u52a0\u4e86\u4e24\u4e2a\u53c2\u6570\uff0c\u5176\u4e2d init_value \u4ee3\u8868\u8fd0\u7b97\u7684\u521d\u59cb\u503c\uff0c op \u4ee3\u8868\u4e8c\u5143\u8fd0\u7b97\u51fd\u6570\u3002\u7ecf\u8fc7\u6539\u9020\u7684 calc \u51fd\u6570\u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u53c2\u6570\u7684\u7d2f\u52a0\u6c42\u548c\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u53c2\u6570\u7684\u7d2f\u4e58\u8fd0\u7b97\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def add ( x , y ): return x + y def mul ( x , y ): return x * y print ( calc ( 1 , 2 , 3 , init_value = 0 , op = add , x = 4 , y = 5 )) # 15 print ( calc ( 1 , 2 , x = 3 , y = 4 , z = 5 , init_value = 1 , op = mul )) # 120 \u901a\u8fc7\u5bf9\u9ad8\u9636\u51fd\u6570\u7684\u8fd0\u7528\uff0c calc \u51fd\u6570\u4e0d\u518d\u548c\u52a0\u6cd5\u8fd0\u7b97\u8026\u5408\uff0c\u6240\u4ee5\u7075\u6d3b\u6027\u548c\u901a\u7528\u6027\u4f1a\u53d8\u5f3a\uff0c\u8fd9\u662f\u4e00\u79cd\u89e3\u8026\u5408\u7684\u7f16\u7a0b\u6280\u5de7\uff0c\u4f46\u662f\u6700\u521d\u5b66\u8005\u6765\u8bf4\u53ef\u80fd\u4f1a\u7a0d\u5fae\u6709\u70b9\u96be\u4ee5\u7406\u89e3\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5c06\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u548c\u8c03\u7528\u51fd\u6570\u662f\u6709\u663e\u8457\u7684\u533a\u522b\u7684\uff0c \u8c03\u7528\u51fd\u6570\u9700\u8981\u5728\u51fd\u6570\u540d\u540e\u9762\u8ddf\u4e0a\u5706\u62ec\u53f7\uff0c\u800c\u628a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u65f6\u53ea\u9700\u8981\u51fd\u6570\u540d\u5373\u53ef \u3002\u4e0a\u9762\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u4e0d\u7528\u5b9a\u4e49 add \u548c mul \u51fd\u6570\uff0c\u56e0\u4e3aPython\u6807\u51c6\u5e93\u4e2d\u7684 operator \u6a21\u5757\u63d0\u4f9b\u4e86\u4ee3\u8868\u52a0\u6cd5\u8fd0\u7b97\u7684 add \u548c\u4ee3\u8868\u4e58\u6cd5\u8fd0\u7b97\u7684 mul \u51fd\u6570\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u5373\u53ef\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import operator print ( calc ( 1 , 2 , 3 , init_value = 0 , op = operator . add , x = 4 , y = 5 )) # 15 print ( calc ( 1 , 2 , x = 3 , y = 4 , z = 5 , init_value = 1 , op = operator . mul )) # 120 Python\u5185\u7f6e\u51fd\u6570\u4e2d\u6709\u4e0d\u5c11\u9ad8\u9636\u51fd\u6570\uff0c\u6211\u4eec\u524d\u9762\u63d0\u5230\u8fc7\u7684 filter \u548c map \u51fd\u6570\u5c31\u662f\u9ad8\u9636\u51fd\u6570\uff0c\u524d\u8005\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u5e8f\u5217\u4e2d\u5143\u7d20\u7684\u8fc7\u6ee4\uff0c\u540e\u8005\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u5e8f\u5217\u4e2d\u5143\u7d20\u7684\u6620\u5c04\uff0c\u4f8b\u5982\u6211\u4eec\u8981\u53bb\u6389\u4e00\u4e2a\u6574\u6570\u5217\u8868\u4e2d\u7684\u5947\u6570\uff0c\u5e76\u5bf9\u6240\u6709\u7684\u5076\u6570\u6c42\u5e73\u65b9\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u5217\u8868\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u6765\u505a\u5230\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u662f\u5982\u4e0b\u6240\u793a\u3002 def is_even ( num ): return num % 2 == 0 def square ( num ): return num ** 2 numbers1 = [ 35 , 12 , 8 , 99 , 60 , 52 ] numbers2 = list ( map ( square , filter ( is_even , numbers1 ))) print ( numbers2 ) # [144, 64, 3600, 2704] \u5f53\u7136\uff0c\u8981\u5b8c\u6210\u4e0a\u9762\u4ee3\u7801\u7684\u529f\u80fd\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u751f\u6210\u5f0f\uff0c\u5217\u8868\u751f\u6210\u5f0f\u7684\u505a\u6cd5\u66f4\u4e3a\u7b80\u5355\u4f18\u96c5\u3002 numbers1 = [ 35 , 12 , 8 , 99 , 60 , 52 ] numbers2 = [ num ** 2 for num in numbers1 if num % 2 == 0 ] print ( numbers2 ) # [144, 64, 3600, 2704]","title":"\u9ad8\u9636\u51fd\u6570\u7684\u7528\u6cd5"},{"location":"%E7%AC%AC15%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E8%BF%9B%E9%98%B6/#lambda","text":"\u5728\u4f7f\u7528\u9ad8\u9636\u51fd\u6570\u7684\u65f6\u5019\uff0c\u5982\u679c\u4f5c\u4e3a\u53c2\u6570\u6216\u8005\u8fd4\u56de\u503c\u7684\u51fd\u6570\u672c\u8eab\u975e\u5e38\u7b80\u5355\uff0c\u4e00\u884c\u4ee3\u7801\u5c31\u80fd\u591f\u5b8c\u6210\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Lambda\u51fd\u6570 \u6765\u8868\u793a\u3002Python\u4e2d\u7684Lambda\u51fd\u6570\u662f\u6ca1\u6709\u7684\u540d\u5b57\u51fd\u6570\uff0c\u6240\u4ee5\u5f88\u591a\u4eba\u4e5f\u628a\u5b83\u53eb\u505a \u533f\u540d\u51fd\u6570 \uff0c\u533f\u540d\u51fd\u6570\u53ea\u80fd\u6709\u4e00\u884c\u4ee3\u7801\uff0c\u4ee3\u7801\u4e2d\u7684\u8868\u8fbe\u5f0f\u4ea7\u751f\u7684\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f\u8fd9\u4e2a\u533f\u540d\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 is_even \u548c square \u51fd\u6570\u90fd\u53ea\u6709\u4e00\u884c\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u7528Lambda\u51fd\u6570\u6765\u66ff\u6362\u6389\u5b83\u4eec\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 numbers1 = [ 35 , 12 , 8 , 99 , 60 , 52 ] numbers2 = list ( map ( lambda x : x ** 2 , filter ( lambda x : x % 2 == 0 , numbers1 ))) print ( numbers2 ) # [144, 64, 3600, 2704] \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5b9a\u4e49Lambda\u51fd\u6570\u7684\u5173\u952e\u5b57\u662f lambda \uff0c\u540e\u9762\u8ddf\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5982\u679c\u6709\u591a\u4e2a\u53c2\u6570\u7528\u9017\u53f7\u8fdb\u884c\u5206\u9694\uff1b\u5192\u53f7\u540e\u9762\u7684\u90e8\u5206\u5c31\u662f\u51fd\u6570\u7684\u6267\u884c\u4f53\uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u7684\u8fd0\u7b97\u7ed3\u679c\u5c31\u662fLambda\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u4e0d\u9700\u8981\u5199 return \u5173\u952e\u5b57\u3002 \u5982\u679c\u9700\u8981\u4f7f\u7528\u52a0\u51cf\u4e58\u9664\u8fd9\u79cd\u7b80\u5355\u7684\u4e8c\u5143\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u7528Lambda\u51fd\u6570\u6765\u4e66\u5199\uff0c\u4f8b\u5982\u8c03\u7528\u4e0a\u9762\u7684 calc \u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f20\u5165Lambda\u51fd\u6570\u6765\u4f5c\u4e3a op \u53c2\u6570\u7684\u53c2\u6570\u503c\u3002\u5f53\u7136\uff0c op \u53c2\u6570\u4e5f\u53ef\u4ee5\u6709\u9ed8\u8ba4\u503c\uff0c\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4ee3\u8868\u52a0\u6cd5\u8fd0\u7b97\u7684Lambda\u51fd\u6570\u6765\u4f5c\u4e3a op \u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u3002 def calc ( * args , init_value = 0 , op = lambda x , y : x + y , ** kwargs ): result = init_value for arg in args : if type ( arg ) in ( int , float ): result = op ( result , arg ) for value in kwargs . values (): if type ( value ) in ( int , float ): result = op ( result , value ) return result # \u8c03\u7528calc\u51fd\u6570\uff0c\u4f7f\u7528init_value\u548cop\u7684\u9ed8\u8ba4\u503c print ( calc ( 1 , 2 , 3 , x = 4 , y = 5 )) # 15 # \u8c03\u7528calc\u51fd\u6570\uff0c\u901a\u8fc7lambda\u51fd\u6570\u7ed9op\u53c2\u6570\u8d4b\u503c print ( calc ( 1 , 2 , 3 , x = 4 , y = 5 , init_value = 1 , op = lambda x , y : x * y )) # 120 \u63d0\u793a \uff1a\u6ce8\u610f\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u7684 calc \u51fd\u6570\uff0c\u5b83\u540c\u65f6\u4f7f\u7528\u4e86\u53ef\u53d8\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\u3001\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\uff0c\u5176\u4e2d\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u8981\u653e\u5728\u53ef\u53d8\u53c2\u6570\u548c\u5173\u952e\u5b57\u53c2\u6570\u4e4b\u95f4\uff0c\u4f20\u53c2\u65f6\u5148\u4f20\u5165\u53ef\u53d8\u53c2\u6570\uff0c\u5173\u952e\u5b57\u53c2\u6570\u548c\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u7684\u5148\u540e\u987a\u5e8f\u5e76\u4e0d\u91cd\u8981\u3002 \u6709\u5f88\u591a\u51fd\u6570\u5728Python\u4e2d\u7528\u4e00\u884c\u4ee3\u7801\u5c31\u80fd\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u7528Lambda\u51fd\u6570\u6765\u5b9a\u4e49\u8fd9\u4e9b\u51fd\u6570\uff0c\u8c03\u7528Lambda\u51fd\u6570\u5c31\u8ddf\u8c03\u7528\u666e\u901a\u51fd\u6570\u4e00\u6837\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import operator , functools # \u4e00\u884c\u4ee3\u7801\u5b9a\u4e49\u6c42\u9636\u4e58\u7684\u51fd\u6570 fac = lambda num : functools . reduce ( operator . mul , range ( 1 , num + 1 ), 1 ) # \u4e00\u884c\u4ee3\u7801\u5b9a\u4e49\u5224\u65ad\u7d20\u6570\u7684\u51fd\u6570 is_prime = lambda x : x > 1 and all ( map ( lambda f : x % f , range ( 2 , int ( x ** 0.5 ) + 1 ))) # \u8c03\u7528Lambda\u51fd\u6570 print ( fac ( 10 )) # 3628800 print ( is_prime ( 9 )) # False \u63d0\u793a1 \uff1a\u4e0a\u9762\u4f7f\u7528\u7684 reduce \u51fd\u6570\u662fPython\u6807\u51c6\u5e93 functools \u6a21\u5757\u4e2d\u7684\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u6570\u636e\u7684\u5f52\u7ea6\u64cd\u4f5c\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c \u8fc7\u6ee4 \uff08filter\uff09\u3001 \u6620\u5c04 \uff08map\uff09\u548c \u5f52\u7ea6 \uff08reduce\uff09\u662f\u5904\u7406\u6570\u636e\u4e2d\u975e\u5e38\u5173\u952e\u7684\u4e09\u4e2a\u6b65\u9aa4\uff0c\u800cPython\u7684\u6807\u51c6\u5e93\u4e5f\u63d0\u4f9b\u4e86\u5bf9\u8fd9\u4e09\u4e2a\u64cd\u4f5c\u7684\u652f\u6301\u3002 \u63d0\u793a2 \uff1a\u4e0a\u9762\u4f7f\u7528\u7684 all \u51fd\u6570\u662fPython\u5185\u7f6e\u51fd\u6570\uff0c\u5982\u679c\u4f20\u5165\u7684\u5e8f\u5217\u4e2d\u6240\u6709\u5e03\u5c14\u503c\u90fd\u662f True \uff0c all \u51fd\u6570\u5c31\u8fd4\u56de True \uff0c\u5426\u5219 all \u51fd\u6570\u5c31\u8fd4\u56de False \u3002","title":"Lambda\u51fd\u6570"},{"location":"%E7%AC%AC15%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E8%BF%9B%E9%98%B6/#_3","text":"Python\u4e2d\u7684\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u53ef\u53d8\u53c2\u6570 *args \u548c\u5173\u952e\u5b57\u53c2\u6570 **kwargs \u6765\u63a5\u6536\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff0c\u800c\u4e14\u4f20\u5165\u53c2\u6570\u65f6\u53ef\u4ee5\u5e26\u4e0a\u53c2\u6570\u540d\u4e5f\u53ef\u4ee5\u6ca1\u6709\u53c2\u6570\u540d\uff0c\u53ef\u53d8\u53c2\u6570\u4f1a\u88ab\u5904\u7406\u6210\u4e00\u4e2a\u5143\u7ec4\uff0c\u800c\u5173\u952e\u5b57\u53c2\u6570\u4f1a\u88ab\u5904\u7406\u6210\u4e00\u4e2a\u5b57\u5178\u3002 Python\u4e2d\u7684\u51fd\u6570\u662f\u4e00\u7b49\u51fd\u6570\uff0c\u53ef\u4ee5\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c \uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5728Python\u4e2d\u4f7f\u7528\u9ad8\u9636\u51fd\u6570\u3002\u5982\u679c\u6211\u4eec\u8981\u5b9a\u4e49\u7684\u51fd\u6570\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u6709\u4e00\u884c\u4ee3\u7801\u4e14\u4e0d\u9700\u8981\u51fd\u6570\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528Lambda\u51fd\u6570\uff08\u533f\u540d\u51fd\u6570\uff09\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC16%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E9%AB%98%E7%BA%A7%E5%BA%94%E7%94%A8/","text":"\u7b2c16\u8bfe\uff1a\u51fd\u6570\u7684\u9ad8\u7ea7\u5e94\u7528 \u5728\u4e0a\u4e00\u8282\u8bfe\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5bf9\u51fd\u6570\u8fdb\u884c\u4e86\u66f4\u4e3a\u6df1\u5165\u7684\u7814\u7a76\uff0c\u8fd8\u63a2\u7d22\u4e86Python\u4e2d\u7684\u9ad8\u9636\u51fd\u6570\u548cLambda\u51fd\u6570\u3002\u5728\u8fd9\u4e9b\u77e5\u8bc6\u7684\u57fa\u7840\u4e0a\uff0c\u8fd9\u8282\u8bfe\u6211\u4eec\u4e3a\u5927\u5bb6\u5206\u4eab\u4e24\u4e2a\u548c\u51fd\u6570\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u4e00\u4e2a\u662f\u88c5\u9970\u5668\uff0c\u4e00\u4e2a\u662f\u51fd\u6570\u7684\u9012\u5f52\u8c03\u7528\u3002 \u88c5\u9970\u5668 \u88c5\u9970\u5668\u662fPython\u4e2d \u7528\u4e00\u4e2a\u51fd\u6570\u88c5\u9970\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u6216\u7c7b\u5e76\u4e3a\u5176\u63d0\u4f9b\u989d\u5916\u529f\u80fd \u7684\u8bed\u6cd5\u73b0\u8c61\u3002\u88c5\u9970\u5668\u672c\u8eab\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7684\u53c2\u6570\u662f\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6216\u7c7b\uff0c\u5b83\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5e26\u6709\u88c5\u9970\u529f\u80fd\u7684\u51fd\u6570\u3002\u5f88\u663e\u7136\uff0c\u88c5\u9970\u5668\u662f\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\uff0c\u5b83\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u90fd\u662f\u51fd\u6570\u3002\u4e0b\u9762\u6211\u4eec\u5148\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u88c5\u9970\u5668\u7684\u5199\u6cd5\u548c\u4f5c\u7528\uff0c\u5047\u8bbe\u5df2\u7ecf\u6709\u540d\u4e3a downlaod \u548c upload \u7684\u4e24\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u7528\u4e8e\u6587\u4ef6\u7684\u4e0a\u4f20\u548c\u4e0b\u8f7d\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u7528\u4f11\u7720\u4e00\u6bb5\u968f\u673a\u65f6\u95f4\u7684\u65b9\u5f0f\u6a21\u62df\u4e86\u4e0b\u8f7d\u548c\u4e0a\u4f20\u9700\u8981\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u5e76\u6ca1\u6709\u8054\u7f51\u505a\u4e0a\u4f20\u4e0b\u8f7d\u3002 \u8bf4\u660e \uff1a\u7528Python\u8bed\u8a00\u5b9e\u73b0\u8054\u7f51\u7684\u4e0a\u4f20\u4e0b\u8f7d\u4e5f\u5f88\u7b80\u5355\uff0c\u7ee7\u7eed\u4f60\u7684\u5b66\u4e60\uff0c\u8fd9\u4e2a\u73af\u8282\u5f88\u5feb\u5c31\u4f1a\u6765\u5230\u3002 import random import time def download ( filename ): print ( f '\u5f00\u59cb\u4e0b\u8f7d { filename } .' ) time . sleep ( random . randint ( 2 , 6 )) print ( f ' { filename } \u4e0b\u8f7d\u5b8c\u6210.' ) def upload ( filename ): print ( f '\u5f00\u59cb\u4e0a\u4f20 { filename } .' ) time . sleep ( random . randint ( 4 , 8 )) print ( f ' { filename } \u4e0a\u4f20\u5b8c\u6210.' ) download ( 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ) upload ( 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ) \u73b0\u5728\u6211\u4eec\u5e0c\u671b\u77e5\u9053\u8c03\u7528 download \u548c upload \u51fd\u6570\u505a\u6587\u4ef6\u4e0a\u4f20\u4e0b\u8f7d\u5230\u5e95\u7528\u4e86\u591a\u5c11\u65f6\u95f4\uff0c\u8fd9\u4e2a\u5e94\u8be5\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u76f8\u4fe1\u5f88\u591a\u5c0f\u4f19\u4f34\u5df2\u7ecf\u60f3\u5230\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u51fd\u6570\u5f00\u59cb\u6267\u884c\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a\u65f6\u95f4\uff0c\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u8bb0\u5f55\u4e00\u4e2a\u65f6\u95f4\uff0c\u4e24\u4e2a\u65f6\u95f4\u76f8\u51cf\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u4e0b\u8f7d\u6216\u4e0a\u4f20\u7684\u65f6\u95f4\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 start = time . time () download ( 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ) end = time . time () print ( f '\u82b1\u8d39\u65f6\u95f4: { end - start : .3f } \u79d2' ) start = time . time () upload ( 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ) end = time . time () print ( f '\u82b1\u8d39\u65f6\u95f4: { end - start : .3f } \u79d2' ) \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e0b\u8f7d\u548c\u4e0a\u4f20\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u4f46\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u6ce8\u610f\u5230\uff0c\u4e0a\u9762\u8bb0\u5f55\u65f6\u95f4\u3001\u8ba1\u7b97\u548c\u663e\u793a\u6267\u884c\u65f6\u95f4\u7684\u4ee3\u7801\u90fd\u662f\u91cd\u590d\u4ee3\u7801\u3002\u6709\u7f16\u7a0b\u7ecf\u9a8c\u7684\u4eba\u90fd\u77e5\u9053\uff0c \u91cd\u590d\u7684\u4ee3\u7801\u662f\u4e07\u6076\u4e4b\u6e90 \uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u529e\u6cd5\u5728\u4e0d\u5199\u91cd\u590d\u4ee3\u7801\u7684\u524d\u63d0\u4e0b\uff0c\u7528\u4e00\u79cd\u7b80\u5355\u4f18\u96c5\u7684\u65b9\u5f0f\u8bb0\u5f55\u4e0b\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\u5462\uff1f\u5728Python\u4e2d\uff0c\u88c5\u9970\u5668\u5c31\u662f\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u7684\u6700\u4f73\u9009\u62e9\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8bb0\u5f55\u51fd\u6570\u6267\u884c\u65f6\u95f4\u7684\u529f\u80fd\u5c01\u88c5\u5230\u4e00\u4e2a\u88c5\u9970\u5668\u4e2d\uff0c\u5728\u6709\u9700\u8981\u7684\u5730\u65b9\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u88c5\u9970\u5668\u5c31\u53ef\u4ee5\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time # \u5b9a\u4e49\u88c5\u9970\u5668\u51fd\u6570\uff0c\u5b83\u7684\u53c2\u6570\u662f\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6216\u7c7b def record_time ( func ): # \u5b9a\u4e49\u4e00\u4e2a\u5e26\u88c5\u9970\u529f\u80fd\uff08\u8bb0\u5f55\u88ab\u88c5\u9970\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\uff09\u7684\u51fd\u6570 # \u56e0\u4e3a\u4e0d\u77e5\u9053\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6709\u600e\u6837\u7684\u53c2\u6570\u6240\u4ee5\u4f7f\u7528*args\u548c**kwargs\u63a5\u6536\u6240\u6709\u53c2\u6570 # \u5728Python\u4e2d\u51fd\u6570\u53ef\u4ee5\u5d4c\u5957\u7684\u5b9a\u4e49\uff08\u51fd\u6570\u4e2d\u53ef\u4ee5\u518d\u5b9a\u4e49\u51fd\u6570\uff09 def wrapper ( * args , ** kwargs ): # \u5728\u6267\u884c\u88ab\u88c5\u9970\u7684\u51fd\u6570\u4e4b\u524d\u8bb0\u5f55\u5f00\u59cb\u65f6\u95f4 start = time . time () # \u6267\u884c\u88ab\u88c5\u9970\u7684\u51fd\u6570\u5e76\u83b7\u53d6\u8fd4\u56de\u503c result = func ( * args , ** kwargs ) # \u5728\u6267\u884c\u88ab\u88c5\u9970\u7684\u51fd\u6570\u4e4b\u540e\u8bb0\u5f55\u7ed3\u675f\u65f6\u95f4 end = time . time () # \u8ba1\u7b97\u548c\u663e\u793a\u88ab\u88c5\u9970\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4 print ( f ' { func . __name__ } \u6267\u884c\u65f6\u95f4: { end - start : .3f } \u79d2' ) # \u8fd4\u56de\u88ab\u88c5\u9970\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff08\u88c5\u9970\u5668\u901a\u5e38\u4e0d\u4f1a\u6539\u53d8\u88ab\u88c5\u9970\u51fd\u6570\u7684\u6267\u884c\u7ed3\u679c\uff09 return result # \u8fd4\u56de\u5e26\u88c5\u9970\u529f\u80fd\u7684wrapper\u51fd\u6570 return wrapper \u4f7f\u7528\u4e0a\u9762\u7684\u88c5\u9970\u5668\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u7b2c\u4e00\u79cd\u65b9\u5f0f\u5c31\u662f\u76f4\u63a5\u8c03\u7528\u88c5\u9970\u5668\u51fd\u6570\uff0c\u4f20\u5165\u88ab\u88c5\u9970\u7684\u51fd\u6570\u5e76\u83b7\u5f97\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e2a\u8fd4\u56de\u503c\u76f4\u63a5\u8986\u76d6\u539f\u6765\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u65f6\u5c31\u5df2\u7ecf\u83b7\u5f97\u4e86\u88c5\u9970\u5668\u63d0\u4f9b\u7684\u989d\u5916\u7684\u529f\u80fd\uff08\u8bb0\u5f55\u6267\u884c\u65f6\u95f4\uff09\uff0c\u5927\u5bb6\u53ef\u4ee5\u8bd5\u8bd5\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u660e\u767d\u4e86\u3002 download = record_time ( download ) upload = record_time ( upload ) download ( 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ) upload ( 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ) \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u5df2\u7ecf\u6ca1\u6709\u91cd\u590d\u4ee3\u7801\u4e86\uff0c\u867d\u7136\u5199\u88c5\u9970\u5668\u4f1a\u82b1\u8d39\u4e00\u4e9b\u5fc3\u601d\uff0c\u4f46\u662f\u8fd9\u662f\u4e00\u4e2a\u4e00\u52b3\u6c38\u9038\u7684\u9a9a\u64cd\u4f5c\uff0c\u5982\u679c\u8fd8\u6709\u5176\u4ed6\u7684\u51fd\u6570\u4e5f\u9700\u8981\u8bb0\u5f55\u6267\u884c\u65f6\u95f4\uff0c\u6309\u7167\u4e0a\u9762\u7684\u4ee3\u7801\u5982\u6cd5\u70ae\u5236\u5373\u53ef\u3002 \u5728Python\u4e2d\uff0c\u4f7f\u7528\u88c5\u9970\u5668\u5f88\u6709\u66f4\u4e3a\u4fbf\u6377\u7684 \u8bed\u6cd5\u7cd6 \uff08\u7f16\u7a0b\u8bed\u8a00\u4e2d\u6dfb\u52a0\u7684\u67d0\u79cd\u8bed\u6cd5\uff0c\u8fd9\u79cd\u8bed\u6cd5\u5bf9\u8bed\u8a00\u7684\u529f\u80fd\u6ca1\u6709\u5f71\u54cd\uff0c\u4f46\u662f\u4f7f\u7528\u66f4\u52a0\u65b9\u6cd5\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u4e5f\u66f4\u5f3a\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e4b\u4e3a\u201c\u8bed\u6cd5\u7cd6\u201d\u6216\u201c\u7cd6\u8863\u8bed\u6cd5\u201d\uff09\uff0c\u53ef\u4ee5\u7528 @\u88c5\u9970\u5668\u51fd\u6570 \u5c06\u88c5\u9970\u5668\u51fd\u6570\u76f4\u63a5\u653e\u5728\u88ab\u88c5\u9970\u7684\u51fd\u6570\u4e0a\uff0c\u6548\u679c\u8ddf\u4e0a\u9762\u7684\u4ee3\u7801\u76f8\u540c\uff0c\u4e0b\u9762\u662f\u5b8c\u6574\u7684\u4ee3\u7801\u3002 import random import time def record_time ( func ): def wrapper ( * args , ** kwargs ): start = time . time () result = func ( * args , ** kwargs ) end = time . time () print ( f ' { func . __name__ } \u6267\u884c\u65f6\u95f4: { end - start : .3f } \u79d2' ) return result return wrapper @record_time def download ( filename ): print ( f '\u5f00\u59cb\u4e0b\u8f7d { filename } .' ) time . sleep ( random . randint ( 2 , 6 )) print ( f ' { filename } \u4e0b\u8f7d\u5b8c\u6210.' ) @record_time def upload ( filename ): print ( f '\u5f00\u59cb\u4e0a\u4f20 { filename } .' ) time . sleep ( random . randint ( 4 , 8 )) print ( f ' { filename } \u4e0a\u4f20\u5b8c\u6210.' ) download ( 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ) upload ( 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ) \u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u901a\u8fc7\u88c5\u9970\u5668\u8bed\u6cd5\u7cd6\u4e3a download \u548c upload \u51fd\u6570\u6dfb\u52a0\u4e86\u88c5\u9970\u5668\uff0c\u8fd9\u6837\u8c03\u7528 download \u548c upload \u51fd\u6570\u65f6\uff0c\u4f1a\u8bb0\u5f55\u4e0b\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\u3002\u4e8b\u5b9e\u4e0a\uff0c\u88ab\u88c5\u9970\u540e\u7684 download \u548c upload \u51fd\u6570\u662f\u6211\u4eec\u5728\u88c5\u9970\u5668 record_time \u4e2d\u8fd4\u56de\u7684 wrapper \u51fd\u6570\uff0c\u8c03\u7528\u5b83\u4eec\u5176\u5b9e\u5c31\u662f\u5728\u8c03\u7528 wrapper \u51fd\u6570\uff0c\u6240\u4ee5\u62e5\u6709\u4e86\u8bb0\u5f55\u51fd\u6570\u6267\u884c\u65f6\u95f4\u7684\u529f\u80fd\u3002 \u5982\u679c\u5e0c\u671b\u53d6\u6d88\u88c5\u9970\u5668\u7684\u4f5c\u7528\uff0c\u90a3\u4e48\u5728\u5b9a\u4e49\u88c5\u9970\u5668\u51fd\u6570\u7684\u65f6\u5019\uff0c\u9700\u8981\u505a\u4e00\u4e9b\u989d\u5916\u7684\u5de5\u4f5c\u3002Python\u6807\u51c6\u5e93 functools \u6a21\u5757\u7684 wraps \u51fd\u6570\u4e5f\u662f\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u6211\u4eec\u5c06\u5b83\u653e\u5728 wrapper \u51fd\u6570\u4e0a\uff0c\u8fd9\u4e2a\u88c5\u9970\u5668\u53ef\u4ee5\u5e2e\u6211\u4eec\u4fdd\u7559\u88ab\u88c5\u9970\u4e4b\u524d\u7684\u51fd\u6570\uff0c\u8fd9\u6837\u5728\u9700\u8981\u53d6\u6d88\u88c5\u9970\u5668\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u88ab\u88c5\u9970\u51fd\u6570\u7684 __wrapped__ \u5c5e\u6027\u83b7\u5f97\u88ab\u88c5\u9970\u4e4b\u524d\u7684\u51fd\u6570\u3002 import random import time from functools import wraps def record_time ( func ): @wraps ( func ) def wrapper ( * args , ** kwargs ): start = time . time () result = func ( * args , ** kwargs ) end = time . time () print ( f ' { func . __name__ } \u6267\u884c\u65f6\u95f4: { end - start : .3f } \u79d2' ) return result return wrapper @record_time def download ( filename ): print ( f '\u5f00\u59cb\u4e0b\u8f7d { filename } .' ) time . sleep ( random . randint ( 2 , 6 )) print ( f ' { filename } \u4e0b\u8f7d\u5b8c\u6210.' ) @record_time def upload ( filename ): print ( f '\u5f00\u59cb\u4e0a\u4f20 { filename } .' ) time . sleep ( random . randint ( 4 , 8 )) print ( f ' { filename } \u4e0a\u4f20\u5b8c\u6210.' ) download ( 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ) upload ( 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ) # \u53d6\u6d88\u88c5\u9970\u5668 download . __wrapped__ ( 'MySQL\u5fc5\u77e5\u5fc5\u4f1a.pdf' ) upload = upload . __wrapped__ upload ( 'Python\u4ece\u65b0\u624b\u5230\u5927\u5e08.pdf' ) \u88c5\u9970\u5668\u51fd\u6570\u672c\u8eab\u4e5f\u53ef\u4ee5\u53c2\u6570\u5316 \uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u901a\u8fc7\u6211\u4eec\u7684\u88c5\u9970\u5668\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u8005\u4f20\u5165\u7684\u53c2\u6570\u6765\u5b9a\u5236\u7684\uff0c\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u6211\u4eec\u5728\u540e\u9762\u7528\u5230\u5b83\u7684\u65f6\u5019\u518d\u4e3a\u5927\u5bb6\u8bb2\u89e3\u3002 \u9012\u5f52\u8c03\u7528 Python\u4e2d\u5141\u8bb8\u51fd\u6570\u5d4c\u5957\u5b9a\u4e49\uff0c\u4e5f\u5141\u8bb8\u51fd\u6570\u4e4b\u95f4\u76f8\u4e92\u8c03\u7528\uff0c\u800c\u4e14\u4e00\u4e2a\u51fd\u6570\u8fd8\u53ef\u4ee5\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u8c03\u7528\u81ea\u8eab\u3002\u51fd\u6570\u81ea\u5df1\u8c03\u7528\u81ea\u5df1\u79f0\u4e3a\u9012\u5f52\u8c03\u7528\uff0c\u90a3\u4e48\u9012\u5f52\u8c03\u7528\u6709\u4ec0\u4e48\u7528\u5904\u5462\uff1f\u73b0\u5b9e\u4e2d\uff0c\u6709\u5f88\u591a\u95ee\u9898\u7684\u5b9a\u4e49\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u9012\u5f52\u5b9a\u4e49\uff0c\u4f8b\u5982\u6211\u4eec\u4e4b\u524d\u8bb2\u5230\u7684\u9636\u4e58\uff0c\u975e\u8d1f\u6574\u6570 N \u7684\u9636\u4e58\u662f N \u4e58\u4ee5 N-1 \u7684\u9636\u4e58\uff0c\u5373$ N! = N \\times (N-1)! $\uff0c\u5b9a\u4e49\u7684\u5de6\u8fb9\u548c\u53f3\u8fb9\u90fd\u51fa\u73b0\u4e86\u9636\u4e58\u7684\u6982\u5ff5\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u5b9a\u4e49\u3002\u65e2\u7136\u5982\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9012\u5f52\u8c03\u7528\u7684\u65b9\u5f0f\u6765\u5199\u4e00\u4e2a\u6c42\u9636\u4e58\u7684\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def fac ( num ): if num in ( 0 , 1 ): return 1 return num * fac ( num - 1 ) \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c fac \u51fd\u6570\u4e2d\u53c8\u8c03\u7528\u4e86 fac \u51fd\u6570\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u9012\u5f52\u8c03\u7528\u3002\u4ee3\u7801\u7b2c2\u884c\u7684 if \u6761\u4ef6\u53eb\u505a\u9012\u5f52\u7684\u6536\u655b\u6761\u4ef6\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4ec0\u4e48\u65f6\u5019\u8981\u7ed3\u675f\u51fd\u6570\u7684\u9012\u5f52\u8c03\u7528\uff0c\u5728\u8ba1\u7b97\u9636\u4e58\u65f6\uff0c\u5982\u679c\u8ba1\u7b97\u5230 0 \u6216 1 \u7684\u9636\u4e58\uff0c\u5c31\u505c\u6b62\u9012\u5f52\u8c03\u7528\uff0c\u76f4\u63a5\u8fd4\u56de 1 \uff1b\u4ee3\u7801\u7b2c4\u884c\u7684 num * fac(num - 1) \u662f\u9012\u5f52\u516c\u5f0f\uff0c\u4e5f\u5c31\u662f\u9636\u4e58\u7684\u9012\u5f52\u5b9a\u4e49\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u7b80\u5355\u7684\u5206\u6790\u4e0b\uff0c\u5982\u679c\u7528 fac(5) \u8ba1\u7b97 5 \u7684\u9636\u4e58\uff0c\u6574\u4e2a\u8fc7\u7a0b\u4f1a\u662f\u600e\u6837\u7684\u3002 # \u9012\u5f52\u8c03\u7528\u51fd\u6570\u5165\u6808 # 5 * fac(4) # 5 * (4 * fac(3)) # 5 * (4 * (3 * fac(2))) # 5 * (4 * (3 * (2 * fac(1)))) # \u505c\u6b62\u9012\u5f52\u51fd\u6570\u51fa\u6808 # 5 * (4 * (3 * (2 * 1))) # 5 * (4 * (3 * 2)) # 5 * (4 * 6) # 5 * 24 # 120 print ( fac ( 5 )) # 120 \u6ce8\u610f\uff0c\u51fd\u6570\u8c03\u7528\u4f1a\u901a\u8fc7\u5185\u5b58\u4e2d\u79f0\u4e3a\u201c\u6808\u201d\uff08stack\uff09\u7684\u6570\u636e\u7ed3\u6784\u6765\u4fdd\u5b58\u5f53\u524d\u4ee3\u7801\u7684\u6267\u884c\u73b0\u573a\uff0c\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u4f1a\u901a\u8fc7\u8fd9\u4e2a\u6808\u7ed3\u6784\u6062\u590d\u4e4b\u524d\u7684\u6267\u884c\u73b0\u573a\u3002\u6808\u662f\u4e00\u79cd\u5148\u8fdb\u540e\u51fa\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6700\u65e9\u5165\u6808\u7684\u51fd\u6570\u6700\u540e\u624d\u4f1a\u8fd4\u56de\uff0c\u800c\u6700\u540e\u5165\u6808\u7684\u51fd\u6570\u4f1a\u6700\u5148\u8fd4\u56de\u3002\u4f8b\u5982\u8c03\u7528\u4e00\u4e2a\u540d\u4e3a a \u7684\u51fd\u6570\uff0c\u51fd\u6570 a \u7684\u6267\u884c\u4f53\u4e2d\u53c8\u8c03\u7528\u4e86\u51fd\u6570 b \uff0c\u51fd\u6570 b \u7684\u6267\u884c\u4f53\u4e2d\u53c8\u8c03\u7528\u4e86\u51fd\u6570 c \uff0c\u90a3\u4e48\u6700\u5148\u5165\u6808\u7684\u51fd\u6570\u662f a \uff0c\u6700\u5148\u51fa\u6808\u7684\u51fd\u6570\u662f c \u3002\u6bcf\u8fdb\u5165\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u6808\u5c31\u4f1a\u589e\u52a0\u4e00\u5c42\u6808\u5e27\uff08stack frame\uff09\uff0c\u6808\u5e27\u5c31\u662f\u6211\u4eec\u521a\u624d\u63d0\u5230\u7684\u4fdd\u5b58\u5f53\u524d\u4ee3\u7801\u6267\u884c\u73b0\u573a\u7684\u7ed3\u6784\uff1b\u6bcf\u5f53\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u6808\u5c31\u4f1a\u51cf\u5c11\u4e00\u5c42\u6808\u5e27\u3002\u901a\u5e38\uff0c\u5185\u5b58\u4e2d\u7684\u6808\u7a7a\u95f4\u5f88\u5c0f\uff0c\u56e0\u6b64\u9012\u5f52\u8c03\u7528\u7684\u6b21\u6570\u5982\u679c\u592a\u591a\uff0c\u4f1a\u5bfc\u81f4\u6808\u6ea2\u51fa\uff08stack overflow\uff09\uff0c\u6240\u4ee5 \u9012\u5f52\u8c03\u7528\u4e00\u5b9a\u8981\u786e\u4fdd\u80fd\u591f\u5feb\u901f\u6536\u655b \u3002\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u6267\u884c fac(5000) \uff0c\u770b\u770b\u662f\u4e0d\u662f\u4f1a\u63d0\u793a RecursionError \u9519\u8bef\uff0c\u9519\u8bef\u6d88\u606f\u4e3a\uff1a maximum recursion depth exceeded in comparison \uff08\u8d85\u51fa\u6700\u5927\u9012\u5f52\u6df1\u5ea6\uff09\uff0c\u5176\u5b9e\u5c31\u662f\u53d1\u751f\u4e86\u6808\u6ea2\u51fa\u3002 \u6211\u4eec\u4f7f\u7528\u7684Python\u5b98\u65b9\u89e3\u91ca\u5668\uff0c\u9ed8\u8ba4\u5c06\u51fd\u6570\u8c03\u7528\u7684\u6808\u7ed3\u6784\u6700\u5927\u6df1\u5ea6\u8bbe\u7f6e\u4e3a 1000 \u5c42\u3002\u5982\u679c\u8d85\u51fa\u8fd9\u4e2a\u6df1\u5ea6\uff0c\u5c31\u4f1a\u53d1\u751f\u4e0a\u9762\u8bf4\u7684 RecursionError \u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 sys \u6a21\u5757\u7684 setrecursionlimit \u51fd\u6570\u6765\u6539\u53d8\u9012\u5f52\u8c03\u7528\u7684\u6700\u5927\u6df1\u5ea6\uff0c\u4f8b\u5982\uff1a sys.setrecursionlimit(10000) \uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba9\u4e0a\u9762\u7684 fac(5000) \u987a\u5229\u6267\u884c\u51fa\u7ed3\u679c\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u8ba9\u9012\u5f52\u5feb\u901f\u6536\u655b\u624d\u662f\u6211\u4eec\u5e94\u8be5\u505a\u7684\u4e8b\u60c5\uff0c\u5426\u5219\u5c31\u5e94\u8be5\u8003\u8651\u4f7f\u7528\u5faa\u73af\u9012\u63a8\u800c\u4e0d\u662f\u9012\u5f52\u3002 \u518d\u4e3e\u4e00\u4e2a\u4e4b\u524d\u8bb2\u8fc7\u7684\u751f\u6210\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u4f8b\u5b50\uff0c\u56e0\u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u524d\u4e24\u4e2a\u6570\u90fd\u662f 1 \uff0c\u4ece\u7b2c3\u4e2a\u6570\u5f00\u59cb\uff0c\u6bcf\u4e2a\u6570\u662f\u524d\u4e24\u4e2a\u6570\u76f8\u52a0\u7684\u548c\uff0c\u53ef\u4ee5\u8bb0\u4e3a f(n) = f(n - 1) + f(n - 2) \uff0c\u5f88\u663e\u7136\u8fd9\u53c8\u662f\u4e00\u4e2a\u9012\u5f52\u7684\u5b9a\u4e49\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u9012\u5f52\u8c03\u7528\u51fd\u6570\u6765\u8ba1\u7b97\u7b2c\u200b n \u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u3002 def fib ( n ): if n in ( 1 , 2 ): return 1 return fib ( n - 1 ) + fib ( n - 2 ) # \u6253\u5370\u524d20\u4e2a\u6590\u6ce2\u90a3\u5951\u6570 for i in range ( 1 , 21 ): print ( fib ( i )) \u9700\u8981\u63d0\u9192\u5927\u5bb6\uff0c\u4e0a\u9762\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u7684\u4ee3\u7801\u867d\u7136\u770b\u8d77\u6765\u975e\u5e38\u7b80\u5355\u660e\u4e86\uff0c\u4f46\u6267\u884c\u6027\u80fd\u662f\u6bd4\u8f83\u7cdf\u7cd5\u7684\uff0c\u539f\u56e0\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u601d\u8003\u4e00\u4e0b\uff0c\u66f4\u597d\u7684\u505a\u6cd5\u8fd8\u662f\u4e4b\u524d\u8bb2\u8fc7\u7684\u4f7f\u7528\u5faa\u73af\u9012\u63a8\u7684\u65b9\u5f0f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def fib ( n ): a , b = 0 , 1 for _ in range ( n ): a , b = b , a + b return a \u7b80\u5355\u7684\u603b\u7ed3 \u88c5\u9970\u5668\u662fPython\u4e2d\u7684\u7279\u8272\u8bed\u6cd5\uff0c \u53ef\u4ee5\u901a\u8fc7\u88c5\u9970\u5668\u6765\u589e\u5f3a\u73b0\u6709\u7684\u51fd\u6570 \uff0c\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u6709\u7528\u7684\u7f16\u7a0b\u6280\u5de7\u3002\u4e00\u4e9b\u590d\u6742\u7684\u95ee\u9898\u7528\u51fd\u6570\u9012\u5f52\u8c03\u7528\u7684\u65b9\u5f0f\u5199\u8d77\u6765\u771f\u7684\u5f88\u7b80\u5355\uff0c\u4f46\u662f \u51fd\u6570\u7684\u9012\u5f52\u8c03\u7528\u4e00\u5b9a\u8981\u6ce8\u610f\u6536\u655b\u6761\u4ef6\u548c\u9012\u5f52\u516c\u5f0f \uff0c\u627e\u5230\u9012\u5f52\u516c\u5f0f\u624d\u6709\u673a\u4f1a\u4f7f\u7528\u9012\u5f52\u8c03\u7528\uff0c\u800c\u6536\u655b\u6761\u4ef6\u786e\u5b9a\u4e86\u9012\u5f52\u4ec0\u4e48\u65f6\u5019\u505c\u4e0b\u6765\u3002\u51fd\u6570\u8c03\u7528\u901a\u8fc7\u5185\u5b58\u4e2d\u7684\u6808\u7a7a\u95f4\u6765\u4fdd\u5b58\u73b0\u573a\u548c\u6062\u590d\u73b0\u573a\uff0c\u6808\u7a7a\u95f4\u901a\u5e38\u90fd\u5f88\u5c0f\uff0c\u6240\u4ee5 \u9012\u5f52\u5982\u679c\u4e0d\u80fd\u8fc5\u901f\u6536\u655b\uff0c\u5f88\u53ef\u80fd\u4f1a\u5f15\u53d1\u6808\u6ea2\u51fa\u9519\u8bef\uff0c\u4ece\u800c\u5bfc\u81f4\u7a0b\u5e8f\u7684\u5d29\u6e83 \u3002","title":"\u7b2c16\u8bfe\uff1a\u51fd\u6570\u7684\u9ad8\u7ea7\u5e94\u7528"},{"location":"%E7%AC%AC16%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E9%AB%98%E7%BA%A7%E5%BA%94%E7%94%A8/#16","text":"\u5728\u4e0a\u4e00\u8282\u8bfe\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5bf9\u51fd\u6570\u8fdb\u884c\u4e86\u66f4\u4e3a\u6df1\u5165\u7684\u7814\u7a76\uff0c\u8fd8\u63a2\u7d22\u4e86Python\u4e2d\u7684\u9ad8\u9636\u51fd\u6570\u548cLambda\u51fd\u6570\u3002\u5728\u8fd9\u4e9b\u77e5\u8bc6\u7684\u57fa\u7840\u4e0a\uff0c\u8fd9\u8282\u8bfe\u6211\u4eec\u4e3a\u5927\u5bb6\u5206\u4eab\u4e24\u4e2a\u548c\u51fd\u6570\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u4e00\u4e2a\u662f\u88c5\u9970\u5668\uff0c\u4e00\u4e2a\u662f\u51fd\u6570\u7684\u9012\u5f52\u8c03\u7528\u3002","title":"\u7b2c16\u8bfe\uff1a\u51fd\u6570\u7684\u9ad8\u7ea7\u5e94\u7528"},{"location":"%E7%AC%AC16%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E9%AB%98%E7%BA%A7%E5%BA%94%E7%94%A8/#_1","text":"\u88c5\u9970\u5668\u662fPython\u4e2d \u7528\u4e00\u4e2a\u51fd\u6570\u88c5\u9970\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u6216\u7c7b\u5e76\u4e3a\u5176\u63d0\u4f9b\u989d\u5916\u529f\u80fd \u7684\u8bed\u6cd5\u73b0\u8c61\u3002\u88c5\u9970\u5668\u672c\u8eab\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7684\u53c2\u6570\u662f\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6216\u7c7b\uff0c\u5b83\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5e26\u6709\u88c5\u9970\u529f\u80fd\u7684\u51fd\u6570\u3002\u5f88\u663e\u7136\uff0c\u88c5\u9970\u5668\u662f\u4e00\u4e2a\u9ad8\u9636\u51fd\u6570\uff0c\u5b83\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u90fd\u662f\u51fd\u6570\u3002\u4e0b\u9762\u6211\u4eec\u5148\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u88c5\u9970\u5668\u7684\u5199\u6cd5\u548c\u4f5c\u7528\uff0c\u5047\u8bbe\u5df2\u7ecf\u6709\u540d\u4e3a downlaod \u548c upload \u7684\u4e24\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u7528\u4e8e\u6587\u4ef6\u7684\u4e0a\u4f20\u548c\u4e0b\u8f7d\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u7528\u4f11\u7720\u4e00\u6bb5\u968f\u673a\u65f6\u95f4\u7684\u65b9\u5f0f\u6a21\u62df\u4e86\u4e0b\u8f7d\u548c\u4e0a\u4f20\u9700\u8981\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u5e76\u6ca1\u6709\u8054\u7f51\u505a\u4e0a\u4f20\u4e0b\u8f7d\u3002 \u8bf4\u660e \uff1a\u7528Python\u8bed\u8a00\u5b9e\u73b0\u8054\u7f51\u7684\u4e0a\u4f20\u4e0b\u8f7d\u4e5f\u5f88\u7b80\u5355\uff0c\u7ee7\u7eed\u4f60\u7684\u5b66\u4e60\uff0c\u8fd9\u4e2a\u73af\u8282\u5f88\u5feb\u5c31\u4f1a\u6765\u5230\u3002 import random import time def download ( filename ): print ( f '\u5f00\u59cb\u4e0b\u8f7d { filename } .' ) time . sleep ( random . randint ( 2 , 6 )) print ( f ' { filename } \u4e0b\u8f7d\u5b8c\u6210.' ) def upload ( filename ): print ( f '\u5f00\u59cb\u4e0a\u4f20 { filename } .' ) time . sleep ( random . randint ( 4 , 8 )) print ( f ' { filename } \u4e0a\u4f20\u5b8c\u6210.' ) download ( 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ) upload ( 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ) \u73b0\u5728\u6211\u4eec\u5e0c\u671b\u77e5\u9053\u8c03\u7528 download \u548c upload \u51fd\u6570\u505a\u6587\u4ef6\u4e0a\u4f20\u4e0b\u8f7d\u5230\u5e95\u7528\u4e86\u591a\u5c11\u65f6\u95f4\uff0c\u8fd9\u4e2a\u5e94\u8be5\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u76f8\u4fe1\u5f88\u591a\u5c0f\u4f19\u4f34\u5df2\u7ecf\u60f3\u5230\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u51fd\u6570\u5f00\u59cb\u6267\u884c\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a\u65f6\u95f4\uff0c\u5728\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u8bb0\u5f55\u4e00\u4e2a\u65f6\u95f4\uff0c\u4e24\u4e2a\u65f6\u95f4\u76f8\u51cf\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u4e0b\u8f7d\u6216\u4e0a\u4f20\u7684\u65f6\u95f4\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 start = time . time () download ( 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ) end = time . time () print ( f '\u82b1\u8d39\u65f6\u95f4: { end - start : .3f } \u79d2' ) start = time . time () upload ( 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ) end = time . time () print ( f '\u82b1\u8d39\u65f6\u95f4: { end - start : .3f } \u79d2' ) \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e0b\u8f7d\u548c\u4e0a\u4f20\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u4f46\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u6ce8\u610f\u5230\uff0c\u4e0a\u9762\u8bb0\u5f55\u65f6\u95f4\u3001\u8ba1\u7b97\u548c\u663e\u793a\u6267\u884c\u65f6\u95f4\u7684\u4ee3\u7801\u90fd\u662f\u91cd\u590d\u4ee3\u7801\u3002\u6709\u7f16\u7a0b\u7ecf\u9a8c\u7684\u4eba\u90fd\u77e5\u9053\uff0c \u91cd\u590d\u7684\u4ee3\u7801\u662f\u4e07\u6076\u4e4b\u6e90 \uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u529e\u6cd5\u5728\u4e0d\u5199\u91cd\u590d\u4ee3\u7801\u7684\u524d\u63d0\u4e0b\uff0c\u7528\u4e00\u79cd\u7b80\u5355\u4f18\u96c5\u7684\u65b9\u5f0f\u8bb0\u5f55\u4e0b\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\u5462\uff1f\u5728Python\u4e2d\uff0c\u88c5\u9970\u5668\u5c31\u662f\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u7684\u6700\u4f73\u9009\u62e9\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8bb0\u5f55\u51fd\u6570\u6267\u884c\u65f6\u95f4\u7684\u529f\u80fd\u5c01\u88c5\u5230\u4e00\u4e2a\u88c5\u9970\u5668\u4e2d\uff0c\u5728\u6709\u9700\u8981\u7684\u5730\u65b9\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u88c5\u9970\u5668\u5c31\u53ef\u4ee5\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time # \u5b9a\u4e49\u88c5\u9970\u5668\u51fd\u6570\uff0c\u5b83\u7684\u53c2\u6570\u662f\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6216\u7c7b def record_time ( func ): # \u5b9a\u4e49\u4e00\u4e2a\u5e26\u88c5\u9970\u529f\u80fd\uff08\u8bb0\u5f55\u88ab\u88c5\u9970\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\uff09\u7684\u51fd\u6570 # \u56e0\u4e3a\u4e0d\u77e5\u9053\u88ab\u88c5\u9970\u7684\u51fd\u6570\u6709\u600e\u6837\u7684\u53c2\u6570\u6240\u4ee5\u4f7f\u7528*args\u548c**kwargs\u63a5\u6536\u6240\u6709\u53c2\u6570 # \u5728Python\u4e2d\u51fd\u6570\u53ef\u4ee5\u5d4c\u5957\u7684\u5b9a\u4e49\uff08\u51fd\u6570\u4e2d\u53ef\u4ee5\u518d\u5b9a\u4e49\u51fd\u6570\uff09 def wrapper ( * args , ** kwargs ): # \u5728\u6267\u884c\u88ab\u88c5\u9970\u7684\u51fd\u6570\u4e4b\u524d\u8bb0\u5f55\u5f00\u59cb\u65f6\u95f4 start = time . time () # \u6267\u884c\u88ab\u88c5\u9970\u7684\u51fd\u6570\u5e76\u83b7\u53d6\u8fd4\u56de\u503c result = func ( * args , ** kwargs ) # \u5728\u6267\u884c\u88ab\u88c5\u9970\u7684\u51fd\u6570\u4e4b\u540e\u8bb0\u5f55\u7ed3\u675f\u65f6\u95f4 end = time . time () # \u8ba1\u7b97\u548c\u663e\u793a\u88ab\u88c5\u9970\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4 print ( f ' { func . __name__ } \u6267\u884c\u65f6\u95f4: { end - start : .3f } \u79d2' ) # \u8fd4\u56de\u88ab\u88c5\u9970\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff08\u88c5\u9970\u5668\u901a\u5e38\u4e0d\u4f1a\u6539\u53d8\u88ab\u88c5\u9970\u51fd\u6570\u7684\u6267\u884c\u7ed3\u679c\uff09 return result # \u8fd4\u56de\u5e26\u88c5\u9970\u529f\u80fd\u7684wrapper\u51fd\u6570 return wrapper \u4f7f\u7528\u4e0a\u9762\u7684\u88c5\u9970\u5668\u51fd\u6570\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u7b2c\u4e00\u79cd\u65b9\u5f0f\u5c31\u662f\u76f4\u63a5\u8c03\u7528\u88c5\u9970\u5668\u51fd\u6570\uff0c\u4f20\u5165\u88ab\u88c5\u9970\u7684\u51fd\u6570\u5e76\u83b7\u5f97\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e2a\u8fd4\u56de\u503c\u76f4\u63a5\u8986\u76d6\u539f\u6765\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u65f6\u5c31\u5df2\u7ecf\u83b7\u5f97\u4e86\u88c5\u9970\u5668\u63d0\u4f9b\u7684\u989d\u5916\u7684\u529f\u80fd\uff08\u8bb0\u5f55\u6267\u884c\u65f6\u95f4\uff09\uff0c\u5927\u5bb6\u53ef\u4ee5\u8bd5\u8bd5\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u660e\u767d\u4e86\u3002 download = record_time ( download ) upload = record_time ( upload ) download ( 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ) upload ( 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ) \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u5df2\u7ecf\u6ca1\u6709\u91cd\u590d\u4ee3\u7801\u4e86\uff0c\u867d\u7136\u5199\u88c5\u9970\u5668\u4f1a\u82b1\u8d39\u4e00\u4e9b\u5fc3\u601d\uff0c\u4f46\u662f\u8fd9\u662f\u4e00\u4e2a\u4e00\u52b3\u6c38\u9038\u7684\u9a9a\u64cd\u4f5c\uff0c\u5982\u679c\u8fd8\u6709\u5176\u4ed6\u7684\u51fd\u6570\u4e5f\u9700\u8981\u8bb0\u5f55\u6267\u884c\u65f6\u95f4\uff0c\u6309\u7167\u4e0a\u9762\u7684\u4ee3\u7801\u5982\u6cd5\u70ae\u5236\u5373\u53ef\u3002 \u5728Python\u4e2d\uff0c\u4f7f\u7528\u88c5\u9970\u5668\u5f88\u6709\u66f4\u4e3a\u4fbf\u6377\u7684 \u8bed\u6cd5\u7cd6 \uff08\u7f16\u7a0b\u8bed\u8a00\u4e2d\u6dfb\u52a0\u7684\u67d0\u79cd\u8bed\u6cd5\uff0c\u8fd9\u79cd\u8bed\u6cd5\u5bf9\u8bed\u8a00\u7684\u529f\u80fd\u6ca1\u6709\u5f71\u54cd\uff0c\u4f46\u662f\u4f7f\u7528\u66f4\u52a0\u65b9\u6cd5\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u4e5f\u66f4\u5f3a\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e4b\u4e3a\u201c\u8bed\u6cd5\u7cd6\u201d\u6216\u201c\u7cd6\u8863\u8bed\u6cd5\u201d\uff09\uff0c\u53ef\u4ee5\u7528 @\u88c5\u9970\u5668\u51fd\u6570 \u5c06\u88c5\u9970\u5668\u51fd\u6570\u76f4\u63a5\u653e\u5728\u88ab\u88c5\u9970\u7684\u51fd\u6570\u4e0a\uff0c\u6548\u679c\u8ddf\u4e0a\u9762\u7684\u4ee3\u7801\u76f8\u540c\uff0c\u4e0b\u9762\u662f\u5b8c\u6574\u7684\u4ee3\u7801\u3002 import random import time def record_time ( func ): def wrapper ( * args , ** kwargs ): start = time . time () result = func ( * args , ** kwargs ) end = time . time () print ( f ' { func . __name__ } \u6267\u884c\u65f6\u95f4: { end - start : .3f } \u79d2' ) return result return wrapper @record_time def download ( filename ): print ( f '\u5f00\u59cb\u4e0b\u8f7d { filename } .' ) time . sleep ( random . randint ( 2 , 6 )) print ( f ' { filename } \u4e0b\u8f7d\u5b8c\u6210.' ) @record_time def upload ( filename ): print ( f '\u5f00\u59cb\u4e0a\u4f20 { filename } .' ) time . sleep ( random . randint ( 4 , 8 )) print ( f ' { filename } \u4e0a\u4f20\u5b8c\u6210.' ) download ( 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ) upload ( 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ) \u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u901a\u8fc7\u88c5\u9970\u5668\u8bed\u6cd5\u7cd6\u4e3a download \u548c upload \u51fd\u6570\u6dfb\u52a0\u4e86\u88c5\u9970\u5668\uff0c\u8fd9\u6837\u8c03\u7528 download \u548c upload \u51fd\u6570\u65f6\uff0c\u4f1a\u8bb0\u5f55\u4e0b\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\u3002\u4e8b\u5b9e\u4e0a\uff0c\u88ab\u88c5\u9970\u540e\u7684 download \u548c upload \u51fd\u6570\u662f\u6211\u4eec\u5728\u88c5\u9970\u5668 record_time \u4e2d\u8fd4\u56de\u7684 wrapper \u51fd\u6570\uff0c\u8c03\u7528\u5b83\u4eec\u5176\u5b9e\u5c31\u662f\u5728\u8c03\u7528 wrapper \u51fd\u6570\uff0c\u6240\u4ee5\u62e5\u6709\u4e86\u8bb0\u5f55\u51fd\u6570\u6267\u884c\u65f6\u95f4\u7684\u529f\u80fd\u3002 \u5982\u679c\u5e0c\u671b\u53d6\u6d88\u88c5\u9970\u5668\u7684\u4f5c\u7528\uff0c\u90a3\u4e48\u5728\u5b9a\u4e49\u88c5\u9970\u5668\u51fd\u6570\u7684\u65f6\u5019\uff0c\u9700\u8981\u505a\u4e00\u4e9b\u989d\u5916\u7684\u5de5\u4f5c\u3002Python\u6807\u51c6\u5e93 functools \u6a21\u5757\u7684 wraps \u51fd\u6570\u4e5f\u662f\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u6211\u4eec\u5c06\u5b83\u653e\u5728 wrapper \u51fd\u6570\u4e0a\uff0c\u8fd9\u4e2a\u88c5\u9970\u5668\u53ef\u4ee5\u5e2e\u6211\u4eec\u4fdd\u7559\u88ab\u88c5\u9970\u4e4b\u524d\u7684\u51fd\u6570\uff0c\u8fd9\u6837\u5728\u9700\u8981\u53d6\u6d88\u88c5\u9970\u5668\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u88ab\u88c5\u9970\u51fd\u6570\u7684 __wrapped__ \u5c5e\u6027\u83b7\u5f97\u88ab\u88c5\u9970\u4e4b\u524d\u7684\u51fd\u6570\u3002 import random import time from functools import wraps def record_time ( func ): @wraps ( func ) def wrapper ( * args , ** kwargs ): start = time . time () result = func ( * args , ** kwargs ) end = time . time () print ( f ' { func . __name__ } \u6267\u884c\u65f6\u95f4: { end - start : .3f } \u79d2' ) return result return wrapper @record_time def download ( filename ): print ( f '\u5f00\u59cb\u4e0b\u8f7d { filename } .' ) time . sleep ( random . randint ( 2 , 6 )) print ( f ' { filename } \u4e0b\u8f7d\u5b8c\u6210.' ) @record_time def upload ( filename ): print ( f '\u5f00\u59cb\u4e0a\u4f20 { filename } .' ) time . sleep ( random . randint ( 4 , 8 )) print ( f ' { filename } \u4e0a\u4f20\u5b8c\u6210.' ) download ( 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ) upload ( 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ) # \u53d6\u6d88\u88c5\u9970\u5668 download . __wrapped__ ( 'MySQL\u5fc5\u77e5\u5fc5\u4f1a.pdf' ) upload = upload . __wrapped__ upload ( 'Python\u4ece\u65b0\u624b\u5230\u5927\u5e08.pdf' ) \u88c5\u9970\u5668\u51fd\u6570\u672c\u8eab\u4e5f\u53ef\u4ee5\u53c2\u6570\u5316 \uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u901a\u8fc7\u6211\u4eec\u7684\u88c5\u9970\u5668\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u8005\u4f20\u5165\u7684\u53c2\u6570\u6765\u5b9a\u5236\u7684\uff0c\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u6211\u4eec\u5728\u540e\u9762\u7528\u5230\u5b83\u7684\u65f6\u5019\u518d\u4e3a\u5927\u5bb6\u8bb2\u89e3\u3002","title":"\u88c5\u9970\u5668"},{"location":"%E7%AC%AC16%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E9%AB%98%E7%BA%A7%E5%BA%94%E7%94%A8/#_2","text":"Python\u4e2d\u5141\u8bb8\u51fd\u6570\u5d4c\u5957\u5b9a\u4e49\uff0c\u4e5f\u5141\u8bb8\u51fd\u6570\u4e4b\u95f4\u76f8\u4e92\u8c03\u7528\uff0c\u800c\u4e14\u4e00\u4e2a\u51fd\u6570\u8fd8\u53ef\u4ee5\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u8c03\u7528\u81ea\u8eab\u3002\u51fd\u6570\u81ea\u5df1\u8c03\u7528\u81ea\u5df1\u79f0\u4e3a\u9012\u5f52\u8c03\u7528\uff0c\u90a3\u4e48\u9012\u5f52\u8c03\u7528\u6709\u4ec0\u4e48\u7528\u5904\u5462\uff1f\u73b0\u5b9e\u4e2d\uff0c\u6709\u5f88\u591a\u95ee\u9898\u7684\u5b9a\u4e49\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u9012\u5f52\u5b9a\u4e49\uff0c\u4f8b\u5982\u6211\u4eec\u4e4b\u524d\u8bb2\u5230\u7684\u9636\u4e58\uff0c\u975e\u8d1f\u6574\u6570 N \u7684\u9636\u4e58\u662f N \u4e58\u4ee5 N-1 \u7684\u9636\u4e58\uff0c\u5373$ N! = N \\times (N-1)! $\uff0c\u5b9a\u4e49\u7684\u5de6\u8fb9\u548c\u53f3\u8fb9\u90fd\u51fa\u73b0\u4e86\u9636\u4e58\u7684\u6982\u5ff5\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u5b9a\u4e49\u3002\u65e2\u7136\u5982\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9012\u5f52\u8c03\u7528\u7684\u65b9\u5f0f\u6765\u5199\u4e00\u4e2a\u6c42\u9636\u4e58\u7684\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def fac ( num ): if num in ( 0 , 1 ): return 1 return num * fac ( num - 1 ) \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c fac \u51fd\u6570\u4e2d\u53c8\u8c03\u7528\u4e86 fac \u51fd\u6570\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u9012\u5f52\u8c03\u7528\u3002\u4ee3\u7801\u7b2c2\u884c\u7684 if \u6761\u4ef6\u53eb\u505a\u9012\u5f52\u7684\u6536\u655b\u6761\u4ef6\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4ec0\u4e48\u65f6\u5019\u8981\u7ed3\u675f\u51fd\u6570\u7684\u9012\u5f52\u8c03\u7528\uff0c\u5728\u8ba1\u7b97\u9636\u4e58\u65f6\uff0c\u5982\u679c\u8ba1\u7b97\u5230 0 \u6216 1 \u7684\u9636\u4e58\uff0c\u5c31\u505c\u6b62\u9012\u5f52\u8c03\u7528\uff0c\u76f4\u63a5\u8fd4\u56de 1 \uff1b\u4ee3\u7801\u7b2c4\u884c\u7684 num * fac(num - 1) \u662f\u9012\u5f52\u516c\u5f0f\uff0c\u4e5f\u5c31\u662f\u9636\u4e58\u7684\u9012\u5f52\u5b9a\u4e49\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u7b80\u5355\u7684\u5206\u6790\u4e0b\uff0c\u5982\u679c\u7528 fac(5) \u8ba1\u7b97 5 \u7684\u9636\u4e58\uff0c\u6574\u4e2a\u8fc7\u7a0b\u4f1a\u662f\u600e\u6837\u7684\u3002 # \u9012\u5f52\u8c03\u7528\u51fd\u6570\u5165\u6808 # 5 * fac(4) # 5 * (4 * fac(3)) # 5 * (4 * (3 * fac(2))) # 5 * (4 * (3 * (2 * fac(1)))) # \u505c\u6b62\u9012\u5f52\u51fd\u6570\u51fa\u6808 # 5 * (4 * (3 * (2 * 1))) # 5 * (4 * (3 * 2)) # 5 * (4 * 6) # 5 * 24 # 120 print ( fac ( 5 )) # 120 \u6ce8\u610f\uff0c\u51fd\u6570\u8c03\u7528\u4f1a\u901a\u8fc7\u5185\u5b58\u4e2d\u79f0\u4e3a\u201c\u6808\u201d\uff08stack\uff09\u7684\u6570\u636e\u7ed3\u6784\u6765\u4fdd\u5b58\u5f53\u524d\u4ee3\u7801\u7684\u6267\u884c\u73b0\u573a\uff0c\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\u4f1a\u901a\u8fc7\u8fd9\u4e2a\u6808\u7ed3\u6784\u6062\u590d\u4e4b\u524d\u7684\u6267\u884c\u73b0\u573a\u3002\u6808\u662f\u4e00\u79cd\u5148\u8fdb\u540e\u51fa\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6700\u65e9\u5165\u6808\u7684\u51fd\u6570\u6700\u540e\u624d\u4f1a\u8fd4\u56de\uff0c\u800c\u6700\u540e\u5165\u6808\u7684\u51fd\u6570\u4f1a\u6700\u5148\u8fd4\u56de\u3002\u4f8b\u5982\u8c03\u7528\u4e00\u4e2a\u540d\u4e3a a \u7684\u51fd\u6570\uff0c\u51fd\u6570 a \u7684\u6267\u884c\u4f53\u4e2d\u53c8\u8c03\u7528\u4e86\u51fd\u6570 b \uff0c\u51fd\u6570 b \u7684\u6267\u884c\u4f53\u4e2d\u53c8\u8c03\u7528\u4e86\u51fd\u6570 c \uff0c\u90a3\u4e48\u6700\u5148\u5165\u6808\u7684\u51fd\u6570\u662f a \uff0c\u6700\u5148\u51fa\u6808\u7684\u51fd\u6570\u662f c \u3002\u6bcf\u8fdb\u5165\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u6808\u5c31\u4f1a\u589e\u52a0\u4e00\u5c42\u6808\u5e27\uff08stack frame\uff09\uff0c\u6808\u5e27\u5c31\u662f\u6211\u4eec\u521a\u624d\u63d0\u5230\u7684\u4fdd\u5b58\u5f53\u524d\u4ee3\u7801\u6267\u884c\u73b0\u573a\u7684\u7ed3\u6784\uff1b\u6bcf\u5f53\u51fd\u6570\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u6808\u5c31\u4f1a\u51cf\u5c11\u4e00\u5c42\u6808\u5e27\u3002\u901a\u5e38\uff0c\u5185\u5b58\u4e2d\u7684\u6808\u7a7a\u95f4\u5f88\u5c0f\uff0c\u56e0\u6b64\u9012\u5f52\u8c03\u7528\u7684\u6b21\u6570\u5982\u679c\u592a\u591a\uff0c\u4f1a\u5bfc\u81f4\u6808\u6ea2\u51fa\uff08stack overflow\uff09\uff0c\u6240\u4ee5 \u9012\u5f52\u8c03\u7528\u4e00\u5b9a\u8981\u786e\u4fdd\u80fd\u591f\u5feb\u901f\u6536\u655b \u3002\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u6267\u884c fac(5000) \uff0c\u770b\u770b\u662f\u4e0d\u662f\u4f1a\u63d0\u793a RecursionError \u9519\u8bef\uff0c\u9519\u8bef\u6d88\u606f\u4e3a\uff1a maximum recursion depth exceeded in comparison \uff08\u8d85\u51fa\u6700\u5927\u9012\u5f52\u6df1\u5ea6\uff09\uff0c\u5176\u5b9e\u5c31\u662f\u53d1\u751f\u4e86\u6808\u6ea2\u51fa\u3002 \u6211\u4eec\u4f7f\u7528\u7684Python\u5b98\u65b9\u89e3\u91ca\u5668\uff0c\u9ed8\u8ba4\u5c06\u51fd\u6570\u8c03\u7528\u7684\u6808\u7ed3\u6784\u6700\u5927\u6df1\u5ea6\u8bbe\u7f6e\u4e3a 1000 \u5c42\u3002\u5982\u679c\u8d85\u51fa\u8fd9\u4e2a\u6df1\u5ea6\uff0c\u5c31\u4f1a\u53d1\u751f\u4e0a\u9762\u8bf4\u7684 RecursionError \u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 sys \u6a21\u5757\u7684 setrecursionlimit \u51fd\u6570\u6765\u6539\u53d8\u9012\u5f52\u8c03\u7528\u7684\u6700\u5927\u6df1\u5ea6\uff0c\u4f8b\u5982\uff1a sys.setrecursionlimit(10000) \uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba9\u4e0a\u9762\u7684 fac(5000) \u987a\u5229\u6267\u884c\u51fa\u7ed3\u679c\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u8ba9\u9012\u5f52\u5feb\u901f\u6536\u655b\u624d\u662f\u6211\u4eec\u5e94\u8be5\u505a\u7684\u4e8b\u60c5\uff0c\u5426\u5219\u5c31\u5e94\u8be5\u8003\u8651\u4f7f\u7528\u5faa\u73af\u9012\u63a8\u800c\u4e0d\u662f\u9012\u5f52\u3002 \u518d\u4e3e\u4e00\u4e2a\u4e4b\u524d\u8bb2\u8fc7\u7684\u751f\u6210\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u4f8b\u5b50\uff0c\u56e0\u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u524d\u4e24\u4e2a\u6570\u90fd\u662f 1 \uff0c\u4ece\u7b2c3\u4e2a\u6570\u5f00\u59cb\uff0c\u6bcf\u4e2a\u6570\u662f\u524d\u4e24\u4e2a\u6570\u76f8\u52a0\u7684\u548c\uff0c\u53ef\u4ee5\u8bb0\u4e3a f(n) = f(n - 1) + f(n - 2) \uff0c\u5f88\u663e\u7136\u8fd9\u53c8\u662f\u4e00\u4e2a\u9012\u5f52\u7684\u5b9a\u4e49\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u9012\u5f52\u8c03\u7528\u51fd\u6570\u6765\u8ba1\u7b97\u7b2c\u200b n \u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u3002 def fib ( n ): if n in ( 1 , 2 ): return 1 return fib ( n - 1 ) + fib ( n - 2 ) # \u6253\u5370\u524d20\u4e2a\u6590\u6ce2\u90a3\u5951\u6570 for i in range ( 1 , 21 ): print ( fib ( i )) \u9700\u8981\u63d0\u9192\u5927\u5bb6\uff0c\u4e0a\u9762\u8ba1\u7b97\u6590\u6ce2\u90a3\u5951\u6570\u7684\u4ee3\u7801\u867d\u7136\u770b\u8d77\u6765\u975e\u5e38\u7b80\u5355\u660e\u4e86\uff0c\u4f46\u6267\u884c\u6027\u80fd\u662f\u6bd4\u8f83\u7cdf\u7cd5\u7684\uff0c\u539f\u56e0\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u601d\u8003\u4e00\u4e0b\uff0c\u66f4\u597d\u7684\u505a\u6cd5\u8fd8\u662f\u4e4b\u524d\u8bb2\u8fc7\u7684\u4f7f\u7528\u5faa\u73af\u9012\u63a8\u7684\u65b9\u5f0f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 def fib ( n ): a , b = 0 , 1 for _ in range ( n ): a , b = b , a + b return a","title":"\u9012\u5f52\u8c03\u7528"},{"location":"%E7%AC%AC16%E8%AF%BE%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E9%AB%98%E7%BA%A7%E5%BA%94%E7%94%A8/#_3","text":"\u88c5\u9970\u5668\u662fPython\u4e2d\u7684\u7279\u8272\u8bed\u6cd5\uff0c \u53ef\u4ee5\u901a\u8fc7\u88c5\u9970\u5668\u6765\u589e\u5f3a\u73b0\u6709\u7684\u51fd\u6570 \uff0c\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u6709\u7528\u7684\u7f16\u7a0b\u6280\u5de7\u3002\u4e00\u4e9b\u590d\u6742\u7684\u95ee\u9898\u7528\u51fd\u6570\u9012\u5f52\u8c03\u7528\u7684\u65b9\u5f0f\u5199\u8d77\u6765\u771f\u7684\u5f88\u7b80\u5355\uff0c\u4f46\u662f \u51fd\u6570\u7684\u9012\u5f52\u8c03\u7528\u4e00\u5b9a\u8981\u6ce8\u610f\u6536\u655b\u6761\u4ef6\u548c\u9012\u5f52\u516c\u5f0f \uff0c\u627e\u5230\u9012\u5f52\u516c\u5f0f\u624d\u6709\u673a\u4f1a\u4f7f\u7528\u9012\u5f52\u8c03\u7528\uff0c\u800c\u6536\u655b\u6761\u4ef6\u786e\u5b9a\u4e86\u9012\u5f52\u4ec0\u4e48\u65f6\u5019\u505c\u4e0b\u6765\u3002\u51fd\u6570\u8c03\u7528\u901a\u8fc7\u5185\u5b58\u4e2d\u7684\u6808\u7a7a\u95f4\u6765\u4fdd\u5b58\u73b0\u573a\u548c\u6062\u590d\u73b0\u573a\uff0c\u6808\u7a7a\u95f4\u901a\u5e38\u90fd\u5f88\u5c0f\uff0c\u6240\u4ee5 \u9012\u5f52\u5982\u679c\u4e0d\u80fd\u8fc5\u901f\u6536\u655b\uff0c\u5f88\u53ef\u80fd\u4f1a\u5f15\u53d1\u6808\u6ea2\u51fa\u9519\u8bef\uff0c\u4ece\u800c\u5bfc\u81f4\u7a0b\u5e8f\u7684\u5d29\u6e83 \u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC17%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/","text":"\u7b2c17\u8bfe\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5165\u95e8 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u662f\u4e00\u79cd\u975e\u5e38\u6d41\u884c\u7684 \u7f16\u7a0b\u8303\u5f0f \uff08programming paradigm\uff09\uff0c\u6240\u8c13\u7f16\u7a0b\u8303\u5f0f\u5c31\u662f \u7a0b\u5e8f\u8bbe\u8ba1\u7684\u65b9\u6cd5\u8bba \uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u7a0b\u5e8f\u5458\u5bf9\u7a0b\u5e8f\u7684\u8ba4\u77e5\u548c\u7406\u89e3\u4ee5\u53ca\u4ed6\u4eec\u7f16\u5199\u4ee3\u7801\u7684\u65b9\u5f0f\u3002 \u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u8bf4\u8fc7\u201c \u7a0b\u5e8f\u662f\u6307\u4ee4\u7684\u96c6\u5408 \u201d\uff0c\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u7684\u8bed\u53e5\u4f1a\u53d8\u6210\u4e00\u6761\u6216\u591a\u6761\u6307\u4ee4\uff0c\u7136\u540e\u7531CPU\uff08\u4e2d\u592e\u5904\u7406\u5668\uff09\u53bb\u6267\u884c\u3002\u4e3a\u4e86\u7b80\u5316\u7a0b\u5e8f\u7684\u8bbe\u8ba1\uff0c\u6211\u4eec\u53c8\u8bb2\u5230\u4e86\u51fd\u6570\uff0c \u628a\u76f8\u5bf9\u72ec\u7acb\u4e14\u7ecf\u5e38\u91cd\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u653e\u7f6e\u5230\u51fd\u6570\u4e2d \uff0c\u5728\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u4ee3\u7801\u7684\u65f6\u5019\u8c03\u7528\u51fd\u6570\u5373\u53ef\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u8fc7\u4e8e\u590d\u6742\u548c\u81c3\u80bf\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u8fdb\u4e00\u6b65 \u5c06\u51fd\u6570\u8fdb\u4e00\u6b65\u62c6\u5206\u4e3a\u591a\u4e2a\u5b50\u51fd\u6570 \u6765\u964d\u4f4e\u7cfb\u7edf\u7684\u590d\u6742\u6027\u3002 \u4e0d\u77e5\u5927\u5bb6\u662f\u5426\u53d1\u73b0\uff0c\u6211\u4eec\u7684\u7f16\u7a0b\u5de5\u4f5c\u5176\u5b9e\u662f\u5199\u7a0b\u5e8f\u7684\u4eba\u6309\u7167\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u901a\u8fc7\u4ee3\u7801\u63a7\u5236\u673a\u5668\u5b8c\u6210\u4efb\u52a1\u3002\u4f46\u662f\uff0c\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u4eba\u7c7b\u6b63\u5e38\u7684\u601d\u7ef4\u6a21\u5f0f\u662f\u4e0d\u540c\u7684\uff0c\u5982\u679c\u7f16\u7a0b\u5c31\u5fc5\u987b\u629b\u5f03\u4eba\u7c7b\u6b63\u5e38\u7684\u601d\u7ef4\u65b9\u5f0f\u53bb\u8fce\u5408\u8ba1\u7b97\u673a\uff0c\u7f16\u7a0b\u7684\u4e50\u8da3\u5c31\u5c11\u4e86\u5f88\u591a\uff0c\u800c\u201c\u6bcf\u4e2a\u4eba\u90fd\u5e94\u8be5\u5b66\u4e60\u7f16\u7a0b\u201d\u7684\u8c6a\u8a00\u58ee\u8bed\u4e5f\u5c31\u53ea\u80fd\u558a\u558a\u53e3\u53f7\u800c\u5df2\u3002\u8fd9\u91cc\uff0c\u6211\u60f3\u8bf4\u7684\u5e76\u4e0d\u662f\u6211\u4eec\u4e0d\u80fd\u6309\u7167\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u53bb\u7f16\u5199\u4ee3\u7801\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u9700\u8981\u5f00\u53d1\u4e00\u4e2a\u590d\u6742\u7684\u7cfb\u7edf\u65f6\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u8ba9\u4ee3\u7801\u8fc7\u4e8e\u590d\u6742\uff0c\u4ece\u800c\u5bfc\u81f4\u5f00\u53d1\u548c\u7ef4\u62a4\u5de5\u4f5c\u90fd\u53d8\u5f97\u4e3e\u6b65\u7ef4\u8270\u3002 \u968f\u7740\u8f6f\u4ef6\u590d\u6742\u6027\u7684\u589e\u52a0\uff0c\u7f16\u5199\u6b63\u786e\u53ef\u9760\u7684\u4ee3\u7801\u4f1a\u53d8\u6210\u4e86\u4e00\u9879\u6781\u4e3a\u8270\u5de8\u7684\u4efb\u52a1\uff0c\u8fd9\u4e5f\u662f\u5f88\u591a\u4eba\u90fd\u575a\u4fe1\u201c\u8f6f\u4ef6\u5f00\u53d1\u662f\u4eba\u7c7b\u6539\u9020\u4e16\u754c\u6240\u6709\u6d3b\u52a8\u4e2d\u6700\u4e3a\u590d\u6742\u7684\u6d3b\u52a8\u201d\u7684\u539f\u56e0\u3002\u5982\u4f55\u7528\u7a0b\u5e8f\u63cf\u8ff0\u590d\u6742\u7cfb\u7edf\u548c\u89e3\u51b3\u590d\u6742\u95ee\u9898\uff0c\u5c31\u6210\u4e3a\u4e86\u6240\u6709\u7a0b\u5e8f\u5458\u5fc5\u987b\u8981\u601d\u8003\u548c\u76f4\u9762\u7684\u95ee\u9898\u3002\u8bde\u751f\u4e8e\u4e0a\u4e16\u7eaa70\u5e74\u4ee3\u7684Smalltalk\u8bed\u8a00\u8ba9\u8f6f\u4ef6\u5f00\u53d1\u8005\u770b\u5230\u4e86\u5e0c\u671b\uff0c\u56e0\u4e3a\u5b83\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u7f16\u7a0b\u8303\u5f0f\u53eb\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e16\u754c\u91cc\uff0c\u7a0b\u5e8f\u4e2d\u7684 \u6570\u636e\u548c\u64cd\u4f5c\u6570\u636e\u7684\u51fd\u6570\u662f\u4e00\u4e2a\u903b\u8f91\u4e0a\u7684\u6574\u4f53 \uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \u5bf9\u8c61 \uff0c \u5bf9\u8c61\u53ef\u4ee5\u63a5\u6536\u6d88\u606f \uff0c\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u5c31\u662f \u521b\u5efa\u5bf9\u8c61\u5e76\u5411\u5bf9\u8c61\u53d1\u51fa\u5404\u79cd\u5404\u6837\u7684\u6d88\u606f \uff1b\u901a\u8fc7\u6d88\u606f\u4f20\u9012\uff0c\u7a0b\u5e8f\u4e2d\u7684\u591a\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u534f\u540c\u5de5\u4f5c\uff0c\u8fd9\u6837\u5c31\u80fd\u6784\u9020\u51fa\u590d\u6742\u7684\u7cfb\u7edf\u5e76\u89e3\u51b3\u73b0\u5b9e\u4e2d\u7684\u95ee\u9898\u3002\u5f53\u7136\uff0c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u96cf\u5f62\u8fd8\u53ef\u4ee5\u5411\u524d\u8ffd\u6eaf\u5230\u66f4\u65e9\u671f\u7684Simula\u8bed\u8a00\uff0c\u4f46\u8fd9\u4e0d\u662f\u6211\u4eec\u73b0\u5728\u8981\u8ba8\u8bba\u7684\u91cd\u70b9\u3002 \u8bf4\u660e\uff1a \u4eca\u5929\u6211\u4eec\u4f7f\u7528\u7684\u5f88\u591a\u9ad8\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u90fd\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0c\u4f46\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e5f\u4e0d\u662f\u89e3\u51b3\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u6240\u6709\u95ee\u9898\u7684\u201c\u94f6\u5f39\u201d\uff0c\u6216\u8005\u8bf4\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fd9\u4e2a\u884c\u4e1a\u76ee\u524d\u8fd8\u627e\u4e0d\u5230\u8fd9\u79cd\u6240\u8c13\u7684\u201c\u94f6\u5f39\u201d\u3002\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003IBM360\u7cfb\u7edf\u4e4b\u7236\u5f17\u96f7\u5fb7\u91cc\u514b\u00b7\u5e03\u9c81\u514b\u65af\u6240\u53d1\u8868\u7684\u8bba\u6587\u300a\u6ca1\u6709\u94f6\u5f39\uff1a\u8f6f\u4ef6\u5de5\u7a0b\u7684\u672c\u8d28\u6027\u4e0e\u9644\u5c5e\u6027\u5de5\u4f5c\u300b\u6216\u8f6f\u4ef6\u5de5\u7a0b\u7684\u7ecf\u5178\u8457\u4f5c\u300a\u4eba\u6708\u795e\u8bdd\u300b\u4e00\u4e66\u3002 \u7c7b\u548c\u5bf9\u8c61 \u5982\u679c\u8981\u7528\u4e00\u53e5\u8bdd\u6765\u6982\u62ec\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0c\u6211\u8ba4\u4e3a\u4e0b\u9762\u7684\u8bf4\u6cd5\u662f\u76f8\u5f53\u7cbe\u8f9f\u548c\u51c6\u786e\u7684\u3002 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b \uff1a\u628a\u4e00\u7ec4\u6570\u636e\u548c\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u7ec4\u6210 \u5bf9\u8c61 \uff0c\u628a\u884c\u4e3a\u76f8\u540c\u7684\u5bf9\u8c61\u5f52\u7eb3\u4e3a \u7c7b \uff0c\u901a\u8fc7 \u5c01\u88c5 \u9690\u85cf\u5bf9\u8c61\u7684\u5185\u90e8\u7ec6\u8282\uff0c\u901a\u8fc7 \u7ee7\u627f \u5b9e\u73b0\u7c7b\u7684\u7279\u5316\u548c\u6cdb\u5316\uff0c\u901a\u8fc7 \u591a\u6001 \u5b9e\u73b0\u57fa\u4e8e\u5bf9\u8c61\u7c7b\u578b\u7684\u52a8\u6001\u5206\u6d3e\u3002 \u8fd9\u53e5\u8bdd\u5bf9\u521d\u5b66\u8005\u6765\u8bf4\u53ef\u80fd\u4e0d\u90a3\u4e48\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u662f\u6211\u53ef\u4ee5\u5148\u4e3a\u5927\u5bb6\u5708\u51fa\u51e0\u4e2a\u5173\u952e\u8bcd\uff1a \u5bf9\u8c61 \uff08object\uff09\u3001 \u7c7b \uff08class\uff09\u3001 \u5c01\u88c5 \uff08encapsulation\uff09\u3001 \u7ee7\u627f \uff08inheritance\uff09\u3001 \u591a\u6001 \uff08polymorphism\uff09\u3002 \u6211\u4eec\u5148\u8bf4\u8bf4\u7c7b\u548c\u5bf9\u8c61\u8fd9\u4e24\u4e2a\u8bcd\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\uff0c \u7c7b\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u5bf9\u8c61\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u6982\u5ff5 \u3002\u6211\u4eec\u628a\u540c\u4e00\u7c7b\u5bf9\u8c61\u7684\u5171\u540c\u7279\u5f81\u62bd\u53d6\u51fa\u6765\u5c31\u662f\u4e00\u4e2a\u7c7b\uff0c\u6bd4\u5982\u6211\u4eec\u7ecf\u5e38\u8bf4\u7684\u4eba\u7c7b\uff0c\u8fd9\u662f\u4e00\u4e2a\u62bd\u8c61\u6982\u5ff5\uff0c\u800c\u6211\u4eec\u6bcf\u4e2a\u4eba\u5c31\u662f\u4eba\u7c7b\u7684\u8fd9\u4e2a\u62bd\u8c61\u6982\u5ff5\u4e0b\u7684\u5b9e\u5b9e\u5728\u5728\u7684\u5b58\u5728\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002\u7b80\u800c\u8a00\u4e4b\uff0c \u7c7b\u662f\u5bf9\u8c61\u7684\u84dd\u56fe\u548c\u6a21\u677f\uff0c\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\uff0c\u662f\u53ef\u4ee5\u63a5\u53d7\u6d88\u606f\u7684\u5b9e\u4f53 \u3002 \u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e16\u754c\u4e2d\uff0c \u4e00\u5207\u7686\u4e3a\u5bf9\u8c61 \uff0c \u5bf9\u8c61\u90fd\u6709\u5c5e\u6027\u548c\u884c\u4e3a \uff0c \u6bcf\u4e2a\u5bf9\u8c61\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684 \uff0c\u800c\u4e14 \u5bf9\u8c61\u4e00\u5b9a\u5c5e\u4e8e\u67d0\u4e2a\u7c7b \u3002\u5bf9\u8c61\u7684\u5c5e\u6027\u662f\u5bf9\u8c61\u7684\u9759\u6001\u7279\u5f81\uff0c\u5bf9\u8c61\u7684\u884c\u4e3a\u662f\u5bf9\u8c61\u7684\u52a8\u6001\u7279\u5f81\u3002\u6309\u7167\u4e0a\u9762\u7684\u8bf4\u6cd5\uff0c\u5982\u679c\u6211\u4eec\u628a\u62e5\u6709\u5171\u540c\u7279\u5f81\u7684\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u884c\u4e3a\u90fd\u62bd\u53d6\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u5b9a\u4e49\u51fa\u4e00\u4e2a\u7c7b\u3002 \u5b9a\u4e49\u7c7b \u5728Python\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 class \u5173\u952e\u5b57\u52a0\u4e0a\u7c7b\u540d\u6765\u5b9a\u4e49\u7c7b\uff0c\u901a\u8fc7\u7f29\u8fdb\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u7c7b\u7684\u4ee3\u7801\u5757\uff0c\u5c31\u5982\u540c\u5b9a\u4e49\u51fd\u6570\u90a3\u6837\u3002\u5728\u7c7b\u7684\u4ee3\u7801\u5757\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5199\u4e00\u4e9b\u51fd\u6570\uff0c\u6211\u4eec\u8bf4\u8fc7\u7c7b\u662f\u4e00\u4e2a\u62bd\u8c61\u6982\u5ff5\uff0c\u90a3\u4e48\u8fd9\u4e9b\u51fd\u6570\u5c31\u662f\u6211\u4eec\u5bf9\u4e00\u7c7b\u5bf9\u8c61\u5171\u540c\u7684\u52a8\u6001\u7279\u5f81\u7684\u63d0\u53d6\u3002\u5199\u5728\u7c7b\u91cc\u9762\u7684\u51fd\u6570\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a \u65b9\u6cd5 \uff0c\u65b9\u6cd5\u5c31\u662f\u5bf9\u8c61\u7684\u884c\u4e3a\uff0c\u4e5f\u5c31\u662f\u5bf9\u8c61\u53ef\u4ee5\u63a5\u6536\u7684\u6d88\u606f\u3002\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u901a\u5e38\u90fd\u662f self \uff0c\u5b83\u4ee3\u8868\u4e86\u63a5\u6536\u8fd9\u4e2a\u6d88\u606f\u7684\u5bf9\u8c61\u672c\u8eab\u3002 class Student : def study ( self , course_name ): print ( f '\u5b66\u751f\u6b63\u5728\u5b66\u4e60 { course_name } .' ) def play ( self ): print ( f '\u5b66\u751f\u6b63\u5728\u73a9\u6e38\u620f.' ) \u521b\u5efa\u548c\u4f7f\u7528\u5bf9\u8c61 \u5728\u6211\u4eec\u5b9a\u4e49\u597d\u4e00\u4e2a\u7c7b\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u6784\u9020\u5668\u8bed\u6cd5\u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 stu1 = Student () stu2 = Student () print ( stu1 ) # <__main__.Student object at 0x10ad5ac50> print ( stu2 ) # <__main__.Student object at 0x10ad5acd0> print ( hex ( id ( stu1 )), hex ( id ( stu2 ))) # 0x10ad5ac50 0x10ad5acd0 \u5728\u7c7b\u7684\u540d\u5b57\u540e\u8ddf\u4e0a\u5706\u62ec\u53f7\u5c31\u662f\u6240\u8c13\u7684\u6784\u9020\u5668\u8bed\u6cd5\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e86\u4e24\u4e2a\u5b66\u751f\u5bf9\u8c61\uff0c\u4e00\u4e2a\u8d4b\u503c\u7ed9\u53d8\u91cf stu1 \uff0c\u4e00\u4e2a\u590d\u5236\u7ed9\u53d8\u91cf stu2 \u3002\u5f53\u6211\u4eec\u7528 print \u51fd\u6570\u6253\u5370 stu1 \u548c stu2 \u4e24\u4e2a\u53d8\u91cf\u65f6\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u8f93\u51fa\u4e86\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\uff08\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\uff09\uff0c\u8ddf\u6211\u4eec\u7528 id \u51fd\u6570\u67e5\u770b\u5bf9\u8c61\u6807\u8bc6\u83b7\u5f97\u7684\u503c\u662f\u76f8\u540c\u7684\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u544a\u8bc9\u5927\u5bb6\uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u53d8\u91cf\u5176\u5b9e\u4fdd\u5b58\u7684\u662f\u4e00\u4e2a\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u903b\u8f91\u5730\u5740\uff08\u4f4d\u7f6e\uff09\uff0c\u901a\u8fc7\u8fd9\u4e2a\u903b\u8f91\u5730\u5740\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u5185\u5b58\u4e2d\u627e\u5230\u8fd9\u4e2a\u5bf9\u8c61\u3002\u6240\u4ee5 stu3 = stu2 \u8fd9\u6837\u7684\u8d4b\u503c\u8bed\u53e5\u5e76\u6ca1\u6709\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\uff0c\u53ea\u662f\u7528\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u4fdd\u5b58\u4e86\u5df2\u6709\u5bf9\u8c61\u7684\u5730\u5740\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c1d\u8bd5\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\uff0c\u5373\u8c03\u7528\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002\u521a\u624d\u7684 Student \u7c7b\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86 study \u548c play \u4e24\u4e2a\u65b9\u6cd5\uff0c\u4e24\u4e2a\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570 self \u4ee3\u8868\u4e86\u63a5\u6536\u6d88\u606f\u7684\u5b66\u751f\u5bf9\u8c61\uff0c study \u65b9\u6cd5\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5b66\u4e60\u7684\u8bfe\u7a0b\u540d\u79f0\u3002Python\u4e2d\uff0c\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u3002 # \u901a\u8fc7\u201c\u7c7b.\u65b9\u6cd5\u201d\u8c03\u7528\u65b9\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u63a5\u6536\u6d88\u606f\u7684\u5bf9\u8c61\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5b66\u4e60\u7684\u8bfe\u7a0b\u540d\u79f0 Student . study ( stu1 , 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) # \u5b66\u751f\u6b63\u5728\u5b66\u4e60Python\u7a0b\u5e8f\u8bbe\u8ba1. # \u901a\u8fc7\u201c\u5bf9\u8c61.\u65b9\u6cd5\u201d\u8c03\u7528\u65b9\u6cd5\uff0c\u70b9\u524d\u9762\u7684\u5bf9\u8c61\u5c31\u662f\u63a5\u6536\u6d88\u606f\u7684\u5bf9\u8c61\uff0c\u53ea\u9700\u8981\u4f20\u5165\u7b2c\u4e8c\u4e2a\u53c2\u6570 stu1 . study ( 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) # \u5b66\u751f\u6b63\u5728\u5b66\u4e60Python\u7a0b\u5e8f\u8bbe\u8ba1. Student . play ( stu2 ) # \u5b66\u751f\u6b63\u5728\u73a9\u6e38\u620f. stu2 . play () # \u5b66\u751f\u6b63\u5728\u73a9\u6e38\u620f. \u521d\u59cb\u5316\u65b9\u6cd5 \u5927\u5bb6\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u521a\u624d\u6211\u4eec\u521b\u5efa\u7684\u5b66\u751f\u5bf9\u8c61\u53ea\u6709\u884c\u4e3a\u6ca1\u6709\u5c5e\u6027\uff0c\u5982\u679c\u8981\u7ed9\u5b66\u751f\u5bf9\u8c61\u5b9a\u4e49\u5c5e\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539 Student \u7c7b\uff0c\u4e3a\u5176\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a __init__ \u7684\u65b9\u6cd5\u3002\u5728\u6211\u4eec\u8c03\u7528 Student \u7c7b\u7684\u6784\u9020\u5668\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u9996\u5148\u4f1a\u5728\u5185\u5b58\u4e2d\u83b7\u5f97\u4fdd\u5b58\u5b66\u751f\u5bf9\u8c61\u6240\u9700\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u540e\u901a\u8fc7\u81ea\u52a8\u6267\u884c __init__ \u65b9\u6cd5\uff0c\u5b8c\u6210\u5bf9\u5185\u5b58\u7684\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u628a\u6570\u636e\u653e\u5230\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ed9 Student \u7c7b\u6dfb\u52a0 __init__ \u65b9\u6cd5\u7684\u65b9\u5f0f\u4e3a\u5b66\u751f\u5bf9\u8c61\u6307\u5b9a\u5c5e\u6027\uff0c\u540c\u65f6\u5b8c\u6210\u5bf9\u5c5e\u6027\u8d4b\u521d\u59cb\u503c\u7684\u64cd\u4f5c\uff0c\u6b63\u56e0\u5982\u6b64\uff0c __init__ \u65b9\u6cd5\u901a\u5e38\u4e5f\u88ab\u79f0\u4e3a\u521d\u59cb\u5316\u65b9\u6cd5\u3002 \u6211\u4eec\u5bf9\u4e0a\u9762\u7684 Student \u7c7b\u7a0d\u4f5c\u4fee\u6539\uff0c\u7ed9\u5b66\u751f\u5bf9\u8c61\u6dfb\u52a0 name \uff08\u59d3\u540d\uff09\u548c age \uff08\u5e74\u9f84\uff09\u4e24\u4e2a\u5c5e\u6027\u3002 class Student : \"\"\"\u5b66\u751f\"\"\" def __init__ ( self , name , age ): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\"\"\" self . name = name self . age = age def study ( self , course_name ): \"\"\"\u5b66\u4e60\"\"\" print ( f ' { self . name } \u6b63\u5728\u5b66\u4e60 { course_name } .' ) def play ( self ): \"\"\"\u73a9\u800d\"\"\" print ( f ' { self . name } \u6b63\u5728\u73a9\u6e38\u620f.' ) \u4fee\u6539\u521a\u624d\u521b\u5efa\u5bf9\u8c61\u548c\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\u7684\u4ee3\u7801\uff0c\u91cd\u65b0\u6267\u884c\u4e00\u6b21\uff0c\u770b\u770b\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u6709\u4ec0\u4e48\u53d8\u5316\u3002 # \u7531\u4e8e\u521d\u59cb\u5316\u65b9\u6cd5\u9664\u4e86self\u4e4b\u5916\u8fd8\u6709\u4e24\u4e2a\u53c2\u6570 # \u6240\u4ee5\u8c03\u7528Student\u7c7b\u7684\u6784\u9020\u5668\u521b\u5efa\u5bf9\u8c61\u65f6\u8981\u4f20\u5165\u8fd9\u4e24\u4e2a\u53c2\u6570 stu1 = Student ( '\u9a86\u660a' , 40 ) stu2 = Student ( '\u738b\u5927\u9524' , 15 ) stu1 . study ( 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) # \u9a86\u660a\u6b63\u5728\u5b66\u4e60Python\u7a0b\u5e8f\u8bbe\u8ba1. stu2 . play () # \u738b\u5927\u9524\u6b63\u5728\u73a9\u6e38\u620f. \u6253\u5370\u5bf9\u8c61 \u4e0a\u9762\u6211\u4eec\u901a\u8fc7 __init__ \u65b9\u6cd5\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u4e3a\u5bf9\u8c61\u7ed1\u5b9a\u4e86\u5c5e\u6027\u5e76\u8d4b\u4e88\u4e86\u521d\u59cb\u503c\u3002\u5728Python\u4e2d\uff0c\u4ee5\u4e24\u4e2a\u4e0b\u5212\u7ebf __ \uff08\u8bfb\u4f5c\u201cdunder\u201d\uff09\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u65b9\u6cd5\u901a\u5e38\u90fd\u662f\u6709\u7279\u6b8a\u7528\u9014\u548c\u610f\u4e49\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u4e00\u822c\u79f0\u4e4b\u4e3a \u9b54\u672f\u65b9\u6cd5 \u6216 \u9b54\u6cd5\u65b9\u6cd5 \u3002\u5982\u679c\u6211\u4eec\u5728\u6253\u5370\u5bf9\u8c61\u7684\u65f6\u5019\u4e0d\u5e0c\u671b\u770b\u5230\u5bf9\u8c61\u7684\u5730\u5740\u800c\u662f\u770b\u5230\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u7c7b\u4e2d\u653e\u7f6e __repr__ \u9b54\u672f\u65b9\u6cd5\u6765\u505a\u5230\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u5c31\u662f\u7528 print \u51fd\u6570\u6253\u5370\u5bf9\u8c61\u7684\u65f6\u5019\u4f1a\u663e\u793a\u7684\u5185\u5bb9\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Student : \"\"\"\u5b66\u751f\"\"\" def __init__ ( self , name , age ): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\"\"\" self . name = name self . age = age def study ( self , course_name ): \"\"\"\u5b66\u4e60\"\"\" print ( f ' { self . name } \u6b63\u5728\u5b66\u4e60 { course_name } .' ) def play ( self ): \"\"\"\u73a9\u800d\"\"\" print ( f ' { self . name } \u6b63\u5728\u73a9\u6e38\u620f.' ) def __repr__ ( self ): return f ' { self . name } : { self . age } ' stu1 = Student ( '\u9a86\u660a' , 40 ) print ( stu1 ) # \u9a86\u660a: 40 students = [ stu1 , Student ( '\u674e\u5143\u82b3' , 36 ), Student ( '\u738b\u5927\u9524' , 25 )] print ( students ) # [\u9a86\u660a: 40, \u674e\u5143\u82b3: 36, \u738b\u5927\u9524: 25] \u9762\u5411\u5bf9\u8c61\u7684\u652f\u67f1 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6709\u4e09\u5927\u652f\u67f1\uff0c\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u7ed9\u5927\u5bb6\u5212\u91cd\u70b9\u7684\u65f6\u5019\u5708\u51fa\u7684\u4e09\u4e2a\u8bcd\uff1a \u5c01\u88c5 \u3001 \u7ee7\u627f \u548c \u591a\u6001 \u3002\u540e\u9762\u4e24\u4e2a\u6982\u5ff5\u5728\u4e0b\u4e00\u8282\u8bfe\u4e2d\u4f1a\u8be6\u7ec6\u8bf4\u660e\uff0c\u8fd9\u91cc\u6211\u4eec\u5148\u8bf4\u4e00\u4e0b\u4ec0\u4e48\u662f\u5c01\u88c5\u3002\u6211\u81ea\u5df1\u5bf9\u5c01\u88c5\u7684\u7406\u89e3\u662f\uff1a \u9690\u85cf\u4e00\u5207\u53ef\u4ee5\u9690\u85cf\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u5411\u5916\u754c\u66b4\u9732\u7b80\u5355\u7684\u8c03\u7528\u63a5\u53e3 \u3002\u6211\u4eec\u5728\u7c7b\u4e2d\u5b9a\u4e49\u7684\u5bf9\u8c61\u65b9\u6cd5\u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u5c01\u88c5\uff0c\u8fd9\u79cd\u5c01\u88c5\u53ef\u4ee5\u8ba9\u6211\u4eec\u5728\u521b\u5efa\u5bf9\u8c61\u4e4b\u540e\uff0c\u53ea\u9700\u8981\u7ed9\u5bf9\u8c61\u53d1\u9001\u4e00\u4e2a\u6d88\u606f\u5c31\u53ef\u4ee5\u6267\u884c\u65b9\u6cd5\u4e2d\u7684\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5728\u53ea\u77e5\u9053\u65b9\u6cd5\u7684\u540d\u5b57\u548c\u53c2\u6570\uff08\u65b9\u6cd5\u7684\u5916\u90e8\u89c6\u56fe\uff09\uff0c\u4e0d\u77e5\u9053\u65b9\u6cd5\u5185\u90e8\u5b9e\u73b0\u7ec6\u8282\uff08\u65b9\u6cd5\u7684\u5185\u90e8\u89c6\u56fe\uff09\u7684\u60c5\u51b5\u4e0b\u5c31\u5b8c\u6210\u4e86\u5bf9\u65b9\u6cd5\u7684\u4f7f\u7528\u3002 \u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5047\u5982\u8981\u63a7\u5236\u4e00\u4e2a\u673a\u5668\u4eba\u5e2e\u6211\u5012\u676f\u6c34\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0c\u4e0d\u505a\u4efb\u4f55\u7684\u5c01\u88c5\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5411\u8fd9\u4e2a\u673a\u5668\u4eba\u53d1\u51fa\u4e00\u7cfb\u5217\u7684\u6307\u4ee4\uff0c\u5982\u7ad9\u8d77\u6765\u3001\u5411\u5de6\u8f6c\u3001\u5411\u524d\u8d705\u6b65\u3001\u62ff\u8d77\u9762\u524d\u7684\u6c34\u676f\u3001\u5411\u540e\u8f6c\u3001\u5411\u524d\u8d7010\u6b65\u3001\u5f2f\u8170\u3001\u653e\u4e0b\u6c34\u676f\u3001\u6309\u4e0b\u51fa\u6c34\u6309\u94ae\u3001\u7b49\u5f8510\u79d2\u3001\u677e\u5f00\u51fa\u6c34\u6309\u94ae\u3001\u62ff\u8d77\u6c34\u676f\u3001\u5411\u53f3\u8f6c\u3001\u5411\u524d\u8d705\u6b65\u3001\u653e\u4e0b\u6c34\u676f\u7b49\uff0c\u624d\u80fd\u5b8c\u6210\u8fd9\u4e2a\u7b80\u5355\u7684\u64cd\u4f5c\uff0c\u60f3\u60f3\u90fd\u89c9\u5f97\u9ebb\u70e6\u3002\u6309\u7167\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u601d\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5012\u6c34\u7684\u64cd\u4f5c\u5c01\u88c5\u5230\u673a\u5668\u4eba\u7684\u4e00\u4e2a\u65b9\u6cd5\u4e2d\uff0c\u5f53\u9700\u8981\u673a\u5668\u4eba\u5e2e\u6211\u4eec\u5012\u6c34\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u5411\u673a\u5668\u4eba\u5bf9\u8c61\u53d1\u51fa\u5012\u6c34\u7684\u6d88\u606f\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u505a\u4e0d\u662f\u66f4\u597d\u5417\uff1f \u5728\u5f88\u591a\u573a\u666f\u4e0b\uff0c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4e09\u6b65\u8d70\u7684\u95ee\u9898\u3002\u7b2c\u4e00\u6b65\u5b9a\u4e49\u7c7b\uff0c\u7b2c\u4e8c\u6b65\u521b\u5efa\u5bf9\u8c61\uff0c\u7b2c\u4e09\u6b65\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\u3002\u5f53\u7136\uff0c\u6709\u7684\u65f6\u5019\u6211\u4eec\u662f\u4e0d\u9700\u8981\u7b2c\u4e00\u6b65\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u60f3\u7528\u7684\u7c7b\u53ef\u80fd\u5df2\u7ecf\u5b58\u5728\u4e86\u3002\u4e4b\u524d\u6211\u4eec\u8bf4\u8fc7\uff0cPython\u5185\u7f6e\u7684 list \u3001 set \u3001 dict \u5176\u5b9e\u90fd\u4e0d\u662f\u51fd\u6570\u800c\u662f\u7c7b\uff0c\u5982\u679c\u8981\u521b\u5efa\u5217\u8868\u3001\u96c6\u5408\u3001\u5b57\u5178\u5bf9\u8c61\uff0c\u6211\u4eec\u5c31\u4e0d\u7528\u81ea\u5b9a\u4e49\u7c7b\u4e86\u3002\u5f53\u7136\uff0c\u6709\u7684\u7c7b\u5e76\u4e0d\u662fPython\u6807\u51c6\u5e93\u4e2d\u76f4\u63a5\u63d0\u4f9b\u7684\uff0c\u5b83\u53ef\u80fd\u6765\u81ea\u4e8e\u7b2c\u4e09\u65b9\u7684\u4ee3\u7801\uff0c\u5982\u4f55\u5b89\u88c5\u548c\u4f7f\u7528\u4e09\u65b9\u4ee3\u7801\u5728\u540e\u7eed\u8bfe\u7a0b\u4e2d\u4f1a\u8fdb\u884c\u8ba8\u8bba\u3002\u5728\u67d0\u4e9b\u7279\u6b8a\u7684\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u4f1a\u7528\u5230\u540d\u4e3a\u201c\u5185\u7f6e\u5bf9\u8c61\u201d\u7684\u5bf9\u8c61\uff0c\u6240\u8c13\u201c\u5185\u7f6e\u5bf9\u8c61\u201d\u5c31\u662f\u8bf4\u4e0a\u9762\u4e09\u6b65\u8d70\u7684\u7b2c\u4e00\u6b65\u548c\u7b2c\u4e8c\u6b65\u90fd\u4e0d\u9700\u8981\u4e86\uff0c\u56e0\u4e3a\u7c7b\u5df2\u7ecf\u5b58\u5728\u800c\u4e14\u5bf9\u8c61\u5df2\u7136\u521b\u5efa\u8fc7\u4e86\uff0c\u76f4\u63a5\u5411\u5bf9\u8c61\u53d1\u6d88\u606f\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u201c\u5f00\u7bb1\u5373\u7528\u201d\u3002 \u7ecf\u5178\u6848\u4f8b \u6848\u4f8b1\uff1a\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u63cf\u8ff0\u6570\u5b57\u65f6\u949f\u3002 import time # \u5b9a\u4e49\u6570\u5b57\u65f6\u949f\u7c7b class Clock ( object ): \"\"\"\u6570\u5b57\u65f6\u949f\"\"\" def __init__ ( self , hour = 0 , minute = 0 , second = 0 ): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5 :param hour: \u65f6 :param minute: \u5206 :param second: \u79d2 \"\"\" self . hour = hour self . min = minute self . sec = second def run ( self ): \"\"\"\u8d70\u5b57\"\"\" self . sec += 1 if self . sec == 60 : self . sec = 0 self . min += 1 if self . min == 60 : self . min = 0 self . hour += 1 if self . hour == 24 : self . hour = 0 def show ( self ): \"\"\"\u663e\u793a\u65f6\u95f4\"\"\" return f ' { self . hour : 0>2d } : { self . min : 0>2d } : { self . sec : 0>2d } ' # \u521b\u5efa\u65f6\u949f\u5bf9\u8c61 clock = Clock ( 23 , 59 , 58 ) while True : # \u7ed9\u65f6\u949f\u5bf9\u8c61\u53d1\u6d88\u606f\u8bfb\u53d6\u65f6\u95f4 print ( clock . show ()) # \u4f11\u77201\u79d2\u949f time . sleep ( 1 ) # \u7ed9\u65f6\u949f\u5bf9\u8c61\u53d1\u6d88\u606f\u4f7f\u5176\u8d70\u5b57 clock . run () \u6848\u4f8b2\uff1a\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u63cf\u8ff0\u5e73\u9762\u4e0a\u7684\u70b9\uff0c\u8981\u6c42\u63d0\u4f9b\u8ba1\u7b97\u5230\u53e6\u4e00\u4e2a\u70b9\u8ddd\u79bb\u7684\u65b9\u6cd5\u3002 class Point ( object ): \"\"\"\u5c4f\u9762\u4e0a\u7684\u70b9\"\"\" def __init__ ( self , x = 0 , y = 0 ): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5 :param x: \u6a2a\u5750\u6807 :param y: \u7eb5\u5750\u6807 \"\"\" self . x , self . y = x , y def distance_to ( self , other ): \"\"\"\u8ba1\u7b97\u4e0e\u53e6\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb :param other: \u53e6\u4e00\u4e2a\u70b9 \"\"\" dx = self . x - other . x dy = self . y - other . y return ( dx * dx + dy * dy ) ** 0.5 def __str__ ( self ): return f '( { self . x } , { self . y } )' p1 = Point ( 3 , 5 ) p2 = Point ( 6 , 9 ) print ( p1 , p2 ) print ( p1 . distance_to ( p2 )) \u7b80\u5355\u7684\u603b\u7ed3 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u662f\u4e00\u79cd\u975e\u5e38\u6d41\u884c\u7684\u7f16\u7a0b\u8303\u5f0f\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u6709 \u6307\u4ee4\u5f0f\u7f16\u7a0b \u3001 \u51fd\u6570\u5f0f\u7f16\u7a0b \u7b49\u7f16\u7a0b\u8303\u5f0f\u3002\u7531\u4e8e\u73b0\u5b9e\u4e16\u754c\u662f\u7531\u5bf9\u8c61\u6784\u6210\u7684\uff0c\u800c\u5bf9\u8c61\u662f\u53ef\u4ee5\u63a5\u6536\u6d88\u606f\u7684\u5b9e\u4f53\uff0c\u6240\u4ee5 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u66f4\u7b26\u5408\u4eba\u7c7b\u6b63\u5e38\u7684\u601d\u7ef4\u4e60\u60ef \u3002\u7c7b\u662f\u62bd\u8c61\u7684\uff0c\u5bf9\u8c61\u662f\u5177\u4f53\u7684\uff0c\u6709\u4e86\u7c7b\u5c31\u80fd\u521b\u5efa\u5bf9\u8c61\uff0c\u6709\u4e86\u5bf9\u8c61\u5c31\u53ef\u4ee5\u63a5\u6536\u6d88\u606f\uff0c\u8fd9\u5c31\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u57fa\u7840\u3002\u5b9a\u4e49\u7c7b\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u8fc7\u7a0b\uff0c\u627e\u5230\u5bf9\u8c61\u516c\u5171\u7684\u5c5e\u6027\u5c5e\u4e8e\u6570\u636e\u62bd\u8c61\uff0c\u627e\u5230\u5bf9\u8c61\u516c\u5171\u7684\u65b9\u6cd5\u5c5e\u4e8e\u884c\u4e3a\u62bd\u8c61\u3002\u62bd\u8c61\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u4ec1\u8005\u89c1\u4ec1\u667a\u8005\u89c1\u667a\u7684\u8fc7\u7a0b\uff0c\u5bf9\u540c\u4e00\u7c7b\u5bf9\u8c61\u8fdb\u884c\u62bd\u8c61\u53ef\u80fd\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u8bf4\u660e\uff1a \u672c\u8282\u8bfe\u7684\u63d2\u56fe\u6765\u81ea\u4e8e Grady Booc \u7b49\u64b0\u5199\u7684\u300a\u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e0e\u8bbe\u8ba1\u300b\u4e00\u4e66\uff0c\u8be5\u4e66\u662f\u8bb2\u89e3\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u7ecf\u5178\u8457\u4f5c\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u8d2d\u4e70\u548c\u9605\u8bfb\u8fd9\u672c\u4e66\u6765\u4e86\u89e3\u66f4\u591a\u7684\u9762\u5411\u5bf9\u8c61\u7684\u76f8\u5173\u77e5\u8bc6\u3002","title":"\u7b2c17\u8bfe\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5165\u95e8"},{"location":"%E7%AC%AC17%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#17","text":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u662f\u4e00\u79cd\u975e\u5e38\u6d41\u884c\u7684 \u7f16\u7a0b\u8303\u5f0f \uff08programming paradigm\uff09\uff0c\u6240\u8c13\u7f16\u7a0b\u8303\u5f0f\u5c31\u662f \u7a0b\u5e8f\u8bbe\u8ba1\u7684\u65b9\u6cd5\u8bba \uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u7a0b\u5e8f\u5458\u5bf9\u7a0b\u5e8f\u7684\u8ba4\u77e5\u548c\u7406\u89e3\u4ee5\u53ca\u4ed6\u4eec\u7f16\u5199\u4ee3\u7801\u7684\u65b9\u5f0f\u3002 \u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u8bf4\u8fc7\u201c \u7a0b\u5e8f\u662f\u6307\u4ee4\u7684\u96c6\u5408 \u201d\uff0c\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u7684\u8bed\u53e5\u4f1a\u53d8\u6210\u4e00\u6761\u6216\u591a\u6761\u6307\u4ee4\uff0c\u7136\u540e\u7531CPU\uff08\u4e2d\u592e\u5904\u7406\u5668\uff09\u53bb\u6267\u884c\u3002\u4e3a\u4e86\u7b80\u5316\u7a0b\u5e8f\u7684\u8bbe\u8ba1\uff0c\u6211\u4eec\u53c8\u8bb2\u5230\u4e86\u51fd\u6570\uff0c \u628a\u76f8\u5bf9\u72ec\u7acb\u4e14\u7ecf\u5e38\u91cd\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u653e\u7f6e\u5230\u51fd\u6570\u4e2d \uff0c\u5728\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u4ee3\u7801\u7684\u65f6\u5019\u8c03\u7528\u51fd\u6570\u5373\u53ef\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u8fc7\u4e8e\u590d\u6742\u548c\u81c3\u80bf\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u8fdb\u4e00\u6b65 \u5c06\u51fd\u6570\u8fdb\u4e00\u6b65\u62c6\u5206\u4e3a\u591a\u4e2a\u5b50\u51fd\u6570 \u6765\u964d\u4f4e\u7cfb\u7edf\u7684\u590d\u6742\u6027\u3002 \u4e0d\u77e5\u5927\u5bb6\u662f\u5426\u53d1\u73b0\uff0c\u6211\u4eec\u7684\u7f16\u7a0b\u5de5\u4f5c\u5176\u5b9e\u662f\u5199\u7a0b\u5e8f\u7684\u4eba\u6309\u7167\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u901a\u8fc7\u4ee3\u7801\u63a7\u5236\u673a\u5668\u5b8c\u6210\u4efb\u52a1\u3002\u4f46\u662f\uff0c\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u4eba\u7c7b\u6b63\u5e38\u7684\u601d\u7ef4\u6a21\u5f0f\u662f\u4e0d\u540c\u7684\uff0c\u5982\u679c\u7f16\u7a0b\u5c31\u5fc5\u987b\u629b\u5f03\u4eba\u7c7b\u6b63\u5e38\u7684\u601d\u7ef4\u65b9\u5f0f\u53bb\u8fce\u5408\u8ba1\u7b97\u673a\uff0c\u7f16\u7a0b\u7684\u4e50\u8da3\u5c31\u5c11\u4e86\u5f88\u591a\uff0c\u800c\u201c\u6bcf\u4e2a\u4eba\u90fd\u5e94\u8be5\u5b66\u4e60\u7f16\u7a0b\u201d\u7684\u8c6a\u8a00\u58ee\u8bed\u4e5f\u5c31\u53ea\u80fd\u558a\u558a\u53e3\u53f7\u800c\u5df2\u3002\u8fd9\u91cc\uff0c\u6211\u60f3\u8bf4\u7684\u5e76\u4e0d\u662f\u6211\u4eec\u4e0d\u80fd\u6309\u7167\u8ba1\u7b97\u673a\u7684\u5de5\u4f5c\u65b9\u5f0f\u53bb\u7f16\u5199\u4ee3\u7801\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u9700\u8981\u5f00\u53d1\u4e00\u4e2a\u590d\u6742\u7684\u7cfb\u7edf\u65f6\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u8ba9\u4ee3\u7801\u8fc7\u4e8e\u590d\u6742\uff0c\u4ece\u800c\u5bfc\u81f4\u5f00\u53d1\u548c\u7ef4\u62a4\u5de5\u4f5c\u90fd\u53d8\u5f97\u4e3e\u6b65\u7ef4\u8270\u3002 \u968f\u7740\u8f6f\u4ef6\u590d\u6742\u6027\u7684\u589e\u52a0\uff0c\u7f16\u5199\u6b63\u786e\u53ef\u9760\u7684\u4ee3\u7801\u4f1a\u53d8\u6210\u4e86\u4e00\u9879\u6781\u4e3a\u8270\u5de8\u7684\u4efb\u52a1\uff0c\u8fd9\u4e5f\u662f\u5f88\u591a\u4eba\u90fd\u575a\u4fe1\u201c\u8f6f\u4ef6\u5f00\u53d1\u662f\u4eba\u7c7b\u6539\u9020\u4e16\u754c\u6240\u6709\u6d3b\u52a8\u4e2d\u6700\u4e3a\u590d\u6742\u7684\u6d3b\u52a8\u201d\u7684\u539f\u56e0\u3002\u5982\u4f55\u7528\u7a0b\u5e8f\u63cf\u8ff0\u590d\u6742\u7cfb\u7edf\u548c\u89e3\u51b3\u590d\u6742\u95ee\u9898\uff0c\u5c31\u6210\u4e3a\u4e86\u6240\u6709\u7a0b\u5e8f\u5458\u5fc5\u987b\u8981\u601d\u8003\u548c\u76f4\u9762\u7684\u95ee\u9898\u3002\u8bde\u751f\u4e8e\u4e0a\u4e16\u7eaa70\u5e74\u4ee3\u7684Smalltalk\u8bed\u8a00\u8ba9\u8f6f\u4ef6\u5f00\u53d1\u8005\u770b\u5230\u4e86\u5e0c\u671b\uff0c\u56e0\u4e3a\u5b83\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u7f16\u7a0b\u8303\u5f0f\u53eb\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e16\u754c\u91cc\uff0c\u7a0b\u5e8f\u4e2d\u7684 \u6570\u636e\u548c\u64cd\u4f5c\u6570\u636e\u7684\u51fd\u6570\u662f\u4e00\u4e2a\u903b\u8f91\u4e0a\u7684\u6574\u4f53 \uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \u5bf9\u8c61 \uff0c \u5bf9\u8c61\u53ef\u4ee5\u63a5\u6536\u6d88\u606f \uff0c\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u5c31\u662f \u521b\u5efa\u5bf9\u8c61\u5e76\u5411\u5bf9\u8c61\u53d1\u51fa\u5404\u79cd\u5404\u6837\u7684\u6d88\u606f \uff1b\u901a\u8fc7\u6d88\u606f\u4f20\u9012\uff0c\u7a0b\u5e8f\u4e2d\u7684\u591a\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u534f\u540c\u5de5\u4f5c\uff0c\u8fd9\u6837\u5c31\u80fd\u6784\u9020\u51fa\u590d\u6742\u7684\u7cfb\u7edf\u5e76\u89e3\u51b3\u73b0\u5b9e\u4e2d\u7684\u95ee\u9898\u3002\u5f53\u7136\uff0c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u96cf\u5f62\u8fd8\u53ef\u4ee5\u5411\u524d\u8ffd\u6eaf\u5230\u66f4\u65e9\u671f\u7684Simula\u8bed\u8a00\uff0c\u4f46\u8fd9\u4e0d\u662f\u6211\u4eec\u73b0\u5728\u8981\u8ba8\u8bba\u7684\u91cd\u70b9\u3002 \u8bf4\u660e\uff1a \u4eca\u5929\u6211\u4eec\u4f7f\u7528\u7684\u5f88\u591a\u9ad8\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u90fd\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0c\u4f46\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e5f\u4e0d\u662f\u89e3\u51b3\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u6240\u6709\u95ee\u9898\u7684\u201c\u94f6\u5f39\u201d\uff0c\u6216\u8005\u8bf4\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fd9\u4e2a\u884c\u4e1a\u76ee\u524d\u8fd8\u627e\u4e0d\u5230\u8fd9\u79cd\u6240\u8c13\u7684\u201c\u94f6\u5f39\u201d\u3002\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003IBM360\u7cfb\u7edf\u4e4b\u7236\u5f17\u96f7\u5fb7\u91cc\u514b\u00b7\u5e03\u9c81\u514b\u65af\u6240\u53d1\u8868\u7684\u8bba\u6587\u300a\u6ca1\u6709\u94f6\u5f39\uff1a\u8f6f\u4ef6\u5de5\u7a0b\u7684\u672c\u8d28\u6027\u4e0e\u9644\u5c5e\u6027\u5de5\u4f5c\u300b\u6216\u8f6f\u4ef6\u5de5\u7a0b\u7684\u7ecf\u5178\u8457\u4f5c\u300a\u4eba\u6708\u795e\u8bdd\u300b\u4e00\u4e66\u3002","title":"\u7b2c17\u8bfe\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5165\u95e8"},{"location":"%E7%AC%AC17%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#_1","text":"\u5982\u679c\u8981\u7528\u4e00\u53e5\u8bdd\u6765\u6982\u62ec\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0c\u6211\u8ba4\u4e3a\u4e0b\u9762\u7684\u8bf4\u6cd5\u662f\u76f8\u5f53\u7cbe\u8f9f\u548c\u51c6\u786e\u7684\u3002 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b \uff1a\u628a\u4e00\u7ec4\u6570\u636e\u548c\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u7ec4\u6210 \u5bf9\u8c61 \uff0c\u628a\u884c\u4e3a\u76f8\u540c\u7684\u5bf9\u8c61\u5f52\u7eb3\u4e3a \u7c7b \uff0c\u901a\u8fc7 \u5c01\u88c5 \u9690\u85cf\u5bf9\u8c61\u7684\u5185\u90e8\u7ec6\u8282\uff0c\u901a\u8fc7 \u7ee7\u627f \u5b9e\u73b0\u7c7b\u7684\u7279\u5316\u548c\u6cdb\u5316\uff0c\u901a\u8fc7 \u591a\u6001 \u5b9e\u73b0\u57fa\u4e8e\u5bf9\u8c61\u7c7b\u578b\u7684\u52a8\u6001\u5206\u6d3e\u3002 \u8fd9\u53e5\u8bdd\u5bf9\u521d\u5b66\u8005\u6765\u8bf4\u53ef\u80fd\u4e0d\u90a3\u4e48\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u662f\u6211\u53ef\u4ee5\u5148\u4e3a\u5927\u5bb6\u5708\u51fa\u51e0\u4e2a\u5173\u952e\u8bcd\uff1a \u5bf9\u8c61 \uff08object\uff09\u3001 \u7c7b \uff08class\uff09\u3001 \u5c01\u88c5 \uff08encapsulation\uff09\u3001 \u7ee7\u627f \uff08inheritance\uff09\u3001 \u591a\u6001 \uff08polymorphism\uff09\u3002 \u6211\u4eec\u5148\u8bf4\u8bf4\u7c7b\u548c\u5bf9\u8c61\u8fd9\u4e24\u4e2a\u8bcd\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\uff0c \u7c7b\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u5bf9\u8c61\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u6982\u5ff5 \u3002\u6211\u4eec\u628a\u540c\u4e00\u7c7b\u5bf9\u8c61\u7684\u5171\u540c\u7279\u5f81\u62bd\u53d6\u51fa\u6765\u5c31\u662f\u4e00\u4e2a\u7c7b\uff0c\u6bd4\u5982\u6211\u4eec\u7ecf\u5e38\u8bf4\u7684\u4eba\u7c7b\uff0c\u8fd9\u662f\u4e00\u4e2a\u62bd\u8c61\u6982\u5ff5\uff0c\u800c\u6211\u4eec\u6bcf\u4e2a\u4eba\u5c31\u662f\u4eba\u7c7b\u7684\u8fd9\u4e2a\u62bd\u8c61\u6982\u5ff5\u4e0b\u7684\u5b9e\u5b9e\u5728\u5728\u7684\u5b58\u5728\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002\u7b80\u800c\u8a00\u4e4b\uff0c \u7c7b\u662f\u5bf9\u8c61\u7684\u84dd\u56fe\u548c\u6a21\u677f\uff0c\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\uff0c\u662f\u53ef\u4ee5\u63a5\u53d7\u6d88\u606f\u7684\u5b9e\u4f53 \u3002 \u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e16\u754c\u4e2d\uff0c \u4e00\u5207\u7686\u4e3a\u5bf9\u8c61 \uff0c \u5bf9\u8c61\u90fd\u6709\u5c5e\u6027\u548c\u884c\u4e3a \uff0c \u6bcf\u4e2a\u5bf9\u8c61\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684 \uff0c\u800c\u4e14 \u5bf9\u8c61\u4e00\u5b9a\u5c5e\u4e8e\u67d0\u4e2a\u7c7b \u3002\u5bf9\u8c61\u7684\u5c5e\u6027\u662f\u5bf9\u8c61\u7684\u9759\u6001\u7279\u5f81\uff0c\u5bf9\u8c61\u7684\u884c\u4e3a\u662f\u5bf9\u8c61\u7684\u52a8\u6001\u7279\u5f81\u3002\u6309\u7167\u4e0a\u9762\u7684\u8bf4\u6cd5\uff0c\u5982\u679c\u6211\u4eec\u628a\u62e5\u6709\u5171\u540c\u7279\u5f81\u7684\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u884c\u4e3a\u90fd\u62bd\u53d6\u51fa\u6765\uff0c\u5c31\u53ef\u4ee5\u5b9a\u4e49\u51fa\u4e00\u4e2a\u7c7b\u3002","title":"\u7c7b\u548c\u5bf9\u8c61"},{"location":"%E7%AC%AC17%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#_2","text":"\u5728Python\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 class \u5173\u952e\u5b57\u52a0\u4e0a\u7c7b\u540d\u6765\u5b9a\u4e49\u7c7b\uff0c\u901a\u8fc7\u7f29\u8fdb\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u7c7b\u7684\u4ee3\u7801\u5757\uff0c\u5c31\u5982\u540c\u5b9a\u4e49\u51fd\u6570\u90a3\u6837\u3002\u5728\u7c7b\u7684\u4ee3\u7801\u5757\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5199\u4e00\u4e9b\u51fd\u6570\uff0c\u6211\u4eec\u8bf4\u8fc7\u7c7b\u662f\u4e00\u4e2a\u62bd\u8c61\u6982\u5ff5\uff0c\u90a3\u4e48\u8fd9\u4e9b\u51fd\u6570\u5c31\u662f\u6211\u4eec\u5bf9\u4e00\u7c7b\u5bf9\u8c61\u5171\u540c\u7684\u52a8\u6001\u7279\u5f81\u7684\u63d0\u53d6\u3002\u5199\u5728\u7c7b\u91cc\u9762\u7684\u51fd\u6570\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a \u65b9\u6cd5 \uff0c\u65b9\u6cd5\u5c31\u662f\u5bf9\u8c61\u7684\u884c\u4e3a\uff0c\u4e5f\u5c31\u662f\u5bf9\u8c61\u53ef\u4ee5\u63a5\u6536\u7684\u6d88\u606f\u3002\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u901a\u5e38\u90fd\u662f self \uff0c\u5b83\u4ee3\u8868\u4e86\u63a5\u6536\u8fd9\u4e2a\u6d88\u606f\u7684\u5bf9\u8c61\u672c\u8eab\u3002 class Student : def study ( self , course_name ): print ( f '\u5b66\u751f\u6b63\u5728\u5b66\u4e60 { course_name } .' ) def play ( self ): print ( f '\u5b66\u751f\u6b63\u5728\u73a9\u6e38\u620f.' )","title":"\u5b9a\u4e49\u7c7b"},{"location":"%E7%AC%AC17%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#_3","text":"\u5728\u6211\u4eec\u5b9a\u4e49\u597d\u4e00\u4e2a\u7c7b\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u6784\u9020\u5668\u8bed\u6cd5\u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 stu1 = Student () stu2 = Student () print ( stu1 ) # <__main__.Student object at 0x10ad5ac50> print ( stu2 ) # <__main__.Student object at 0x10ad5acd0> print ( hex ( id ( stu1 )), hex ( id ( stu2 ))) # 0x10ad5ac50 0x10ad5acd0 \u5728\u7c7b\u7684\u540d\u5b57\u540e\u8ddf\u4e0a\u5706\u62ec\u53f7\u5c31\u662f\u6240\u8c13\u7684\u6784\u9020\u5668\u8bed\u6cd5\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e86\u4e24\u4e2a\u5b66\u751f\u5bf9\u8c61\uff0c\u4e00\u4e2a\u8d4b\u503c\u7ed9\u53d8\u91cf stu1 \uff0c\u4e00\u4e2a\u590d\u5236\u7ed9\u53d8\u91cf stu2 \u3002\u5f53\u6211\u4eec\u7528 print \u51fd\u6570\u6253\u5370 stu1 \u548c stu2 \u4e24\u4e2a\u53d8\u91cf\u65f6\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u8f93\u51fa\u4e86\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\uff08\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\uff09\uff0c\u8ddf\u6211\u4eec\u7528 id \u51fd\u6570\u67e5\u770b\u5bf9\u8c61\u6807\u8bc6\u83b7\u5f97\u7684\u503c\u662f\u76f8\u540c\u7684\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u544a\u8bc9\u5927\u5bb6\uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u53d8\u91cf\u5176\u5b9e\u4fdd\u5b58\u7684\u662f\u4e00\u4e2a\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u903b\u8f91\u5730\u5740\uff08\u4f4d\u7f6e\uff09\uff0c\u901a\u8fc7\u8fd9\u4e2a\u903b\u8f91\u5730\u5740\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u5185\u5b58\u4e2d\u627e\u5230\u8fd9\u4e2a\u5bf9\u8c61\u3002\u6240\u4ee5 stu3 = stu2 \u8fd9\u6837\u7684\u8d4b\u503c\u8bed\u53e5\u5e76\u6ca1\u6709\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\uff0c\u53ea\u662f\u7528\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u4fdd\u5b58\u4e86\u5df2\u6709\u5bf9\u8c61\u7684\u5730\u5740\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c1d\u8bd5\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\uff0c\u5373\u8c03\u7528\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002\u521a\u624d\u7684 Student \u7c7b\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86 study \u548c play \u4e24\u4e2a\u65b9\u6cd5\uff0c\u4e24\u4e2a\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570 self \u4ee3\u8868\u4e86\u63a5\u6536\u6d88\u606f\u7684\u5b66\u751f\u5bf9\u8c61\uff0c study \u65b9\u6cd5\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5b66\u4e60\u7684\u8bfe\u7a0b\u540d\u79f0\u3002Python\u4e2d\uff0c\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u3002 # \u901a\u8fc7\u201c\u7c7b.\u65b9\u6cd5\u201d\u8c03\u7528\u65b9\u6cd5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u63a5\u6536\u6d88\u606f\u7684\u5bf9\u8c61\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5b66\u4e60\u7684\u8bfe\u7a0b\u540d\u79f0 Student . study ( stu1 , 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) # \u5b66\u751f\u6b63\u5728\u5b66\u4e60Python\u7a0b\u5e8f\u8bbe\u8ba1. # \u901a\u8fc7\u201c\u5bf9\u8c61.\u65b9\u6cd5\u201d\u8c03\u7528\u65b9\u6cd5\uff0c\u70b9\u524d\u9762\u7684\u5bf9\u8c61\u5c31\u662f\u63a5\u6536\u6d88\u606f\u7684\u5bf9\u8c61\uff0c\u53ea\u9700\u8981\u4f20\u5165\u7b2c\u4e8c\u4e2a\u53c2\u6570 stu1 . study ( 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) # \u5b66\u751f\u6b63\u5728\u5b66\u4e60Python\u7a0b\u5e8f\u8bbe\u8ba1. Student . play ( stu2 ) # \u5b66\u751f\u6b63\u5728\u73a9\u6e38\u620f. stu2 . play () # \u5b66\u751f\u6b63\u5728\u73a9\u6e38\u620f.","title":"\u521b\u5efa\u548c\u4f7f\u7528\u5bf9\u8c61"},{"location":"%E7%AC%AC17%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#_4","text":"\u5927\u5bb6\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u521a\u624d\u6211\u4eec\u521b\u5efa\u7684\u5b66\u751f\u5bf9\u8c61\u53ea\u6709\u884c\u4e3a\u6ca1\u6709\u5c5e\u6027\uff0c\u5982\u679c\u8981\u7ed9\u5b66\u751f\u5bf9\u8c61\u5b9a\u4e49\u5c5e\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539 Student \u7c7b\uff0c\u4e3a\u5176\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a __init__ \u7684\u65b9\u6cd5\u3002\u5728\u6211\u4eec\u8c03\u7528 Student \u7c7b\u7684\u6784\u9020\u5668\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u9996\u5148\u4f1a\u5728\u5185\u5b58\u4e2d\u83b7\u5f97\u4fdd\u5b58\u5b66\u751f\u5bf9\u8c61\u6240\u9700\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u540e\u901a\u8fc7\u81ea\u52a8\u6267\u884c __init__ \u65b9\u6cd5\uff0c\u5b8c\u6210\u5bf9\u5185\u5b58\u7684\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u628a\u6570\u636e\u653e\u5230\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ed9 Student \u7c7b\u6dfb\u52a0 __init__ \u65b9\u6cd5\u7684\u65b9\u5f0f\u4e3a\u5b66\u751f\u5bf9\u8c61\u6307\u5b9a\u5c5e\u6027\uff0c\u540c\u65f6\u5b8c\u6210\u5bf9\u5c5e\u6027\u8d4b\u521d\u59cb\u503c\u7684\u64cd\u4f5c\uff0c\u6b63\u56e0\u5982\u6b64\uff0c __init__ \u65b9\u6cd5\u901a\u5e38\u4e5f\u88ab\u79f0\u4e3a\u521d\u59cb\u5316\u65b9\u6cd5\u3002 \u6211\u4eec\u5bf9\u4e0a\u9762\u7684 Student \u7c7b\u7a0d\u4f5c\u4fee\u6539\uff0c\u7ed9\u5b66\u751f\u5bf9\u8c61\u6dfb\u52a0 name \uff08\u59d3\u540d\uff09\u548c age \uff08\u5e74\u9f84\uff09\u4e24\u4e2a\u5c5e\u6027\u3002 class Student : \"\"\"\u5b66\u751f\"\"\" def __init__ ( self , name , age ): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\"\"\" self . name = name self . age = age def study ( self , course_name ): \"\"\"\u5b66\u4e60\"\"\" print ( f ' { self . name } \u6b63\u5728\u5b66\u4e60 { course_name } .' ) def play ( self ): \"\"\"\u73a9\u800d\"\"\" print ( f ' { self . name } \u6b63\u5728\u73a9\u6e38\u620f.' ) \u4fee\u6539\u521a\u624d\u521b\u5efa\u5bf9\u8c61\u548c\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\u7684\u4ee3\u7801\uff0c\u91cd\u65b0\u6267\u884c\u4e00\u6b21\uff0c\u770b\u770b\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u6709\u4ec0\u4e48\u53d8\u5316\u3002 # \u7531\u4e8e\u521d\u59cb\u5316\u65b9\u6cd5\u9664\u4e86self\u4e4b\u5916\u8fd8\u6709\u4e24\u4e2a\u53c2\u6570 # \u6240\u4ee5\u8c03\u7528Student\u7c7b\u7684\u6784\u9020\u5668\u521b\u5efa\u5bf9\u8c61\u65f6\u8981\u4f20\u5165\u8fd9\u4e24\u4e2a\u53c2\u6570 stu1 = Student ( '\u9a86\u660a' , 40 ) stu2 = Student ( '\u738b\u5927\u9524' , 15 ) stu1 . study ( 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) # \u9a86\u660a\u6b63\u5728\u5b66\u4e60Python\u7a0b\u5e8f\u8bbe\u8ba1. stu2 . play () # \u738b\u5927\u9524\u6b63\u5728\u73a9\u6e38\u620f.","title":"\u521d\u59cb\u5316\u65b9\u6cd5"},{"location":"%E7%AC%AC17%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#_5","text":"\u4e0a\u9762\u6211\u4eec\u901a\u8fc7 __init__ \u65b9\u6cd5\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u4e3a\u5bf9\u8c61\u7ed1\u5b9a\u4e86\u5c5e\u6027\u5e76\u8d4b\u4e88\u4e86\u521d\u59cb\u503c\u3002\u5728Python\u4e2d\uff0c\u4ee5\u4e24\u4e2a\u4e0b\u5212\u7ebf __ \uff08\u8bfb\u4f5c\u201cdunder\u201d\uff09\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u65b9\u6cd5\u901a\u5e38\u90fd\u662f\u6709\u7279\u6b8a\u7528\u9014\u548c\u610f\u4e49\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u4e00\u822c\u79f0\u4e4b\u4e3a \u9b54\u672f\u65b9\u6cd5 \u6216 \u9b54\u6cd5\u65b9\u6cd5 \u3002\u5982\u679c\u6211\u4eec\u5728\u6253\u5370\u5bf9\u8c61\u7684\u65f6\u5019\u4e0d\u5e0c\u671b\u770b\u5230\u5bf9\u8c61\u7684\u5730\u5740\u800c\u662f\u770b\u5230\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u7c7b\u4e2d\u653e\u7f6e __repr__ \u9b54\u672f\u65b9\u6cd5\u6765\u505a\u5230\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u5c31\u662f\u7528 print \u51fd\u6570\u6253\u5370\u5bf9\u8c61\u7684\u65f6\u5019\u4f1a\u663e\u793a\u7684\u5185\u5bb9\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Student : \"\"\"\u5b66\u751f\"\"\" def __init__ ( self , name , age ): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\"\"\" self . name = name self . age = age def study ( self , course_name ): \"\"\"\u5b66\u4e60\"\"\" print ( f ' { self . name } \u6b63\u5728\u5b66\u4e60 { course_name } .' ) def play ( self ): \"\"\"\u73a9\u800d\"\"\" print ( f ' { self . name } \u6b63\u5728\u73a9\u6e38\u620f.' ) def __repr__ ( self ): return f ' { self . name } : { self . age } ' stu1 = Student ( '\u9a86\u660a' , 40 ) print ( stu1 ) # \u9a86\u660a: 40 students = [ stu1 , Student ( '\u674e\u5143\u82b3' , 36 ), Student ( '\u738b\u5927\u9524' , 25 )] print ( students ) # [\u9a86\u660a: 40, \u674e\u5143\u82b3: 36, \u738b\u5927\u9524: 25]","title":"\u6253\u5370\u5bf9\u8c61"},{"location":"%E7%AC%AC17%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#_6","text":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6709\u4e09\u5927\u652f\u67f1\uff0c\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u7ed9\u5927\u5bb6\u5212\u91cd\u70b9\u7684\u65f6\u5019\u5708\u51fa\u7684\u4e09\u4e2a\u8bcd\uff1a \u5c01\u88c5 \u3001 \u7ee7\u627f \u548c \u591a\u6001 \u3002\u540e\u9762\u4e24\u4e2a\u6982\u5ff5\u5728\u4e0b\u4e00\u8282\u8bfe\u4e2d\u4f1a\u8be6\u7ec6\u8bf4\u660e\uff0c\u8fd9\u91cc\u6211\u4eec\u5148\u8bf4\u4e00\u4e0b\u4ec0\u4e48\u662f\u5c01\u88c5\u3002\u6211\u81ea\u5df1\u5bf9\u5c01\u88c5\u7684\u7406\u89e3\u662f\uff1a \u9690\u85cf\u4e00\u5207\u53ef\u4ee5\u9690\u85cf\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u5411\u5916\u754c\u66b4\u9732\u7b80\u5355\u7684\u8c03\u7528\u63a5\u53e3 \u3002\u6211\u4eec\u5728\u7c7b\u4e2d\u5b9a\u4e49\u7684\u5bf9\u8c61\u65b9\u6cd5\u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u5c01\u88c5\uff0c\u8fd9\u79cd\u5c01\u88c5\u53ef\u4ee5\u8ba9\u6211\u4eec\u5728\u521b\u5efa\u5bf9\u8c61\u4e4b\u540e\uff0c\u53ea\u9700\u8981\u7ed9\u5bf9\u8c61\u53d1\u9001\u4e00\u4e2a\u6d88\u606f\u5c31\u53ef\u4ee5\u6267\u884c\u65b9\u6cd5\u4e2d\u7684\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5728\u53ea\u77e5\u9053\u65b9\u6cd5\u7684\u540d\u5b57\u548c\u53c2\u6570\uff08\u65b9\u6cd5\u7684\u5916\u90e8\u89c6\u56fe\uff09\uff0c\u4e0d\u77e5\u9053\u65b9\u6cd5\u5185\u90e8\u5b9e\u73b0\u7ec6\u8282\uff08\u65b9\u6cd5\u7684\u5185\u90e8\u89c6\u56fe\uff09\u7684\u60c5\u51b5\u4e0b\u5c31\u5b8c\u6210\u4e86\u5bf9\u65b9\u6cd5\u7684\u4f7f\u7528\u3002 \u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5047\u5982\u8981\u63a7\u5236\u4e00\u4e2a\u673a\u5668\u4eba\u5e2e\u6211\u5012\u676f\u6c34\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0c\u4e0d\u505a\u4efb\u4f55\u7684\u5c01\u88c5\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5411\u8fd9\u4e2a\u673a\u5668\u4eba\u53d1\u51fa\u4e00\u7cfb\u5217\u7684\u6307\u4ee4\uff0c\u5982\u7ad9\u8d77\u6765\u3001\u5411\u5de6\u8f6c\u3001\u5411\u524d\u8d705\u6b65\u3001\u62ff\u8d77\u9762\u524d\u7684\u6c34\u676f\u3001\u5411\u540e\u8f6c\u3001\u5411\u524d\u8d7010\u6b65\u3001\u5f2f\u8170\u3001\u653e\u4e0b\u6c34\u676f\u3001\u6309\u4e0b\u51fa\u6c34\u6309\u94ae\u3001\u7b49\u5f8510\u79d2\u3001\u677e\u5f00\u51fa\u6c34\u6309\u94ae\u3001\u62ff\u8d77\u6c34\u676f\u3001\u5411\u53f3\u8f6c\u3001\u5411\u524d\u8d705\u6b65\u3001\u653e\u4e0b\u6c34\u676f\u7b49\uff0c\u624d\u80fd\u5b8c\u6210\u8fd9\u4e2a\u7b80\u5355\u7684\u64cd\u4f5c\uff0c\u60f3\u60f3\u90fd\u89c9\u5f97\u9ebb\u70e6\u3002\u6309\u7167\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u601d\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5012\u6c34\u7684\u64cd\u4f5c\u5c01\u88c5\u5230\u673a\u5668\u4eba\u7684\u4e00\u4e2a\u65b9\u6cd5\u4e2d\uff0c\u5f53\u9700\u8981\u673a\u5668\u4eba\u5e2e\u6211\u4eec\u5012\u6c34\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u5411\u673a\u5668\u4eba\u5bf9\u8c61\u53d1\u51fa\u5012\u6c34\u7684\u6d88\u606f\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6837\u505a\u4e0d\u662f\u66f4\u597d\u5417\uff1f \u5728\u5f88\u591a\u573a\u666f\u4e0b\uff0c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4e09\u6b65\u8d70\u7684\u95ee\u9898\u3002\u7b2c\u4e00\u6b65\u5b9a\u4e49\u7c7b\uff0c\u7b2c\u4e8c\u6b65\u521b\u5efa\u5bf9\u8c61\uff0c\u7b2c\u4e09\u6b65\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\u3002\u5f53\u7136\uff0c\u6709\u7684\u65f6\u5019\u6211\u4eec\u662f\u4e0d\u9700\u8981\u7b2c\u4e00\u6b65\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u60f3\u7528\u7684\u7c7b\u53ef\u80fd\u5df2\u7ecf\u5b58\u5728\u4e86\u3002\u4e4b\u524d\u6211\u4eec\u8bf4\u8fc7\uff0cPython\u5185\u7f6e\u7684 list \u3001 set \u3001 dict \u5176\u5b9e\u90fd\u4e0d\u662f\u51fd\u6570\u800c\u662f\u7c7b\uff0c\u5982\u679c\u8981\u521b\u5efa\u5217\u8868\u3001\u96c6\u5408\u3001\u5b57\u5178\u5bf9\u8c61\uff0c\u6211\u4eec\u5c31\u4e0d\u7528\u81ea\u5b9a\u4e49\u7c7b\u4e86\u3002\u5f53\u7136\uff0c\u6709\u7684\u7c7b\u5e76\u4e0d\u662fPython\u6807\u51c6\u5e93\u4e2d\u76f4\u63a5\u63d0\u4f9b\u7684\uff0c\u5b83\u53ef\u80fd\u6765\u81ea\u4e8e\u7b2c\u4e09\u65b9\u7684\u4ee3\u7801\uff0c\u5982\u4f55\u5b89\u88c5\u548c\u4f7f\u7528\u4e09\u65b9\u4ee3\u7801\u5728\u540e\u7eed\u8bfe\u7a0b\u4e2d\u4f1a\u8fdb\u884c\u8ba8\u8bba\u3002\u5728\u67d0\u4e9b\u7279\u6b8a\u7684\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u4f1a\u7528\u5230\u540d\u4e3a\u201c\u5185\u7f6e\u5bf9\u8c61\u201d\u7684\u5bf9\u8c61\uff0c\u6240\u8c13\u201c\u5185\u7f6e\u5bf9\u8c61\u201d\u5c31\u662f\u8bf4\u4e0a\u9762\u4e09\u6b65\u8d70\u7684\u7b2c\u4e00\u6b65\u548c\u7b2c\u4e8c\u6b65\u90fd\u4e0d\u9700\u8981\u4e86\uff0c\u56e0\u4e3a\u7c7b\u5df2\u7ecf\u5b58\u5728\u800c\u4e14\u5bf9\u8c61\u5df2\u7136\u521b\u5efa\u8fc7\u4e86\uff0c\u76f4\u63a5\u5411\u5bf9\u8c61\u53d1\u6d88\u606f\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u201c\u5f00\u7bb1\u5373\u7528\u201d\u3002","title":"\u9762\u5411\u5bf9\u8c61\u7684\u652f\u67f1"},{"location":"%E7%AC%AC17%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#_7","text":"","title":"\u7ecf\u5178\u6848\u4f8b"},{"location":"%E7%AC%AC17%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#1","text":"import time # \u5b9a\u4e49\u6570\u5b57\u65f6\u949f\u7c7b class Clock ( object ): \"\"\"\u6570\u5b57\u65f6\u949f\"\"\" def __init__ ( self , hour = 0 , minute = 0 , second = 0 ): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5 :param hour: \u65f6 :param minute: \u5206 :param second: \u79d2 \"\"\" self . hour = hour self . min = minute self . sec = second def run ( self ): \"\"\"\u8d70\u5b57\"\"\" self . sec += 1 if self . sec == 60 : self . sec = 0 self . min += 1 if self . min == 60 : self . min = 0 self . hour += 1 if self . hour == 24 : self . hour = 0 def show ( self ): \"\"\"\u663e\u793a\u65f6\u95f4\"\"\" return f ' { self . hour : 0>2d } : { self . min : 0>2d } : { self . sec : 0>2d } ' # \u521b\u5efa\u65f6\u949f\u5bf9\u8c61 clock = Clock ( 23 , 59 , 58 ) while True : # \u7ed9\u65f6\u949f\u5bf9\u8c61\u53d1\u6d88\u606f\u8bfb\u53d6\u65f6\u95f4 print ( clock . show ()) # \u4f11\u77201\u79d2\u949f time . sleep ( 1 ) # \u7ed9\u65f6\u949f\u5bf9\u8c61\u53d1\u6d88\u606f\u4f7f\u5176\u8d70\u5b57 clock . run ()","title":"\u6848\u4f8b1\uff1a\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u63cf\u8ff0\u6570\u5b57\u65f6\u949f\u3002"},{"location":"%E7%AC%AC17%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#2","text":"class Point ( object ): \"\"\"\u5c4f\u9762\u4e0a\u7684\u70b9\"\"\" def __init__ ( self , x = 0 , y = 0 ): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5 :param x: \u6a2a\u5750\u6807 :param y: \u7eb5\u5750\u6807 \"\"\" self . x , self . y = x , y def distance_to ( self , other ): \"\"\"\u8ba1\u7b97\u4e0e\u53e6\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb :param other: \u53e6\u4e00\u4e2a\u70b9 \"\"\" dx = self . x - other . x dy = self . y - other . y return ( dx * dx + dy * dy ) ** 0.5 def __str__ ( self ): return f '( { self . x } , { self . y } )' p1 = Point ( 3 , 5 ) p2 = Point ( 6 , 9 ) print ( p1 , p2 ) print ( p1 . distance_to ( p2 ))","title":"\u6848\u4f8b2\uff1a\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u63cf\u8ff0\u5e73\u9762\u4e0a\u7684\u70b9\uff0c\u8981\u6c42\u63d0\u4f9b\u8ba1\u7b97\u5230\u53e6\u4e00\u4e2a\u70b9\u8ddd\u79bb\u7684\u65b9\u6cd5\u3002"},{"location":"%E7%AC%AC17%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/#_8","text":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u662f\u4e00\u79cd\u975e\u5e38\u6d41\u884c\u7684\u7f16\u7a0b\u8303\u5f0f\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u6709 \u6307\u4ee4\u5f0f\u7f16\u7a0b \u3001 \u51fd\u6570\u5f0f\u7f16\u7a0b \u7b49\u7f16\u7a0b\u8303\u5f0f\u3002\u7531\u4e8e\u73b0\u5b9e\u4e16\u754c\u662f\u7531\u5bf9\u8c61\u6784\u6210\u7684\uff0c\u800c\u5bf9\u8c61\u662f\u53ef\u4ee5\u63a5\u6536\u6d88\u606f\u7684\u5b9e\u4f53\uff0c\u6240\u4ee5 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u66f4\u7b26\u5408\u4eba\u7c7b\u6b63\u5e38\u7684\u601d\u7ef4\u4e60\u60ef \u3002\u7c7b\u662f\u62bd\u8c61\u7684\uff0c\u5bf9\u8c61\u662f\u5177\u4f53\u7684\uff0c\u6709\u4e86\u7c7b\u5c31\u80fd\u521b\u5efa\u5bf9\u8c61\uff0c\u6709\u4e86\u5bf9\u8c61\u5c31\u53ef\u4ee5\u63a5\u6536\u6d88\u606f\uff0c\u8fd9\u5c31\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u57fa\u7840\u3002\u5b9a\u4e49\u7c7b\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u8fc7\u7a0b\uff0c\u627e\u5230\u5bf9\u8c61\u516c\u5171\u7684\u5c5e\u6027\u5c5e\u4e8e\u6570\u636e\u62bd\u8c61\uff0c\u627e\u5230\u5bf9\u8c61\u516c\u5171\u7684\u65b9\u6cd5\u5c5e\u4e8e\u884c\u4e3a\u62bd\u8c61\u3002\u62bd\u8c61\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u4ec1\u8005\u89c1\u4ec1\u667a\u8005\u89c1\u667a\u7684\u8fc7\u7a0b\uff0c\u5bf9\u540c\u4e00\u7c7b\u5bf9\u8c61\u8fdb\u884c\u62bd\u8c61\u53ef\u80fd\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u8bf4\u660e\uff1a \u672c\u8282\u8bfe\u7684\u63d2\u56fe\u6765\u81ea\u4e8e Grady Booc \u7b49\u64b0\u5199\u7684\u300a\u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e0e\u8bbe\u8ba1\u300b\u4e00\u4e66\uff0c\u8be5\u4e66\u662f\u8bb2\u89e3\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u7ecf\u5178\u8457\u4f5c\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u8d2d\u4e70\u548c\u9605\u8bfb\u8fd9\u672c\u4e66\u6765\u4e86\u89e3\u66f4\u591a\u7684\u9762\u5411\u5bf9\u8c61\u7684\u76f8\u5173\u77e5\u8bc6\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC18%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E8%BF%9B%E9%98%B6/","text":"\u7b2c18\u8bfe\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8fdb\u9636 \u4e0a\u4e00\u8282\u8bfe\u6211\u4eec\u8bb2\u89e3\u4e86Python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u8fd9\u4e00\u8282\u8bfe\u6211\u4eec\u7ee7\u7eed\u6765\u8ba8\u8bba\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u76f8\u5173\u7684\u5185\u5bb9\u3002 \u53ef\u89c1\u6027\u548c\u5c5e\u6027\u88c5\u9970\u5668 \u5728\u5f88\u591a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u5bf9\u8c61\u7684\u5c5e\u6027\u901a\u5e38\u4f1a\u88ab\u8bbe\u7f6e\u4e3a\u79c1\u6709\uff08private\uff09\u6216\u53d7\u4fdd\u62a4\uff08protected\uff09\u7684\u6210\u5458\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e0d\u5141\u8bb8\u76f4\u63a5\u8bbf\u95ee\u8fd9\u4e9b\u5c5e\u6027\uff1b\u5bf9\u8c61\u7684\u65b9\u6cd5\u901a\u5e38\u90fd\u662f\u516c\u5f00\u7684\uff08public\uff09\uff0c\u56e0\u4e3a\u516c\u5f00\u7684\u65b9\u6cd5\u662f\u5bf9\u8c61\u80fd\u591f\u63a5\u53d7\u7684\u6d88\u606f\uff0c\u4e5f\u662f\u5bf9\u8c61\u66b4\u9732\u7ed9\u5916\u754c\u7684\u8c03\u7528\u63a5\u53e3\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8bbf\u95ee\u53ef\u89c1\u6027\u3002\u5728Python\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ed9\u5bf9\u8c61\u5c5e\u6027\u540d\u6dfb\u52a0\u524d\u7f00\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f\u6765\u8bf4\u660e\u5c5e\u6027\u7684\u8bbf\u95ee\u53ef\u89c1\u6027\uff0c\u4f8b\u5982\uff0c\u53ef\u4ee5\u7528 __name \u8868\u793a\u4e00\u4e2a\u79c1\u6709\u5c5e\u6027\uff0c _name \u8868\u793a\u4e00\u4e2a\u53d7\u4fdd\u62a4\u5c5e\u6027\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Student : def __init__ ( self , name , age ): self . __name = name self . __age = age def study ( self , course_name ): print ( f ' { self . __name } \u6b63\u5728\u5b66\u4e60 { course_name } .' ) stu = Student ( '\u738b\u5927\u9524' , 20 ) stu . study ( 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) print ( stu . __name ) \u4e0a\u9762\u4ee3\u7801\u7684\u6700\u540e\u4e00\u884c\u4f1a\u5f15\u53d1 AttributeError \uff08\u5c5e\u6027\u9519\u8bef\uff09\u5f02\u5e38\uff0c\u5f02\u5e38\u6d88\u606f\u4e3a\uff1a 'Student' object has no attribute '__name' \u3002\u7531\u6b64\u53ef\u89c1\uff0c\u4ee5 __ \u5f00\u5934\u7684\u5c5e\u6027 __name \u662f\u79c1\u6709\u7684\uff0c\u5728\u7c7b\u7684\u5916\u9762\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\uff0c\u4f46\u662f\u7c7b\u91cc\u9762\u7684 study \u65b9\u6cd5\u4e2d\u53ef\u4ee5\u901a\u8fc7 self.__name \u8bbf\u95ee\u8be5\u5c5e\u6027\u3002 \u9700\u8981\u63d0\u9192\u5927\u5bb6\u7684\u662f\uff0cPython\u5e76\u6ca1\u6709\u4ece\u8bed\u6cd5\u4e0a\u4e25\u683c\u4fdd\u8bc1\u79c1\u6709\u5c5e\u6027\u7684\u79c1\u5bc6\u6027\uff0c\u5b83\u53ea\u662f\u7ed9\u79c1\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u6362\u4e86\u4e00\u4e2a\u540d\u5b57\u6765\u963b\u6320\u5bf9\u5b83\u4eec\u7684\u8bbf\u95ee\uff0c\u4e8b\u5b9e\u4e0a\u5982\u679c\u4f60\u77e5\u9053\u66f4\u6362\u540d\u5b57\u7684\u89c4\u5219\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u5230\u5b83\u4eec\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230\u79c1\u6709\u7684\u5c5e\u6027\u3002 class Student : def __init__ ( self , name , age ): self . __name = name self . __age = age def study ( self , course_name ): print ( f ' { self . __name } \u6b63\u5728\u5b66\u4e60 { course_name } .' ) stu = Student ( '\u738b\u5927\u9524' , 20 ) stu . study ( 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) print ( stu . _Student__name , stu . _Student__age ) Python\u4e2d\u6709\u4e00\u53e5\u540d\u8a00\uff1a\u201c We are all consenting adults here \u201d\uff08\u5927\u5bb6\u90fd\u662f\u6210\u5e74\u4eba\uff09\u3002Python\u8bed\u8a00\u7684\u8bbe\u8ba1\u8005\u8ba4\u4e3a\u7a0b\u5e8f\u5458\u8981\u4e3a\u81ea\u5df1\u7684\u884c\u4e3a\u8d1f\u8d23\uff0c\u800c\u4e0d\u662f\u7531Python\u8bed\u8a00\u672c\u8eab\u6765\u4e25\u683c\u9650\u5236\u8bbf\u95ee\u53ef\u89c1\u6027\uff0c\u800c\u5927\u591a\u6570\u7684\u7a0b\u5e8f\u5458\u90fd\u8ba4\u4e3a \u5f00\u653e\u6bd4\u5c01\u95ed\u8981\u597d \uff0c\u628a\u5bf9\u8c61\u7684\u5c5e\u6027\u79c1\u6709\u5316\u5e76\u4e0d\u662f\u7f16\u7a0b\u8bed\u8a00\u5fc5\u987b\u7684\u4e1c\u897f\uff0c\u6240\u4ee5Python\u5e76\u6ca1\u6709\u4ece\u8bed\u6cd5\u4e0a\u505a\u51fa\u6700\u4e25\u683c\u7684\u9650\u5b9a\u3002 Python\u4e2d\u53ef\u4ee5\u901a\u8fc7 property \u88c5\u9970\u5668\u4e3a\u201c\u79c1\u6709\u201d\u5c5e\u6027\u63d0\u4f9b\u8bfb\u53d6\u548c\u4fee\u6539\u7684\u65b9\u6cd5\uff0c\u4e4b\u524d\u6211\u4eec\u63d0\u5230\u8fc7\uff0c\u88c5\u9970\u5668\u901a\u5e38\u4f1a\u653e\u5728\u7c7b\u3001\u51fd\u6570\u6216\u65b9\u6cd5\u7684\u58f0\u660e\u4e4b\u524d\uff0c\u901a\u8fc7\u4e00\u4e2a @ \u7b26\u53f7\u8868\u793a\u5c06\u88c5\u9970\u5668\u5e94\u7528\u4e8e\u7c7b\u3001\u51fd\u6570\u6216\u65b9\u6cd5\u3002 class Student : def __init__ ( self , name , age ): self . __name = name self . __age = age # \u5c5e\u6027\u8bbf\u95ee\u5668(getter\u65b9\u6cd5) - \u83b7\u53d6__name\u5c5e\u6027 @property def name ( self ): return self . __name # \u5c5e\u6027\u4fee\u6539\u5668(setter\u65b9\u6cd5) - \u4fee\u6539__name\u5c5e\u6027 @name . setter def name ( self , name ): # \u5982\u679cname\u53c2\u6570\u4e0d\u4e3a\u7a7a\u5c31\u8d4b\u503c\u7ed9\u5bf9\u8c61\u7684__name\u5c5e\u6027 # \u5426\u5219\u5c06__name\u5c5e\u6027\u8d4b\u503c\u4e3a'\u65e0\u540d\u6c0f'\uff0c\u6709\u4e24\u79cd\u5199\u6cd5 # self.__name = name if name else '\u65e0\u540d\u6c0f' self . __name = name or '\u65e0\u540d\u6c0f' @property def age ( self ): return self . __age stu = Student ( '\u738b\u5927\u9524' , 20 ) print ( stu . name , stu . age ) # \u738b\u5927\u9524 20 stu . name = '' print ( stu . name ) # \u65e0\u540d\u6c0f # stu.age = 30 # AttributeError: can't set attribute \u5728\u5b9e\u9645\u9879\u76ee\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5e76\u4e0d\u7ecf\u5e38\u4f7f\u7528\u79c1\u6709\u5c5e\u6027\uff0c\u5c5e\u6027\u88c5\u9970\u5668\u7684\u4f7f\u7528\u4e5f\u6bd4\u8f83\u5c11\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u77e5\u8bc6\u70b9\u5927\u5bb6\u7b80\u5355\u4e86\u89e3\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002 \u52a8\u6001\u5c5e\u6027 Python\u662f\u4e00\u95e8\u52a8\u6001\u8bed\u8a00\uff0c\u7ef4\u57fa\u767e\u79d1\u5bf9\u52a8\u6001\u8bed\u8a00\u7684\u89e3\u91ca\u662f\uff1a\u201c\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u6539\u53d8\u5176\u7ed3\u6784\u7684\u8bed\u8a00\uff0c\u4f8b\u5982\u65b0\u7684\u51fd\u6570\u3001\u5bf9\u8c61\u3001\u751a\u81f3\u4ee3\u7801\u53ef\u4ee5\u88ab\u5f15\u8fdb\uff0c\u5df2\u6709\u7684\u51fd\u6570\u53ef\u4ee5\u88ab\u5220\u9664\u6216\u662f\u5176\u4ed6\u7ed3\u6784\u4e0a\u7684\u53d8\u5316\u3002\u52a8\u6001\u8bed\u8a00\u975e\u5e38\u7075\u6d3b\uff0c\u76ee\u524d\u6d41\u884c\u7684Python\u548cJavaScript\u90fd\u662f\u52a8\u6001\u8bed\u8a00\uff0c\u9664\u6b64\u4e4b\u5916\u5982PHP\u3001Ruby\u7b49\u4e5f\u90fd\u5c5e\u4e8e\u52a8\u6001\u8bed\u8a00\uff0c\u800cC\u3001C++\u7b49\u8bed\u8a00\u5219\u4e0d\u5c5e\u4e8e\u52a8\u6001\u8bed\u8a00\u201d\u3002 \u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u52a8\u6001\u4e3a\u5bf9\u8c61\u6dfb\u52a0\u5c5e\u6027\uff0c\u8fd9\u662fPython\u4f5c\u4e3a\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u7684\u4e00\u9879\u7279\u6743\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002\u9700\u8981\u63d0\u9192\u5927\u5bb6\u7684\u662f\uff0c\u5bf9\u8c61\u7684\u65b9\u6cd5\u5176\u5b9e\u672c\u8d28\u4e0a\u4e5f\u662f\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u5982\u679c\u7ed9\u5bf9\u8c61\u53d1\u9001\u4e00\u4e2a\u65e0\u6cd5\u63a5\u6536\u7684\u6d88\u606f\uff0c\u5f15\u53d1\u7684\u5f02\u5e38\u4ecd\u7136\u662f AttributeError \u3002 class Student : def __init__ ( self , name , age ): self . name = name self . age = age stu = Student ( '\u738b\u5927\u9524' , 20 ) # \u4e3aStudent\u5bf9\u8c61\u52a8\u6001\u6dfb\u52a0sex\u5c5e\u6027 stu . sex = '\u7537' \u5982\u679c\u4e0d\u5e0c\u671b\u5728\u4f7f\u7528\u5bf9\u8c61\u65f6\u52a8\u6001\u7684\u4e3a\u5bf9\u8c61\u6dfb\u52a0\u5c5e\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528Python\u7684 __slots__ \u9b54\u6cd5\u3002\u5bf9\u4e8e Student \u7c7b\u6765\u8bf4\uff0c\u53ef\u4ee5\u5728\u7c7b\u4e2d\u6307\u5b9a __slots__ = ('name', 'age') \uff0c\u8fd9\u6837 Student \u7c7b\u7684\u5bf9\u8c61\u53ea\u80fd\u6709 name \u548c age \u5c5e\u6027\uff0c\u5982\u679c\u60f3\u52a8\u6001\u6dfb\u52a0\u5176\u4ed6\u5c5e\u6027\u5c06\u4f1a\u5f15\u53d1\u5f02\u5e38\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Student : __slots__ = ( 'name' , 'age' ) def __init__ ( self , name , age ): self . name = name self . age = age stu = Student ( '\u738b\u5927\u9524' , 20 ) # AttributeError: 'Student' object has no attribute 'sex' stu . sex = '\u7537' \u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5 \u4e4b\u524d\u6211\u4eec\u5728\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u90fd\u662f\u5bf9\u8c61\u65b9\u6cd5\uff0c\u6362\u53e5\u8bdd\u8bf4\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u662f\u5bf9\u8c61\u53ef\u4ee5\u63a5\u6536\u7684\u6d88\u606f\u3002\u9664\u4e86\u5bf9\u8c61\u65b9\u6cd5\u4e4b\u5916\uff0c\u7c7b\u4e2d\u8fd8\u53ef\u4ee5\u6709\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\uff0c\u8fd9\u4e24\u7c7b\u65b9\u6cd5\u662f\u53d1\u7ed9\u7c7b\u7684\u6d88\u606f\uff0c\u4e8c\u8005\u5e76\u6ca1\u6709\u5b9e\u8d28\u6027\u7684\u533a\u522b\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7684\u4e16\u754c\u91cc\uff0c\u4e00\u5207\u7686\u4e3a\u5bf9\u8c61\uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u6bcf\u4e00\u4e2a\u7c7b\u5176\u5b9e\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\u5c31\u662f\u53d1\u9001\u7ed9\u7c7b\u5bf9\u8c61\u7684\u6d88\u606f\u3002\u90a3\u4e48\uff0c\u4ec0\u4e48\u6837\u7684\u6d88\u606f\u4f1a\u76f4\u63a5\u53d1\u9001\u7ed9\u7c7b\u5bf9\u8c61\u5462\uff1f \u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5b9a\u4e49\u4e00\u4e2a\u4e09\u89d2\u5f62\u7c7b\uff0c\u901a\u8fc7\u4f20\u5165\u4e09\u6761\u8fb9\u7684\u957f\u5ea6\u6765\u6784\u9020\u4e09\u89d2\u5f62\uff0c\u5e76\u63d0\u4f9b\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u7684\u65b9\u6cd5\u3002\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u80af\u5b9a\u662f\u4e09\u89d2\u5f62\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e00\u70b9\u6beb\u65e0\u7591\u95ee\u3002\u4f46\u662f\u5728\u521b\u5efa\u4e09\u89d2\u5f62\u5bf9\u8c61\u65f6\uff0c\u4f20\u5165\u7684\u4e09\u6761\u8fb9\u957f\u672a\u5fc5\u80fd\u6784\u9020\u51fa\u4e09\u89d2\u5f62\uff0c\u4e3a\u6b64\u6211\u4eec\u53ef\u4ee5\u5148\u5199\u4e00\u4e2a\u65b9\u6cd5\u6765\u9a8c\u8bc1\u7ed9\u5b9a\u7684\u4e09\u6761\u8fb9\u957f\u662f\u5426\u53ef\u4ee5\u6784\u6210\u4e09\u89d2\u5f62\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5f88\u663e\u7136\u5c31\u4e0d\u662f\u5bf9\u8c61\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5728\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u65f6\u4e09\u89d2\u5f62\u5bf9\u8c61\u8fd8\u6ca1\u6709\u521b\u5efa\u51fa\u6765\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u7c7b\u65b9\u6cd5\u8bbe\u8ba1\u4e3a\u9759\u6001\u65b9\u6cd5\u6216\u7c7b\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u7c7b\u65b9\u6cd5\u4e0d\u662f\u53d1\u9001\u7ed9\u4e09\u89d2\u5f62\u5bf9\u8c61\u7684\u6d88\u606f\uff0c\u800c\u662f\u53d1\u9001\u7ed9\u4e09\u89d2\u5f62\u7c7b\u7684\u6d88\u606f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Triangle ( object ): \"\"\"\u4e09\u89d2\u5f62\u7c7b\"\"\" def __init__ ( self , a , b , c ): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\"\"\" self . a = a self . b = b self . c = c @staticmethod def is_valid ( a , b , c ): \"\"\"\u5224\u65ad\u4e09\u6761\u8fb9\u957f\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62(\u9759\u6001\u65b9\u6cd5)\"\"\" return a + b > c and b + c > a and a + c > b # @classmethod # def is_valid(cls, a, b, c): # \"\"\"\u5224\u65ad\u4e09\u6761\u8fb9\u957f\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62(\u7c7b\u65b9\u6cd5)\"\"\" # return a + b > c and b + c > a and a + c > b def perimeter ( self ): \"\"\"\u8ba1\u7b97\u5468\u957f\"\"\" return self . a + self . b + self . c def area ( self ): \"\"\"\u8ba1\u7b97\u9762\u79ef\"\"\" p = self . perimeter () / 2 return ( p * ( p - self . a ) * ( p - self . b ) * ( p - self . c )) ** 0.5 \u4e0a\u9762\u7684\u4ee3\u7801\u4f7f\u7528 staticmethod \u88c5\u9970\u5668\u58f0\u660e\u4e86 is_valid \u65b9\u6cd5\u662f Triangle \u7c7b\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u5982\u679c\u8981\u58f0\u660e\u7c7b\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528 classmethod \u88c5\u9970\u5668\u3002\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \u7c7b\u540d.\u65b9\u6cd5\u540d \u7684\u65b9\u5f0f\u6765\u8c03\u7528\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\uff0c\u4e8c\u8005\u7684\u533a\u522b\u5728\u4e8e\uff0c\u7c7b\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u7c7b\u5bf9\u8c61\u672c\u8eab\uff0c\u800c\u9759\u6001\u65b9\u6cd5\u5219\u6ca1\u6709\u8fd9\u4e2a\u53c2\u6570\u3002\u7b80\u5355\u7684\u603b\u7ed3\u4e00\u4e0b\uff0c \u5bf9\u8c61\u65b9\u6cd5\u3001\u7c7b\u65b9\u6cd5\u3001\u9759\u6001\u65b9\u6cd5\u90fd\u53ef\u4ee5\u901a\u8fc7 \u7c7b\u540d.\u65b9\u6cd5\u540d \u7684\u65b9\u5f0f\u6765\u8c03\u7528\uff0c\u533a\u522b\u5728\u4e8e\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5230\u5e95\u662f\u666e\u901a\u5bf9\u8c61\u8fd8\u662f\u7c7b\u5bf9\u8c61\uff0c\u8fd8\u662f\u6ca1\u6709\u63a5\u53d7\u6d88\u606f\u7684\u5bf9\u8c61 \u3002\u9759\u6001\u65b9\u6cd5\u901a\u5e38\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5199\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u5e76\u6ca1\u6709\u8ddf\u7279\u5b9a\u7684\u5bf9\u8c61\u7ed1\u5b9a\u3002 \u7ee7\u627f\u548c\u591a\u6001 \u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\u652f\u6301\u5728\u5df2\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u65b0\u7c7b\uff0c\u4ece\u800c\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u7684\u7f16\u5199\u3002\u63d0\u4f9b\u7ee7\u627f\u4fe1\u606f\u7684\u7c7b\u53eb\u505a\u7236\u7c7b\uff08\u8d85\u7c7b\u3001\u57fa\u7c7b\uff09\uff0c\u5f97\u5230\u7ee7\u627f\u4fe1\u606f\u7684\u7c7b\u53eb\u505a\u5b50\u7c7b\uff08\u6d3e\u751f\u7c7b\u3001\u884d\u751f\u7c7b\uff09\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5b66\u751f\u7c7b\u548c\u4e00\u4e2a\u8001\u5e08\u7c7b\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u4ed6\u4eec\u6709\u5927\u91cf\u7684\u91cd\u590d\u4ee3\u7801\uff0c\u800c\u8fd9\u4e9b\u91cd\u590d\u4ee3\u7801\u90fd\u662f\u8001\u5e08\u548c\u5b66\u751f\u4f5c\u4e3a\u4eba\u7684\u516c\u5171\u5c5e\u6027\u548c\u884c\u4e3a\uff0c\u6240\u4ee5\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u5b9a\u4e49\u4eba\u7c7b\uff0c\u518d\u901a\u8fc7\u7ee7\u627f\uff0c\u4ece\u4eba\u7c7b\u6d3e\u751f\u51fa\u8001\u5e08\u7c7b\u548c\u5b66\u751f\u7c7b\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Person : \"\"\"\u4eba\u7c7b\"\"\" def __init__ ( self , name , age ): self . name = name self . age = age def eat ( self ): print ( f ' { self . name } \u6b63\u5728\u5403\u996d.' ) def sleep ( self ): print ( f ' { self . name } \u6b63\u5728\u7761\u89c9.' ) class Student ( Person ): \"\"\"\u5b66\u751f\u7c7b\"\"\" def __init__ ( self , name , age ): # super(Student, self).__init__(name, age) super () . __init__ ( name , age ) def study ( self , course_name ): print ( f ' { self . name } \u6b63\u5728\u5b66\u4e60 { course_name } .' ) class Teacher ( Person ): \"\"\"\u8001\u5e08\u7c7b\"\"\" def __init__ ( self , name , age , title ): # super(Teacher, self).__init__(name, age) super () . __init__ ( name , age ) self . title = title def teach ( self , course_name ): print ( f ' { self . name }{ self . title } \u6b63\u5728\u8bb2\u6388 { course_name } .' ) stu1 = Student ( '\u767d\u5143\u82b3' , 21 ) stu2 = Student ( '\u72c4\u4ec1\u6770' , 22 ) teacher = Teacher ( '\u6b66\u5219\u5929' , 35 , '\u526f\u6559\u6388' ) stu1 . eat () stu2 . sleep () teacher . teach ( 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) stu1 . study ( 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) \u7ee7\u627f\u7684\u8bed\u6cd5\u662f\u5728\u5b9a\u4e49\u7c7b\u7684\u65f6\u5019\uff0c\u5728\u7c7b\u540d\u540e\u7684\u5706\u62ec\u53f7\u4e2d\u6307\u5b9a\u5f53\u524d\u7c7b\u7684\u7236\u7c7b\u3002\u5982\u679c\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7684\u65f6\u5019\u6ca1\u6709\u6307\u5b9a\u5b83\u7684\u7236\u7c7b\u662f\u8c01\uff0c\u90a3\u4e48\u9ed8\u8ba4\u7684\u7236\u7c7b\u662f object \u7c7b\u3002 object \u7c7b\u662fPython\u4e2d\u7684\u9876\u7ea7\u7c7b\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6240\u6709\u7684\u7c7b\u90fd\u662f\u5b83\u7684\u5b50\u7c7b\uff0c\u8981\u4e48\u76f4\u63a5\u7ee7\u627f\u5b83\uff0c\u8981\u4e48\u95f4\u63a5\u7ee7\u627f\u5b83\u3002Python\u8bed\u8a00\u5141\u8bb8\u591a\u91cd\u7ee7\u627f\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u7236\u7c7b\uff0c\u5173\u4e8e\u591a\u91cd\u7ee7\u627f\u7684\u95ee\u9898\u6211\u4eec\u5728\u540e\u9762\u4f1a\u6709\u66f4\u4e3a\u8be6\u7ec6\u7684\u8ba8\u8bba\u3002\u5728\u5b50\u7c7b\u7684\u521d\u59cb\u5316\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 super().__init__() \u6765\u8c03\u7528\u7236\u7c7b\u521d\u59cb\u5316\u65b9\u6cd5\uff0c super \u51fd\u6570\u662fPython\u5185\u7f6e\u51fd\u6570\u4e2d\u4e13\u95e8\u4e3a\u83b7\u53d6\u5f53\u524d\u5bf9\u8c61\u7684\u7236\u7c7b\u5bf9\u8c61\u800c\u8bbe\u8ba1\u7684\u3002\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5b50\u7c7b\u9664\u4e86\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f\u5f97\u5230\u7236\u7c7b\u63d0\u4f9b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u5916\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7279\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u6240\u4ee5\u5b50\u7c7b\u6bd4\u7236\u7c7b\u62e5\u6709\u7684\u66f4\u591a\u7684\u80fd\u529b\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u7528\u5b50\u7c7b\u5bf9\u8c61\u53bb\u66ff\u6362\u6389\u4e00\u4e2a\u7236\u7c7b\u5bf9\u8c61\uff0c\u8fd9\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u4e00\u4e2a\u5e38\u89c1\u7684\u884c\u4e3a\uff0c\u4e5f\u53eb\u505a\u201c\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u201d\uff08Liskov Substitution Principle\uff09\u3002 \u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u7684\u65b9\u6cd5\u540e\uff0c\u8fd8\u53ef\u4ee5\u5bf9\u65b9\u6cd5\u8fdb\u884c\u91cd\u5199\uff08\u91cd\u65b0\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff09\uff0c\u4e0d\u540c\u7684\u5b50\u7c7b\u53ef\u4ee5\u5bf9\u7236\u7c7b\u7684\u540c\u4e00\u4e2a\u65b9\u6cd5\u7ed9\u51fa\u4e0d\u540c\u7684\u5b9e\u73b0\u7248\u672c\uff0c\u8fd9\u6837\u7684\u65b9\u6cd5\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5c31\u4f1a\u8868\u73b0\u51fa\u591a\u6001\u884c\u4e3a\uff08\u8c03\u7528\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u505a\u4e86\u4e0d\u540c\u7684\u4e8b\u60c5\uff09\u3002\u591a\u6001\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u6700\u7cbe\u9ad3\u7684\u90e8\u5206\uff0c\u5f53\u7136\u4e5f\u662f\u5bf9\u521d\u5b66\u8005\u6765\u8bf4\u6700\u96be\u4ee5\u7406\u89e3\u548c\u7075\u6d3b\u8fd0\u7528\u7684\u90e8\u5206\uff0c\u6211\u4eec\u4f1a\u5728\u4e0b\u4e00\u8282\u8bfe\u4e2d\u7528\u4e13\u95e8\u7684\u4f8b\u5b50\u6765\u8bb2\u89e3\u591a\u6001\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u3002 \u7b80\u5355\u7684\u603b\u7ed3 Python\u662f\u52a8\u6001\u8bed\u8a00\uff0cPython\u4e2d\u7684\u5bf9\u8c61\u53ef\u4ee5\u52a8\u6001\u7684\u6dfb\u52a0\u5c5e\u6027\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7684\u4e16\u754c\u4e2d\uff0c \u4e00\u5207\u7686\u4e3a\u5bf9\u8c61 \uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u7c7b\u4e5f\u662f\u5bf9\u8c61\uff0c\u6240\u4ee5 \u7c7b\u4e5f\u53ef\u4ee5\u63a5\u6536\u6d88\u606f \uff0c\u5bf9\u5e94\u7684\u65b9\u6cd5\u662f\u7c7b\u65b9\u6cd5\u6216\u9759\u6001\u65b9\u6cd5\u3002\u901a\u8fc7\u7ee7\u627f\uff0c\u6211\u4eec \u53ef\u4ee5\u4ece\u5df2\u6709\u7684\u7c7b\u521b\u5efa\u65b0\u7c7b \uff0c\u5b9e\u73b0\u5bf9\u5df2\u6709\u7c7b\u4ee3\u7801\u7684\u590d\u7528\u3002","title":"\u7b2c18\u8bfe\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8fdb\u9636"},{"location":"%E7%AC%AC18%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E8%BF%9B%E9%98%B6/#18","text":"\u4e0a\u4e00\u8282\u8bfe\u6211\u4eec\u8bb2\u89e3\u4e86Python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u8fd9\u4e00\u8282\u8bfe\u6211\u4eec\u7ee7\u7eed\u6765\u8ba8\u8bba\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u76f8\u5173\u7684\u5185\u5bb9\u3002","title":"\u7b2c18\u8bfe\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8fdb\u9636"},{"location":"%E7%AC%AC18%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E8%BF%9B%E9%98%B6/#_1","text":"\u5728\u5f88\u591a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u5bf9\u8c61\u7684\u5c5e\u6027\u901a\u5e38\u4f1a\u88ab\u8bbe\u7f6e\u4e3a\u79c1\u6709\uff08private\uff09\u6216\u53d7\u4fdd\u62a4\uff08protected\uff09\u7684\u6210\u5458\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e0d\u5141\u8bb8\u76f4\u63a5\u8bbf\u95ee\u8fd9\u4e9b\u5c5e\u6027\uff1b\u5bf9\u8c61\u7684\u65b9\u6cd5\u901a\u5e38\u90fd\u662f\u516c\u5f00\u7684\uff08public\uff09\uff0c\u56e0\u4e3a\u516c\u5f00\u7684\u65b9\u6cd5\u662f\u5bf9\u8c61\u80fd\u591f\u63a5\u53d7\u7684\u6d88\u606f\uff0c\u4e5f\u662f\u5bf9\u8c61\u66b4\u9732\u7ed9\u5916\u754c\u7684\u8c03\u7528\u63a5\u53e3\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8bbf\u95ee\u53ef\u89c1\u6027\u3002\u5728Python\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ed9\u5bf9\u8c61\u5c5e\u6027\u540d\u6dfb\u52a0\u524d\u7f00\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f\u6765\u8bf4\u660e\u5c5e\u6027\u7684\u8bbf\u95ee\u53ef\u89c1\u6027\uff0c\u4f8b\u5982\uff0c\u53ef\u4ee5\u7528 __name \u8868\u793a\u4e00\u4e2a\u79c1\u6709\u5c5e\u6027\uff0c _name \u8868\u793a\u4e00\u4e2a\u53d7\u4fdd\u62a4\u5c5e\u6027\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Student : def __init__ ( self , name , age ): self . __name = name self . __age = age def study ( self , course_name ): print ( f ' { self . __name } \u6b63\u5728\u5b66\u4e60 { course_name } .' ) stu = Student ( '\u738b\u5927\u9524' , 20 ) stu . study ( 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) print ( stu . __name ) \u4e0a\u9762\u4ee3\u7801\u7684\u6700\u540e\u4e00\u884c\u4f1a\u5f15\u53d1 AttributeError \uff08\u5c5e\u6027\u9519\u8bef\uff09\u5f02\u5e38\uff0c\u5f02\u5e38\u6d88\u606f\u4e3a\uff1a 'Student' object has no attribute '__name' \u3002\u7531\u6b64\u53ef\u89c1\uff0c\u4ee5 __ \u5f00\u5934\u7684\u5c5e\u6027 __name \u662f\u79c1\u6709\u7684\uff0c\u5728\u7c7b\u7684\u5916\u9762\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\uff0c\u4f46\u662f\u7c7b\u91cc\u9762\u7684 study \u65b9\u6cd5\u4e2d\u53ef\u4ee5\u901a\u8fc7 self.__name \u8bbf\u95ee\u8be5\u5c5e\u6027\u3002 \u9700\u8981\u63d0\u9192\u5927\u5bb6\u7684\u662f\uff0cPython\u5e76\u6ca1\u6709\u4ece\u8bed\u6cd5\u4e0a\u4e25\u683c\u4fdd\u8bc1\u79c1\u6709\u5c5e\u6027\u7684\u79c1\u5bc6\u6027\uff0c\u5b83\u53ea\u662f\u7ed9\u79c1\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u6362\u4e86\u4e00\u4e2a\u540d\u5b57\u6765\u963b\u6320\u5bf9\u5b83\u4eec\u7684\u8bbf\u95ee\uff0c\u4e8b\u5b9e\u4e0a\u5982\u679c\u4f60\u77e5\u9053\u66f4\u6362\u540d\u5b57\u7684\u89c4\u5219\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u5230\u5b83\u4eec\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230\u79c1\u6709\u7684\u5c5e\u6027\u3002 class Student : def __init__ ( self , name , age ): self . __name = name self . __age = age def study ( self , course_name ): print ( f ' { self . __name } \u6b63\u5728\u5b66\u4e60 { course_name } .' ) stu = Student ( '\u738b\u5927\u9524' , 20 ) stu . study ( 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) print ( stu . _Student__name , stu . _Student__age ) Python\u4e2d\u6709\u4e00\u53e5\u540d\u8a00\uff1a\u201c We are all consenting adults here \u201d\uff08\u5927\u5bb6\u90fd\u662f\u6210\u5e74\u4eba\uff09\u3002Python\u8bed\u8a00\u7684\u8bbe\u8ba1\u8005\u8ba4\u4e3a\u7a0b\u5e8f\u5458\u8981\u4e3a\u81ea\u5df1\u7684\u884c\u4e3a\u8d1f\u8d23\uff0c\u800c\u4e0d\u662f\u7531Python\u8bed\u8a00\u672c\u8eab\u6765\u4e25\u683c\u9650\u5236\u8bbf\u95ee\u53ef\u89c1\u6027\uff0c\u800c\u5927\u591a\u6570\u7684\u7a0b\u5e8f\u5458\u90fd\u8ba4\u4e3a \u5f00\u653e\u6bd4\u5c01\u95ed\u8981\u597d \uff0c\u628a\u5bf9\u8c61\u7684\u5c5e\u6027\u79c1\u6709\u5316\u5e76\u4e0d\u662f\u7f16\u7a0b\u8bed\u8a00\u5fc5\u987b\u7684\u4e1c\u897f\uff0c\u6240\u4ee5Python\u5e76\u6ca1\u6709\u4ece\u8bed\u6cd5\u4e0a\u505a\u51fa\u6700\u4e25\u683c\u7684\u9650\u5b9a\u3002 Python\u4e2d\u53ef\u4ee5\u901a\u8fc7 property \u88c5\u9970\u5668\u4e3a\u201c\u79c1\u6709\u201d\u5c5e\u6027\u63d0\u4f9b\u8bfb\u53d6\u548c\u4fee\u6539\u7684\u65b9\u6cd5\uff0c\u4e4b\u524d\u6211\u4eec\u63d0\u5230\u8fc7\uff0c\u88c5\u9970\u5668\u901a\u5e38\u4f1a\u653e\u5728\u7c7b\u3001\u51fd\u6570\u6216\u65b9\u6cd5\u7684\u58f0\u660e\u4e4b\u524d\uff0c\u901a\u8fc7\u4e00\u4e2a @ \u7b26\u53f7\u8868\u793a\u5c06\u88c5\u9970\u5668\u5e94\u7528\u4e8e\u7c7b\u3001\u51fd\u6570\u6216\u65b9\u6cd5\u3002 class Student : def __init__ ( self , name , age ): self . __name = name self . __age = age # \u5c5e\u6027\u8bbf\u95ee\u5668(getter\u65b9\u6cd5) - \u83b7\u53d6__name\u5c5e\u6027 @property def name ( self ): return self . __name # \u5c5e\u6027\u4fee\u6539\u5668(setter\u65b9\u6cd5) - \u4fee\u6539__name\u5c5e\u6027 @name . setter def name ( self , name ): # \u5982\u679cname\u53c2\u6570\u4e0d\u4e3a\u7a7a\u5c31\u8d4b\u503c\u7ed9\u5bf9\u8c61\u7684__name\u5c5e\u6027 # \u5426\u5219\u5c06__name\u5c5e\u6027\u8d4b\u503c\u4e3a'\u65e0\u540d\u6c0f'\uff0c\u6709\u4e24\u79cd\u5199\u6cd5 # self.__name = name if name else '\u65e0\u540d\u6c0f' self . __name = name or '\u65e0\u540d\u6c0f' @property def age ( self ): return self . __age stu = Student ( '\u738b\u5927\u9524' , 20 ) print ( stu . name , stu . age ) # \u738b\u5927\u9524 20 stu . name = '' print ( stu . name ) # \u65e0\u540d\u6c0f # stu.age = 30 # AttributeError: can't set attribute \u5728\u5b9e\u9645\u9879\u76ee\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5e76\u4e0d\u7ecf\u5e38\u4f7f\u7528\u79c1\u6709\u5c5e\u6027\uff0c\u5c5e\u6027\u88c5\u9970\u5668\u7684\u4f7f\u7528\u4e5f\u6bd4\u8f83\u5c11\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u77e5\u8bc6\u70b9\u5927\u5bb6\u7b80\u5355\u4e86\u89e3\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u53ef\u89c1\u6027\u548c\u5c5e\u6027\u88c5\u9970\u5668"},{"location":"%E7%AC%AC18%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E8%BF%9B%E9%98%B6/#_2","text":"Python\u662f\u4e00\u95e8\u52a8\u6001\u8bed\u8a00\uff0c\u7ef4\u57fa\u767e\u79d1\u5bf9\u52a8\u6001\u8bed\u8a00\u7684\u89e3\u91ca\u662f\uff1a\u201c\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u6539\u53d8\u5176\u7ed3\u6784\u7684\u8bed\u8a00\uff0c\u4f8b\u5982\u65b0\u7684\u51fd\u6570\u3001\u5bf9\u8c61\u3001\u751a\u81f3\u4ee3\u7801\u53ef\u4ee5\u88ab\u5f15\u8fdb\uff0c\u5df2\u6709\u7684\u51fd\u6570\u53ef\u4ee5\u88ab\u5220\u9664\u6216\u662f\u5176\u4ed6\u7ed3\u6784\u4e0a\u7684\u53d8\u5316\u3002\u52a8\u6001\u8bed\u8a00\u975e\u5e38\u7075\u6d3b\uff0c\u76ee\u524d\u6d41\u884c\u7684Python\u548cJavaScript\u90fd\u662f\u52a8\u6001\u8bed\u8a00\uff0c\u9664\u6b64\u4e4b\u5916\u5982PHP\u3001Ruby\u7b49\u4e5f\u90fd\u5c5e\u4e8e\u52a8\u6001\u8bed\u8a00\uff0c\u800cC\u3001C++\u7b49\u8bed\u8a00\u5219\u4e0d\u5c5e\u4e8e\u52a8\u6001\u8bed\u8a00\u201d\u3002 \u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u52a8\u6001\u4e3a\u5bf9\u8c61\u6dfb\u52a0\u5c5e\u6027\uff0c\u8fd9\u662fPython\u4f5c\u4e3a\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u7684\u4e00\u9879\u7279\u6743\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002\u9700\u8981\u63d0\u9192\u5927\u5bb6\u7684\u662f\uff0c\u5bf9\u8c61\u7684\u65b9\u6cd5\u5176\u5b9e\u672c\u8d28\u4e0a\u4e5f\u662f\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u5982\u679c\u7ed9\u5bf9\u8c61\u53d1\u9001\u4e00\u4e2a\u65e0\u6cd5\u63a5\u6536\u7684\u6d88\u606f\uff0c\u5f15\u53d1\u7684\u5f02\u5e38\u4ecd\u7136\u662f AttributeError \u3002 class Student : def __init__ ( self , name , age ): self . name = name self . age = age stu = Student ( '\u738b\u5927\u9524' , 20 ) # \u4e3aStudent\u5bf9\u8c61\u52a8\u6001\u6dfb\u52a0sex\u5c5e\u6027 stu . sex = '\u7537' \u5982\u679c\u4e0d\u5e0c\u671b\u5728\u4f7f\u7528\u5bf9\u8c61\u65f6\u52a8\u6001\u7684\u4e3a\u5bf9\u8c61\u6dfb\u52a0\u5c5e\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528Python\u7684 __slots__ \u9b54\u6cd5\u3002\u5bf9\u4e8e Student \u7c7b\u6765\u8bf4\uff0c\u53ef\u4ee5\u5728\u7c7b\u4e2d\u6307\u5b9a __slots__ = ('name', 'age') \uff0c\u8fd9\u6837 Student \u7c7b\u7684\u5bf9\u8c61\u53ea\u80fd\u6709 name \u548c age \u5c5e\u6027\uff0c\u5982\u679c\u60f3\u52a8\u6001\u6dfb\u52a0\u5176\u4ed6\u5c5e\u6027\u5c06\u4f1a\u5f15\u53d1\u5f02\u5e38\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Student : __slots__ = ( 'name' , 'age' ) def __init__ ( self , name , age ): self . name = name self . age = age stu = Student ( '\u738b\u5927\u9524' , 20 ) # AttributeError: 'Student' object has no attribute 'sex' stu . sex = '\u7537'","title":"\u52a8\u6001\u5c5e\u6027"},{"location":"%E7%AC%AC18%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E8%BF%9B%E9%98%B6/#_3","text":"\u4e4b\u524d\u6211\u4eec\u5728\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u90fd\u662f\u5bf9\u8c61\u65b9\u6cd5\uff0c\u6362\u53e5\u8bdd\u8bf4\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u662f\u5bf9\u8c61\u53ef\u4ee5\u63a5\u6536\u7684\u6d88\u606f\u3002\u9664\u4e86\u5bf9\u8c61\u65b9\u6cd5\u4e4b\u5916\uff0c\u7c7b\u4e2d\u8fd8\u53ef\u4ee5\u6709\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\uff0c\u8fd9\u4e24\u7c7b\u65b9\u6cd5\u662f\u53d1\u7ed9\u7c7b\u7684\u6d88\u606f\uff0c\u4e8c\u8005\u5e76\u6ca1\u6709\u5b9e\u8d28\u6027\u7684\u533a\u522b\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7684\u4e16\u754c\u91cc\uff0c\u4e00\u5207\u7686\u4e3a\u5bf9\u8c61\uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u6bcf\u4e00\u4e2a\u7c7b\u5176\u5b9e\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\u5c31\u662f\u53d1\u9001\u7ed9\u7c7b\u5bf9\u8c61\u7684\u6d88\u606f\u3002\u90a3\u4e48\uff0c\u4ec0\u4e48\u6837\u7684\u6d88\u606f\u4f1a\u76f4\u63a5\u53d1\u9001\u7ed9\u7c7b\u5bf9\u8c61\u5462\uff1f \u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5b9a\u4e49\u4e00\u4e2a\u4e09\u89d2\u5f62\u7c7b\uff0c\u901a\u8fc7\u4f20\u5165\u4e09\u6761\u8fb9\u7684\u957f\u5ea6\u6765\u6784\u9020\u4e09\u89d2\u5f62\uff0c\u5e76\u63d0\u4f9b\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u7684\u65b9\u6cd5\u3002\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\u80af\u5b9a\u662f\u4e09\u89d2\u5f62\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e00\u70b9\u6beb\u65e0\u7591\u95ee\u3002\u4f46\u662f\u5728\u521b\u5efa\u4e09\u89d2\u5f62\u5bf9\u8c61\u65f6\uff0c\u4f20\u5165\u7684\u4e09\u6761\u8fb9\u957f\u672a\u5fc5\u80fd\u6784\u9020\u51fa\u4e09\u89d2\u5f62\uff0c\u4e3a\u6b64\u6211\u4eec\u53ef\u4ee5\u5148\u5199\u4e00\u4e2a\u65b9\u6cd5\u6765\u9a8c\u8bc1\u7ed9\u5b9a\u7684\u4e09\u6761\u8fb9\u957f\u662f\u5426\u53ef\u4ee5\u6784\u6210\u4e09\u89d2\u5f62\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5f88\u663e\u7136\u5c31\u4e0d\u662f\u5bf9\u8c61\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5728\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u65f6\u4e09\u89d2\u5f62\u5bf9\u8c61\u8fd8\u6ca1\u6709\u521b\u5efa\u51fa\u6765\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u7c7b\u65b9\u6cd5\u8bbe\u8ba1\u4e3a\u9759\u6001\u65b9\u6cd5\u6216\u7c7b\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u7c7b\u65b9\u6cd5\u4e0d\u662f\u53d1\u9001\u7ed9\u4e09\u89d2\u5f62\u5bf9\u8c61\u7684\u6d88\u606f\uff0c\u800c\u662f\u53d1\u9001\u7ed9\u4e09\u89d2\u5f62\u7c7b\u7684\u6d88\u606f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Triangle ( object ): \"\"\"\u4e09\u89d2\u5f62\u7c7b\"\"\" def __init__ ( self , a , b , c ): \"\"\"\u521d\u59cb\u5316\u65b9\u6cd5\"\"\" self . a = a self . b = b self . c = c @staticmethod def is_valid ( a , b , c ): \"\"\"\u5224\u65ad\u4e09\u6761\u8fb9\u957f\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62(\u9759\u6001\u65b9\u6cd5)\"\"\" return a + b > c and b + c > a and a + c > b # @classmethod # def is_valid(cls, a, b, c): # \"\"\"\u5224\u65ad\u4e09\u6761\u8fb9\u957f\u80fd\u5426\u6784\u6210\u4e09\u89d2\u5f62(\u7c7b\u65b9\u6cd5)\"\"\" # return a + b > c and b + c > a and a + c > b def perimeter ( self ): \"\"\"\u8ba1\u7b97\u5468\u957f\"\"\" return self . a + self . b + self . c def area ( self ): \"\"\"\u8ba1\u7b97\u9762\u79ef\"\"\" p = self . perimeter () / 2 return ( p * ( p - self . a ) * ( p - self . b ) * ( p - self . c )) ** 0.5 \u4e0a\u9762\u7684\u4ee3\u7801\u4f7f\u7528 staticmethod \u88c5\u9970\u5668\u58f0\u660e\u4e86 is_valid \u65b9\u6cd5\u662f Triangle \u7c7b\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u5982\u679c\u8981\u58f0\u660e\u7c7b\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528 classmethod \u88c5\u9970\u5668\u3002\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \u7c7b\u540d.\u65b9\u6cd5\u540d \u7684\u65b9\u5f0f\u6765\u8c03\u7528\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\uff0c\u4e8c\u8005\u7684\u533a\u522b\u5728\u4e8e\uff0c\u7c7b\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u7c7b\u5bf9\u8c61\u672c\u8eab\uff0c\u800c\u9759\u6001\u65b9\u6cd5\u5219\u6ca1\u6709\u8fd9\u4e2a\u53c2\u6570\u3002\u7b80\u5355\u7684\u603b\u7ed3\u4e00\u4e0b\uff0c \u5bf9\u8c61\u65b9\u6cd5\u3001\u7c7b\u65b9\u6cd5\u3001\u9759\u6001\u65b9\u6cd5\u90fd\u53ef\u4ee5\u901a\u8fc7 \u7c7b\u540d.\u65b9\u6cd5\u540d \u7684\u65b9\u5f0f\u6765\u8c03\u7528\uff0c\u533a\u522b\u5728\u4e8e\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5230\u5e95\u662f\u666e\u901a\u5bf9\u8c61\u8fd8\u662f\u7c7b\u5bf9\u8c61\uff0c\u8fd8\u662f\u6ca1\u6709\u63a5\u53d7\u6d88\u606f\u7684\u5bf9\u8c61 \u3002\u9759\u6001\u65b9\u6cd5\u901a\u5e38\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5199\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u5e76\u6ca1\u6709\u8ddf\u7279\u5b9a\u7684\u5bf9\u8c61\u7ed1\u5b9a\u3002","title":"\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5"},{"location":"%E7%AC%AC18%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E8%BF%9B%E9%98%B6/#_4","text":"\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u8bed\u8a00\u652f\u6301\u5728\u5df2\u6709\u7c7b\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u65b0\u7c7b\uff0c\u4ece\u800c\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u7684\u7f16\u5199\u3002\u63d0\u4f9b\u7ee7\u627f\u4fe1\u606f\u7684\u7c7b\u53eb\u505a\u7236\u7c7b\uff08\u8d85\u7c7b\u3001\u57fa\u7c7b\uff09\uff0c\u5f97\u5230\u7ee7\u627f\u4fe1\u606f\u7684\u7c7b\u53eb\u505a\u5b50\u7c7b\uff08\u6d3e\u751f\u7c7b\u3001\u884d\u751f\u7c7b\uff09\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5b66\u751f\u7c7b\u548c\u4e00\u4e2a\u8001\u5e08\u7c7b\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u4ed6\u4eec\u6709\u5927\u91cf\u7684\u91cd\u590d\u4ee3\u7801\uff0c\u800c\u8fd9\u4e9b\u91cd\u590d\u4ee3\u7801\u90fd\u662f\u8001\u5e08\u548c\u5b66\u751f\u4f5c\u4e3a\u4eba\u7684\u516c\u5171\u5c5e\u6027\u548c\u884c\u4e3a\uff0c\u6240\u4ee5\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u5b9a\u4e49\u4eba\u7c7b\uff0c\u518d\u901a\u8fc7\u7ee7\u627f\uff0c\u4ece\u4eba\u7c7b\u6d3e\u751f\u51fa\u8001\u5e08\u7c7b\u548c\u5b66\u751f\u7c7b\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Person : \"\"\"\u4eba\u7c7b\"\"\" def __init__ ( self , name , age ): self . name = name self . age = age def eat ( self ): print ( f ' { self . name } \u6b63\u5728\u5403\u996d.' ) def sleep ( self ): print ( f ' { self . name } \u6b63\u5728\u7761\u89c9.' ) class Student ( Person ): \"\"\"\u5b66\u751f\u7c7b\"\"\" def __init__ ( self , name , age ): # super(Student, self).__init__(name, age) super () . __init__ ( name , age ) def study ( self , course_name ): print ( f ' { self . name } \u6b63\u5728\u5b66\u4e60 { course_name } .' ) class Teacher ( Person ): \"\"\"\u8001\u5e08\u7c7b\"\"\" def __init__ ( self , name , age , title ): # super(Teacher, self).__init__(name, age) super () . __init__ ( name , age ) self . title = title def teach ( self , course_name ): print ( f ' { self . name }{ self . title } \u6b63\u5728\u8bb2\u6388 { course_name } .' ) stu1 = Student ( '\u767d\u5143\u82b3' , 21 ) stu2 = Student ( '\u72c4\u4ec1\u6770' , 22 ) teacher = Teacher ( '\u6b66\u5219\u5929' , 35 , '\u526f\u6559\u6388' ) stu1 . eat () stu2 . sleep () teacher . teach ( 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) stu1 . study ( 'Python\u7a0b\u5e8f\u8bbe\u8ba1' ) \u7ee7\u627f\u7684\u8bed\u6cd5\u662f\u5728\u5b9a\u4e49\u7c7b\u7684\u65f6\u5019\uff0c\u5728\u7c7b\u540d\u540e\u7684\u5706\u62ec\u53f7\u4e2d\u6307\u5b9a\u5f53\u524d\u7c7b\u7684\u7236\u7c7b\u3002\u5982\u679c\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7684\u65f6\u5019\u6ca1\u6709\u6307\u5b9a\u5b83\u7684\u7236\u7c7b\u662f\u8c01\uff0c\u90a3\u4e48\u9ed8\u8ba4\u7684\u7236\u7c7b\u662f object \u7c7b\u3002 object \u7c7b\u662fPython\u4e2d\u7684\u9876\u7ea7\u7c7b\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u6240\u6709\u7684\u7c7b\u90fd\u662f\u5b83\u7684\u5b50\u7c7b\uff0c\u8981\u4e48\u76f4\u63a5\u7ee7\u627f\u5b83\uff0c\u8981\u4e48\u95f4\u63a5\u7ee7\u627f\u5b83\u3002Python\u8bed\u8a00\u5141\u8bb8\u591a\u91cd\u7ee7\u627f\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u7236\u7c7b\uff0c\u5173\u4e8e\u591a\u91cd\u7ee7\u627f\u7684\u95ee\u9898\u6211\u4eec\u5728\u540e\u9762\u4f1a\u6709\u66f4\u4e3a\u8be6\u7ec6\u7684\u8ba8\u8bba\u3002\u5728\u5b50\u7c7b\u7684\u521d\u59cb\u5316\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 super().__init__() \u6765\u8c03\u7528\u7236\u7c7b\u521d\u59cb\u5316\u65b9\u6cd5\uff0c super \u51fd\u6570\u662fPython\u5185\u7f6e\u51fd\u6570\u4e2d\u4e13\u95e8\u4e3a\u83b7\u53d6\u5f53\u524d\u5bf9\u8c61\u7684\u7236\u7c7b\u5bf9\u8c61\u800c\u8bbe\u8ba1\u7684\u3002\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5b50\u7c7b\u9664\u4e86\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f\u5f97\u5230\u7236\u7c7b\u63d0\u4f9b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u5916\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7279\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u6240\u4ee5\u5b50\u7c7b\u6bd4\u7236\u7c7b\u62e5\u6709\u7684\u66f4\u591a\u7684\u80fd\u529b\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u4f1a\u7528\u5b50\u7c7b\u5bf9\u8c61\u53bb\u66ff\u6362\u6389\u4e00\u4e2a\u7236\u7c7b\u5bf9\u8c61\uff0c\u8fd9\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u4e00\u4e2a\u5e38\u89c1\u7684\u884c\u4e3a\uff0c\u4e5f\u53eb\u505a\u201c\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u201d\uff08Liskov Substitution Principle\uff09\u3002 \u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u7684\u65b9\u6cd5\u540e\uff0c\u8fd8\u53ef\u4ee5\u5bf9\u65b9\u6cd5\u8fdb\u884c\u91cd\u5199\uff08\u91cd\u65b0\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff09\uff0c\u4e0d\u540c\u7684\u5b50\u7c7b\u53ef\u4ee5\u5bf9\u7236\u7c7b\u7684\u540c\u4e00\u4e2a\u65b9\u6cd5\u7ed9\u51fa\u4e0d\u540c\u7684\u5b9e\u73b0\u7248\u672c\uff0c\u8fd9\u6837\u7684\u65b9\u6cd5\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5c31\u4f1a\u8868\u73b0\u51fa\u591a\u6001\u884c\u4e3a\uff08\u8c03\u7528\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u505a\u4e86\u4e0d\u540c\u7684\u4e8b\u60c5\uff09\u3002\u591a\u6001\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u6700\u7cbe\u9ad3\u7684\u90e8\u5206\uff0c\u5f53\u7136\u4e5f\u662f\u5bf9\u521d\u5b66\u8005\u6765\u8bf4\u6700\u96be\u4ee5\u7406\u89e3\u548c\u7075\u6d3b\u8fd0\u7528\u7684\u90e8\u5206\uff0c\u6211\u4eec\u4f1a\u5728\u4e0b\u4e00\u8282\u8bfe\u4e2d\u7528\u4e13\u95e8\u7684\u4f8b\u5b50\u6765\u8bb2\u89e3\u591a\u6001\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u3002","title":"\u7ee7\u627f\u548c\u591a\u6001"},{"location":"%E7%AC%AC18%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E8%BF%9B%E9%98%B6/#_5","text":"Python\u662f\u52a8\u6001\u8bed\u8a00\uff0cPython\u4e2d\u7684\u5bf9\u8c61\u53ef\u4ee5\u52a8\u6001\u7684\u6dfb\u52a0\u5c5e\u6027\u3002\u5728\u9762\u5411\u5bf9\u8c61\u7684\u4e16\u754c\u4e2d\uff0c \u4e00\u5207\u7686\u4e3a\u5bf9\u8c61 \uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u7c7b\u4e5f\u662f\u5bf9\u8c61\uff0c\u6240\u4ee5 \u7c7b\u4e5f\u53ef\u4ee5\u63a5\u6536\u6d88\u606f \uff0c\u5bf9\u5e94\u7684\u65b9\u6cd5\u662f\u7c7b\u65b9\u6cd5\u6216\u9759\u6001\u65b9\u6cd5\u3002\u901a\u8fc7\u7ee7\u627f\uff0c\u6211\u4eec \u53ef\u4ee5\u4ece\u5df2\u6709\u7684\u7c7b\u521b\u5efa\u65b0\u7c7b \uff0c\u5b9e\u73b0\u5bf9\u5df2\u6709\u7c7b\u4ee3\u7801\u7684\u590d\u7528\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC19%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%BA%94%E7%94%A8/","text":"\u7b2c18\u8bfe\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5e94\u7528 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5bf9\u521d\u5b66\u8005\u6765\u8bf4\u4e0d\u96be\u7406\u89e3\u4f46\u5f88\u96be\u5e94\u7528\uff0c\u867d\u7136\u6211\u4eec\u4e3a\u5927\u5bb6\u603b\u7ed3\u8fc7\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u6b65\u8d70\u65b9\u6cd5\uff08\u5b9a\u4e49\u7c7b\u3001\u521b\u5efa\u5bf9\u8c61\u3001\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\uff09\uff0c\u4f46\u662f\u8bf4\u8d77\u6765\u5bb9\u6613\u505a\u8d77\u6765\u96be\u3002 \u5927\u91cf\u7684\u7f16\u7a0b\u7ec3\u4e60 \u548c \u9605\u8bfb\u4f18\u8d28\u7684\u4ee3\u7801 \u53ef\u80fd\u662f\u8fd9\u4e2a\u9636\u6bb5\u6700\u80fd\u591f\u5e2e\u52a9\u5230\u5927\u5bb6\u7684\u4e24\u4ef6\u4e8b\u60c5\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u662f\u901a\u8fc7\u7ecf\u5178\u7684\u6848\u4f8b\u6765\u5256\u6790\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u77e5\u8bc6\uff0c\u540c\u65f6\u4e5f\u901a\u8fc7\u8fd9\u4e9b\u6848\u4f8b\u4e3a\u5927\u5bb6\u8bb2\u89e3\u5982\u4f55\u8fd0\u7528\u4e4b\u524d\u5b66\u8fc7\u7684Python\u77e5\u8bc6\u3002 \u7ecf\u5178\u6848\u4f8b \u6848\u4f8b1\uff1a\u6251\u514b\u6e38\u620f\u3002 \u8bf4\u660e \uff1a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u7684\u6251\u514b\u53ea\u670952\u5f20\u724c\uff08\u6ca1\u6709\u5927\u5c0f\u738b\uff09\uff0c\u6e38\u620f\u9700\u8981\u5c0652\u5f20\u724c\u53d1\u52304\u4e2a\u73a9\u5bb6\u7684\u624b\u4e0a\uff0c\u6bcf\u4e2a\u73a9\u5bb6\u624b\u4e0a\u670913\u5f20\u724c\uff0c\u6309\u7167\u9ed1\u6843\u3001\u7ea2\u5fc3\u3001\u8349\u82b1\u3001\u65b9\u5757\u7684\u987a\u5e8f\u548c\u70b9\u6570\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u6682\u65f6\u4e0d\u5b9e\u73b0\u5176\u4ed6\u7684\u529f\u80fd\u3002 \u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u65b9\u6cd5\uff0c\u9996\u5148\u9700\u8981\u4ece\u95ee\u9898\u7684\u9700\u6c42\u4e2d\u627e\u5230\u5bf9\u8c61\u5e76\u62bd\u8c61\u51fa\u5bf9\u5e94\u7684\u7c7b\uff0c\u6b64\u5916\u8fd8\u8981\u627e\u5230\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u884c\u4e3a\u3002\u5f53\u7136\uff0c\u8fd9\u4ef6\u4e8b\u60c5\u5e76\u4e0d\u662f\u7279\u522b\u56f0\u96be\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u9700\u6c42\u7684\u63cf\u8ff0\u4e2d\u627e\u51fa\u540d\u8bcd\u548c\u52a8\u8bcd\uff0c\u540d\u8bcd\u901a\u5e38\u5c31\u662f\u5bf9\u8c61\u6216\u8005\u662f\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u800c\u52a8\u8bcd\u901a\u5e38\u662f\u5bf9\u8c61\u7684\u884c\u4e3a\u3002\u6251\u514b\u6e38\u620f\u4e2d\u81f3\u5c11\u5e94\u8be5\u6709\u4e09\u7c7b\u5bf9\u8c61\uff0c\u5206\u522b\u662f\u724c\u3001\u6251\u514b\u548c\u73a9\u5bb6\uff0c\u724c\u3001\u6251\u514b\u3001\u73a9\u5bb6\u4e09\u4e2a\u7c7b\u4e5f\u5e76\u4e0d\u662f\u5b64\u7acb\u7684\u3002\u7c7b\u548c\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\u53ef\u4ee5\u7c97\u7565\u7684\u5206\u4e3a is-a\u5173\u7cfb\uff08\u7ee7\u627f\uff09 \u3001 has-a\u5173\u7cfb\uff08\u5173\u8054\uff09 \u548c use-a\u5173\u7cfb\uff08\u4f9d\u8d56\uff09 \u3002\u5f88\u663e\u7136\u6251\u514b\u548c\u724c\u662fhas-a\u5173\u7cfb\uff0c\u56e0\u4e3a\u4e00\u526f\u6251\u514b\u6709\uff08has-a\uff0952\u5f20\u724c\uff1b\u73a9\u5bb6\u548c\u724c\u4e4b\u95f4\u4e0d\u4ec5\u6709\u5173\u8054\u5173\u7cfb\u8fd8\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u56e0\u4e3a\u73a9\u5bb6\u624b\u4e0a\u6709\uff08has-a\uff09\u724c\u800c\u4e14\u73a9\u5bb6\u4f7f\u7528\u4e86\uff08use-a\uff09\u724c\u3002 \u724c\u7684\u5c5e\u6027\u663e\u800c\u6613\u89c1\uff0c\u6709\u82b1\u8272\u548c\u70b9\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u75280\u52303\u7684\u56db\u4e2a\u6570\u5b57\u6765\u4ee3\u8868\u56db\u79cd\u4e0d\u540c\u7684\u82b1\u8272\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u4ee3\u7801\u53ef\u8bfb\u6027\u4f1a\u975e\u5e38\u7cdf\u7cd5\uff0c\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u9ed1\u6843\u3001\u7ea2\u5fc3\u3001\u8349\u82b1\u3001\u65b9\u5757\u8ddf0\u52303\u7684\u6570\u5b57\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u7684\u53d6\u503c\u53ea\u6709\u6709\u9650\u591a\u4e2a\u9009\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u679a\u4e3e\u3002\u4e0eC\u3001Java\u7b49\u8bed\u8a00\u4e0d\u540c\u7684\u662f\uff0cPython\u4e2d\u6ca1\u6709\u58f0\u660e\u679a\u4e3e\u7c7b\u578b\u7684\u5173\u952e\u5b57\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f enum \u6a21\u5757\u7684 Enum \u7c7b\u6765\u521b\u5efa\u679a\u4e3e\u7c7b\u578b\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from enum import Enum class Suite ( Enum ): \"\"\"\u82b1\u8272(\u679a\u4e3e)\"\"\" SPADE , HEART , CLUB , DIAMOND = range ( 4 ) \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u5176\u5b9e\u5c31\u662f\u5b9a\u4e49\u7b26\u53f7\u5e38\u91cf\uff0c\u5982 SPADE \u3001 HEART \u7b49\u3002\u6bcf\u4e2a\u7b26\u53f7\u5e38\u91cf\u90fd\u6709\u4e0e\u4e4b\u5bf9\u5e94\u7684\u503c\uff0c\u8fd9\u6837\u8868\u793a\u9ed1\u6843\u5c31\u53ef\u4ee5\u4e0d\u7528\u6570\u5b57 0 \uff0c\u800c\u662f\u7528 Suite.SPADE \uff1b\u540c\u7406\uff0c\u8868\u793a\u65b9\u5757\u53ef\u4ee5\u4e0d\u7528\u6570\u5b57 3 \uff0c \u800c\u662f\u7528 Suite.DIAMOND \u3002\u6ce8\u610f\uff0c\u4f7f\u7528\u7b26\u53f7\u5e38\u91cf\u80af\u5b9a\u662f\u4f18\u4e8e\u4f7f\u7528\u5b57\u9762\u5e38\u91cf\u7684\uff0c\u56e0\u4e3a\u80fd\u591f\u8bfb\u61c2\u82f1\u6587\u5c31\u80fd\u7406\u89e3\u7b26\u53f7\u5e38\u91cf\u7684\u542b\u4e49\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u4f1a\u63d0\u5347\u5f88\u591a\u3002Python\u4e2d\u7684\u679a\u4e3e\u7c7b\u578b\u662f\u53ef\u8fed\u4ee3\u7c7b\u578b\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u53ef\u4ee5\u5c06\u679a\u4e3e\u7c7b\u578b\u653e\u5230 for-in \u5faa\u73af\u4e2d\uff0c\u4f9d\u6b21\u53d6\u51fa\u6bcf\u4e00\u4e2a\u7b26\u53f7\u5e38\u91cf\u53ca\u5176\u5bf9\u5e94\u7684\u503c\uff0c\u5982\u4e0b\u6240\u793a\u3002 for suite in Suite : print ( f ' { suite } : { suite . value } ' ) \u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u724c\u7c7b\u3002 class Card : \"\"\"\u724c\"\"\" def __init__ ( self , suite , face ): self . suite = suite self . face = face def __repr__ ( self ): suites = '\u2660\u2665\u2663\u2666' faces = [ '' , 'A' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9' , '10' , 'J' , 'Q' , 'K' ] # \u6839\u636e\u724c\u7684\u82b1\u8272\u548c\u70b9\u6570\u53d6\u5230\u5bf9\u5e94\u7684\u5b57\u7b26 return f ' { suites [ self . suite . value ] }{ faces [ self . face ] } ' \u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u6d4b\u8bd5\u4e0b Card \u7c7b\u3002 card1 = Card ( Suite . SPADE , 5 ) card2 = Card ( Suite . HEART , 13 ) print ( card1 , card2 ) # \u26605 \u2665K \u63a5\u4e0b\u6765\u6211\u4eec\u5b9a\u4e49\u6251\u514b\u7c7b\u3002 import random class Poker : \"\"\"\u6251\u514b\"\"\" def __init__ ( self ): # \u901a\u8fc7\u5217\u8868\u7684\u751f\u6210\u5f0f\u8bed\u6cd5\u521b\u5efa\u4e00\u4e2a\u88c552\u5f20\u724c\u7684\u5217\u8868 self . cards = [ Card ( suite , face ) for suite in Suite for face in range ( 1 , 14 )] # current\u5c5e\u6027\u8868\u793a\u53d1\u724c\u7684\u4f4d\u7f6e self . current = 0 def shuffle ( self ): \"\"\"\u6d17\u724c\"\"\" self . current = 0 # \u901a\u8fc7random\u6a21\u5757\u7684shuffle\u51fd\u6570\u5b9e\u73b0\u5217\u8868\u7684\u968f\u673a\u4e71\u5e8f random . shuffle ( self . cards ) def deal ( self ): \"\"\"\u53d1\u724c\"\"\" card = self . cards [ self . current ] self . current += 1 return card @property def has_next ( self ): \"\"\"\u8fd8\u6709\u6ca1\u6709\u724c\u53ef\u4ee5\u53d1\"\"\" return self . current < len ( self . cards ) \u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u6d4b\u8bd5\u4e0b Poker \u7c7b\u3002 poker = Poker () poker . shuffle () print ( poker . cards ) \u5b9a\u4e49\u73a9\u5bb6\u7c7b\u3002 class Player : \"\"\"\u73a9\u5bb6\"\"\" def __init__ ( self , name ): self . name = name self . cards = [] def get_one ( self , card ): \"\"\"\u6478\u724c\"\"\" self . cards . append ( card ) def arrange ( self ): self . cards . sort () \u521b\u5efa\u56db\u4e2a\u73a9\u5bb6\u5e76\u5c06\u724c\u53d1\u5230\u73a9\u5bb6\u7684\u624b\u4e0a\u3002 poker = Poker () poker . shuffle () players = [ Player ( '\u4e1c\u90aa' ), Player ( '\u897f\u6bd2' ), Player ( '\u5357\u5e1d' ), Player ( '\u5317\u4e10' )] for _ in range ( 13 ): for player in players : player . get_one ( poker . deal ()) for player in players : player . arrange () print ( f ' { player . name } : ' , end = '' ) print ( player . cards ) \u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u5728 player.arrange() \u90a3\u91cc\u51fa\u73b0\u5f02\u5e38\uff0c\u56e0\u4e3a Player \u7684 arrange \u65b9\u6cd5\u4f7f\u7528\u4e86\u5217\u8868\u7684 sort \u5bf9\u73a9\u5bb6\u624b\u4e0a\u7684\u724c\u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u9700\u8981\u6bd4\u8f83\u4e24\u4e2a Card \u5bf9\u8c61\u7684\u5927\u5c0f\uff0c\u800c < \u8fd0\u7b97\u7b26\u53c8\u4e0d\u80fd\u76f4\u63a5\u4f5c\u7528\u4e8e Card \u7c7b\u578b\uff0c\u6240\u4ee5\u5c31\u51fa\u73b0\u4e86 TypeError \u5f02\u5e38\uff0c\u5f02\u5e38\u6d88\u606f\u4e3a\uff1a '<' not supported between instances of 'Card' and 'Card' \u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9 Card \u7c7b\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\uff0c\u4f7f\u5f97\u4e24\u4e2a Card \u5bf9\u8c61\u53ef\u4ee5\u76f4\u63a5\u7528 < \u8fdb\u884c\u5927\u5c0f\u7684\u6bd4\u8f83\u3002\u8fd9\u91cc\u7528\u5230\u6280\u672f\u53eb \u8fd0\u7b97\u7b26\u91cd\u8f7d \uff0cPython\u4e2d\u8981\u5b9e\u73b0\u5bf9 < \u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\uff0c\u9700\u8981\u5728\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a __lt__ \u7684\u9b54\u672f\u65b9\u6cd5\u3002\u5f88\u663e\u7136\uff0c\u9b54\u672f\u65b9\u6cd5 __lt__ \u4e2d\u7684 lt \u662f\u82f1\u6587\u5355\u8bcd\u201cless than\u201d\u7684\u7f29\u5199\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u9b54\u672f\u65b9\u6cd5 __gt__ \u5bf9\u5e94 > \u8fd0\u7b97\u7b26\uff0c\u9b54\u672f\u65b9\u6cd5 __le__ \u5bf9\u5e94 <= \u8fd0\u7b97\u7b26\uff0c __ge__ \u5bf9\u5e94 >= \u8fd0\u7b97\u7b26\uff0c __eq__ \u5bf9\u5e94 == \u8fd0\u7b97\u7b26\uff0c __ne__ \u5bf9\u5e94 != \u8fd0\u7b97\u7b26\u3002 \u4fee\u6539\u540e\u7684 Card \u7c7b\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Card : \"\"\"\u724c\"\"\" def __init__ ( self , suite , face ): self . suite = suite self . face = face def __repr__ ( self ): suites = '\u2660\u2665\u2663\u2666' faces = [ '' , 'A' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9' , '10' , 'J' , 'Q' , 'K' ] # \u6839\u636e\u724c\u7684\u82b1\u8272\u548c\u70b9\u6570\u53d6\u5230\u5bf9\u5e94\u7684\u5b57\u7b26 return f ' { suites [ self . suite . value ] }{ faces [ self . face ] } ' def __lt__ ( self , other ): # \u82b1\u8272\u76f8\u540c\u6bd4\u8f83\u70b9\u6570\u7684\u5927\u5c0f if self . suite == other . suite : return self . face < other . face # \u82b1\u8272\u4e0d\u540c\u6bd4\u8f83\u82b1\u8272\u5bf9\u5e94\u7684\u503c return self . suite . value < other . suite . value \u8bf4\u660e\uff1a \u5927\u5bb6\u53ef\u4ee5\u5c1d\u8bd5\u5728\u4e0a\u9762\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u6251\u514b\u6e38\u620f\uff0c\u598221\u70b9\u6e38\u620f\uff08Black Jack\uff09\uff0c\u6e38\u620f\u7684\u89c4\u5219\u53ef\u4ee5\u81ea\u5df1\u5728\u7f51\u4e0a\u627e\u4e00\u627e\u3002 \u6848\u4f8b2\uff1a\u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf\u3002 \u8981\u6c42 \uff1a\u67d0\u516c\u53f8\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u5458\u5de5\uff0c\u5206\u522b\u662f\u90e8\u95e8\u7ecf\u7406\u3001\u7a0b\u5e8f\u5458\u548c\u9500\u552e\u5458\u3002\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf\uff0c\u6839\u636e\u63d0\u4f9b\u7684\u5458\u5de5\u4fe1\u606f\u6765\u8ba1\u7b97\u5458\u5de5\u7684\u6708\u85aa\u3002\u5176\u4e2d\uff0c\u90e8\u95e8\u7ecf\u7406\u7684\u6708\u85aa\u662f\u56fa\u5b9a15000\u5143\uff1b\u7a0b\u5e8f\u5458\u6309\u5de5\u4f5c\u65f6\u95f4\uff08\u4ee5\u5c0f\u65f6\u4e3a\u5355\u4f4d\uff09\u652f\u4ed8\u6708\u85aa\uff0c\u6bcf\u5c0f\u65f6200\u5143\uff1b\u9500\u552e\u5458\u7684\u6708\u85aa\u75311800\u5143\u5e95\u85aa\u52a0\u4e0a\u9500\u552e\u989d5%\u7684\u63d0\u6210\u4e24\u90e8\u5206\u6784\u6210\u3002 \u901a\u8fc7\u5bf9\u4e0a\u8ff0\u9700\u6c42\u7684\u5206\u6790\uff0c\u53ef\u4ee5\u770b\u51fa\u90e8\u95e8\u7ecf\u7406\u3001\u7a0b\u5e8f\u5458\u3001\u9500\u552e\u5458\u90fd\u662f\u5458\u5de5\uff0c\u6709\u76f8\u540c\u7684\u5c5e\u6027\u548c\u884c\u4e3a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u8bbe\u8ba1\u4e00\u4e2a\u540d\u4e3a Employee \u7684\u7236\u7c7b\uff0c\u518d\u901a\u8fc7\u7ee7\u627f\u7684\u65b9\u5f0f\u4ece\u8fd9\u4e2a\u7236\u7c7b\u6d3e\u751f\u51fa\u90e8\u95e8\u7ecf\u7406\u3001\u7a0b\u5e8f\u5458\u548c\u9500\u552e\u5458\u4e09\u4e2a\u5b50\u7c7b\u3002\u5f88\u663e\u7136\uff0c\u540e\u7eed\u7684\u4ee3\u7801\u4e0d\u4f1a\u521b\u5efa Employee \u7c7b\u7684\u5bf9\u8c61\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u7684\u662f\u5177\u4f53\u7684\u5458\u5de5\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u8bbe\u8ba1\u6210\u4e13\u95e8\u7528\u4e8e\u7ee7\u627f\u7684\u62bd\u8c61\u7c7b\u3002Python\u4e2d\u6ca1\u6709\u5b9a\u4e49\u62bd\u8c61\u7c7b\u7684\u5173\u952e\u5b57\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7 abc \u6a21\u5757\u4e2d\u540d\u4e3a ABCMeta \u7684\u5143\u7c7b\u6765\u5b9a\u4e49\u62bd\u8c61\u7c7b\u3002\u5173\u4e8e\u5143\u7c7b\u7684\u77e5\u8bc6\uff0c\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u4f1a\u6709\u4e13\u95e8\u7684\u8bb2\u89e3\uff0c\u8fd9\u91cc\u4e0d\u7528\u592a\u7ea0\u7ed3\u8fd9\u4e2a\u6982\u5ff5\uff0c\u8bb0\u4f4f\u7528\u6cd5\u5373\u53ef\u3002 from abc import ABCMeta , abstractmethod class Employee ( metaclass = ABCMeta ): \"\"\"\u5458\u5de5\"\"\" def __init__ ( self , name ): self . name = name @abstractmethod def get_salary ( self ): \"\"\"\u7ed3\u7b97\u6708\u85aa\"\"\" pass \u5728\u4e0a\u9762\u7684\u5458\u5de5\u7c7b\u4e2d\uff0c\u6709\u4e00\u4e2a\u540d\u4e3a get_salary \u7684\u65b9\u6cd5\u7528\u4e8e\u7ed3\u7b97\u6708\u85aa\uff0c\u4f46\u662f\u7531\u4e8e\u8fd8\u6ca1\u6709\u786e\u5b9a\u662f\u54ea\u4e00\u7c7b\u5458\u5de5\uff0c\u6240\u4ee5\u7ed3\u7b97\u6708\u85aa\u867d\u7136\u662f\u5458\u5de5\u7684\u516c\u5171\u884c\u4e3a\u4f46\u8fd9\u91cc\u5374\u6ca1\u6709\u529e\u6cd5\u5b9e\u73b0\u3002\u5bf9\u4e8e\u6682\u65f6\u65e0\u6cd5\u5b9e\u73b0\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 abstractmethod \u88c5\u9970\u5668\u5c06\u5176\u58f0\u660e\u4e3a\u62bd\u8c61\u65b9\u6cd5\uff0c\u6240\u8c13 \u62bd\u8c61\u65b9\u6cd5\u5c31\u662f\u53ea\u6709\u58f0\u660e\u6ca1\u6709\u5b9e\u73b0\u7684\u65b9\u6cd5 \uff0c \u58f0\u660e\u8fd9\u4e2a\u65b9\u6cd5\u662f\u4e3a\u4e86\u8ba9\u5b50\u7c7b\u53bb\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5 \u3002\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u4ece\u5458\u5de5\u7c7b\u6d3e\u751f\u51fa\u90e8\u95e8\u7ecf\u7406\u3001\u7a0b\u5e8f\u5458\u3001\u9500\u552e\u5458\u8fd9\u4e09\u4e2a\u5b50\u7c7b\u4ee5\u53ca\u5b50\u7c7b\u5982\u4f55\u91cd\u5199\u7236\u7c7b\u7684\u62bd\u8c61\u65b9\u6cd5\u3002 class Manager ( Employee ): \"\"\"\u90e8\u95e8\u7ecf\u7406\"\"\" def get_salary ( self ): return 15000.0 class Programmer ( Employee ): \"\"\"\u7a0b\u5e8f\u5458\"\"\" def __init__ ( self , name , working_hour = 0 ): super () . __init__ ( name ) self . working_hour = working_hour def get_salary ( self ): return 200 * self . working_hour class Salesman ( Employee ): \"\"\"\u9500\u552e\u5458\"\"\" def __init__ ( self , name , sales = 0 ): super () . __init__ ( name ) self . sales = sales def get_salary ( self ): return 1800 + self . sales * 0.05 \u4e0a\u9762\u7684 Manager \u3001 Programmer \u3001 Salesman \u4e09\u4e2a\u7c7b\u90fd\u7ee7\u627f\u81ea Employee \uff0c\u4e09\u4e2a\u7c7b\u90fd\u5206\u522b\u91cd\u5199\u4e86 get_salary \u65b9\u6cd5\u3002 \u91cd\u5199\u5c31\u662f\u5b50\u7c7b\u5bf9\u7236\u7c7b\u5df2\u6709\u7684\u65b9\u6cd5\u91cd\u65b0\u505a\u51fa\u5b9e\u73b0 \u3002\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u4e09\u4e2a\u5b50\u7c7b\u4e2d\u7684 get_salary \u5404\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u4ea7\u751f \u591a\u6001\u884c\u4e3a \uff0c\u591a\u6001\u7b80\u5355\u7684\u8bf4\u5c31\u662f \u8c03\u7528\u76f8\u540c\u7684\u65b9\u6cd5 \uff0c \u4e0d\u540c\u7684\u5b50\u7c7b\u5bf9\u8c61\u505a\u4e0d\u540c\u7684\u4e8b\u60c5 \u3002 \u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u8fd9\u4e2a\u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf\uff0c\u7531\u4e8e\u7a0b\u5e8f\u5458\u548c\u9500\u552e\u5458\u9700\u8981\u5206\u522b\u5f55\u5165\u672c\u6708\u7684\u5de5\u4f5c\u65f6\u95f4\u548c\u9500\u552e\u989d\uff0c\u6240\u4ee5\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u4f7f\u7528\u4e86Python\u5185\u7f6e\u7684 isinstance \u51fd\u6570\u6765\u5224\u65ad\u5458\u5de5\u5bf9\u8c61\u7684\u7c7b\u578b\u3002\u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\u7684 type \u51fd\u6570\u4e5f\u80fd\u8bc6\u522b\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u4f46\u662f isinstance \u51fd\u6570\u66f4\u52a0\u5f3a\u5927\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5224\u65ad\u51fa\u4e00\u4e2a\u5bf9\u8c61\u662f\u4e0d\u662f\u67d0\u4e2a\u7ee7\u627f\u7ed3\u6784\u4e0b\u7684\u5b50\u7c7b\u578b\uff0c\u4f60\u53ef\u4ee5\u7b80\u7b54\u7684\u7406\u89e3\u4e3a type \u51fd\u6570\u662f\u5bf9\u5bf9\u8c61\u7c7b\u578b\u7684\u7cbe\u51c6\u5339\u914d\uff0c\u800c isinstance \u51fd\u6570\u662f\u5bf9\u5bf9\u8c61\u7c7b\u578b\u7684\u6a21\u7cca\u5339\u914d\u3002 emps = [ Manager ( '\u5218\u5907' ), Programmer ( '\u8bf8\u845b\u4eae' ), Manager ( '\u66f9\u64cd' ), Programmer ( '\u8340\u5f67' ), Salesman ( '\u5415\u5e03' ), Programmer ( '\u5f20\u8fbd' ), ] for emp in emps : if isinstance ( emp , Programmer ): emp . working_hour = int ( input ( f '\u8bf7\u8f93\u5165 { emp . name } \u672c\u6708\u5de5\u4f5c\u65f6\u95f4: ' )) elif isinstance ( emp , Salesman ): emp . sales = float ( input ( f '\u8bf7\u8f93\u5165 { emp . name } \u672c\u6708\u9500\u552e\u989d: ' )) print ( f ' { emp . name } \u672c\u6708\u5de5\u8d44\u4e3a: \uffe5 { emp . get_salary () : .2f } \u5143' ) \u7b80\u5355\u7684\u603b\u7ed3 \u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u601d\u60f3\u975e\u5e38\u7684\u597d\uff0c\u4e5f\u7b26\u5408\u4eba\u7c7b\u7684\u6b63\u5e38\u601d\u7ef4\u4e60\u60ef\uff0c\u4f46\u662f\u8981\u60f3\u7075\u6d3b\u8fd0\u7528\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u7684\u62bd\u8c61\u3001\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\u9700\u8981\u957f\u65f6\u95f4\u7684\u79ef\u7d2f\u548c\u6c89\u6dc0\uff0c\u8fd9\u4ef6\u4e8b\u60c5\u65e0\u6cd5\u4e00\u8e74\u800c\u5c31\uff0c\u5c5e\u4e8e\u201c\u8def\u6f2b\u6f2b\u5176\u4fee\u8fdc\u516e\uff0c\u543e\u5c06\u4e0a\u4e0b\u800c\u6c42\u7d22\u201d\u7684\u4e1c\u897f\u3002","title":"\u7b2c19\u8bfe\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5e94\u7528"},{"location":"%E7%AC%AC19%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%BA%94%E7%94%A8/#18","text":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5bf9\u521d\u5b66\u8005\u6765\u8bf4\u4e0d\u96be\u7406\u89e3\u4f46\u5f88\u96be\u5e94\u7528\uff0c\u867d\u7136\u6211\u4eec\u4e3a\u5927\u5bb6\u603b\u7ed3\u8fc7\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u6b65\u8d70\u65b9\u6cd5\uff08\u5b9a\u4e49\u7c7b\u3001\u521b\u5efa\u5bf9\u8c61\u3001\u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\uff09\uff0c\u4f46\u662f\u8bf4\u8d77\u6765\u5bb9\u6613\u505a\u8d77\u6765\u96be\u3002 \u5927\u91cf\u7684\u7f16\u7a0b\u7ec3\u4e60 \u548c \u9605\u8bfb\u4f18\u8d28\u7684\u4ee3\u7801 \u53ef\u80fd\u662f\u8fd9\u4e2a\u9636\u6bb5\u6700\u80fd\u591f\u5e2e\u52a9\u5230\u5927\u5bb6\u7684\u4e24\u4ef6\u4e8b\u60c5\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u662f\u901a\u8fc7\u7ecf\u5178\u7684\u6848\u4f8b\u6765\u5256\u6790\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u77e5\u8bc6\uff0c\u540c\u65f6\u4e5f\u901a\u8fc7\u8fd9\u4e9b\u6848\u4f8b\u4e3a\u5927\u5bb6\u8bb2\u89e3\u5982\u4f55\u8fd0\u7528\u4e4b\u524d\u5b66\u8fc7\u7684Python\u77e5\u8bc6\u3002","title":"\u7b2c18\u8bfe\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u5e94\u7528"},{"location":"%E7%AC%AC19%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%BA%94%E7%94%A8/#_1","text":"","title":"\u7ecf\u5178\u6848\u4f8b"},{"location":"%E7%AC%AC19%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%BA%94%E7%94%A8/#1","text":"\u8bf4\u660e \uff1a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u7684\u6251\u514b\u53ea\u670952\u5f20\u724c\uff08\u6ca1\u6709\u5927\u5c0f\u738b\uff09\uff0c\u6e38\u620f\u9700\u8981\u5c0652\u5f20\u724c\u53d1\u52304\u4e2a\u73a9\u5bb6\u7684\u624b\u4e0a\uff0c\u6bcf\u4e2a\u73a9\u5bb6\u624b\u4e0a\u670913\u5f20\u724c\uff0c\u6309\u7167\u9ed1\u6843\u3001\u7ea2\u5fc3\u3001\u8349\u82b1\u3001\u65b9\u5757\u7684\u987a\u5e8f\u548c\u70b9\u6570\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u6682\u65f6\u4e0d\u5b9e\u73b0\u5176\u4ed6\u7684\u529f\u80fd\u3002 \u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u65b9\u6cd5\uff0c\u9996\u5148\u9700\u8981\u4ece\u95ee\u9898\u7684\u9700\u6c42\u4e2d\u627e\u5230\u5bf9\u8c61\u5e76\u62bd\u8c61\u51fa\u5bf9\u5e94\u7684\u7c7b\uff0c\u6b64\u5916\u8fd8\u8981\u627e\u5230\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u884c\u4e3a\u3002\u5f53\u7136\uff0c\u8fd9\u4ef6\u4e8b\u60c5\u5e76\u4e0d\u662f\u7279\u522b\u56f0\u96be\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u9700\u6c42\u7684\u63cf\u8ff0\u4e2d\u627e\u51fa\u540d\u8bcd\u548c\u52a8\u8bcd\uff0c\u540d\u8bcd\u901a\u5e38\u5c31\u662f\u5bf9\u8c61\u6216\u8005\u662f\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u800c\u52a8\u8bcd\u901a\u5e38\u662f\u5bf9\u8c61\u7684\u884c\u4e3a\u3002\u6251\u514b\u6e38\u620f\u4e2d\u81f3\u5c11\u5e94\u8be5\u6709\u4e09\u7c7b\u5bf9\u8c61\uff0c\u5206\u522b\u662f\u724c\u3001\u6251\u514b\u548c\u73a9\u5bb6\uff0c\u724c\u3001\u6251\u514b\u3001\u73a9\u5bb6\u4e09\u4e2a\u7c7b\u4e5f\u5e76\u4e0d\u662f\u5b64\u7acb\u7684\u3002\u7c7b\u548c\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\u53ef\u4ee5\u7c97\u7565\u7684\u5206\u4e3a is-a\u5173\u7cfb\uff08\u7ee7\u627f\uff09 \u3001 has-a\u5173\u7cfb\uff08\u5173\u8054\uff09 \u548c use-a\u5173\u7cfb\uff08\u4f9d\u8d56\uff09 \u3002\u5f88\u663e\u7136\u6251\u514b\u548c\u724c\u662fhas-a\u5173\u7cfb\uff0c\u56e0\u4e3a\u4e00\u526f\u6251\u514b\u6709\uff08has-a\uff0952\u5f20\u724c\uff1b\u73a9\u5bb6\u548c\u724c\u4e4b\u95f4\u4e0d\u4ec5\u6709\u5173\u8054\u5173\u7cfb\u8fd8\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u56e0\u4e3a\u73a9\u5bb6\u624b\u4e0a\u6709\uff08has-a\uff09\u724c\u800c\u4e14\u73a9\u5bb6\u4f7f\u7528\u4e86\uff08use-a\uff09\u724c\u3002 \u724c\u7684\u5c5e\u6027\u663e\u800c\u6613\u89c1\uff0c\u6709\u82b1\u8272\u548c\u70b9\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u75280\u52303\u7684\u56db\u4e2a\u6570\u5b57\u6765\u4ee3\u8868\u56db\u79cd\u4e0d\u540c\u7684\u82b1\u8272\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u4ee3\u7801\u53ef\u8bfb\u6027\u4f1a\u975e\u5e38\u7cdf\u7cd5\uff0c\u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u9ed1\u6843\u3001\u7ea2\u5fc3\u3001\u8349\u82b1\u3001\u65b9\u5757\u8ddf0\u52303\u7684\u6570\u5b57\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u7684\u53d6\u503c\u53ea\u6709\u6709\u9650\u591a\u4e2a\u9009\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u679a\u4e3e\u3002\u4e0eC\u3001Java\u7b49\u8bed\u8a00\u4e0d\u540c\u7684\u662f\uff0cPython\u4e2d\u6ca1\u6709\u58f0\u660e\u679a\u4e3e\u7c7b\u578b\u7684\u5173\u952e\u5b57\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f enum \u6a21\u5757\u7684 Enum \u7c7b\u6765\u521b\u5efa\u679a\u4e3e\u7c7b\u578b\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from enum import Enum class Suite ( Enum ): \"\"\"\u82b1\u8272(\u679a\u4e3e)\"\"\" SPADE , HEART , CLUB , DIAMOND = range ( 4 ) \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u5176\u5b9e\u5c31\u662f\u5b9a\u4e49\u7b26\u53f7\u5e38\u91cf\uff0c\u5982 SPADE \u3001 HEART \u7b49\u3002\u6bcf\u4e2a\u7b26\u53f7\u5e38\u91cf\u90fd\u6709\u4e0e\u4e4b\u5bf9\u5e94\u7684\u503c\uff0c\u8fd9\u6837\u8868\u793a\u9ed1\u6843\u5c31\u53ef\u4ee5\u4e0d\u7528\u6570\u5b57 0 \uff0c\u800c\u662f\u7528 Suite.SPADE \uff1b\u540c\u7406\uff0c\u8868\u793a\u65b9\u5757\u53ef\u4ee5\u4e0d\u7528\u6570\u5b57 3 \uff0c \u800c\u662f\u7528 Suite.DIAMOND \u3002\u6ce8\u610f\uff0c\u4f7f\u7528\u7b26\u53f7\u5e38\u91cf\u80af\u5b9a\u662f\u4f18\u4e8e\u4f7f\u7528\u5b57\u9762\u5e38\u91cf\u7684\uff0c\u56e0\u4e3a\u80fd\u591f\u8bfb\u61c2\u82f1\u6587\u5c31\u80fd\u7406\u89e3\u7b26\u53f7\u5e38\u91cf\u7684\u542b\u4e49\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u4f1a\u63d0\u5347\u5f88\u591a\u3002Python\u4e2d\u7684\u679a\u4e3e\u7c7b\u578b\u662f\u53ef\u8fed\u4ee3\u7c7b\u578b\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u53ef\u4ee5\u5c06\u679a\u4e3e\u7c7b\u578b\u653e\u5230 for-in \u5faa\u73af\u4e2d\uff0c\u4f9d\u6b21\u53d6\u51fa\u6bcf\u4e00\u4e2a\u7b26\u53f7\u5e38\u91cf\u53ca\u5176\u5bf9\u5e94\u7684\u503c\uff0c\u5982\u4e0b\u6240\u793a\u3002 for suite in Suite : print ( f ' { suite } : { suite . value } ' ) \u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u724c\u7c7b\u3002 class Card : \"\"\"\u724c\"\"\" def __init__ ( self , suite , face ): self . suite = suite self . face = face def __repr__ ( self ): suites = '\u2660\u2665\u2663\u2666' faces = [ '' , 'A' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9' , '10' , 'J' , 'Q' , 'K' ] # \u6839\u636e\u724c\u7684\u82b1\u8272\u548c\u70b9\u6570\u53d6\u5230\u5bf9\u5e94\u7684\u5b57\u7b26 return f ' { suites [ self . suite . value ] }{ faces [ self . face ] } ' \u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u6d4b\u8bd5\u4e0b Card \u7c7b\u3002 card1 = Card ( Suite . SPADE , 5 ) card2 = Card ( Suite . HEART , 13 ) print ( card1 , card2 ) # \u26605 \u2665K \u63a5\u4e0b\u6765\u6211\u4eec\u5b9a\u4e49\u6251\u514b\u7c7b\u3002 import random class Poker : \"\"\"\u6251\u514b\"\"\" def __init__ ( self ): # \u901a\u8fc7\u5217\u8868\u7684\u751f\u6210\u5f0f\u8bed\u6cd5\u521b\u5efa\u4e00\u4e2a\u88c552\u5f20\u724c\u7684\u5217\u8868 self . cards = [ Card ( suite , face ) for suite in Suite for face in range ( 1 , 14 )] # current\u5c5e\u6027\u8868\u793a\u53d1\u724c\u7684\u4f4d\u7f6e self . current = 0 def shuffle ( self ): \"\"\"\u6d17\u724c\"\"\" self . current = 0 # \u901a\u8fc7random\u6a21\u5757\u7684shuffle\u51fd\u6570\u5b9e\u73b0\u5217\u8868\u7684\u968f\u673a\u4e71\u5e8f random . shuffle ( self . cards ) def deal ( self ): \"\"\"\u53d1\u724c\"\"\" card = self . cards [ self . current ] self . current += 1 return card @property def has_next ( self ): \"\"\"\u8fd8\u6709\u6ca1\u6709\u724c\u53ef\u4ee5\u53d1\"\"\" return self . current < len ( self . cards ) \u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u6d4b\u8bd5\u4e0b Poker \u7c7b\u3002 poker = Poker () poker . shuffle () print ( poker . cards ) \u5b9a\u4e49\u73a9\u5bb6\u7c7b\u3002 class Player : \"\"\"\u73a9\u5bb6\"\"\" def __init__ ( self , name ): self . name = name self . cards = [] def get_one ( self , card ): \"\"\"\u6478\u724c\"\"\" self . cards . append ( card ) def arrange ( self ): self . cards . sort () \u521b\u5efa\u56db\u4e2a\u73a9\u5bb6\u5e76\u5c06\u724c\u53d1\u5230\u73a9\u5bb6\u7684\u624b\u4e0a\u3002 poker = Poker () poker . shuffle () players = [ Player ( '\u4e1c\u90aa' ), Player ( '\u897f\u6bd2' ), Player ( '\u5357\u5e1d' ), Player ( '\u5317\u4e10' )] for _ in range ( 13 ): for player in players : player . get_one ( poker . deal ()) for player in players : player . arrange () print ( f ' { player . name } : ' , end = '' ) print ( player . cards ) \u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u5728 player.arrange() \u90a3\u91cc\u51fa\u73b0\u5f02\u5e38\uff0c\u56e0\u4e3a Player \u7684 arrange \u65b9\u6cd5\u4f7f\u7528\u4e86\u5217\u8868\u7684 sort \u5bf9\u73a9\u5bb6\u624b\u4e0a\u7684\u724c\u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u9700\u8981\u6bd4\u8f83\u4e24\u4e2a Card \u5bf9\u8c61\u7684\u5927\u5c0f\uff0c\u800c < \u8fd0\u7b97\u7b26\u53c8\u4e0d\u80fd\u76f4\u63a5\u4f5c\u7528\u4e8e Card \u7c7b\u578b\uff0c\u6240\u4ee5\u5c31\u51fa\u73b0\u4e86 TypeError \u5f02\u5e38\uff0c\u5f02\u5e38\u6d88\u606f\u4e3a\uff1a '<' not supported between instances of 'Card' and 'Card' \u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9 Card \u7c7b\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\uff0c\u4f7f\u5f97\u4e24\u4e2a Card \u5bf9\u8c61\u53ef\u4ee5\u76f4\u63a5\u7528 < \u8fdb\u884c\u5927\u5c0f\u7684\u6bd4\u8f83\u3002\u8fd9\u91cc\u7528\u5230\u6280\u672f\u53eb \u8fd0\u7b97\u7b26\u91cd\u8f7d \uff0cPython\u4e2d\u8981\u5b9e\u73b0\u5bf9 < \u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\uff0c\u9700\u8981\u5728\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u540d\u4e3a __lt__ \u7684\u9b54\u672f\u65b9\u6cd5\u3002\u5f88\u663e\u7136\uff0c\u9b54\u672f\u65b9\u6cd5 __lt__ \u4e2d\u7684 lt \u662f\u82f1\u6587\u5355\u8bcd\u201cless than\u201d\u7684\u7f29\u5199\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u9b54\u672f\u65b9\u6cd5 __gt__ \u5bf9\u5e94 > \u8fd0\u7b97\u7b26\uff0c\u9b54\u672f\u65b9\u6cd5 __le__ \u5bf9\u5e94 <= \u8fd0\u7b97\u7b26\uff0c __ge__ \u5bf9\u5e94 >= \u8fd0\u7b97\u7b26\uff0c __eq__ \u5bf9\u5e94 == \u8fd0\u7b97\u7b26\uff0c __ne__ \u5bf9\u5e94 != \u8fd0\u7b97\u7b26\u3002 \u4fee\u6539\u540e\u7684 Card \u7c7b\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class Card : \"\"\"\u724c\"\"\" def __init__ ( self , suite , face ): self . suite = suite self . face = face def __repr__ ( self ): suites = '\u2660\u2665\u2663\u2666' faces = [ '' , 'A' , '2' , '3' , '4' , '5' , '6' , '7' , '8' , '9' , '10' , 'J' , 'Q' , 'K' ] # \u6839\u636e\u724c\u7684\u82b1\u8272\u548c\u70b9\u6570\u53d6\u5230\u5bf9\u5e94\u7684\u5b57\u7b26 return f ' { suites [ self . suite . value ] }{ faces [ self . face ] } ' def __lt__ ( self , other ): # \u82b1\u8272\u76f8\u540c\u6bd4\u8f83\u70b9\u6570\u7684\u5927\u5c0f if self . suite == other . suite : return self . face < other . face # \u82b1\u8272\u4e0d\u540c\u6bd4\u8f83\u82b1\u8272\u5bf9\u5e94\u7684\u503c return self . suite . value < other . suite . value \u8bf4\u660e\uff1a \u5927\u5bb6\u53ef\u4ee5\u5c1d\u8bd5\u5728\u4e0a\u9762\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u6251\u514b\u6e38\u620f\uff0c\u598221\u70b9\u6e38\u620f\uff08Black Jack\uff09\uff0c\u6e38\u620f\u7684\u89c4\u5219\u53ef\u4ee5\u81ea\u5df1\u5728\u7f51\u4e0a\u627e\u4e00\u627e\u3002","title":"\u6848\u4f8b1\uff1a\u6251\u514b\u6e38\u620f\u3002"},{"location":"%E7%AC%AC19%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%BA%94%E7%94%A8/#2","text":"\u8981\u6c42 \uff1a\u67d0\u516c\u53f8\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u5458\u5de5\uff0c\u5206\u522b\u662f\u90e8\u95e8\u7ecf\u7406\u3001\u7a0b\u5e8f\u5458\u548c\u9500\u552e\u5458\u3002\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf\uff0c\u6839\u636e\u63d0\u4f9b\u7684\u5458\u5de5\u4fe1\u606f\u6765\u8ba1\u7b97\u5458\u5de5\u7684\u6708\u85aa\u3002\u5176\u4e2d\uff0c\u90e8\u95e8\u7ecf\u7406\u7684\u6708\u85aa\u662f\u56fa\u5b9a15000\u5143\uff1b\u7a0b\u5e8f\u5458\u6309\u5de5\u4f5c\u65f6\u95f4\uff08\u4ee5\u5c0f\u65f6\u4e3a\u5355\u4f4d\uff09\u652f\u4ed8\u6708\u85aa\uff0c\u6bcf\u5c0f\u65f6200\u5143\uff1b\u9500\u552e\u5458\u7684\u6708\u85aa\u75311800\u5143\u5e95\u85aa\u52a0\u4e0a\u9500\u552e\u989d5%\u7684\u63d0\u6210\u4e24\u90e8\u5206\u6784\u6210\u3002 \u901a\u8fc7\u5bf9\u4e0a\u8ff0\u9700\u6c42\u7684\u5206\u6790\uff0c\u53ef\u4ee5\u770b\u51fa\u90e8\u95e8\u7ecf\u7406\u3001\u7a0b\u5e8f\u5458\u3001\u9500\u552e\u5458\u90fd\u662f\u5458\u5de5\uff0c\u6709\u76f8\u540c\u7684\u5c5e\u6027\u548c\u884c\u4e3a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u8bbe\u8ba1\u4e00\u4e2a\u540d\u4e3a Employee \u7684\u7236\u7c7b\uff0c\u518d\u901a\u8fc7\u7ee7\u627f\u7684\u65b9\u5f0f\u4ece\u8fd9\u4e2a\u7236\u7c7b\u6d3e\u751f\u51fa\u90e8\u95e8\u7ecf\u7406\u3001\u7a0b\u5e8f\u5458\u548c\u9500\u552e\u5458\u4e09\u4e2a\u5b50\u7c7b\u3002\u5f88\u663e\u7136\uff0c\u540e\u7eed\u7684\u4ee3\u7801\u4e0d\u4f1a\u521b\u5efa Employee \u7c7b\u7684\u5bf9\u8c61\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u7684\u662f\u5177\u4f53\u7684\u5458\u5de5\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u8bbe\u8ba1\u6210\u4e13\u95e8\u7528\u4e8e\u7ee7\u627f\u7684\u62bd\u8c61\u7c7b\u3002Python\u4e2d\u6ca1\u6709\u5b9a\u4e49\u62bd\u8c61\u7c7b\u7684\u5173\u952e\u5b57\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7 abc \u6a21\u5757\u4e2d\u540d\u4e3a ABCMeta \u7684\u5143\u7c7b\u6765\u5b9a\u4e49\u62bd\u8c61\u7c7b\u3002\u5173\u4e8e\u5143\u7c7b\u7684\u77e5\u8bc6\uff0c\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u4f1a\u6709\u4e13\u95e8\u7684\u8bb2\u89e3\uff0c\u8fd9\u91cc\u4e0d\u7528\u592a\u7ea0\u7ed3\u8fd9\u4e2a\u6982\u5ff5\uff0c\u8bb0\u4f4f\u7528\u6cd5\u5373\u53ef\u3002 from abc import ABCMeta , abstractmethod class Employee ( metaclass = ABCMeta ): \"\"\"\u5458\u5de5\"\"\" def __init__ ( self , name ): self . name = name @abstractmethod def get_salary ( self ): \"\"\"\u7ed3\u7b97\u6708\u85aa\"\"\" pass \u5728\u4e0a\u9762\u7684\u5458\u5de5\u7c7b\u4e2d\uff0c\u6709\u4e00\u4e2a\u540d\u4e3a get_salary \u7684\u65b9\u6cd5\u7528\u4e8e\u7ed3\u7b97\u6708\u85aa\uff0c\u4f46\u662f\u7531\u4e8e\u8fd8\u6ca1\u6709\u786e\u5b9a\u662f\u54ea\u4e00\u7c7b\u5458\u5de5\uff0c\u6240\u4ee5\u7ed3\u7b97\u6708\u85aa\u867d\u7136\u662f\u5458\u5de5\u7684\u516c\u5171\u884c\u4e3a\u4f46\u8fd9\u91cc\u5374\u6ca1\u6709\u529e\u6cd5\u5b9e\u73b0\u3002\u5bf9\u4e8e\u6682\u65f6\u65e0\u6cd5\u5b9e\u73b0\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 abstractmethod \u88c5\u9970\u5668\u5c06\u5176\u58f0\u660e\u4e3a\u62bd\u8c61\u65b9\u6cd5\uff0c\u6240\u8c13 \u62bd\u8c61\u65b9\u6cd5\u5c31\u662f\u53ea\u6709\u58f0\u660e\u6ca1\u6709\u5b9e\u73b0\u7684\u65b9\u6cd5 \uff0c \u58f0\u660e\u8fd9\u4e2a\u65b9\u6cd5\u662f\u4e3a\u4e86\u8ba9\u5b50\u7c7b\u53bb\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5 \u3002\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u4ece\u5458\u5de5\u7c7b\u6d3e\u751f\u51fa\u90e8\u95e8\u7ecf\u7406\u3001\u7a0b\u5e8f\u5458\u3001\u9500\u552e\u5458\u8fd9\u4e09\u4e2a\u5b50\u7c7b\u4ee5\u53ca\u5b50\u7c7b\u5982\u4f55\u91cd\u5199\u7236\u7c7b\u7684\u62bd\u8c61\u65b9\u6cd5\u3002 class Manager ( Employee ): \"\"\"\u90e8\u95e8\u7ecf\u7406\"\"\" def get_salary ( self ): return 15000.0 class Programmer ( Employee ): \"\"\"\u7a0b\u5e8f\u5458\"\"\" def __init__ ( self , name , working_hour = 0 ): super () . __init__ ( name ) self . working_hour = working_hour def get_salary ( self ): return 200 * self . working_hour class Salesman ( Employee ): \"\"\"\u9500\u552e\u5458\"\"\" def __init__ ( self , name , sales = 0 ): super () . __init__ ( name ) self . sales = sales def get_salary ( self ): return 1800 + self . sales * 0.05 \u4e0a\u9762\u7684 Manager \u3001 Programmer \u3001 Salesman \u4e09\u4e2a\u7c7b\u90fd\u7ee7\u627f\u81ea Employee \uff0c\u4e09\u4e2a\u7c7b\u90fd\u5206\u522b\u91cd\u5199\u4e86 get_salary \u65b9\u6cd5\u3002 \u91cd\u5199\u5c31\u662f\u5b50\u7c7b\u5bf9\u7236\u7c7b\u5df2\u6709\u7684\u65b9\u6cd5\u91cd\u65b0\u505a\u51fa\u5b9e\u73b0 \u3002\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u4e09\u4e2a\u5b50\u7c7b\u4e2d\u7684 get_salary \u5404\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u4ea7\u751f \u591a\u6001\u884c\u4e3a \uff0c\u591a\u6001\u7b80\u5355\u7684\u8bf4\u5c31\u662f \u8c03\u7528\u76f8\u540c\u7684\u65b9\u6cd5 \uff0c \u4e0d\u540c\u7684\u5b50\u7c7b\u5bf9\u8c61\u505a\u4e0d\u540c\u7684\u4e8b\u60c5 \u3002 \u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u8fd9\u4e2a\u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf\uff0c\u7531\u4e8e\u7a0b\u5e8f\u5458\u548c\u9500\u552e\u5458\u9700\u8981\u5206\u522b\u5f55\u5165\u672c\u6708\u7684\u5de5\u4f5c\u65f6\u95f4\u548c\u9500\u552e\u989d\uff0c\u6240\u4ee5\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u6211\u4eec\u4f7f\u7528\u4e86Python\u5185\u7f6e\u7684 isinstance \u51fd\u6570\u6765\u5224\u65ad\u5458\u5de5\u5bf9\u8c61\u7684\u7c7b\u578b\u3002\u6211\u4eec\u4e4b\u524d\u8bb2\u8fc7\u7684 type \u51fd\u6570\u4e5f\u80fd\u8bc6\u522b\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u4f46\u662f isinstance \u51fd\u6570\u66f4\u52a0\u5f3a\u5927\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5224\u65ad\u51fa\u4e00\u4e2a\u5bf9\u8c61\u662f\u4e0d\u662f\u67d0\u4e2a\u7ee7\u627f\u7ed3\u6784\u4e0b\u7684\u5b50\u7c7b\u578b\uff0c\u4f60\u53ef\u4ee5\u7b80\u7b54\u7684\u7406\u89e3\u4e3a type \u51fd\u6570\u662f\u5bf9\u5bf9\u8c61\u7c7b\u578b\u7684\u7cbe\u51c6\u5339\u914d\uff0c\u800c isinstance \u51fd\u6570\u662f\u5bf9\u5bf9\u8c61\u7c7b\u578b\u7684\u6a21\u7cca\u5339\u914d\u3002 emps = [ Manager ( '\u5218\u5907' ), Programmer ( '\u8bf8\u845b\u4eae' ), Manager ( '\u66f9\u64cd' ), Programmer ( '\u8340\u5f67' ), Salesman ( '\u5415\u5e03' ), Programmer ( '\u5f20\u8fbd' ), ] for emp in emps : if isinstance ( emp , Programmer ): emp . working_hour = int ( input ( f '\u8bf7\u8f93\u5165 { emp . name } \u672c\u6708\u5de5\u4f5c\u65f6\u95f4: ' )) elif isinstance ( emp , Salesman ): emp . sales = float ( input ( f '\u8bf7\u8f93\u5165 { emp . name } \u672c\u6708\u9500\u552e\u989d: ' )) print ( f ' { emp . name } \u672c\u6708\u5de5\u8d44\u4e3a: \uffe5 { emp . get_salary () : .2f } \u5143' )","title":"\u6848\u4f8b2\uff1a\u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf\u3002"},{"location":"%E7%AC%AC19%E8%AF%BE%EF%BC%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%BA%94%E7%94%A8/#_2","text":"\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u601d\u60f3\u975e\u5e38\u7684\u597d\uff0c\u4e5f\u7b26\u5408\u4eba\u7c7b\u7684\u6b63\u5e38\u601d\u7ef4\u4e60\u60ef\uff0c\u4f46\u662f\u8981\u60f3\u7075\u6d3b\u8fd0\u7528\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u7684\u62bd\u8c61\u3001\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\u9700\u8981\u957f\u65f6\u95f4\u7684\u79ef\u7d2f\u548c\u6c89\u6dc0\uff0c\u8fd9\u4ef6\u4e8b\u60c5\u65e0\u6cd5\u4e00\u8e74\u800c\u5c31\uff0c\u5c5e\u4e8e\u201c\u8def\u6f2b\u6f2b\u5176\u4fee\u8fdc\u516e\uff0c\u543e\u5c06\u4e0a\u4e0b\u800c\u6c42\u7d22\u201d\u7684\u4e1c\u897f\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC20%E8%AF%BE%EF%BC%9APython%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/","text":"\u7b2c20\u8bfe\uff1aPython\u6807\u51c6\u5e93\u521d\u63a2 Python\u8bed\u8a00\u6700\u53ef\u7231\u7684\u5730\u65b9\u5728\u4e8e\u5b83\u7684\u6807\u51c6\u5e93\u548c\u4e09\u65b9\u5e93\u5b9e\u5728\u662f\u592a\u4e30\u5bcc\u4e86\uff0c\u65e5\u5e38\u5f00\u53d1\u5de5\u4f5c\u4e2d\u7684\u5f88\u591a\u4efb\u52a1\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u6807\u51c6\u5e93\u6216\u8005\u4e09\u65b9\u5e93\u76f4\u63a5\u89e3\u51b3\u3002\u4e0b\u9762\u6211\u4eec\u5148\u4ecb\u7ecdPython\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e9b\u5e38\u7528\u6a21\u5757\uff0c\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u518d\u9646\u9646\u7eed\u7eed\u4e3a\u5927\u5bb6\u4ecb\u7ecdPython\u5e38\u7528\u4e09\u65b9\u5e93\u7684\u7528\u9014\u548c\u7528\u6cd5\u3002 base64 - Base64\u7f16\u89e3\u7801\u6a21\u5757 Base64 \u662f\u4e00\u79cd\u57fa\u4e8e64\u4e2a\u53ef\u6253\u5370\u5b57\u7b26\u6765\u8868\u793a\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u65b9\u6cd5\u3002\u7531\u4e8e$log _{2}64=6$\uff0c\u6240\u4ee5Base64\u4ee56\u4e2a\u6bd4\u7279\uff08\u4e8c\u8fdb\u5236\u4f4d\uff0c\u53ef\u4ee5\u8868\u793a0\u62161\uff09\u4e3a\u4e00\u4e2a\u5355\u5143\uff0c\u6bcf\u4e2a\u5355\u5143\u5bf9\u5e94\u4e00\u4e2a\u53ef\u6253\u5370\u5b57\u7b26\u3002\u5bf9\u4e8e3\u5b57\u8282\uff0824\u6bd4\u7279\uff09\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5904\u7406\u6210\u5bf9\u5e94\u4e8e4\u4e2aBase64\u5355\u5143\uff0c\u53733\u4e2a\u5b57\u8282\u53ef\u75314\u4e2a\u53ef\u6253\u5370\u5b57\u7b26\u6765\u8868\u793a\u3002Base64\u7f16\u7801\u53ef\u7528\u6765\u4f5c\u4e3a\u7535\u5b50\u90ae\u4ef6\u7684\u4f20\u8f93\u7f16\u7801\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5176\u4ed6\u9700\u8981\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u8f6c\u6210\u6587\u672c\u5b57\u7b26\u7684\u573a\u666f\uff0c\u8fd9\u4f7f\u5f97\u5728XML\u3001JSON\u3001YAML\u8fd9\u4e9b\u6587\u672c\u6570\u636e\u683c\u5f0f\u4e2d\u4f20\u8f93\u4e8c\u8fdb\u5236\u5185\u5bb9\u6210\u4e3a\u53ef\u80fd\u3002\u5728Base64\u4e2d\u7684\u53ef\u6253\u5370\u5b57\u7b26\u5305\u62ec A-Z \u3001 a-z \u3001 0-9 \uff0c\u8fd9\u91cc\u4e00\u5171\u662f62\u4e2a\u5b57\u7b26\uff0c\u53e6\u5916\u4e24\u4e2a\u53ef\u6253\u5370\u7b26\u53f7\u901a\u5e38\u662f + \u548c / \uff0c = \u7528\u4e8e\u5728Base64\u7f16\u7801\u6700\u540e\u8fdb\u884c\u8865\u4f4d\u3002 \u5173\u4e8eBase64\u7f16\u7801\u7684\u7ec6\u8282\uff0c\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003 \u300aBase64\u7b14\u8bb0\u300b \u4e00\u6587\uff0cPython\u6807\u51c6\u5e93\u4e2d\u7684 base64 \u6a21\u5757\u63d0\u4f9b\u4e86 b64encode \u548c b64decode \u4e24\u4e2a\u51fd\u6570\uff0c\u4e13\u95e8\u7528\u4e8e\u5b9e\u73b0Base64\u7684\u7f16\u7801\u548c\u89e3\u7801\uff0c\u4e0b\u9762\u6f14\u793a\u4e86\u5728 Python\u7684\u4ea4\u4e92\u5f0f\u73af\u5883 \u4e2d\u6267\u884c\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u6548\u679c\u3002 >>> import base64 >>> >>> content = 'Man is distinguished, not only by his reason, but by this singular passion from other animals, which is a lust of the mind, that by a perseverance of delight in the continued and indefatigable generation of knowledge, exceeds the short vehemence of any carnal pleasure.' >>> base64 . b64encode ( content . encode ()) b 'TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0aGlzIHNpbmd1bGFyIHBhc3Npb24gZnJvbSBvdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2YgdGhlIG1pbmQsIHRoYXQgYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZGVsaWdodCBpbiB0aGUgY29udGludWVkIGFuZCBpbmRlZmF0aWdhYmxlIGdlbmVyYXRpb24gb2Yga25vd2xlZGdlLCBleGNlZWRzIHRoZSBzaG9ydCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm5hbCBwbGVhc3VyZS4=' >>> content = b 'TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0aGlzIHNpbmd1bGFyIHBhc3Npb24gZnJvbSBvdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2YgdGhlIG1pbmQsIHRoYXQgYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZGVsaWdodCBpbiB0aGUgY29udGludWVkIGFuZCBpbmRlZmF0aWdhYmxlIGdlbmVyYXRpb24gb2Yga25vd2xlZGdlLCBleGNlZWRzIHRoZSBzaG9ydCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm5hbCBwbGVhc3VyZS4=' >>> base64 . b64decode ( content ) . decode () 'Man is distinguished, not only by his reason, but by this singular passion from other animals, which is a lust of the mind, that by a perseverance of delight in the continued and indefatigable generation of knowledge, exceeds the short vehemence of any carnal pleasure.' collections - \u5bb9\u5668\u6570\u636e\u7c7b\u578b\u6a21\u5757 collections \u6a21\u5757\u63d0\u4f9b\u4e86\u8bf8\u591a\u975e\u5e38\u597d\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e3b\u8981\u5305\u62ec\uff1a namedtuple \uff1a\u547d\u4ee4\u5143\u7ec4\uff0c\u5b83\u662f\u4e00\u4e2a\u7c7b\u5de5\u5382\uff0c\u63a5\u53d7\u7c7b\u578b\u7684\u540d\u79f0\u548c\u5c5e\u6027\u5217\u8868\u6765\u521b\u5efa\u4e00\u4e2a\u7c7b\u3002 deque \uff1a\u53cc\u7aef\u961f\u5217\uff0c\u662f\u5217\u8868\u7684\u66ff\u4ee3\u5b9e\u73b0\u3002Python\u4e2d\u7684\u5217\u8868\u5e95\u5c42\u662f\u57fa\u4e8e\u6570\u7ec4\u6765\u5b9e\u73b0\u7684\uff0c\u800c deque \u5e95\u5c42\u662f\u53cc\u5411\u94fe\u8868\uff0c\u56e0\u6b64\u5f53\u4f60\u9700\u8981\u5728\u5934\u5c3e\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\u662f\uff0c deque \u4f1a\u8868\u73b0\u51fa\u66f4\u597d\u7684\u6027\u80fd\uff0c\u6e10\u8fd1\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(1)$\u3002 Counter \uff1a dict \u7684\u5b50\u7c7b\uff0c\u952e\u662f\u5143\u7d20\uff0c\u503c\u662f\u5143\u7d20\u7684\u8ba1\u6570\uff0c\u5b83\u7684 most_common() \u65b9\u6cd5\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u83b7\u53d6\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u5143\u7d20\u3002 Counter \u548c dict \u7684\u7ee7\u627f\u5173\u7cfb\u6211\u8ba4\u4e3a\u662f\u503c\u5f97\u5546\u69b7\u7684\uff0c\u6309\u7167CARP\u539f\u5219\uff0c Counter \u8ddf dict \u7684\u5173\u7cfb\u5e94\u8be5\u8bbe\u8ba1\u4e3a\u5173\u8054\u5173\u7cfb\u66f4\u4e3a\u5408\u7406\u3002 OrderedDict \uff1a dict \u7684\u5b50\u7c7b\uff0c\u5b83\u8bb0\u5f55\u4e86\u952e\u503c\u5bf9\u63d2\u5165\u7684\u987a\u5e8f\uff0c\u770b\u8d77\u6765\u65e2\u6709\u5b57\u5178\u7684\u884c\u4e3a\uff0c\u4e5f\u6709\u94fe\u8868\u7684\u884c\u4e3a\u3002 defaultdict \uff1a\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7c7b\u578b\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u9ed8\u8ba4\u7684\u5de5\u5382\u51fd\u6570\u6765\u83b7\u5f97\u952e\u5bf9\u5e94\u7684\u9ed8\u8ba4\u503c\uff0c\u76f8\u6bd4\u5b57\u5178\u4e2d\u7684 setdefault() \u65b9\u6cd5\uff0c\u8fd9\u79cd\u505a\u6cd5\u66f4\u52a0\u9ad8\u6548\u3002 \u4e0b\u9762\u662f\u5728 Python\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d \u4f7f\u7528 namedtuple \u521b\u5efa\u6251\u514b\u724c\u7c7b\u7684\u4f8b\u5b50\u3002 >>> from collections import namedtuple >>> >>> Card = namedtuple ( 'Card' , ( 'suite' , 'face' )) >>> card1 = Card ( '\u7ea2\u6843' , 5 ) >>> card2 = Card ( '\u8349\u82b1' , 9 ) >>> card1 Card ( suite = '\u7ea2\u6843' , face = 5 ) >>> card2 Card ( suite = '\u8349\u82b1' , face = 9 ) >>> print ( f ' { card1 . suite }{ card1 . face } ' ) \u7ea2\u68435 >>> print ( f ' { card2 . suite }{ card2 . face } ' ) \u8349\u82b19 \u4e0b\u9762\u662f\u4f7f\u7528 Counter \u7c7b\u7edf\u8ba1\u5217\u8868\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u4e09\u4e2a\u5143\u7d20\u7684\u4f8b\u5b50\u3002 from collections import Counter words = [ 'look' , 'into' , 'my' , 'eyes' , 'look' , 'into' , 'my' , 'eyes' , 'the' , 'eyes' , 'the' , 'eyes' , 'the' , 'eyes' , 'not' , 'around' , 'the' , 'eyes' , \"don't\" , 'look' , 'around' , 'the' , 'eyes' , 'look' , 'into' , 'my' , 'eyes' , \"you're\" , 'under' ] counter = Counter ( words ) # \u6253\u5370words\u5217\u8868\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u76843\u4e2a\u5143\u7d20\u53ca\u5176\u51fa\u73b0\u6b21\u6570 for elem , count in counter . most_common ( 3 ): print ( elem , count ) hashlib - \u54c8\u5e0c\u51fd\u6570\u6a21\u5757 \u54c8\u5e0c\u51fd\u6570\u53c8\u79f0\u54c8\u5e0c\u7b97\u6cd5\u6216\u6563\u5217\u51fd\u6570\uff0c\u662f\u4e00\u79cd\u4e3a\u5df2\u6709\u7684\u6570\u636e\u521b\u5efa\u201c\u6570\u5b57\u6307\u7eb9\u201d\uff08\u54c8\u5e0c\u6458\u8981\uff09\u7684\u65b9\u6cd5\u3002\u54c8\u5e0c\u51fd\u6570\u628a\u6570\u636e\u538b\u7f29\u6210\u6458\u8981\uff0c\u5bf9\u4e8e\u76f8\u540c\u7684\u8f93\u5165\uff0c\u54c8\u5e0c\u51fd\u6570\u53ef\u4ee5\u751f\u6210\u76f8\u540c\u7684\u6458\u8981\uff08\u6570\u5b57\u6307\u7eb9\uff09\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u5e76\u4e0d\u53ef\u9006\uff08\u4e0d\u80fd\u901a\u8fc7\u6458\u8981\u8ba1\u7b97\u51fa\u8f93\u5165\u7684\u5185\u5bb9\uff09\u3002\u4e00\u4e2a\u4f18\u8d28\u7684\u54c8\u5e0c\u51fd\u6570\u80fd\u591f\u4e3a\u4e0d\u540c\u7684\u8f93\u5165\u751f\u6210\u4e0d\u540c\u7684\u6458\u8981\uff0c\u51fa\u73b0\u54c8\u5e0c\u51b2\u7a81\uff08\u4e0d\u540c\u7684\u8f93\u5165\u4ea7\u751f\u76f8\u540c\u7684\u6458\u8981\uff09\u7684\u6982\u7387\u6781\u4f4e\uff0c MD5 \u3001 SHA\u5bb6\u65cf \u5c31\u662f\u8fd9\u7c7b\u597d\u7684\u54c8\u5e0c\u51fd\u6570\u3002 \u8bf4\u660e \uff1a\u57282011\u5e74\u7684\u65f6\u5019\uff0cRFC 6151\u4e2d\u5df2\u7ecf\u7981\u6b62\u5c06MD5\u7528\u4f5c\u5bc6\u94a5\u6563\u5217\u6d88\u606f\u8ba4\u8bc1\u7801\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e0d\u5728\u6211\u4eec\u8ba8\u8bba\u7684\u8303\u56f4\u5185\u3002 Python\u6807\u51c6\u5e93\u7684 hashlib \u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9\u54c8\u5e0c\u51fd\u6570\u7684\u5c01\u88c5\uff0c\u901a\u8fc7\u4f7f\u7528 md5 \u3001 sha1 \u3001 sha256 \u7b49\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u7684\u751f\u6210\u201c\u6570\u5b57\u6307\u7eb9\u201d\u3002\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u7528\u6237\u6ce8\u518c\u65f6\u6211\u4eec\u5e0c\u671b\u5728\u6570\u636e\u5e93\u4e2d\u4fdd\u5b58\u7528\u6237\u7684\u5bc6\u7801\uff0c\u5f88\u663e\u7136\u6211\u4eec\u4e0d\u80fd\u5c06\u7528\u6237\u5bc6\u7801\u76f4\u63a5\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7528\u6237\u9690\u79c1\u7684\u6cc4\u9732\uff0c\u6240\u4ee5\u5728\u6570\u636e\u5e93\u4e2d\u4fdd\u5b58\u7528\u6237\u5bc6\u7801\u65f6\uff0c\u901a\u5e38\u90fd\u4f1a\u5c06\u5bc6\u7801\u7684\u201c\u6307\u7eb9\u201d\u4fdd\u5b58\u8d77\u6765\uff0c\u7528\u6237\u767b\u5f55\u65f6\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u5bc6\u7801\u7684\u201c\u6307\u7eb9\u201d\u518d\u8fdb\u884c\u5339\u914d\u6765\u5224\u65ad\u7528\u6237\u767b\u5f55\u662f\u5426\u6210\u529f\u3002 import hashlib # \u8ba1\u7b97\u5b57\u7b26\u4e32\"123456\"\u7684MD5\u6458\u8981 print ( hashlib . md5 ( '123456' . encode ()) . hexdigest ()) # \u8ba1\u7b97\u6587\u4ef6\"Python-3.7.1.tar.xz\"\u7684MD5\u6458\u8981 hasher = hashlib . md5 () with open ( 'Python-3.7.1.tar.xz' , 'rb' ) as file : data = file . read ( 512 ) while data : hasher . update ( data ) data = file . read ( 512 ) print ( hasher . hexdigest ()) \u8bf4\u660e \uff1a\u5f88\u591a\u7f51\u7ad9\u5728\u4e0b\u8f7d\u94fe\u63a5\u7684\u65c1\u8fb9\u90fd\u63d0\u4f9b\u4e86\u54c8\u5e0c\u6458\u8981\uff0c\u5b8c\u6210\u6587\u4ef6\u4e0b\u8f7d\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u8be5\u6587\u4ef6\u7684\u54c8\u5e0c\u6458\u8981\u5e76\u68c0\u67e5\u5b83\u4e0e\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u7684\u54c8\u5e0c\u6458\u8981\u662f\u5426\u4e00\u81f4\uff08\u6307\u7eb9\u6bd4\u5bf9\uff09\u3002\u5982\u679c\u8ba1\u7b97\u51fa\u7684\u54c8\u5e0c\u6458\u8981\u4e0e\u7f51\u7ad9\u63d0\u4f9b\u7684\u5e76\u4e0d\u4e00\u81f4\uff0c\u5f88\u6709\u53ef\u80fd\u662f\u4e0b\u8f7d\u51fa\u9519\u6216\u8be5\u6587\u4ef6\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u88ab\u7be1\u6539\uff0c\u8fd9\u65f6\u5019\u5c31\u4e0d\u5e94\u8be5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u6587\u4ef6\u3002 heapq - \u5806\u6392\u5e8f\u6a21\u5757 heapq \u6a21\u5757\u5b9e\u73b0\u4e86\u5806\u6392\u5e8f\u7b97\u6cd5\uff0c\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u5806\u6392\u5e8f\uff0c\u5c24\u5176\u662f\u8981\u89e3\u51b3 TopK\u95ee\u9898 \uff08\u4ece\u5e8f\u5217\u4e2d\u627e\u5230K\u4e2a\u6700\u5927\u6216\u6700\u5c0f\u5143\u7d20\uff09\uff0c\u76f4\u63a5\u4f7f\u7528\u8be5\u6a21\u5757\u5373\u53ef\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import heapq list1 = [ 34 , 25 , 12 , 99 , 87 , 63 , 58 , 78 , 88 , 92 ] # \u627e\u51fa\u5217\u8868\u4e2d\u6700\u5927\u7684\u4e09\u4e2a\u5143\u7d20 print ( heapq . nlargest ( 3 , list1 )) # \u627e\u51fa\u5217\u8868\u4e2d\u6700\u5c0f\u7684\u4e09\u4e2a\u5143\u7d20 print ( heapq . nsmallest ( 3 , list1 )) list2 = [ { 'name' : 'IBM' , 'shares' : 100 , 'price' : 91.1 }, { 'name' : 'AAPL' , 'shares' : 50 , 'price' : 543.22 }, { 'name' : 'FB' , 'shares' : 200 , 'price' : 21.09 }, { 'name' : 'HPQ' , 'shares' : 35 , 'price' : 31.75 }, { 'name' : 'YHOO' , 'shares' : 45 , 'price' : 16.35 }, { 'name' : 'ACME' , 'shares' : 75 , 'price' : 115.65 } ] # \u627e\u51fa\u4ef7\u683c\u6700\u9ad8\u7684\u4e09\u53ea\u80a1\u7968 print ( heapq . nlargest ( 3 , list2 , key = lambda x : x [ 'price' ])) # \u627e\u51fa\u6301\u6709\u6570\u91cf\u6700\u9ad8\u7684\u4e09\u53ea\u80a1\u7968 print ( heapq . nlargest ( 3 , list2 , key = lambda x : x [ 'shares' ])) itertools - \u8fed\u4ee3\u5de5\u5177\u6a21\u5757 itertools \u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u5404\u79cd\u5404\u6837\u7684\u8fed\u4ee3\u5668\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u3002 import itertools # \u4ea7\u751fABCD\u7684\u5168\u6392\u5217 for value in itertools . permutations ( 'ABCD' ): print ( value ) # \u4ea7\u751fABCDE\u7684\u4e94\u9009\u4e09\u7ec4\u5408 for value in itertools . combinations ( 'ABCDE' , 3 ): print ( value ) # \u4ea7\u751fABCD\u548c123\u7684\u7b1b\u5361\u5c14\u79ef for value in itertools . product ( 'ABCD' , '123' ): print ( value ) # \u4ea7\u751fABC\u7684\u65e0\u9650\u5faa\u73af\u5e8f\u5217 it = itertools . cycle (( 'A' , 'B' , 'C' )) print ( next ( it )) print ( next ( it )) print ( next ( it )) print ( next ( it )) random - \u968f\u673a\u6570\u548c\u968f\u673a\u62bd\u6837\u6a21\u5757 \u8fd9\u4e2a\u6a21\u5757\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u7528\u8fc7\u5f88\u591a\u6b21\u4e86\uff0c\u751f\u6210\u968f\u673a\u6570\u3001\u5b9e\u73b0\u968f\u673a\u4e71\u5e8f\u548c\u968f\u673a\u62bd\u6837\uff0c\u4e0b\u9762\u662f\u5e38\u7528\u51fd\u6570\u7684\u5217\u8868\u3002 getrandbits(k) \uff1a\u8fd4\u56de\u5177\u6709 k \u4e2a\u968f\u673a\u6bd4\u7279\u4f4d\u7684\u6574\u6570\u3002 randrange(start, stop[, step]) \uff1a\u4ece range(start, stop, step) \u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u9009\u62e9\u7684\u5143\u7d20\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u6784\u5efa\u4e00\u4e2a range \u5bf9\u8c61\u3002 randint(a, b) \uff1a\u8fd4\u56de\u968f\u673a\u6574\u6570 N \u6ee1\u8db3 a <= N <= b \uff0c\u76f8\u5f53\u4e8e randrange(a, b+1) \u3002 choice(seq) \uff1a\u4ece\u975e\u7a7a\u5e8f\u5217 seq \u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u5143\u7d20\u3002 \u5982\u679c seq \u4e3a\u7a7a\uff0c\u5219\u5f15\u53d1 IndexError \u3002 choices(population, weight=None, *, cum_weights=None, k=1) \uff1a\u4ece population \u4e2d\u9009\u62e9\u66ff\u6362\uff0c\u8fd4\u56de\u5927\u5c0f\u4e3a k \u7684\u5143\u7d20\u5217\u8868\u3002 \u5982\u679c population \u4e3a\u7a7a\uff0c\u5219\u5f15\u53d1 IndexError \u3002 shuffle(x[, random]) \uff1a\u5c06\u5e8f\u5217 x \u968f\u673a\u6253\u4e71\u4f4d\u7f6e\u3002 sample(population, k) \uff1a\u8fd4\u56de\u4ece\u603b\u4f53\u5e8f\u5217\u6216\u96c6\u5408\u4e2d\u9009\u62e9 k \u4e2a\u4e0d\u91cd\u590d\u5143\u7d20\u6784\u9020\u7684\u5217\u8868\uff0c\u7528\u4e8e\u65e0\u91cd\u590d\u7684\u968f\u673a\u62bd\u6837\u3002 random() \uff1a\u8fd4\u56de [0.0, 1.0) \u8303\u56f4\u5185\u7684\u4e0b\u4e00\u4e2a\u968f\u673a\u6d6e\u70b9\u6570\u3002 expovariate(lambd) \uff1a\u6307\u6570\u5206\u5e03\u3002 gammavariate(alpha, beta) \uff1a\u4f3d\u739b\u5206\u5e03\u3002 gauss(mu, sigma) / normalvariate(mu, sigma) \uff1a\u6b63\u6001\u5206\u5e03\u3002 paretovariate(alpha) \uff1a\u5e15\u7d2f\u6258\u5206\u5e03\u3002 weibullvariate(alpha, beta) \uff1a\u5a01\u5e03\u5c14\u5206\u5e03\u3002 os.path - \u8def\u5f84\u64cd\u4f5c\u76f8\u5173\u6a21\u5757 os.path \u6a21\u5757\u5c01\u88c5\u4e86\u64cd\u4f5c\u8def\u5f84\u7684\u5de5\u5177\u51fd\u6570\uff0c\u5982\u679c\u7a0b\u5e8f\u4e2d\u9700\u8981\u5bf9\u6587\u4ef6\u8def\u5f84\u505a\u62fc\u63a5\u3001\u62c6\u5206\u3001\u83b7\u53d6\u4ee5\u53ca\u83b7\u53d6\u6587\u4ef6\u7684\u5b58\u5728\u6027\u548c\u5176\u4ed6\u5c5e\u6027\uff0c\u8fd9\u4e2a\u6a21\u5757\u5c06\u4f1a\u975e\u5e38\u6709\u5e2e\u52a9\uff0c\u4e0b\u9762\u4e3a\u5927\u5bb6\u7f57\u5217\u4e00\u4e9b\u5e38\u7528\u7684\u51fd\u6570\u3002 dirname(path) \uff1a\u8fd4\u56de\u8def\u5f84 path \u7684\u76ee\u5f55\u540d\u79f0\u3002 exists(path) \uff1a\u5982\u679c path \u6307\u5411\u4e00\u4e2a\u5df2\u5b58\u5728\u7684\u8def\u5f84\u6216\u5df2\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8fd4\u56de True \u3002 getatime(path) / getmtime(path) / getctime(path) \uff1a\u8fd4\u56de path \u7684\u6700\u540e\u8bbf\u95ee\u65f6\u95f4/\u6700\u540e\u4fee\u6539\u65f6\u95f4/\u521b\u5efa\u65f6\u95f4\u3002 getsize(path) \uff1a\u8fd4\u56de path \u7684\u5927\u5c0f\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002\u5982\u679c\u8be5\u6587\u4ef6\u4e0d\u5b58\u5728\u6216\u4e0d\u53ef\u8bbf\u95ee\uff0c\u5219\u629b\u51fa OSError \u5f02\u5e38\u3002 isfile(path) \uff1a\u5982\u679c path \u662f\u666e\u901a\u6587\u4ef6\uff0c\u5219\u8fd4\u56de True \u3002 isdir(path) \uff1a\u5982\u679c path \u662f\u76ee\u5f55\uff08\u6587\u4ef6\u5939\uff09\uff0c\u5219\u8fd4\u56de True \u3002 join(path, *paths) \uff1a\u5408\u7406\u5730\u62fc\u63a5\u4e00\u4e2a\u6216\u591a\u4e2a\u8def\u5f84\u90e8\u5206\u3002\u8fd4\u56de\u503c\u662f path \u548c paths \u6240\u6709\u503c\u7684\u8fde\u63a5\uff0c\u6bcf\u4e2a\u975e\u7a7a\u90e8\u5206\u540e\u9762\u90fd\u7d27\u8ddf\u4e00\u4e2a\u76ee\u5f55\u5206\u9694\u7b26 ( os.sep )\uff0c\u9664\u4e86\u6700\u540e\u4e00\u90e8\u5206\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u6700\u540e\u4e00\u90e8\u5206\u4e3a\u7a7a\uff0c\u5219\u7ed3\u679c\u5c06\u4ee5\u5206\u9694\u7b26\u7ed3\u5c3e\u3002\u5982\u679c\u53c2\u6570\u4e2d\u67d0\u4e2a\u90e8\u5206\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u5219\u7edd\u5bf9\u8def\u5f84\u524d\u7684\u8def\u5f84\u90fd\u5c06\u88ab\u4e22\u5f03\uff0c\u5e76\u4ece\u7edd\u5bf9\u8def\u5f84\u90e8\u5206\u5f00\u59cb\u8fde\u63a5\u3002 splitext(path) \uff1a\u5c06\u8def\u5f84 path \u62c6\u5206\u4e3a\u4e00\u5bf9\uff0c\u5373 (root, ext) \uff0c\u4f7f\u5f97 root + ext == path \uff0c\u5176\u4e2d ext \u4e3a\u7a7a\u6216\u4ee5\u82f1\u6587\u53e5\u70b9\u5f00\u5934\uff0c\u4e14\u6700\u591a\u5305\u542b\u4e00\u4e2a\u53e5\u70b9\u3002 uuid - UUID\u751f\u6210\u6a21\u5757 uuid \u6a21\u5757\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u5168\u5c40\u552f\u4e00\u6807\u8bc6\u7b26\uff08Universal Unique IDentity\uff09\u3002\u8be5\u6a21\u5757\u63d0\u4f9b\u4e86\u56db\u4e2a\u7528\u4e8e\u751f\u6210UUID\u7684\u51fd\u6570\uff0c\u5206\u522b\u662f\uff1a uuid1() \uff1a\u7531MAC\u5730\u5740\u3001\u5f53\u524d\u65f6\u95f4\u6233\u3001\u968f\u673a\u6570\u751f\u6210\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5168\u7403\u8303\u56f4\u5185\u7684\u552f\u4e00\u6027\u3002 uuid3(namespace, name) \uff1a\u901a\u8fc7\u8ba1\u7b97\u547d\u540d\u7a7a\u95f4\u548c\u540d\u5b57\u7684MD5\u54c8\u5e0c\u6458\u8981\uff08\u201c\u6307\u7eb9\u201d\uff09\u503c\u5f97\u5230\uff0c\u4fdd\u8bc1\u4e86\u540c\u4e00\u547d\u540d\u7a7a\u95f4\u4e2d\u4e0d\u540c\u540d\u5b57\u7684\u552f\u4e00\u6027\uff0c\u548c\u4e0d\u540c\u547d\u540d\u7a7a\u95f4\u7684\u552f\u4e00\u6027\uff0c\u4f46\u540c\u4e00\u547d\u540d\u7a7a\u95f4\u7684\u540c\u4e00\u540d\u5b57\u4f1a\u751f\u6210\u76f8\u540c\u7684UUID\u3002 uuid4() \uff1a\u7531\u4f2a\u968f\u673a\u6570\u751f\u6210UUID\uff0c\u6709\u4e00\u5b9a\u7684\u91cd\u590d\u6982\u7387\uff0c\u8be5\u6982\u7387\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765\u3002 uuid5() \uff1a\u7b97\u6cd5\u4e0e uuid3 \u76f8\u540c\uff0c\u53ea\u4e0d\u8fc7\u54c8\u5e0c\u51fd\u6570\u7528SHA-1\u53d6\u4ee3\u4e86MD5\u3002 \u7531\u4e8e uuid4 \u5b58\u5728\u6982\u7387\u578b\u91cd\u590d\uff0c\u90a3\u4e48\u5728\u771f\u6b63\u9700\u8981\u5168\u5c40\u552f\u4e00\u6807\u8bc6\u7b26\u7684\u5730\u65b9\u6700\u597d\u4e0d\u7528\u4f7f\u7528\u5b83\u3002\u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\uff0c uuid1 \u662f\u5f88\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u80fd\u591f\u4fdd\u8bc1\u751f\u6210ID\u7684\u5168\u5c40\u552f\u4e00\u6027\u3002\u4e0b\u9762\u662f\u5728 Python\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d \u4f7f\u7528 uuid1 \u51fd\u6570\u751f\u6210\u5168\u5c40\u552f\u4e00\u6807\u8bc6\u7b26\u7684\u4f8b\u5b50\u3002 >>> import uuid >>> uuid . uuid1 () . hex '622a8334baab11eaaa9c60f81da8d840' >>> uuid . uuid1 () . hex '62b066debaab11eaaa9c60f81da8d840' >>> uuid . uuid1 () . hex '642c0db0baab11eaaa9c60f81da8d840' \u7b80\u5355\u7684\u603b\u7ed3 Python\u6807\u51c6\u5e93\u4e2d\u6709\u5927\u91cf\u7684\u6a21\u5757\uff0c\u65e5\u5e38\u5f00\u53d1\u4e2d\u6709\u5f88\u591a\u5e38\u89c1\u7684\u4efb\u52a1\u5728Python\u6807\u51c6\u5e93\u4e2d\u90fd\u6709\u5c01\u88c5\u597d\u7684\u51fd\u6570\u6216\u7c7b\u53ef\u4f9b\u4f7f\u7528\uff0c\u8fd9\u4e5f\u662fPython\u8fd9\u95e8\u8bed\u8a00\u6700\u53ef\u7231\u7684\u5730\u65b9\u3002","title":"\u7b2c20\u8bfe\uff1aPython\u6807\u51c6\u5e93\u521d\u63a2"},{"location":"%E7%AC%AC20%E8%AF%BE%EF%BC%9APython%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/#20python","text":"Python\u8bed\u8a00\u6700\u53ef\u7231\u7684\u5730\u65b9\u5728\u4e8e\u5b83\u7684\u6807\u51c6\u5e93\u548c\u4e09\u65b9\u5e93\u5b9e\u5728\u662f\u592a\u4e30\u5bcc\u4e86\uff0c\u65e5\u5e38\u5f00\u53d1\u5de5\u4f5c\u4e2d\u7684\u5f88\u591a\u4efb\u52a1\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u6807\u51c6\u5e93\u6216\u8005\u4e09\u65b9\u5e93\u76f4\u63a5\u89e3\u51b3\u3002\u4e0b\u9762\u6211\u4eec\u5148\u4ecb\u7ecdPython\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e9b\u5e38\u7528\u6a21\u5757\uff0c\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u518d\u9646\u9646\u7eed\u7eed\u4e3a\u5927\u5bb6\u4ecb\u7ecdPython\u5e38\u7528\u4e09\u65b9\u5e93\u7684\u7528\u9014\u548c\u7528\u6cd5\u3002","title":"\u7b2c20\u8bfe\uff1aPython\u6807\u51c6\u5e93\u521d\u63a2"},{"location":"%E7%AC%AC20%E8%AF%BE%EF%BC%9APython%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/#base64-base64","text":"Base64 \u662f\u4e00\u79cd\u57fa\u4e8e64\u4e2a\u53ef\u6253\u5370\u5b57\u7b26\u6765\u8868\u793a\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u65b9\u6cd5\u3002\u7531\u4e8e$log _{2}64=6$\uff0c\u6240\u4ee5Base64\u4ee56\u4e2a\u6bd4\u7279\uff08\u4e8c\u8fdb\u5236\u4f4d\uff0c\u53ef\u4ee5\u8868\u793a0\u62161\uff09\u4e3a\u4e00\u4e2a\u5355\u5143\uff0c\u6bcf\u4e2a\u5355\u5143\u5bf9\u5e94\u4e00\u4e2a\u53ef\u6253\u5370\u5b57\u7b26\u3002\u5bf9\u4e8e3\u5b57\u8282\uff0824\u6bd4\u7279\uff09\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5904\u7406\u6210\u5bf9\u5e94\u4e8e4\u4e2aBase64\u5355\u5143\uff0c\u53733\u4e2a\u5b57\u8282\u53ef\u75314\u4e2a\u53ef\u6253\u5370\u5b57\u7b26\u6765\u8868\u793a\u3002Base64\u7f16\u7801\u53ef\u7528\u6765\u4f5c\u4e3a\u7535\u5b50\u90ae\u4ef6\u7684\u4f20\u8f93\u7f16\u7801\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5176\u4ed6\u9700\u8981\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u8f6c\u6210\u6587\u672c\u5b57\u7b26\u7684\u573a\u666f\uff0c\u8fd9\u4f7f\u5f97\u5728XML\u3001JSON\u3001YAML\u8fd9\u4e9b\u6587\u672c\u6570\u636e\u683c\u5f0f\u4e2d\u4f20\u8f93\u4e8c\u8fdb\u5236\u5185\u5bb9\u6210\u4e3a\u53ef\u80fd\u3002\u5728Base64\u4e2d\u7684\u53ef\u6253\u5370\u5b57\u7b26\u5305\u62ec A-Z \u3001 a-z \u3001 0-9 \uff0c\u8fd9\u91cc\u4e00\u5171\u662f62\u4e2a\u5b57\u7b26\uff0c\u53e6\u5916\u4e24\u4e2a\u53ef\u6253\u5370\u7b26\u53f7\u901a\u5e38\u662f + \u548c / \uff0c = \u7528\u4e8e\u5728Base64\u7f16\u7801\u6700\u540e\u8fdb\u884c\u8865\u4f4d\u3002 \u5173\u4e8eBase64\u7f16\u7801\u7684\u7ec6\u8282\uff0c\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003 \u300aBase64\u7b14\u8bb0\u300b \u4e00\u6587\uff0cPython\u6807\u51c6\u5e93\u4e2d\u7684 base64 \u6a21\u5757\u63d0\u4f9b\u4e86 b64encode \u548c b64decode \u4e24\u4e2a\u51fd\u6570\uff0c\u4e13\u95e8\u7528\u4e8e\u5b9e\u73b0Base64\u7684\u7f16\u7801\u548c\u89e3\u7801\uff0c\u4e0b\u9762\u6f14\u793a\u4e86\u5728 Python\u7684\u4ea4\u4e92\u5f0f\u73af\u5883 \u4e2d\u6267\u884c\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u6548\u679c\u3002 >>> import base64 >>> >>> content = 'Man is distinguished, not only by his reason, but by this singular passion from other animals, which is a lust of the mind, that by a perseverance of delight in the continued and indefatigable generation of knowledge, exceeds the short vehemence of any carnal pleasure.' >>> base64 . b64encode ( content . encode ()) b 'TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0aGlzIHNpbmd1bGFyIHBhc3Npb24gZnJvbSBvdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2YgdGhlIG1pbmQsIHRoYXQgYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZGVsaWdodCBpbiB0aGUgY29udGludWVkIGFuZCBpbmRlZmF0aWdhYmxlIGdlbmVyYXRpb24gb2Yga25vd2xlZGdlLCBleGNlZWRzIHRoZSBzaG9ydCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm5hbCBwbGVhc3VyZS4=' >>> content = b 'TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0aGlzIHNpbmd1bGFyIHBhc3Npb24gZnJvbSBvdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2YgdGhlIG1pbmQsIHRoYXQgYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZGVsaWdodCBpbiB0aGUgY29udGludWVkIGFuZCBpbmRlZmF0aWdhYmxlIGdlbmVyYXRpb24gb2Yga25vd2xlZGdlLCBleGNlZWRzIHRoZSBzaG9ydCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm5hbCBwbGVhc3VyZS4=' >>> base64 . b64decode ( content ) . decode () 'Man is distinguished, not only by his reason, but by this singular passion from other animals, which is a lust of the mind, that by a perseverance of delight in the continued and indefatigable generation of knowledge, exceeds the short vehemence of any carnal pleasure.'","title":"base64 - Base64\u7f16\u89e3\u7801\u6a21\u5757"},{"location":"%E7%AC%AC20%E8%AF%BE%EF%BC%9APython%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/#collections-","text":"collections \u6a21\u5757\u63d0\u4f9b\u4e86\u8bf8\u591a\u975e\u5e38\u597d\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e3b\u8981\u5305\u62ec\uff1a namedtuple \uff1a\u547d\u4ee4\u5143\u7ec4\uff0c\u5b83\u662f\u4e00\u4e2a\u7c7b\u5de5\u5382\uff0c\u63a5\u53d7\u7c7b\u578b\u7684\u540d\u79f0\u548c\u5c5e\u6027\u5217\u8868\u6765\u521b\u5efa\u4e00\u4e2a\u7c7b\u3002 deque \uff1a\u53cc\u7aef\u961f\u5217\uff0c\u662f\u5217\u8868\u7684\u66ff\u4ee3\u5b9e\u73b0\u3002Python\u4e2d\u7684\u5217\u8868\u5e95\u5c42\u662f\u57fa\u4e8e\u6570\u7ec4\u6765\u5b9e\u73b0\u7684\uff0c\u800c deque \u5e95\u5c42\u662f\u53cc\u5411\u94fe\u8868\uff0c\u56e0\u6b64\u5f53\u4f60\u9700\u8981\u5728\u5934\u5c3e\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\u662f\uff0c deque \u4f1a\u8868\u73b0\u51fa\u66f4\u597d\u7684\u6027\u80fd\uff0c\u6e10\u8fd1\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(1)$\u3002 Counter \uff1a dict \u7684\u5b50\u7c7b\uff0c\u952e\u662f\u5143\u7d20\uff0c\u503c\u662f\u5143\u7d20\u7684\u8ba1\u6570\uff0c\u5b83\u7684 most_common() \u65b9\u6cd5\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u83b7\u53d6\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u5143\u7d20\u3002 Counter \u548c dict \u7684\u7ee7\u627f\u5173\u7cfb\u6211\u8ba4\u4e3a\u662f\u503c\u5f97\u5546\u69b7\u7684\uff0c\u6309\u7167CARP\u539f\u5219\uff0c Counter \u8ddf dict \u7684\u5173\u7cfb\u5e94\u8be5\u8bbe\u8ba1\u4e3a\u5173\u8054\u5173\u7cfb\u66f4\u4e3a\u5408\u7406\u3002 OrderedDict \uff1a dict \u7684\u5b50\u7c7b\uff0c\u5b83\u8bb0\u5f55\u4e86\u952e\u503c\u5bf9\u63d2\u5165\u7684\u987a\u5e8f\uff0c\u770b\u8d77\u6765\u65e2\u6709\u5b57\u5178\u7684\u884c\u4e3a\uff0c\u4e5f\u6709\u94fe\u8868\u7684\u884c\u4e3a\u3002 defaultdict \uff1a\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7c7b\u578b\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u9ed8\u8ba4\u7684\u5de5\u5382\u51fd\u6570\u6765\u83b7\u5f97\u952e\u5bf9\u5e94\u7684\u9ed8\u8ba4\u503c\uff0c\u76f8\u6bd4\u5b57\u5178\u4e2d\u7684 setdefault() \u65b9\u6cd5\uff0c\u8fd9\u79cd\u505a\u6cd5\u66f4\u52a0\u9ad8\u6548\u3002 \u4e0b\u9762\u662f\u5728 Python\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d \u4f7f\u7528 namedtuple \u521b\u5efa\u6251\u514b\u724c\u7c7b\u7684\u4f8b\u5b50\u3002 >>> from collections import namedtuple >>> >>> Card = namedtuple ( 'Card' , ( 'suite' , 'face' )) >>> card1 = Card ( '\u7ea2\u6843' , 5 ) >>> card2 = Card ( '\u8349\u82b1' , 9 ) >>> card1 Card ( suite = '\u7ea2\u6843' , face = 5 ) >>> card2 Card ( suite = '\u8349\u82b1' , face = 9 ) >>> print ( f ' { card1 . suite }{ card1 . face } ' ) \u7ea2\u68435 >>> print ( f ' { card2 . suite }{ card2 . face } ' ) \u8349\u82b19 \u4e0b\u9762\u662f\u4f7f\u7528 Counter \u7c7b\u7edf\u8ba1\u5217\u8868\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u4e09\u4e2a\u5143\u7d20\u7684\u4f8b\u5b50\u3002 from collections import Counter words = [ 'look' , 'into' , 'my' , 'eyes' , 'look' , 'into' , 'my' , 'eyes' , 'the' , 'eyes' , 'the' , 'eyes' , 'the' , 'eyes' , 'not' , 'around' , 'the' , 'eyes' , \"don't\" , 'look' , 'around' , 'the' , 'eyes' , 'look' , 'into' , 'my' , 'eyes' , \"you're\" , 'under' ] counter = Counter ( words ) # \u6253\u5370words\u5217\u8868\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u76843\u4e2a\u5143\u7d20\u53ca\u5176\u51fa\u73b0\u6b21\u6570 for elem , count in counter . most_common ( 3 ): print ( elem , count )","title":"collections - \u5bb9\u5668\u6570\u636e\u7c7b\u578b\u6a21\u5757"},{"location":"%E7%AC%AC20%E8%AF%BE%EF%BC%9APython%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/#hashlib-","text":"\u54c8\u5e0c\u51fd\u6570\u53c8\u79f0\u54c8\u5e0c\u7b97\u6cd5\u6216\u6563\u5217\u51fd\u6570\uff0c\u662f\u4e00\u79cd\u4e3a\u5df2\u6709\u7684\u6570\u636e\u521b\u5efa\u201c\u6570\u5b57\u6307\u7eb9\u201d\uff08\u54c8\u5e0c\u6458\u8981\uff09\u7684\u65b9\u6cd5\u3002\u54c8\u5e0c\u51fd\u6570\u628a\u6570\u636e\u538b\u7f29\u6210\u6458\u8981\uff0c\u5bf9\u4e8e\u76f8\u540c\u7684\u8f93\u5165\uff0c\u54c8\u5e0c\u51fd\u6570\u53ef\u4ee5\u751f\u6210\u76f8\u540c\u7684\u6458\u8981\uff08\u6570\u5b57\u6307\u7eb9\uff09\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u5e76\u4e0d\u53ef\u9006\uff08\u4e0d\u80fd\u901a\u8fc7\u6458\u8981\u8ba1\u7b97\u51fa\u8f93\u5165\u7684\u5185\u5bb9\uff09\u3002\u4e00\u4e2a\u4f18\u8d28\u7684\u54c8\u5e0c\u51fd\u6570\u80fd\u591f\u4e3a\u4e0d\u540c\u7684\u8f93\u5165\u751f\u6210\u4e0d\u540c\u7684\u6458\u8981\uff0c\u51fa\u73b0\u54c8\u5e0c\u51b2\u7a81\uff08\u4e0d\u540c\u7684\u8f93\u5165\u4ea7\u751f\u76f8\u540c\u7684\u6458\u8981\uff09\u7684\u6982\u7387\u6781\u4f4e\uff0c MD5 \u3001 SHA\u5bb6\u65cf \u5c31\u662f\u8fd9\u7c7b\u597d\u7684\u54c8\u5e0c\u51fd\u6570\u3002 \u8bf4\u660e \uff1a\u57282011\u5e74\u7684\u65f6\u5019\uff0cRFC 6151\u4e2d\u5df2\u7ecf\u7981\u6b62\u5c06MD5\u7528\u4f5c\u5bc6\u94a5\u6563\u5217\u6d88\u606f\u8ba4\u8bc1\u7801\uff0c\u8fd9\u4e2a\u95ee\u9898\u4e0d\u5728\u6211\u4eec\u8ba8\u8bba\u7684\u8303\u56f4\u5185\u3002 Python\u6807\u51c6\u5e93\u7684 hashlib \u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9\u54c8\u5e0c\u51fd\u6570\u7684\u5c01\u88c5\uff0c\u901a\u8fc7\u4f7f\u7528 md5 \u3001 sha1 \u3001 sha256 \u7b49\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u7684\u751f\u6210\u201c\u6570\u5b57\u6307\u7eb9\u201d\u3002\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u7528\u6237\u6ce8\u518c\u65f6\u6211\u4eec\u5e0c\u671b\u5728\u6570\u636e\u5e93\u4e2d\u4fdd\u5b58\u7528\u6237\u7684\u5bc6\u7801\uff0c\u5f88\u663e\u7136\u6211\u4eec\u4e0d\u80fd\u5c06\u7528\u6237\u5bc6\u7801\u76f4\u63a5\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7528\u6237\u9690\u79c1\u7684\u6cc4\u9732\uff0c\u6240\u4ee5\u5728\u6570\u636e\u5e93\u4e2d\u4fdd\u5b58\u7528\u6237\u5bc6\u7801\u65f6\uff0c\u901a\u5e38\u90fd\u4f1a\u5c06\u5bc6\u7801\u7684\u201c\u6307\u7eb9\u201d\u4fdd\u5b58\u8d77\u6765\uff0c\u7528\u6237\u767b\u5f55\u65f6\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u5bc6\u7801\u7684\u201c\u6307\u7eb9\u201d\u518d\u8fdb\u884c\u5339\u914d\u6765\u5224\u65ad\u7528\u6237\u767b\u5f55\u662f\u5426\u6210\u529f\u3002 import hashlib # \u8ba1\u7b97\u5b57\u7b26\u4e32\"123456\"\u7684MD5\u6458\u8981 print ( hashlib . md5 ( '123456' . encode ()) . hexdigest ()) # \u8ba1\u7b97\u6587\u4ef6\"Python-3.7.1.tar.xz\"\u7684MD5\u6458\u8981 hasher = hashlib . md5 () with open ( 'Python-3.7.1.tar.xz' , 'rb' ) as file : data = file . read ( 512 ) while data : hasher . update ( data ) data = file . read ( 512 ) print ( hasher . hexdigest ()) \u8bf4\u660e \uff1a\u5f88\u591a\u7f51\u7ad9\u5728\u4e0b\u8f7d\u94fe\u63a5\u7684\u65c1\u8fb9\u90fd\u63d0\u4f9b\u4e86\u54c8\u5e0c\u6458\u8981\uff0c\u5b8c\u6210\u6587\u4ef6\u4e0b\u8f7d\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u8be5\u6587\u4ef6\u7684\u54c8\u5e0c\u6458\u8981\u5e76\u68c0\u67e5\u5b83\u4e0e\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u7684\u54c8\u5e0c\u6458\u8981\u662f\u5426\u4e00\u81f4\uff08\u6307\u7eb9\u6bd4\u5bf9\uff09\u3002\u5982\u679c\u8ba1\u7b97\u51fa\u7684\u54c8\u5e0c\u6458\u8981\u4e0e\u7f51\u7ad9\u63d0\u4f9b\u7684\u5e76\u4e0d\u4e00\u81f4\uff0c\u5f88\u6709\u53ef\u80fd\u662f\u4e0b\u8f7d\u51fa\u9519\u6216\u8be5\u6587\u4ef6\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u88ab\u7be1\u6539\uff0c\u8fd9\u65f6\u5019\u5c31\u4e0d\u5e94\u8be5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u6587\u4ef6\u3002","title":"hashlib - \u54c8\u5e0c\u51fd\u6570\u6a21\u5757"},{"location":"%E7%AC%AC20%E8%AF%BE%EF%BC%9APython%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/#heapq-","text":"heapq \u6a21\u5757\u5b9e\u73b0\u4e86\u5806\u6392\u5e8f\u7b97\u6cd5\uff0c\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u5806\u6392\u5e8f\uff0c\u5c24\u5176\u662f\u8981\u89e3\u51b3 TopK\u95ee\u9898 \uff08\u4ece\u5e8f\u5217\u4e2d\u627e\u5230K\u4e2a\u6700\u5927\u6216\u6700\u5c0f\u5143\u7d20\uff09\uff0c\u76f4\u63a5\u4f7f\u7528\u8be5\u6a21\u5757\u5373\u53ef\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import heapq list1 = [ 34 , 25 , 12 , 99 , 87 , 63 , 58 , 78 , 88 , 92 ] # \u627e\u51fa\u5217\u8868\u4e2d\u6700\u5927\u7684\u4e09\u4e2a\u5143\u7d20 print ( heapq . nlargest ( 3 , list1 )) # \u627e\u51fa\u5217\u8868\u4e2d\u6700\u5c0f\u7684\u4e09\u4e2a\u5143\u7d20 print ( heapq . nsmallest ( 3 , list1 )) list2 = [ { 'name' : 'IBM' , 'shares' : 100 , 'price' : 91.1 }, { 'name' : 'AAPL' , 'shares' : 50 , 'price' : 543.22 }, { 'name' : 'FB' , 'shares' : 200 , 'price' : 21.09 }, { 'name' : 'HPQ' , 'shares' : 35 , 'price' : 31.75 }, { 'name' : 'YHOO' , 'shares' : 45 , 'price' : 16.35 }, { 'name' : 'ACME' , 'shares' : 75 , 'price' : 115.65 } ] # \u627e\u51fa\u4ef7\u683c\u6700\u9ad8\u7684\u4e09\u53ea\u80a1\u7968 print ( heapq . nlargest ( 3 , list2 , key = lambda x : x [ 'price' ])) # \u627e\u51fa\u6301\u6709\u6570\u91cf\u6700\u9ad8\u7684\u4e09\u53ea\u80a1\u7968 print ( heapq . nlargest ( 3 , list2 , key = lambda x : x [ 'shares' ]))","title":"heapq - \u5806\u6392\u5e8f\u6a21\u5757"},{"location":"%E7%AC%AC20%E8%AF%BE%EF%BC%9APython%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/#itertools-","text":"itertools \u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u5404\u79cd\u5404\u6837\u7684\u8fed\u4ee3\u5668\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u3002 import itertools # \u4ea7\u751fABCD\u7684\u5168\u6392\u5217 for value in itertools . permutations ( 'ABCD' ): print ( value ) # \u4ea7\u751fABCDE\u7684\u4e94\u9009\u4e09\u7ec4\u5408 for value in itertools . combinations ( 'ABCDE' , 3 ): print ( value ) # \u4ea7\u751fABCD\u548c123\u7684\u7b1b\u5361\u5c14\u79ef for value in itertools . product ( 'ABCD' , '123' ): print ( value ) # \u4ea7\u751fABC\u7684\u65e0\u9650\u5faa\u73af\u5e8f\u5217 it = itertools . cycle (( 'A' , 'B' , 'C' )) print ( next ( it )) print ( next ( it )) print ( next ( it )) print ( next ( it ))","title":"itertools - \u8fed\u4ee3\u5de5\u5177\u6a21\u5757"},{"location":"%E7%AC%AC20%E8%AF%BE%EF%BC%9APython%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/#random-","text":"\u8fd9\u4e2a\u6a21\u5757\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u7528\u8fc7\u5f88\u591a\u6b21\u4e86\uff0c\u751f\u6210\u968f\u673a\u6570\u3001\u5b9e\u73b0\u968f\u673a\u4e71\u5e8f\u548c\u968f\u673a\u62bd\u6837\uff0c\u4e0b\u9762\u662f\u5e38\u7528\u51fd\u6570\u7684\u5217\u8868\u3002 getrandbits(k) \uff1a\u8fd4\u56de\u5177\u6709 k \u4e2a\u968f\u673a\u6bd4\u7279\u4f4d\u7684\u6574\u6570\u3002 randrange(start, stop[, step]) \uff1a\u4ece range(start, stop, step) \u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u9009\u62e9\u7684\u5143\u7d20\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u6784\u5efa\u4e00\u4e2a range \u5bf9\u8c61\u3002 randint(a, b) \uff1a\u8fd4\u56de\u968f\u673a\u6574\u6570 N \u6ee1\u8db3 a <= N <= b \uff0c\u76f8\u5f53\u4e8e randrange(a, b+1) \u3002 choice(seq) \uff1a\u4ece\u975e\u7a7a\u5e8f\u5217 seq \u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u5143\u7d20\u3002 \u5982\u679c seq \u4e3a\u7a7a\uff0c\u5219\u5f15\u53d1 IndexError \u3002 choices(population, weight=None, *, cum_weights=None, k=1) \uff1a\u4ece population \u4e2d\u9009\u62e9\u66ff\u6362\uff0c\u8fd4\u56de\u5927\u5c0f\u4e3a k \u7684\u5143\u7d20\u5217\u8868\u3002 \u5982\u679c population \u4e3a\u7a7a\uff0c\u5219\u5f15\u53d1 IndexError \u3002 shuffle(x[, random]) \uff1a\u5c06\u5e8f\u5217 x \u968f\u673a\u6253\u4e71\u4f4d\u7f6e\u3002 sample(population, k) \uff1a\u8fd4\u56de\u4ece\u603b\u4f53\u5e8f\u5217\u6216\u96c6\u5408\u4e2d\u9009\u62e9 k \u4e2a\u4e0d\u91cd\u590d\u5143\u7d20\u6784\u9020\u7684\u5217\u8868\uff0c\u7528\u4e8e\u65e0\u91cd\u590d\u7684\u968f\u673a\u62bd\u6837\u3002 random() \uff1a\u8fd4\u56de [0.0, 1.0) \u8303\u56f4\u5185\u7684\u4e0b\u4e00\u4e2a\u968f\u673a\u6d6e\u70b9\u6570\u3002 expovariate(lambd) \uff1a\u6307\u6570\u5206\u5e03\u3002 gammavariate(alpha, beta) \uff1a\u4f3d\u739b\u5206\u5e03\u3002 gauss(mu, sigma) / normalvariate(mu, sigma) \uff1a\u6b63\u6001\u5206\u5e03\u3002 paretovariate(alpha) \uff1a\u5e15\u7d2f\u6258\u5206\u5e03\u3002 weibullvariate(alpha, beta) \uff1a\u5a01\u5e03\u5c14\u5206\u5e03\u3002","title":"random - \u968f\u673a\u6570\u548c\u968f\u673a\u62bd\u6837\u6a21\u5757"},{"location":"%E7%AC%AC20%E8%AF%BE%EF%BC%9APython%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/#ospath-","text":"os.path \u6a21\u5757\u5c01\u88c5\u4e86\u64cd\u4f5c\u8def\u5f84\u7684\u5de5\u5177\u51fd\u6570\uff0c\u5982\u679c\u7a0b\u5e8f\u4e2d\u9700\u8981\u5bf9\u6587\u4ef6\u8def\u5f84\u505a\u62fc\u63a5\u3001\u62c6\u5206\u3001\u83b7\u53d6\u4ee5\u53ca\u83b7\u53d6\u6587\u4ef6\u7684\u5b58\u5728\u6027\u548c\u5176\u4ed6\u5c5e\u6027\uff0c\u8fd9\u4e2a\u6a21\u5757\u5c06\u4f1a\u975e\u5e38\u6709\u5e2e\u52a9\uff0c\u4e0b\u9762\u4e3a\u5927\u5bb6\u7f57\u5217\u4e00\u4e9b\u5e38\u7528\u7684\u51fd\u6570\u3002 dirname(path) \uff1a\u8fd4\u56de\u8def\u5f84 path \u7684\u76ee\u5f55\u540d\u79f0\u3002 exists(path) \uff1a\u5982\u679c path \u6307\u5411\u4e00\u4e2a\u5df2\u5b58\u5728\u7684\u8def\u5f84\u6216\u5df2\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8fd4\u56de True \u3002 getatime(path) / getmtime(path) / getctime(path) \uff1a\u8fd4\u56de path \u7684\u6700\u540e\u8bbf\u95ee\u65f6\u95f4/\u6700\u540e\u4fee\u6539\u65f6\u95f4/\u521b\u5efa\u65f6\u95f4\u3002 getsize(path) \uff1a\u8fd4\u56de path \u7684\u5927\u5c0f\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002\u5982\u679c\u8be5\u6587\u4ef6\u4e0d\u5b58\u5728\u6216\u4e0d\u53ef\u8bbf\u95ee\uff0c\u5219\u629b\u51fa OSError \u5f02\u5e38\u3002 isfile(path) \uff1a\u5982\u679c path \u662f\u666e\u901a\u6587\u4ef6\uff0c\u5219\u8fd4\u56de True \u3002 isdir(path) \uff1a\u5982\u679c path \u662f\u76ee\u5f55\uff08\u6587\u4ef6\u5939\uff09\uff0c\u5219\u8fd4\u56de True \u3002 join(path, *paths) \uff1a\u5408\u7406\u5730\u62fc\u63a5\u4e00\u4e2a\u6216\u591a\u4e2a\u8def\u5f84\u90e8\u5206\u3002\u8fd4\u56de\u503c\u662f path \u548c paths \u6240\u6709\u503c\u7684\u8fde\u63a5\uff0c\u6bcf\u4e2a\u975e\u7a7a\u90e8\u5206\u540e\u9762\u90fd\u7d27\u8ddf\u4e00\u4e2a\u76ee\u5f55\u5206\u9694\u7b26 ( os.sep )\uff0c\u9664\u4e86\u6700\u540e\u4e00\u90e8\u5206\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u6700\u540e\u4e00\u90e8\u5206\u4e3a\u7a7a\uff0c\u5219\u7ed3\u679c\u5c06\u4ee5\u5206\u9694\u7b26\u7ed3\u5c3e\u3002\u5982\u679c\u53c2\u6570\u4e2d\u67d0\u4e2a\u90e8\u5206\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u5219\u7edd\u5bf9\u8def\u5f84\u524d\u7684\u8def\u5f84\u90fd\u5c06\u88ab\u4e22\u5f03\uff0c\u5e76\u4ece\u7edd\u5bf9\u8def\u5f84\u90e8\u5206\u5f00\u59cb\u8fde\u63a5\u3002 splitext(path) \uff1a\u5c06\u8def\u5f84 path \u62c6\u5206\u4e3a\u4e00\u5bf9\uff0c\u5373 (root, ext) \uff0c\u4f7f\u5f97 root + ext == path \uff0c\u5176\u4e2d ext \u4e3a\u7a7a\u6216\u4ee5\u82f1\u6587\u53e5\u70b9\u5f00\u5934\uff0c\u4e14\u6700\u591a\u5305\u542b\u4e00\u4e2a\u53e5\u70b9\u3002","title":"os.path - \u8def\u5f84\u64cd\u4f5c\u76f8\u5173\u6a21\u5757"},{"location":"%E7%AC%AC20%E8%AF%BE%EF%BC%9APython%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/#uuid-uuid","text":"uuid \u6a21\u5757\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u751f\u6210\u5168\u5c40\u552f\u4e00\u6807\u8bc6\u7b26\uff08Universal Unique IDentity\uff09\u3002\u8be5\u6a21\u5757\u63d0\u4f9b\u4e86\u56db\u4e2a\u7528\u4e8e\u751f\u6210UUID\u7684\u51fd\u6570\uff0c\u5206\u522b\u662f\uff1a uuid1() \uff1a\u7531MAC\u5730\u5740\u3001\u5f53\u524d\u65f6\u95f4\u6233\u3001\u968f\u673a\u6570\u751f\u6210\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5168\u7403\u8303\u56f4\u5185\u7684\u552f\u4e00\u6027\u3002 uuid3(namespace, name) \uff1a\u901a\u8fc7\u8ba1\u7b97\u547d\u540d\u7a7a\u95f4\u548c\u540d\u5b57\u7684MD5\u54c8\u5e0c\u6458\u8981\uff08\u201c\u6307\u7eb9\u201d\uff09\u503c\u5f97\u5230\uff0c\u4fdd\u8bc1\u4e86\u540c\u4e00\u547d\u540d\u7a7a\u95f4\u4e2d\u4e0d\u540c\u540d\u5b57\u7684\u552f\u4e00\u6027\uff0c\u548c\u4e0d\u540c\u547d\u540d\u7a7a\u95f4\u7684\u552f\u4e00\u6027\uff0c\u4f46\u540c\u4e00\u547d\u540d\u7a7a\u95f4\u7684\u540c\u4e00\u540d\u5b57\u4f1a\u751f\u6210\u76f8\u540c\u7684UUID\u3002 uuid4() \uff1a\u7531\u4f2a\u968f\u673a\u6570\u751f\u6210UUID\uff0c\u6709\u4e00\u5b9a\u7684\u91cd\u590d\u6982\u7387\uff0c\u8be5\u6982\u7387\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765\u3002 uuid5() \uff1a\u7b97\u6cd5\u4e0e uuid3 \u76f8\u540c\uff0c\u53ea\u4e0d\u8fc7\u54c8\u5e0c\u51fd\u6570\u7528SHA-1\u53d6\u4ee3\u4e86MD5\u3002 \u7531\u4e8e uuid4 \u5b58\u5728\u6982\u7387\u578b\u91cd\u590d\uff0c\u90a3\u4e48\u5728\u771f\u6b63\u9700\u8981\u5168\u5c40\u552f\u4e00\u6807\u8bc6\u7b26\u7684\u5730\u65b9\u6700\u597d\u4e0d\u7528\u4f7f\u7528\u5b83\u3002\u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\uff0c uuid1 \u662f\u5f88\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u80fd\u591f\u4fdd\u8bc1\u751f\u6210ID\u7684\u5168\u5c40\u552f\u4e00\u6027\u3002\u4e0b\u9762\u662f\u5728 Python\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d \u4f7f\u7528 uuid1 \u51fd\u6570\u751f\u6210\u5168\u5c40\u552f\u4e00\u6807\u8bc6\u7b26\u7684\u4f8b\u5b50\u3002 >>> import uuid >>> uuid . uuid1 () . hex '622a8334baab11eaaa9c60f81da8d840' >>> uuid . uuid1 () . hex '62b066debaab11eaaa9c60f81da8d840' >>> uuid . uuid1 () . hex '642c0db0baab11eaaa9c60f81da8d840'","title":"uuid - UUID\u751f\u6210\u6a21\u5757"},{"location":"%E7%AC%AC20%E8%AF%BE%EF%BC%9APython%E6%A0%87%E5%87%86%E5%BA%93%E5%88%9D%E6%8E%A2/#_1","text":"Python\u6807\u51c6\u5e93\u4e2d\u6709\u5927\u91cf\u7684\u6a21\u5757\uff0c\u65e5\u5e38\u5f00\u53d1\u4e2d\u6709\u5f88\u591a\u5e38\u89c1\u7684\u4efb\u52a1\u5728Python\u6807\u51c6\u5e93\u4e2d\u90fd\u6709\u5c01\u88c5\u597d\u7684\u51fd\u6570\u6216\u7c7b\u53ef\u4f9b\u4f7f\u7528\uff0c\u8fd9\u4e5f\u662fPython\u8fd9\u95e8\u8bed\u8a00\u6700\u53ef\u7231\u7684\u5730\u65b9\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC21%E8%AF%BE%EF%BC%9A%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/","text":"\u7b2c21\u8bfe\uff1a\u6587\u4ef6\u8bfb\u5199\u548c\u5f02\u5e38\u5904\u7406 \u5b9e\u9645\u5f00\u53d1\u4e2d\u5e38\u5e38\u4f1a\u9047\u5230\u5bf9\u6570\u636e\u8fdb\u884c\u6301\u4e45\u5316\u7684\u573a\u666f\uff0c\u6240\u8c13\u6301\u4e45\u5316\u662f\u6307\u5c06\u6570\u636e\u4ece\u65e0\u6cd5\u957f\u4e45\u4fdd\u5b58\u6570\u636e\u7684\u5b58\u50a8\u4ecb\u8d28\uff08\u901a\u5e38\u662f\u5185\u5b58\uff09\u8f6c\u79fb\u5230\u53ef\u4ee5\u957f\u4e45\u4fdd\u5b58\u6570\u636e\u7684\u5b58\u50a8\u4ecb\u8d28\uff08\u901a\u5e38\u662f\u786c\u76d8\uff09\u4e2d\u3002\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u6700\u76f4\u63a5\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u901a\u8fc7 \u6587\u4ef6\u7cfb\u7edf \u5c06\u6570\u636e\u4fdd\u5b58\u5230 \u6587\u4ef6 \u4e2d\u3002 \u8ba1\u7b97\u673a\u7684 \u6587\u4ef6\u7cfb\u7edf \u662f\u4e00\u79cd\u5b58\u50a8\u548c\u7ec4\u7ec7\u8ba1\u7b97\u673a\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u5b83\u4f7f\u5f97\u5bf9\u6570\u636e\u7684\u8bbf\u95ee\u548c\u67e5\u627e\u53d8\u5f97\u5bb9\u6613\uff0c\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528 \u6587\u4ef6 \u548c \u6811\u5f62\u76ee\u5f55 \u7684\u62bd\u8c61\u903b\u8f91\u6982\u5ff5\u4ee3\u66ff\u4e86\u786c\u76d8\u3001\u5149\u76d8\u3001\u95ea\u5b58\u7b49\u7269\u7406\u8bbe\u5907\u7684\u6570\u636e\u5757\u6982\u5ff5\uff0c\u7528\u6237\u4f7f\u7528\u6587\u4ef6\u7cfb\u7edf\u6765\u4fdd\u5b58\u6570\u636e\u65f6\uff0c\u4e0d\u5fc5\u5173\u5fc3\u6570\u636e\u5b9e\u9645\u4fdd\u5b58\u5728\u786c\u76d8\u7684\u54ea\u4e2a\u6570\u636e\u5757\u4e0a\uff0c\u53ea\u9700\u8981\u8bb0\u4f4f\u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d\u3002\u5728\u5199\u5165\u65b0\u6570\u636e\u4e4b\u524d\uff0c\u7528\u6237\u4e0d\u5fc5\u5173\u5fc3\u786c\u76d8\u4e0a\u7684\u54ea\u4e2a\u6570\u636e\u5757\u6ca1\u6709\u88ab\u4f7f\u7528\uff0c\u786c\u76d8\u4e0a\u7684\u5b58\u50a8\u7a7a\u95f4\u7ba1\u7406\uff08\u5206\u914d\u548c\u91ca\u653e\uff09\u529f\u80fd\u7531\u6587\u4ef6\u7cfb\u7edf\u81ea\u52a8\u5b8c\u6210\uff0c\u7528\u6237\u53ea\u9700\u8981\u8bb0\u4f4f\u6570\u636e\u88ab\u5199\u5165\u5230\u4e86\u54ea\u4e2a\u6587\u4ef6\u4e2d\u3002 \u6253\u5f00\u548c\u5173\u95ed\u6587\u4ef6 \u6709\u4e86\u6587\u4ef6\u7cfb\u7edf\uff0c\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u901a\u8fc7\u6587\u4ef6\u6765\u8bfb\u5199\u6570\u636e\uff1b\u5728Python\u4e2d\u8981\u5b9e\u73b0\u6587\u4ef6\u64cd\u4f5c\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Python\u5185\u7f6e\u7684 open \u51fd\u6570\u6765\u6253\u5f00\u6587\u4ef6\uff0c\u5728\u4f7f\u7528 open \u51fd\u6570\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u7684\u53c2\u6570\u6307\u5b9a \u6587\u4ef6\u540d \u3001 \u64cd\u4f5c\u6a21\u5f0f \u548c \u5b57\u7b26\u7f16\u7801 \u7b49\u4fe1\u606f\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u4e86\u3002\u8fd9\u91cc\u6240\u8bf4\u7684\u64cd\u4f5c\u6a21\u5f0f\u662f\u6307\u8981\u6253\u5f00\u4ec0\u4e48\u6837\u7684\u6587\u4ef6\uff08\u5b57\u7b26\u6587\u4ef6\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\u4ee5\u53ca\u505a\u4ec0\u4e48\u6837\u7684\u64cd\u4f5c\uff08\u8bfb\u3001\u5199\u6216\u8ffd\u52a0\uff09\uff0c\u5177\u4f53\u5982\u4e0b\u8868\u6240\u793a\u3002 \u64cd\u4f5c\u6a21\u5f0f \u5177\u4f53\u542b\u4e49 'r' \u8bfb\u53d6 \uff08\u9ed8\u8ba4\uff09 'w' \u5199\u5165\uff08\u4f1a\u5148\u622a\u65ad\u4e4b\u524d\u7684\u5185\u5bb9\uff09 'x' \u5199\u5165\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\u4f1a\u4ea7\u751f\u5f02\u5e38 'a' \u8ffd\u52a0\uff0c\u5c06\u5185\u5bb9\u5199\u5165\u5230\u5df2\u6709\u6587\u4ef6\u7684\u672b\u5c3e 'b' \u4e8c\u8fdb\u5236\u6a21\u5f0f 't' \u6587\u672c\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09 '+' \u66f4\u65b0\uff08\u65e2\u53ef\u4ee5\u8bfb\u53c8\u53ef\u4ee5\u5199\uff09 \u4e0b\u56fe\u5c55\u793a\u4e86\u5982\u4f55\u6839\u636e\u7a0b\u5e8f\u7684\u9700\u8981\u6765\u8bbe\u7f6e open \u51fd\u6570\u7684\u64cd\u4f5c\u6a21\u5f0f\u3002 \u5728\u4f7f\u7528 open \u51fd\u6570\u65f6\uff0c\u5982\u679c\u6253\u5f00\u7684\u6587\u4ef6\u662f\u5b57\u7b26\u6587\u4ef6\uff08\u6587\u672c\u6587\u4ef6\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7 encoding \u53c2\u6570\u6765\u6307\u5b9a\u8bfb\u5199\u6587\u4ef6\u4f7f\u7528\u7684\u5b57\u7b26\u7f16\u7801\u3002\u5982\u679c\u5bf9\u5b57\u7b26\u7f16\u7801\u548c\u5b57\u7b26\u96c6\u8fd9\u4e9b\u6982\u5ff5\u4e0d\u4e86\u89e3\uff0c\u53ef\u4ee5\u770b\u770b \u300a\u5b57\u7b26\u96c6\u548c\u5b57\u7b26\u7f16\u7801\u300b \u4e00\u6587\uff0c\u6b64\u5904\u4e0d\u518d\u8fdb\u884c\u8d58\u8ff0\u3002 \u4f7f\u7528 open \u51fd\u6570\u6253\u5f00\u6587\u4ef6\u6210\u529f\u540e\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff0c\u901a\u8fc7\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\uff1b\u5982\u679c\u6253\u5f00\u6587\u4ef6\u5931\u8d25\uff0c open \u51fd\u6570\u4f1a\u5f15\u53d1\u5f02\u5e38\uff0c\u7a0d\u540e\u4f1a\u5bf9\u6b64\u52a0\u4ee5\u8bf4\u660e\u3002\u5982\u679c\u8981\u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u6587\u4ef6\u5bf9\u8c61\u7684 close \u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u7ed3\u675f\u6587\u4ef6\u64cd\u4f5c\u65f6\u91ca\u653e\u6389\u8fd9\u4e2a\u6587\u4ef6\u3002 \u8bfb\u5199\u6587\u672c\u6587\u4ef6 \u7528 open \u51fd\u6570\u6253\u5f00\u6587\u672c\u6587\u4ef6\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u6587\u4ef6\u540d\u5e76\u5c06\u6587\u4ef6\u7684\u64cd\u4f5c\u6a21\u5f0f\u8bbe\u7f6e\u4e3a 'r' \uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u503c\u4e5f\u662f 'r' \uff1b\u5982\u679c\u9700\u8981\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff0c\u53ef\u4ee5\u4f20\u5165 encoding \u53c2\u6570\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u503c\u662fNone\uff0c\u90a3\u4e48\u5728\u8bfb\u53d6\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u662f\u64cd\u4f5c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7f16\u7801\u3002\u9700\u8981\u63d0\u9192\u5927\u5bb6\uff0c\u5982\u679c\u4e0d\u80fd\u4fdd\u8bc1\u4fdd\u5b58\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u7f16\u7801\u65b9\u5f0f\u4e0e encoding \u53c2\u6570\u6307\u5b9a\u7684\u7f16\u7801\u65b9\u5f0f\u662f\u4e00\u81f4\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u80fd\u56e0\u65e0\u6cd5\u89e3\u7801\u5b57\u7b26\u800c\u5bfc\u81f4\u8bfb\u53d6\u6587\u4ef6\u5931\u8d25\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u8bfb\u53d6\u4e00\u4e2a\u7eaf\u6587\u672c\u6587\u4ef6\uff08\u4e00\u822c\u6307\u53ea\u6709\u5b57\u7b26\u539f\u751f\u7f16\u7801\u6784\u6210\u7684\u6587\u4ef6\uff0c\u4e0e\u5bcc\u6587\u672c\u76f8\u6bd4\uff0c\u7eaf\u6587\u672c\u4e0d\u5305\u542b\u5b57\u7b26\u6837\u5f0f\u7684\u63a7\u5236\u5143\u7d20\uff0c\u80fd\u591f\u88ab\u6700\u7b80\u5355\u7684\u6587\u672c\u7f16\u8f91\u5668\u76f4\u63a5\u8bfb\u53d6\uff09\u3002 file = open ( '\u81f4\u6a61\u6811.txt' , 'r' , encoding = 'utf-8' ) print ( file . read ()) file . close () \u8bf4\u660e \uff1a \u300a\u81f4\u6a61\u6811\u300b \u662f\u8212\u5a77\u8001\u5e08\u57281977\u5e743\u6708\u521b\u5efa\u7684\u7231\u60c5\u8bd7\uff0c\u4e5f\u662f\u6211\u6700\u559c\u6b22\u7684\u73b0\u4ee3\u8bd7\u4e4b\u4e00\u3002 \u9664\u4e86\u4f7f\u7528\u6587\u4ef6\u5bf9\u8c61\u7684 read \u65b9\u6cd5\u8bfb\u53d6\u6587\u4ef6\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 for-in \u5faa\u73af\u9010\u884c\u8bfb\u53d6\u6216\u8005\u7528 readlines \u65b9\u6cd5\u5c06\u6587\u4ef6\u6309\u884c\u8bfb\u53d6\u5230\u4e00\u4e2a\u5217\u8868\u5bb9\u5668\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 file = open ( '\u81f4\u6a61\u6811.txt' , 'r' , encoding = 'utf-8' ) for line in file : print ( line , end = '' ) file . close () file = open ( '\u81f4\u6a61\u6811.txt' , 'r' , encoding = 'utf-8' ) lines = file . readlines () for line in lines : print ( line , end = '' ) file . close () \u5982\u679c\u8981\u5411\u6587\u4ef6\u4e2d\u5199\u5165\u5185\u5bb9\uff0c\u53ef\u4ee5\u5728\u6253\u5f00\u6587\u4ef6\u65f6\u4f7f\u7528 w \u6216\u8005 a \u4f5c\u4e3a\u64cd\u4f5c\u6a21\u5f0f\uff0c\u524d\u8005\u4f1a\u622a\u65ad\u4e4b\u524d\u7684\u6587\u672c\u5185\u5bb9\u5199\u5165\u65b0\u7684\u5185\u5bb9\uff0c\u540e\u8005\u662f\u5728\u539f\u6765\u5185\u5bb9\u7684\u5c3e\u90e8\u8ffd\u52a0\u65b0\u7684\u5185\u5bb9\u3002 file = open ( '\u81f4\u6a61\u6811.txt' , 'a' , encoding = 'utf-8' ) file . write ( ' \\n \u6807\u9898\uff1a\u300a\u81f4\u6a61\u6811\u300b' ) file . write ( ' \\n \u4f5c\u8005\uff1a\u8212\u5a77' ) file . write ( ' \\n \u65f6\u95f4\uff1a1977\u5e743\u6708' ) file . close () \u5f02\u5e38\u5904\u7406\u673a\u5236 \u8bf7\u6ce8\u610f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5982\u679c open \u51fd\u6570\u6307\u5b9a\u7684\u6587\u4ef6\u5e76\u4e0d\u5b58\u5728\u6216\u8005\u65e0\u6cd5\u6253\u5f00\uff0c\u90a3\u4e48\u5c06\u5f15\u53d1\u5f02\u5e38\u72b6\u51b5\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002\u4e3a\u4e86\u8ba9\u4ee3\u7801\u5177\u6709\u5065\u58ee\u6027\u548c\u5bb9\u9519\u6027\uff0c\u6211\u4eec\u53ef\u4ee5 \u4f7f\u7528Python\u7684\u5f02\u5e38\u673a\u5236\u5bf9\u53ef\u80fd\u5728\u8fd0\u884c\u65f6\u53d1\u751f\u72b6\u51b5\u7684\u4ee3\u7801\u8fdb\u884c\u9002\u5f53\u7684\u5904\u7406 \u3002Python\u4e2d\u548c\u5f02\u5e38\u76f8\u5173\u7684\u5173\u952e\u5b57\u6709\u4e94\u4e2a\uff0c\u5206\u522b\u662f try \u3001 except \u3001 else \u3001 finally \u548c raise \uff0c\u6211\u4eec\u5148\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u518d\u6765\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u8fd9\u4e9b\u5173\u952e\u5b57\u7684\u7528\u6cd5\u3002 file = None try : file = open ( '\u81f4\u6a61\u6811.txt' , 'r' , encoding = 'utf-8' ) print ( file . read ()) except FileNotFoundError : print ( '\u65e0\u6cd5\u6253\u5f00\u6307\u5b9a\u7684\u6587\u4ef6!' ) except LookupError : print ( '\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801!' ) except UnicodeDecodeError : print ( '\u8bfb\u53d6\u6587\u4ef6\u65f6\u89e3\u7801\u9519\u8bef!' ) finally : if file : file . close () \u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd0\u884c\u65f6\u4f1a\u51fa\u73b0\u72b6\u51b5\u7684\u4ee3\u7801\u653e\u5728 try \u4ee3\u7801\u5757\u4e2d\uff0c\u5728 try \u540e\u9762\u53ef\u4ee5\u8ddf\u4e0a\u4e00\u4e2a\u6216\u591a\u4e2a except \u5757\u6765\u6355\u83b7\u5f02\u5e38\u5e76\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\u3002\u4f8b\u5982\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6587\u4ef6\u627e\u4e0d\u5230\u4f1a\u5f15\u53d1 FileNotFoundError \uff0c\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801\u4f1a\u5f15\u53d1 LookupError \uff0c\u800c\u5982\u679c\u8bfb\u53d6\u6587\u4ef6\u65f6\u65e0\u6cd5\u6309\u6307\u5b9a\u7f16\u7801\u65b9\u5f0f\u89e3\u7801\u6587\u4ef6\u4f1a\u5f15\u53d1 UnicodeDecodeError \uff0c\u6240\u4ee5\u6211\u4eec\u5728 try \u540e\u9762\u8ddf\u4e0a\u4e86\u4e09\u4e2a except \u5206\u522b\u5904\u7406\u8fd9\u4e09\u79cd\u4e0d\u540c\u7684\u5f02\u5e38\u72b6\u51b5\u3002\u5728 except \u540e\u9762\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u52a0\u4e0a else \u4ee3\u7801\u5757\uff0c\u8fd9\u662f try \u4e2d\u7684\u4ee3\u7801\u6ca1\u6709\u51fa\u73b0\u5f02\u5e38\u65f6\u4f1a\u6267\u884c\u7684\u4ee3\u7801\uff0c\u800c\u4e14 else \u4e2d\u7684\u4ee3\u7801\u4e0d\u4f1a\u518d\u8fdb\u884c\u5f02\u5e38\u6355\u83b7\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u9047\u5230\u5f02\u5e38\u72b6\u51b5\uff0c\u7a0b\u5e8f\u4f1a\u56e0\u5f02\u5e38\u800c\u7ec8\u6b62\u5e76\u62a5\u544a\u5f02\u5e38\u4fe1\u606f\u3002\u6700\u540e\u6211\u4eec\u4f7f\u7528 finally \u4ee3\u7801\u5757\u6765\u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u91ca\u653e\u6389\u7a0b\u5e8f\u4e2d\u83b7\u53d6\u7684\u5916\u90e8\u8d44\u6e90\u3002\u7531\u4e8e finally \u5757\u7684\u4ee3\u7801\u4e0d\u8bba\u7a0b\u5e8f\u6b63\u5e38\u8fd8\u662f\u5f02\u5e38\u90fd\u4f1a\u6267\u884c\uff0c\u751a\u81f3\u662f\u8c03\u7528\u4e86 sys \u6a21\u5757\u7684 exit \u51fd\u6570\u7ec8\u6b62Python\u7a0b\u5e8f\uff0c finally \u5757\u4e2d\u7684\u4ee3\u7801\u4ecd\u7136\u4f1a\u88ab\u6267\u884c\uff08\u56e0\u4e3a exit \u51fd\u6570\u7684\u672c\u8d28\u662f\u5f15\u53d1\u4e86 SystemExit \u5f02\u5e38\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u628a finally \u4ee3\u7801\u5757\u79f0\u4e3a\u201c\u603b\u662f\u6267\u884c\u4ee3\u7801\u5757\u201d\uff0c\u5b83\u6700\u9002\u5408\u7528\u6765\u505a\u91ca\u653e\u5916\u90e8\u8d44\u6e90\u7684\u64cd\u4f5c\u3002 Python\u4e2d\u5185\u7f6e\u4e86\u5927\u91cf\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u9664\u4e86\u4e0a\u9762\u4ee3\u7801\u4e2d\u7528\u5230\u7684\u5f02\u5e38\u7c7b\u578b\u4ee5\u53ca\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\u9047\u5230\u8fc7\u7684\u5f02\u5e38\u7c7b\u578b\u5916\uff0c\u8fd8\u6709\u8bb8\u591a\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u5176\u7ee7\u627f\u7ed3\u6784\u5982\u4e0b\u6240\u793a\u3002 BaseException +-- SystemExit +-- KeyboardInterrupt +-- GeneratorExit +-- Exception +-- StopIteration +-- StopAsyncIteration +-- ArithmeticError | +-- FloatingPointError | +-- OverflowError | +-- ZeroDivisionError +-- AssertionError +-- AttributeError +-- BufferError +-- EOFError +-- ImportError | +-- ModuleNotFoundError +-- LookupError | +-- IndexError | +-- KeyError +-- MemoryError +-- NameError | +-- UnboundLocalError +-- OSError | +-- BlockingIOError | +-- ChildProcessError | +-- ConnectionError | | +-- BrokenPipeError | | +-- ConnectionAbortedError | | +-- ConnectionRefusedError | | +-- ConnectionResetError | +-- FileExistsError | +-- FileNotFoundError | +-- InterruptedError | +-- IsADirectoryError | +-- NotADirectoryError | +-- PermissionError | +-- ProcessLookupError | +-- TimeoutError +-- ReferenceError +-- RuntimeError | +-- NotImplementedError | +-- RecursionError +-- SyntaxError | +-- IndentationError | +-- TabError +-- SystemError +-- TypeError +-- ValueError | +-- UnicodeError | +-- UnicodeDecodeError | +-- UnicodeEncodeError | +-- UnicodeTranslateError +-- Warning +-- DeprecationWarning +-- PendingDeprecationWarning +-- RuntimeWarning +-- SyntaxWarning +-- UserWarning +-- FutureWarning +-- ImportWarning +-- UnicodeWarning +-- BytesWarning +-- ResourceWarning \u4ece\u4e0a\u9762\u7684\u7ee7\u627f\u7ed3\u6784\u53ef\u4ee5\u770b\u51fa\uff0cPython\u4e2d\u6240\u6709\u7684\u5f02\u5e38\u90fd\u662f BaseException \u7684\u5b50\u7c7b\u578b\uff0c\u5b83\u6709\u56db\u4e2a\u76f4\u63a5\u7684\u5b50\u7c7b\uff0c\u5206\u522b\u662f\uff1a SystemExit \u3001 KeyboardInterrupt \u3001 GeneratorExit \u548c Exception \u3002\u5176\u4e2d\uff0c SystemExit \u8868\u793a\u89e3\u91ca\u5668\u8bf7\u6c42\u9000\u51fa\uff0c KeyboardInterrupt \u662f\u7528\u6237\u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c\uff08\u6309\u4e0b Ctrl+c \uff09\uff0c GeneratorExit \u8868\u793a\u751f\u6210\u5668\u53d1\u751f\u5f02\u5e38\u901a\u77e5\u9000\u51fa\uff0c\u4e0d\u7406\u89e3\u8fd9\u4e9b\u5f02\u5e38\u6ca1\u6709\u5173\u7cfb\uff0c\u7ee7\u7eed\u5b66\u4e60\u5c31\u597d\u4e86\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f Exception \u7c7b\uff0c\u5b83\u662f\u5e38\u89c4\u5f02\u5e38\u7c7b\u578b\u7684\u7236\u7c7b\u578b\uff0c\u5f88\u591a\u7684\u5f02\u5e38\u90fd\u662f\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u7ee7\u627f\u81ea Exception \u7c7b\u3002\u5982\u679cPython\u5185\u7f6e\u7684\u5f02\u5e38\u7c7b\u578b\u4e0d\u80fd\u6ee1\u8db3\u5e94\u7528\u7a0b\u5e8f\u7684\u9700\u8981\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b\u578b\uff0c\u800c\u81ea\u5b9a\u4e49\u7684\u5f02\u5e38\u7c7b\u578b\u4e5f\u5e94\u8be5\u76f4\u63a5\u6216\u95f4\u63a5\u7ee7\u627f\u81ea Exception \u7c7b\uff0c\u5f53\u7136\u8fd8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u91cd\u5199\u6216\u6dfb\u52a0\u65b9\u6cd5\u3002 \u5728Python\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 raise \u5173\u952e\u5b57\u6765\u5f15\u53d1\u5f02\u5e38\uff08\u629b\u51fa\u5f02\u5e38\u5bf9\u8c61\uff09\uff0c\u800c\u8c03\u7528\u8005\u53ef\u4ee5\u901a\u8fc7 try...except... \u7ed3\u6784\u6765\u6355\u83b7\u5e76\u5904\u7406\u5f02\u5e38\u3002\u4f8b\u5982\u5728\u51fd\u6570\u4e2d\uff0c\u5f53\u51fd\u6570\u7684\u6267\u884c\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u629b\u51fa\u5f02\u5e38\u7684\u65b9\u5f0f\u6765\u544a\u77e5\u8c03\u7528\u8005\u95ee\u9898\u7684\u6240\u5728\uff0c\u800c\u8c03\u7528\u8005\u53ef\u4ee5\u901a\u8fc7\u6355\u83b7\u5904\u7406\u5f02\u5e38\u6765\u4f7f\u5f97\u4ee3\u7801\u4ece\u5f02\u5e38\u4e2d\u6062\u590d\uff0c\u5b9a\u4e49\u5f02\u5e38\u548c\u629b\u51fa\u5f02\u5e38\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class InputError ( ValueError ): \"\"\"\u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b\u578b\"\"\" pass def fac ( num ): \"\"\"\u6c42\u9636\u4e58\"\"\" if num < 0 : raise InputError ( '\u53ea\u80fd\u8ba1\u7b97\u975e\u8d1f\u6574\u6570\u7684\u9636\u4e58' ) if num in ( 0 , 1 ): return 1 return num * fac ( num - 1 ) \u8c03\u7528\u6c42\u9636\u4e58\u7684\u51fd\u6570 fac \uff0c\u901a\u8fc7 try...except... \u7ed3\u6784\u6355\u83b7\u8f93\u5165\u9519\u8bef\u7684\u5f02\u5e38\u5e76\u6253\u5370\u5f02\u5e38\u5bf9\u8c61\uff08\u663e\u793a\u5f02\u5e38\u4fe1\u606f\uff09\uff0c\u5982\u679c\u8f93\u5165\u6b63\u786e\u5c31\u8ba1\u7b97\u9636\u4e58\u5e76\u7ed3\u675f\u7a0b\u5e8f\u3002 flag = True while flag : num = int ( input ( 'n = ' )) try : print ( f ' { num } ! = { fac ( num ) } ' ) flag = False except InputError as err : print ( err ) \u4e0a\u4e0b\u6587\u8bed\u6cd5 \u5bf9\u4e8e open \u51fd\u6570\u8fd4\u56de\u7684\u6587\u4ef6\u5bf9\u8c61\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 with \u4e0a\u4e0b\u6587\u8bed\u6cd5\u5728\u6587\u4ef6\u64cd\u4f5c\u5b8c\u6210\u540e\u81ea\u52a8\u6267\u884c\u6587\u4ef6\u5bf9\u8c61\u7684 close \u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4ee3\u7801\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u4f18\u96c5\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u518d\u5199 finally \u4ee3\u7801\u5757\u6765\u6267\u884c\u5173\u95ed\u6587\u4ef6\u91ca\u653e\u8d44\u6e90\u7684\u64cd\u4f5c\u3002\u9700\u8981\u63d0\u9192\u5927\u5bb6\u7684\u662f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u53ef\u4ee5\u653e\u5728 with \u4e0a\u4e0b\u6587\u8bed\u6cd5\u4e2d\uff0c\u53ea\u6709\u7b26\u5408 \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u534f\u8bae \uff08\u6709 __enter__ \u548c __exit__ \u9b54\u672f\u65b9\u6cd5\uff09\u7684\u5bf9\u8c61\u624d\u80fd\u4f7f\u7528\u8fd9\u79cd\u8bed\u6cd5\uff0cPython\u6807\u51c6\u5e93\u4e2d\u7684 contextlib \u6a21\u5757\u4e5f\u63d0\u4f9b\u4e86\u5bf9 with \u4e0a\u4e0b\u6587\u8bed\u6cd5\u7684\u652f\u6301\uff0c\u540e\u9762\u518d\u4e3a\u5927\u5bb6\u8fdb\u884c\u8bb2\u89e3\u3002 \u7528 with \u4e0a\u4e0b\u6587\u8bed\u6cd5\u6539\u5199\u540e\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 try : with open ( '\u81f4\u6a61\u6811.txt' , 'r' , encoding = 'utf-8' ) as file : print ( file . read ()) except FileNotFoundError : print ( '\u65e0\u6cd5\u6253\u5f00\u6307\u5b9a\u7684\u6587\u4ef6!' ) except LookupError : print ( '\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801!' ) except UnicodeDecodeError : print ( '\u8bfb\u53d6\u6587\u4ef6\u65f6\u89e3\u7801\u9519\u8bef!' ) \u8bfb\u5199\u4e8c\u8fdb\u5236\u6587\u4ef6 \u8bfb\u5199\u4e8c\u8fdb\u5236\u6587\u4ef6\u8ddf\u8bfb\u5199\u6587\u672c\u6587\u4ef6\u7684\u64cd\u4f5c\u7c7b\u4f3c\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\uff0c\u5728\u4f7f\u7528 open \u51fd\u6570\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5982\u679c\u8981\u8fdb\u884c\u8bfb\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6a21\u5f0f\u662f 'rb' \uff0c\u5982\u679c\u8981\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6a21\u5f0f\u662f 'wb' \u3002\u8fd8\u6709\u4e00\u70b9\uff0c\u8bfb\u5199\u6587\u672c\u6587\u4ef6\u65f6\uff0c read \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4ee5\u53ca write \u65b9\u6cd5\u7684\u53c2\u6570\u662f str \u5bf9\u8c61\uff08\u5b57\u7b26\u4e32\uff09\uff0c\u800c\u8bfb\u5199\u4e8c\u8fdb\u5236\u6587\u4ef6\u65f6\uff0c read \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4ee5\u53ca write \u65b9\u6cd5\u7684\u53c2\u6570\u662f bytes-like \u5bf9\u8c61\uff08\u5b57\u8282\u4e32\uff09\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u5c06\u5f53\u524d\u8def\u5f84\u4e0b\u540d\u4e3a guido.jpg \u7684\u56fe\u7247\u6587\u4ef6\u590d\u5236\u5230 \u5409\u591a.jpg \u6587\u4ef6\u4e2d\u7684\u64cd\u4f5c\u3002 try : with open ( 'guido.jpg' , 'rb' ) as file1 : data = file1 . read () with open ( '\u5409\u591a.jpg' , 'wb' ) as file2 : file2 . write ( data ) except FileNotFoundError : print ( '\u6307\u5b9a\u7684\u6587\u4ef6\u65e0\u6cd5\u6253\u5f00.' ) except IOError : print ( '\u8bfb\u5199\u6587\u4ef6\u65f6\u51fa\u73b0\u9519\u8bef.' ) print ( '\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f.' ) \u5982\u679c\u8981\u590d\u5236\u7684\u56fe\u7247\u6587\u4ef6\u5f88\u5927\uff0c\u4e00\u6b21\u5c06\u6587\u4ef6\u5185\u5bb9\u76f4\u63a5\u8bfb\u5165\u5185\u5b58\u4e2d\u53ef\u80fd\u4f1a\u9020\u6210\u975e\u5e38\u5927\u7684\u5185\u5b58\u5f00\u9500\uff0c\u4e3a\u4e86\u51cf\u5c11\u5bf9\u5185\u5b58\u7684\u5360\u7528\uff0c\u53ef\u4ee5\u4e3a read \u65b9\u6cd5\u4f20\u5165 size \u53c2\u6570\u6765\u6307\u5b9a\u6bcf\u6b21\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff0c\u901a\u8fc7\u5faa\u73af\u8bfb\u53d6\u548c\u5199\u5165\u7684\u65b9\u5f0f\u6765\u5b8c\u6210\u4e0a\u9762\u7684\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 try : with open ( 'guido.jpg' , 'rb' ) as file1 , open ( '\u5409\u591a.jpg' , 'wb' ) as file2 : data = file1 . read ( 512 ) while data : file2 . write ( data ) data = file1 . read () except FileNotFoundError : print ( '\u6307\u5b9a\u7684\u6587\u4ef6\u65e0\u6cd5\u6253\u5f00.' ) except IOError : print ( '\u8bfb\u5199\u6587\u4ef6\u65f6\u51fa\u73b0\u9519\u8bef.' ) print ( '\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f.' ) \u7b80\u5355\u7684\u603b\u7ed3 \u901a\u8fc7\u8bfb\u5199\u6587\u4ef6\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u3002\u5728Python\u4e2d\u53ef\u4ee5\u901a\u8fc7 open \u51fd\u6570\u6765\u83b7\u5f97\u6587\u4ef6\u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7\u6587\u4ef6\u5bf9\u8c61\u7684 read \u548c write \u65b9\u6cd5\u5b9e\u73b0\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u53ef\u80fd\u906d\u9047\u65e0\u6cd5\u9884\u6599\u7684\u5f02\u5e38\u72b6\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528Python\u7684\u5f02\u5e38\u673a\u5236\u6765\u5904\u7406\u8fd9\u4e9b\u72b6\u51b5\u3002Python\u7684\u5f02\u5e38\u673a\u5236\u4e3b\u8981\u5305\u62ec try \u3001 except \u3001 else \u3001 finally \u548c raise \u8fd9\u4e94\u4e2a\u6838\u5fc3\u5173\u952e\u5b57\u3002 try \u540e\u9762\u7684 except \u8bed\u53e5\u4e0d\u662f\u5fc5\u987b\u7684\uff0c finally \u8bed\u53e5\u4e5f\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f\u4e8c\u8005\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\uff1b except \u8bed\u53e5\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\uff0c\u591a\u4e2a except \u4f1a\u6309\u7167\u4e66\u5199\u7684\u987a\u5e8f\u4f9d\u6b21\u5339\u914d\u6307\u5b9a\u7684\u5f02\u5e38\uff0c\u5982\u679c\u5f02\u5e38\u5df2\u7ecf\u5904\u7406\u5c31\u4e0d\u4f1a\u518d\u8fdb\u5165\u540e\u7eed\u7684 except \u8bed\u53e5\uff1b except \u8bed\u53e5\u4e2d\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5143\u7ec4\u540c\u65f6\u6307\u5b9a\u591a\u4e2a\u5f02\u5e38\u7c7b\u578b\u8fdb\u884c\u6355\u83b7\uff1b except \u8bed\u53e5\u540e\u9762\u5982\u679c\u4e0d\u6307\u5b9a\u5f02\u5e38\u7c7b\u578b\uff0c\u5219\u9ed8\u8ba4\u6355\u83b7\u6240\u6709\u5f02\u5e38\uff1b\u6355\u83b7\u5f02\u5e38\u540e\u53ef\u4ee5\u4f7f\u7528 raise \u8981\u518d\u6b21\u629b\u51fa\uff0c\u4f46\u662f\u4e0d\u5efa\u8bae\u6355\u83b7\u5e76\u629b\u51fa\u540c\u4e00\u4e2a\u5f02\u5e38\uff1b\u4e0d\u5efa\u8bae\u5728\u4e0d\u6e05\u695a\u903b\u8f91\u7684\u60c5\u51b5\u4e0b\u6355\u83b7\u6240\u6709\u5f02\u5e38\uff0c\u8fd9\u53ef\u80fd\u4f1a\u63a9\u76d6\u7a0b\u5e8f\u4e2d\u4e25\u91cd\u7684\u95ee\u9898\u3002\u6700\u540e\u5f3a\u8c03\u4e00\u70b9\uff0c \u4e0d\u8981\u4f7f\u7528\u5f02\u5e38\u673a\u5236\u6765\u5904\u7406\u6b63\u5e38\u4e1a\u52a1\u903b\u8f91\u6216\u63a7\u5236\u7a0b\u5e8f\u6d41\u7a0b \uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e0d\u8981\u6ee5\u7528\u5f02\u5e38\u673a\u5236\uff0c\u8fd9\u662f\u521d\u5b66\u8005\u5e38\u72af\u7684\u9519\u8bef\u3002","title":"\u7b2c21\u8bfe\uff1a\u6587\u4ef6\u8bfb\u5199\u548c\u5f02\u5e38\u5904\u7406"},{"location":"%E7%AC%AC21%E8%AF%BE%EF%BC%9A%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#21","text":"\u5b9e\u9645\u5f00\u53d1\u4e2d\u5e38\u5e38\u4f1a\u9047\u5230\u5bf9\u6570\u636e\u8fdb\u884c\u6301\u4e45\u5316\u7684\u573a\u666f\uff0c\u6240\u8c13\u6301\u4e45\u5316\u662f\u6307\u5c06\u6570\u636e\u4ece\u65e0\u6cd5\u957f\u4e45\u4fdd\u5b58\u6570\u636e\u7684\u5b58\u50a8\u4ecb\u8d28\uff08\u901a\u5e38\u662f\u5185\u5b58\uff09\u8f6c\u79fb\u5230\u53ef\u4ee5\u957f\u4e45\u4fdd\u5b58\u6570\u636e\u7684\u5b58\u50a8\u4ecb\u8d28\uff08\u901a\u5e38\u662f\u786c\u76d8\uff09\u4e2d\u3002\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u6700\u76f4\u63a5\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u901a\u8fc7 \u6587\u4ef6\u7cfb\u7edf \u5c06\u6570\u636e\u4fdd\u5b58\u5230 \u6587\u4ef6 \u4e2d\u3002 \u8ba1\u7b97\u673a\u7684 \u6587\u4ef6\u7cfb\u7edf \u662f\u4e00\u79cd\u5b58\u50a8\u548c\u7ec4\u7ec7\u8ba1\u7b97\u673a\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u5b83\u4f7f\u5f97\u5bf9\u6570\u636e\u7684\u8bbf\u95ee\u548c\u67e5\u627e\u53d8\u5f97\u5bb9\u6613\uff0c\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528 \u6587\u4ef6 \u548c \u6811\u5f62\u76ee\u5f55 \u7684\u62bd\u8c61\u903b\u8f91\u6982\u5ff5\u4ee3\u66ff\u4e86\u786c\u76d8\u3001\u5149\u76d8\u3001\u95ea\u5b58\u7b49\u7269\u7406\u8bbe\u5907\u7684\u6570\u636e\u5757\u6982\u5ff5\uff0c\u7528\u6237\u4f7f\u7528\u6587\u4ef6\u7cfb\u7edf\u6765\u4fdd\u5b58\u6570\u636e\u65f6\uff0c\u4e0d\u5fc5\u5173\u5fc3\u6570\u636e\u5b9e\u9645\u4fdd\u5b58\u5728\u786c\u76d8\u7684\u54ea\u4e2a\u6570\u636e\u5757\u4e0a\uff0c\u53ea\u9700\u8981\u8bb0\u4f4f\u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d\u3002\u5728\u5199\u5165\u65b0\u6570\u636e\u4e4b\u524d\uff0c\u7528\u6237\u4e0d\u5fc5\u5173\u5fc3\u786c\u76d8\u4e0a\u7684\u54ea\u4e2a\u6570\u636e\u5757\u6ca1\u6709\u88ab\u4f7f\u7528\uff0c\u786c\u76d8\u4e0a\u7684\u5b58\u50a8\u7a7a\u95f4\u7ba1\u7406\uff08\u5206\u914d\u548c\u91ca\u653e\uff09\u529f\u80fd\u7531\u6587\u4ef6\u7cfb\u7edf\u81ea\u52a8\u5b8c\u6210\uff0c\u7528\u6237\u53ea\u9700\u8981\u8bb0\u4f4f\u6570\u636e\u88ab\u5199\u5165\u5230\u4e86\u54ea\u4e2a\u6587\u4ef6\u4e2d\u3002","title":"\u7b2c21\u8bfe\uff1a\u6587\u4ef6\u8bfb\u5199\u548c\u5f02\u5e38\u5904\u7406"},{"location":"%E7%AC%AC21%E8%AF%BE%EF%BC%9A%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_1","text":"\u6709\u4e86\u6587\u4ef6\u7cfb\u7edf\uff0c\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u901a\u8fc7\u6587\u4ef6\u6765\u8bfb\u5199\u6570\u636e\uff1b\u5728Python\u4e2d\u8981\u5b9e\u73b0\u6587\u4ef6\u64cd\u4f5c\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Python\u5185\u7f6e\u7684 open \u51fd\u6570\u6765\u6253\u5f00\u6587\u4ef6\uff0c\u5728\u4f7f\u7528 open \u51fd\u6570\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u7684\u53c2\u6570\u6307\u5b9a \u6587\u4ef6\u540d \u3001 \u64cd\u4f5c\u6a21\u5f0f \u548c \u5b57\u7b26\u7f16\u7801 \u7b49\u4fe1\u606f\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u4e86\u3002\u8fd9\u91cc\u6240\u8bf4\u7684\u64cd\u4f5c\u6a21\u5f0f\u662f\u6307\u8981\u6253\u5f00\u4ec0\u4e48\u6837\u7684\u6587\u4ef6\uff08\u5b57\u7b26\u6587\u4ef6\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6\uff09\u4ee5\u53ca\u505a\u4ec0\u4e48\u6837\u7684\u64cd\u4f5c\uff08\u8bfb\u3001\u5199\u6216\u8ffd\u52a0\uff09\uff0c\u5177\u4f53\u5982\u4e0b\u8868\u6240\u793a\u3002 \u64cd\u4f5c\u6a21\u5f0f \u5177\u4f53\u542b\u4e49 'r' \u8bfb\u53d6 \uff08\u9ed8\u8ba4\uff09 'w' \u5199\u5165\uff08\u4f1a\u5148\u622a\u65ad\u4e4b\u524d\u7684\u5185\u5bb9\uff09 'x' \u5199\u5165\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\u4f1a\u4ea7\u751f\u5f02\u5e38 'a' \u8ffd\u52a0\uff0c\u5c06\u5185\u5bb9\u5199\u5165\u5230\u5df2\u6709\u6587\u4ef6\u7684\u672b\u5c3e 'b' \u4e8c\u8fdb\u5236\u6a21\u5f0f 't' \u6587\u672c\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09 '+' \u66f4\u65b0\uff08\u65e2\u53ef\u4ee5\u8bfb\u53c8\u53ef\u4ee5\u5199\uff09 \u4e0b\u56fe\u5c55\u793a\u4e86\u5982\u4f55\u6839\u636e\u7a0b\u5e8f\u7684\u9700\u8981\u6765\u8bbe\u7f6e open \u51fd\u6570\u7684\u64cd\u4f5c\u6a21\u5f0f\u3002 \u5728\u4f7f\u7528 open \u51fd\u6570\u65f6\uff0c\u5982\u679c\u6253\u5f00\u7684\u6587\u4ef6\u662f\u5b57\u7b26\u6587\u4ef6\uff08\u6587\u672c\u6587\u4ef6\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7 encoding \u53c2\u6570\u6765\u6307\u5b9a\u8bfb\u5199\u6587\u4ef6\u4f7f\u7528\u7684\u5b57\u7b26\u7f16\u7801\u3002\u5982\u679c\u5bf9\u5b57\u7b26\u7f16\u7801\u548c\u5b57\u7b26\u96c6\u8fd9\u4e9b\u6982\u5ff5\u4e0d\u4e86\u89e3\uff0c\u53ef\u4ee5\u770b\u770b \u300a\u5b57\u7b26\u96c6\u548c\u5b57\u7b26\u7f16\u7801\u300b \u4e00\u6587\uff0c\u6b64\u5904\u4e0d\u518d\u8fdb\u884c\u8d58\u8ff0\u3002 \u4f7f\u7528 open \u51fd\u6570\u6253\u5f00\u6587\u4ef6\u6210\u529f\u540e\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff0c\u901a\u8fc7\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\uff1b\u5982\u679c\u6253\u5f00\u6587\u4ef6\u5931\u8d25\uff0c open \u51fd\u6570\u4f1a\u5f15\u53d1\u5f02\u5e38\uff0c\u7a0d\u540e\u4f1a\u5bf9\u6b64\u52a0\u4ee5\u8bf4\u660e\u3002\u5982\u679c\u8981\u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u6587\u4ef6\u5bf9\u8c61\u7684 close \u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u7ed3\u675f\u6587\u4ef6\u64cd\u4f5c\u65f6\u91ca\u653e\u6389\u8fd9\u4e2a\u6587\u4ef6\u3002","title":"\u6253\u5f00\u548c\u5173\u95ed\u6587\u4ef6"},{"location":"%E7%AC%AC21%E8%AF%BE%EF%BC%9A%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_2","text":"\u7528 open \u51fd\u6570\u6253\u5f00\u6587\u672c\u6587\u4ef6\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u6587\u4ef6\u540d\u5e76\u5c06\u6587\u4ef6\u7684\u64cd\u4f5c\u6a21\u5f0f\u8bbe\u7f6e\u4e3a 'r' \uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u503c\u4e5f\u662f 'r' \uff1b\u5982\u679c\u9700\u8981\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff0c\u53ef\u4ee5\u4f20\u5165 encoding \u53c2\u6570\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u503c\u662fNone\uff0c\u90a3\u4e48\u5728\u8bfb\u53d6\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u662f\u64cd\u4f5c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7f16\u7801\u3002\u9700\u8981\u63d0\u9192\u5927\u5bb6\uff0c\u5982\u679c\u4e0d\u80fd\u4fdd\u8bc1\u4fdd\u5b58\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u7f16\u7801\u65b9\u5f0f\u4e0e encoding \u53c2\u6570\u6307\u5b9a\u7684\u7f16\u7801\u65b9\u5f0f\u662f\u4e00\u81f4\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u80fd\u56e0\u65e0\u6cd5\u89e3\u7801\u5b57\u7b26\u800c\u5bfc\u81f4\u8bfb\u53d6\u6587\u4ef6\u5931\u8d25\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u8bfb\u53d6\u4e00\u4e2a\u7eaf\u6587\u672c\u6587\u4ef6\uff08\u4e00\u822c\u6307\u53ea\u6709\u5b57\u7b26\u539f\u751f\u7f16\u7801\u6784\u6210\u7684\u6587\u4ef6\uff0c\u4e0e\u5bcc\u6587\u672c\u76f8\u6bd4\uff0c\u7eaf\u6587\u672c\u4e0d\u5305\u542b\u5b57\u7b26\u6837\u5f0f\u7684\u63a7\u5236\u5143\u7d20\uff0c\u80fd\u591f\u88ab\u6700\u7b80\u5355\u7684\u6587\u672c\u7f16\u8f91\u5668\u76f4\u63a5\u8bfb\u53d6\uff09\u3002 file = open ( '\u81f4\u6a61\u6811.txt' , 'r' , encoding = 'utf-8' ) print ( file . read ()) file . close () \u8bf4\u660e \uff1a \u300a\u81f4\u6a61\u6811\u300b \u662f\u8212\u5a77\u8001\u5e08\u57281977\u5e743\u6708\u521b\u5efa\u7684\u7231\u60c5\u8bd7\uff0c\u4e5f\u662f\u6211\u6700\u559c\u6b22\u7684\u73b0\u4ee3\u8bd7\u4e4b\u4e00\u3002 \u9664\u4e86\u4f7f\u7528\u6587\u4ef6\u5bf9\u8c61\u7684 read \u65b9\u6cd5\u8bfb\u53d6\u6587\u4ef6\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 for-in \u5faa\u73af\u9010\u884c\u8bfb\u53d6\u6216\u8005\u7528 readlines \u65b9\u6cd5\u5c06\u6587\u4ef6\u6309\u884c\u8bfb\u53d6\u5230\u4e00\u4e2a\u5217\u8868\u5bb9\u5668\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 file = open ( '\u81f4\u6a61\u6811.txt' , 'r' , encoding = 'utf-8' ) for line in file : print ( line , end = '' ) file . close () file = open ( '\u81f4\u6a61\u6811.txt' , 'r' , encoding = 'utf-8' ) lines = file . readlines () for line in lines : print ( line , end = '' ) file . close () \u5982\u679c\u8981\u5411\u6587\u4ef6\u4e2d\u5199\u5165\u5185\u5bb9\uff0c\u53ef\u4ee5\u5728\u6253\u5f00\u6587\u4ef6\u65f6\u4f7f\u7528 w \u6216\u8005 a \u4f5c\u4e3a\u64cd\u4f5c\u6a21\u5f0f\uff0c\u524d\u8005\u4f1a\u622a\u65ad\u4e4b\u524d\u7684\u6587\u672c\u5185\u5bb9\u5199\u5165\u65b0\u7684\u5185\u5bb9\uff0c\u540e\u8005\u662f\u5728\u539f\u6765\u5185\u5bb9\u7684\u5c3e\u90e8\u8ffd\u52a0\u65b0\u7684\u5185\u5bb9\u3002 file = open ( '\u81f4\u6a61\u6811.txt' , 'a' , encoding = 'utf-8' ) file . write ( ' \\n \u6807\u9898\uff1a\u300a\u81f4\u6a61\u6811\u300b' ) file . write ( ' \\n \u4f5c\u8005\uff1a\u8212\u5a77' ) file . write ( ' \\n \u65f6\u95f4\uff1a1977\u5e743\u6708' ) file . close ()","title":"\u8bfb\u5199\u6587\u672c\u6587\u4ef6"},{"location":"%E7%AC%AC21%E8%AF%BE%EF%BC%9A%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_3","text":"\u8bf7\u6ce8\u610f\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5982\u679c open \u51fd\u6570\u6307\u5b9a\u7684\u6587\u4ef6\u5e76\u4e0d\u5b58\u5728\u6216\u8005\u65e0\u6cd5\u6253\u5f00\uff0c\u90a3\u4e48\u5c06\u5f15\u53d1\u5f02\u5e38\u72b6\u51b5\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002\u4e3a\u4e86\u8ba9\u4ee3\u7801\u5177\u6709\u5065\u58ee\u6027\u548c\u5bb9\u9519\u6027\uff0c\u6211\u4eec\u53ef\u4ee5 \u4f7f\u7528Python\u7684\u5f02\u5e38\u673a\u5236\u5bf9\u53ef\u80fd\u5728\u8fd0\u884c\u65f6\u53d1\u751f\u72b6\u51b5\u7684\u4ee3\u7801\u8fdb\u884c\u9002\u5f53\u7684\u5904\u7406 \u3002Python\u4e2d\u548c\u5f02\u5e38\u76f8\u5173\u7684\u5173\u952e\u5b57\u6709\u4e94\u4e2a\uff0c\u5206\u522b\u662f try \u3001 except \u3001 else \u3001 finally \u548c raise \uff0c\u6211\u4eec\u5148\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u518d\u6765\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u8fd9\u4e9b\u5173\u952e\u5b57\u7684\u7528\u6cd5\u3002 file = None try : file = open ( '\u81f4\u6a61\u6811.txt' , 'r' , encoding = 'utf-8' ) print ( file . read ()) except FileNotFoundError : print ( '\u65e0\u6cd5\u6253\u5f00\u6307\u5b9a\u7684\u6587\u4ef6!' ) except LookupError : print ( '\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801!' ) except UnicodeDecodeError : print ( '\u8bfb\u53d6\u6587\u4ef6\u65f6\u89e3\u7801\u9519\u8bef!' ) finally : if file : file . close () \u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd0\u884c\u65f6\u4f1a\u51fa\u73b0\u72b6\u51b5\u7684\u4ee3\u7801\u653e\u5728 try \u4ee3\u7801\u5757\u4e2d\uff0c\u5728 try \u540e\u9762\u53ef\u4ee5\u8ddf\u4e0a\u4e00\u4e2a\u6216\u591a\u4e2a except \u5757\u6765\u6355\u83b7\u5f02\u5e38\u5e76\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\u3002\u4f8b\u5982\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6587\u4ef6\u627e\u4e0d\u5230\u4f1a\u5f15\u53d1 FileNotFoundError \uff0c\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801\u4f1a\u5f15\u53d1 LookupError \uff0c\u800c\u5982\u679c\u8bfb\u53d6\u6587\u4ef6\u65f6\u65e0\u6cd5\u6309\u6307\u5b9a\u7f16\u7801\u65b9\u5f0f\u89e3\u7801\u6587\u4ef6\u4f1a\u5f15\u53d1 UnicodeDecodeError \uff0c\u6240\u4ee5\u6211\u4eec\u5728 try \u540e\u9762\u8ddf\u4e0a\u4e86\u4e09\u4e2a except \u5206\u522b\u5904\u7406\u8fd9\u4e09\u79cd\u4e0d\u540c\u7684\u5f02\u5e38\u72b6\u51b5\u3002\u5728 except \u540e\u9762\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u52a0\u4e0a else \u4ee3\u7801\u5757\uff0c\u8fd9\u662f try \u4e2d\u7684\u4ee3\u7801\u6ca1\u6709\u51fa\u73b0\u5f02\u5e38\u65f6\u4f1a\u6267\u884c\u7684\u4ee3\u7801\uff0c\u800c\u4e14 else \u4e2d\u7684\u4ee3\u7801\u4e0d\u4f1a\u518d\u8fdb\u884c\u5f02\u5e38\u6355\u83b7\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u9047\u5230\u5f02\u5e38\u72b6\u51b5\uff0c\u7a0b\u5e8f\u4f1a\u56e0\u5f02\u5e38\u800c\u7ec8\u6b62\u5e76\u62a5\u544a\u5f02\u5e38\u4fe1\u606f\u3002\u6700\u540e\u6211\u4eec\u4f7f\u7528 finally \u4ee3\u7801\u5757\u6765\u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u91ca\u653e\u6389\u7a0b\u5e8f\u4e2d\u83b7\u53d6\u7684\u5916\u90e8\u8d44\u6e90\u3002\u7531\u4e8e finally \u5757\u7684\u4ee3\u7801\u4e0d\u8bba\u7a0b\u5e8f\u6b63\u5e38\u8fd8\u662f\u5f02\u5e38\u90fd\u4f1a\u6267\u884c\uff0c\u751a\u81f3\u662f\u8c03\u7528\u4e86 sys \u6a21\u5757\u7684 exit \u51fd\u6570\u7ec8\u6b62Python\u7a0b\u5e8f\uff0c finally \u5757\u4e2d\u7684\u4ee3\u7801\u4ecd\u7136\u4f1a\u88ab\u6267\u884c\uff08\u56e0\u4e3a exit \u51fd\u6570\u7684\u672c\u8d28\u662f\u5f15\u53d1\u4e86 SystemExit \u5f02\u5e38\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u628a finally \u4ee3\u7801\u5757\u79f0\u4e3a\u201c\u603b\u662f\u6267\u884c\u4ee3\u7801\u5757\u201d\uff0c\u5b83\u6700\u9002\u5408\u7528\u6765\u505a\u91ca\u653e\u5916\u90e8\u8d44\u6e90\u7684\u64cd\u4f5c\u3002 Python\u4e2d\u5185\u7f6e\u4e86\u5927\u91cf\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u9664\u4e86\u4e0a\u9762\u4ee3\u7801\u4e2d\u7528\u5230\u7684\u5f02\u5e38\u7c7b\u578b\u4ee5\u53ca\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\u9047\u5230\u8fc7\u7684\u5f02\u5e38\u7c7b\u578b\u5916\uff0c\u8fd8\u6709\u8bb8\u591a\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u5176\u7ee7\u627f\u7ed3\u6784\u5982\u4e0b\u6240\u793a\u3002 BaseException +-- SystemExit +-- KeyboardInterrupt +-- GeneratorExit +-- Exception +-- StopIteration +-- StopAsyncIteration +-- ArithmeticError | +-- FloatingPointError | +-- OverflowError | +-- ZeroDivisionError +-- AssertionError +-- AttributeError +-- BufferError +-- EOFError +-- ImportError | +-- ModuleNotFoundError +-- LookupError | +-- IndexError | +-- KeyError +-- MemoryError +-- NameError | +-- UnboundLocalError +-- OSError | +-- BlockingIOError | +-- ChildProcessError | +-- ConnectionError | | +-- BrokenPipeError | | +-- ConnectionAbortedError | | +-- ConnectionRefusedError | | +-- ConnectionResetError | +-- FileExistsError | +-- FileNotFoundError | +-- InterruptedError | +-- IsADirectoryError | +-- NotADirectoryError | +-- PermissionError | +-- ProcessLookupError | +-- TimeoutError +-- ReferenceError +-- RuntimeError | +-- NotImplementedError | +-- RecursionError +-- SyntaxError | +-- IndentationError | +-- TabError +-- SystemError +-- TypeError +-- ValueError | +-- UnicodeError | +-- UnicodeDecodeError | +-- UnicodeEncodeError | +-- UnicodeTranslateError +-- Warning +-- DeprecationWarning +-- PendingDeprecationWarning +-- RuntimeWarning +-- SyntaxWarning +-- UserWarning +-- FutureWarning +-- ImportWarning +-- UnicodeWarning +-- BytesWarning +-- ResourceWarning \u4ece\u4e0a\u9762\u7684\u7ee7\u627f\u7ed3\u6784\u53ef\u4ee5\u770b\u51fa\uff0cPython\u4e2d\u6240\u6709\u7684\u5f02\u5e38\u90fd\u662f BaseException \u7684\u5b50\u7c7b\u578b\uff0c\u5b83\u6709\u56db\u4e2a\u76f4\u63a5\u7684\u5b50\u7c7b\uff0c\u5206\u522b\u662f\uff1a SystemExit \u3001 KeyboardInterrupt \u3001 GeneratorExit \u548c Exception \u3002\u5176\u4e2d\uff0c SystemExit \u8868\u793a\u89e3\u91ca\u5668\u8bf7\u6c42\u9000\u51fa\uff0c KeyboardInterrupt \u662f\u7528\u6237\u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c\uff08\u6309\u4e0b Ctrl+c \uff09\uff0c GeneratorExit \u8868\u793a\u751f\u6210\u5668\u53d1\u751f\u5f02\u5e38\u901a\u77e5\u9000\u51fa\uff0c\u4e0d\u7406\u89e3\u8fd9\u4e9b\u5f02\u5e38\u6ca1\u6709\u5173\u7cfb\uff0c\u7ee7\u7eed\u5b66\u4e60\u5c31\u597d\u4e86\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f Exception \u7c7b\uff0c\u5b83\u662f\u5e38\u89c4\u5f02\u5e38\u7c7b\u578b\u7684\u7236\u7c7b\u578b\uff0c\u5f88\u591a\u7684\u5f02\u5e38\u90fd\u662f\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u7ee7\u627f\u81ea Exception \u7c7b\u3002\u5982\u679cPython\u5185\u7f6e\u7684\u5f02\u5e38\u7c7b\u578b\u4e0d\u80fd\u6ee1\u8db3\u5e94\u7528\u7a0b\u5e8f\u7684\u9700\u8981\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b\u578b\uff0c\u800c\u81ea\u5b9a\u4e49\u7684\u5f02\u5e38\u7c7b\u578b\u4e5f\u5e94\u8be5\u76f4\u63a5\u6216\u95f4\u63a5\u7ee7\u627f\u81ea Exception \u7c7b\uff0c\u5f53\u7136\u8fd8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u91cd\u5199\u6216\u6dfb\u52a0\u65b9\u6cd5\u3002 \u5728Python\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 raise \u5173\u952e\u5b57\u6765\u5f15\u53d1\u5f02\u5e38\uff08\u629b\u51fa\u5f02\u5e38\u5bf9\u8c61\uff09\uff0c\u800c\u8c03\u7528\u8005\u53ef\u4ee5\u901a\u8fc7 try...except... \u7ed3\u6784\u6765\u6355\u83b7\u5e76\u5904\u7406\u5f02\u5e38\u3002\u4f8b\u5982\u5728\u51fd\u6570\u4e2d\uff0c\u5f53\u51fd\u6570\u7684\u6267\u884c\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u629b\u51fa\u5f02\u5e38\u7684\u65b9\u5f0f\u6765\u544a\u77e5\u8c03\u7528\u8005\u95ee\u9898\u7684\u6240\u5728\uff0c\u800c\u8c03\u7528\u8005\u53ef\u4ee5\u901a\u8fc7\u6355\u83b7\u5904\u7406\u5f02\u5e38\u6765\u4f7f\u5f97\u4ee3\u7801\u4ece\u5f02\u5e38\u4e2d\u6062\u590d\uff0c\u5b9a\u4e49\u5f02\u5e38\u548c\u629b\u51fa\u5f02\u5e38\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 class InputError ( ValueError ): \"\"\"\u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b\u578b\"\"\" pass def fac ( num ): \"\"\"\u6c42\u9636\u4e58\"\"\" if num < 0 : raise InputError ( '\u53ea\u80fd\u8ba1\u7b97\u975e\u8d1f\u6574\u6570\u7684\u9636\u4e58' ) if num in ( 0 , 1 ): return 1 return num * fac ( num - 1 ) \u8c03\u7528\u6c42\u9636\u4e58\u7684\u51fd\u6570 fac \uff0c\u901a\u8fc7 try...except... \u7ed3\u6784\u6355\u83b7\u8f93\u5165\u9519\u8bef\u7684\u5f02\u5e38\u5e76\u6253\u5370\u5f02\u5e38\u5bf9\u8c61\uff08\u663e\u793a\u5f02\u5e38\u4fe1\u606f\uff09\uff0c\u5982\u679c\u8f93\u5165\u6b63\u786e\u5c31\u8ba1\u7b97\u9636\u4e58\u5e76\u7ed3\u675f\u7a0b\u5e8f\u3002 flag = True while flag : num = int ( input ( 'n = ' )) try : print ( f ' { num } ! = { fac ( num ) } ' ) flag = False except InputError as err : print ( err )","title":"\u5f02\u5e38\u5904\u7406\u673a\u5236"},{"location":"%E7%AC%AC21%E8%AF%BE%EF%BC%9A%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_4","text":"\u5bf9\u4e8e open \u51fd\u6570\u8fd4\u56de\u7684\u6587\u4ef6\u5bf9\u8c61\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 with \u4e0a\u4e0b\u6587\u8bed\u6cd5\u5728\u6587\u4ef6\u64cd\u4f5c\u5b8c\u6210\u540e\u81ea\u52a8\u6267\u884c\u6587\u4ef6\u5bf9\u8c61\u7684 close \u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4ee3\u7801\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u4f18\u96c5\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u518d\u5199 finally \u4ee3\u7801\u5757\u6765\u6267\u884c\u5173\u95ed\u6587\u4ef6\u91ca\u653e\u8d44\u6e90\u7684\u64cd\u4f5c\u3002\u9700\u8981\u63d0\u9192\u5927\u5bb6\u7684\u662f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u53ef\u4ee5\u653e\u5728 with \u4e0a\u4e0b\u6587\u8bed\u6cd5\u4e2d\uff0c\u53ea\u6709\u7b26\u5408 \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u534f\u8bae \uff08\u6709 __enter__ \u548c __exit__ \u9b54\u672f\u65b9\u6cd5\uff09\u7684\u5bf9\u8c61\u624d\u80fd\u4f7f\u7528\u8fd9\u79cd\u8bed\u6cd5\uff0cPython\u6807\u51c6\u5e93\u4e2d\u7684 contextlib \u6a21\u5757\u4e5f\u63d0\u4f9b\u4e86\u5bf9 with \u4e0a\u4e0b\u6587\u8bed\u6cd5\u7684\u652f\u6301\uff0c\u540e\u9762\u518d\u4e3a\u5927\u5bb6\u8fdb\u884c\u8bb2\u89e3\u3002 \u7528 with \u4e0a\u4e0b\u6587\u8bed\u6cd5\u6539\u5199\u540e\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 try : with open ( '\u81f4\u6a61\u6811.txt' , 'r' , encoding = 'utf-8' ) as file : print ( file . read ()) except FileNotFoundError : print ( '\u65e0\u6cd5\u6253\u5f00\u6307\u5b9a\u7684\u6587\u4ef6!' ) except LookupError : print ( '\u6307\u5b9a\u4e86\u672a\u77e5\u7684\u7f16\u7801!' ) except UnicodeDecodeError : print ( '\u8bfb\u53d6\u6587\u4ef6\u65f6\u89e3\u7801\u9519\u8bef!' )","title":"\u4e0a\u4e0b\u6587\u8bed\u6cd5"},{"location":"%E7%AC%AC21%E8%AF%BE%EF%BC%9A%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_5","text":"\u8bfb\u5199\u4e8c\u8fdb\u5236\u6587\u4ef6\u8ddf\u8bfb\u5199\u6587\u672c\u6587\u4ef6\u7684\u64cd\u4f5c\u7c7b\u4f3c\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\uff0c\u5728\u4f7f\u7528 open \u51fd\u6570\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5982\u679c\u8981\u8fdb\u884c\u8bfb\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6a21\u5f0f\u662f 'rb' \uff0c\u5982\u679c\u8981\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u64cd\u4f5c\u6a21\u5f0f\u662f 'wb' \u3002\u8fd8\u6709\u4e00\u70b9\uff0c\u8bfb\u5199\u6587\u672c\u6587\u4ef6\u65f6\uff0c read \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4ee5\u53ca write \u65b9\u6cd5\u7684\u53c2\u6570\u662f str \u5bf9\u8c61\uff08\u5b57\u7b26\u4e32\uff09\uff0c\u800c\u8bfb\u5199\u4e8c\u8fdb\u5236\u6587\u4ef6\u65f6\uff0c read \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4ee5\u53ca write \u65b9\u6cd5\u7684\u53c2\u6570\u662f bytes-like \u5bf9\u8c61\uff08\u5b57\u8282\u4e32\uff09\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u5c06\u5f53\u524d\u8def\u5f84\u4e0b\u540d\u4e3a guido.jpg \u7684\u56fe\u7247\u6587\u4ef6\u590d\u5236\u5230 \u5409\u591a.jpg \u6587\u4ef6\u4e2d\u7684\u64cd\u4f5c\u3002 try : with open ( 'guido.jpg' , 'rb' ) as file1 : data = file1 . read () with open ( '\u5409\u591a.jpg' , 'wb' ) as file2 : file2 . write ( data ) except FileNotFoundError : print ( '\u6307\u5b9a\u7684\u6587\u4ef6\u65e0\u6cd5\u6253\u5f00.' ) except IOError : print ( '\u8bfb\u5199\u6587\u4ef6\u65f6\u51fa\u73b0\u9519\u8bef.' ) print ( '\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f.' ) \u5982\u679c\u8981\u590d\u5236\u7684\u56fe\u7247\u6587\u4ef6\u5f88\u5927\uff0c\u4e00\u6b21\u5c06\u6587\u4ef6\u5185\u5bb9\u76f4\u63a5\u8bfb\u5165\u5185\u5b58\u4e2d\u53ef\u80fd\u4f1a\u9020\u6210\u975e\u5e38\u5927\u7684\u5185\u5b58\u5f00\u9500\uff0c\u4e3a\u4e86\u51cf\u5c11\u5bf9\u5185\u5b58\u7684\u5360\u7528\uff0c\u53ef\u4ee5\u4e3a read \u65b9\u6cd5\u4f20\u5165 size \u53c2\u6570\u6765\u6307\u5b9a\u6bcf\u6b21\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff0c\u901a\u8fc7\u5faa\u73af\u8bfb\u53d6\u548c\u5199\u5165\u7684\u65b9\u5f0f\u6765\u5b8c\u6210\u4e0a\u9762\u7684\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 try : with open ( 'guido.jpg' , 'rb' ) as file1 , open ( '\u5409\u591a.jpg' , 'wb' ) as file2 : data = file1 . read ( 512 ) while data : file2 . write ( data ) data = file1 . read () except FileNotFoundError : print ( '\u6307\u5b9a\u7684\u6587\u4ef6\u65e0\u6cd5\u6253\u5f00.' ) except IOError : print ( '\u8bfb\u5199\u6587\u4ef6\u65f6\u51fa\u73b0\u9519\u8bef.' ) print ( '\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f.' )","title":"\u8bfb\u5199\u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"%E7%AC%AC21%E8%AF%BE%EF%BC%9A%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_6","text":"\u901a\u8fc7\u8bfb\u5199\u6587\u4ef6\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u3002\u5728Python\u4e2d\u53ef\u4ee5\u901a\u8fc7 open \u51fd\u6570\u6765\u83b7\u5f97\u6587\u4ef6\u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7\u6587\u4ef6\u5bf9\u8c61\u7684 read \u548c write \u65b9\u6cd5\u5b9e\u73b0\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c\u3002\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u53ef\u80fd\u906d\u9047\u65e0\u6cd5\u9884\u6599\u7684\u5f02\u5e38\u72b6\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528Python\u7684\u5f02\u5e38\u673a\u5236\u6765\u5904\u7406\u8fd9\u4e9b\u72b6\u51b5\u3002Python\u7684\u5f02\u5e38\u673a\u5236\u4e3b\u8981\u5305\u62ec try \u3001 except \u3001 else \u3001 finally \u548c raise \u8fd9\u4e94\u4e2a\u6838\u5fc3\u5173\u952e\u5b57\u3002 try \u540e\u9762\u7684 except \u8bed\u53e5\u4e0d\u662f\u5fc5\u987b\u7684\uff0c finally \u8bed\u53e5\u4e5f\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f\u4e8c\u8005\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\uff1b except \u8bed\u53e5\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\uff0c\u591a\u4e2a except \u4f1a\u6309\u7167\u4e66\u5199\u7684\u987a\u5e8f\u4f9d\u6b21\u5339\u914d\u6307\u5b9a\u7684\u5f02\u5e38\uff0c\u5982\u679c\u5f02\u5e38\u5df2\u7ecf\u5904\u7406\u5c31\u4e0d\u4f1a\u518d\u8fdb\u5165\u540e\u7eed\u7684 except \u8bed\u53e5\uff1b except \u8bed\u53e5\u4e2d\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5143\u7ec4\u540c\u65f6\u6307\u5b9a\u591a\u4e2a\u5f02\u5e38\u7c7b\u578b\u8fdb\u884c\u6355\u83b7\uff1b except \u8bed\u53e5\u540e\u9762\u5982\u679c\u4e0d\u6307\u5b9a\u5f02\u5e38\u7c7b\u578b\uff0c\u5219\u9ed8\u8ba4\u6355\u83b7\u6240\u6709\u5f02\u5e38\uff1b\u6355\u83b7\u5f02\u5e38\u540e\u53ef\u4ee5\u4f7f\u7528 raise \u8981\u518d\u6b21\u629b\u51fa\uff0c\u4f46\u662f\u4e0d\u5efa\u8bae\u6355\u83b7\u5e76\u629b\u51fa\u540c\u4e00\u4e2a\u5f02\u5e38\uff1b\u4e0d\u5efa\u8bae\u5728\u4e0d\u6e05\u695a\u903b\u8f91\u7684\u60c5\u51b5\u4e0b\u6355\u83b7\u6240\u6709\u5f02\u5e38\uff0c\u8fd9\u53ef\u80fd\u4f1a\u63a9\u76d6\u7a0b\u5e8f\u4e2d\u4e25\u91cd\u7684\u95ee\u9898\u3002\u6700\u540e\u5f3a\u8c03\u4e00\u70b9\uff0c \u4e0d\u8981\u4f7f\u7528\u5f02\u5e38\u673a\u5236\u6765\u5904\u7406\u6b63\u5e38\u4e1a\u52a1\u903b\u8f91\u6216\u63a7\u5236\u7a0b\u5e8f\u6d41\u7a0b \uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e0d\u8981\u6ee5\u7528\u5f02\u5e38\u673a\u5236\uff0c\u8fd9\u662f\u521d\u5b66\u8005\u5e38\u72af\u7684\u9519\u8bef\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC22%E8%AF%BE%EF%BC%9A%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/","text":"\u7b2c22\u8bfe\uff1a\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316 JSON\u6982\u8ff0 \u901a\u8fc7\u4e0a\u9762\u7684\u8bb2\u89e3\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u5c06\u6587\u672c\u6570\u636e\u548c\u4e8c\u8fdb\u5236\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u90a3\u4e48\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5e0c\u671b\u628a\u4e00\u4e2a\u5217\u8868\u6216\u8005\u4e00\u4e2a\u5b57\u5178\u4e2d\u7684\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u53c8\u8be5\u600e\u4e48\u505a\u5462\uff1f\u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u4ee5JSON\u683c\u5f0f\u8fdb\u884c\u4fdd\u5b58\u3002JSON\u662f\u201cJavaScript Object Notation\u201d\u7684\u7f29\u5199\uff0c\u5b83\u672c\u6765\u662fJavaScript\u8bed\u8a00\u4e2d\u521b\u5efa\u5bf9\u8c61\u7684\u4e00\u79cd\u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u73b0\u5728\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u8de8\u8bed\u8a00\u8de8\u5e73\u53f0\u7684\u6570\u636e\u4ea4\u6362\u3002\u4f7f\u7528JSON\u7684\u539f\u56e0\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u7ed3\u6784\u7d27\u51d1\u800c\u4e14\u662f\u7eaf\u6587\u672c\uff0c\u4efb\u4f55\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u7a0b\u8bed\u8a00\u90fd\u80fd\u5904\u7406\u7eaf\u6587\u672c\uff0c\u8fd9\u5c31\u662f \u5b9e\u73b0\u8de8\u8bed\u8a00\u8de8\u5e73\u53f0\u6570\u636e\u4ea4\u6362 \u7684\u524d\u63d0\u6761\u4ef6\u3002\u76ee\u524dJSON\u57fa\u672c\u4e0a\u5df2\u7ecf\u53d6\u4ee3\u4e86XML\uff08\u53ef\u6269\u5c55\u6807\u8bb0\u8bed\u8a00\uff09\u4f5c\u4e3a \u5f02\u6784\u7cfb\u7edf\u95f4\u4ea4\u6362\u6570\u636e\u7684\u4e8b\u5b9e\u6807\u51c6 \u3002\u53ef\u4ee5\u5728 JSON\u7684\u5b98\u65b9\u7f51\u7ad9 \u627e\u5230\u66f4\u591a\u5173\u4e8eJSON\u7684\u77e5\u8bc6\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u8fd8\u63d0\u4f9b\u4e86\u6bcf\u79cd\u8bed\u8a00\u5904\u7406JSON\u6570\u636e\u683c\u5f0f\u53ef\u4ee5\u4f7f\u7528\u7684\u5de5\u5177\u6216\u4e09\u65b9\u5e93\u3002 { name : \"\u9a86\u660a\" , age : 40 , friends : [ \"\u738b\u5927\u9524\" , \"\u767d\u5143\u82b3\" ], cars : [ { \"brand\" : \"BMW\" , \"max_speed\" : 240 }, { \"brand\" : \"Benz\" , \"max_speed\" : 280 }, { \"brand\" : \"Audi\" , \"max_speed\" : 280 } ] } \u4e0a\u9762\u662fJSON\u7684\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\uff0c\u5927\u5bb6\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u5b83\u8ddfPython\u4e2d\u7684\u5b57\u5178\u975e\u5e38\u7c7b\u4f3c\u800c\u4e14\u652f\u6301\u5d4c\u5957\u7ed3\u6784\uff0c\u5c31\u597d\u6bd4Python\u5b57\u5178\u4e2d\u7684\u503c\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u5b57\u5178\u3002\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u628a\u4e0b\u9762\u7684\u4ee3\u7801\u8f93\u5165\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\uff08\u5bf9\u4e8eChrome\u6d4f\u89c8\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7\u201c\u66f4\u591a\u5de5\u5177\u201d\u83dc\u5355\u627e\u5230\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\u5b50\u83dc\u5355\uff0c\u5c31\u53ef\u4ee5\u6253\u5f00\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\uff09\uff0c\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8fd0\u884cJavaScript\u4ee3\u7801\u7684\u4ea4\u4e92\u5f0f\u73af\u5883\uff08\u7c7b\u4f3c\u4e8ePython\u7684\u4ea4\u4e92\u5f0f\u73af\u5883\uff09\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u5e2e\u6211\u4eec\u521b\u5efa\u51fa\u4e00\u4e2aJavaScript\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u5c06\u5176\u8d4b\u503c\u7ed9\u540d\u4e3a obj \u7684\u53d8\u91cf\u3002 let obj = { name : \"\u9a86\u660a\" , age : 40 , friends : [ \"\u738b\u5927\u9524\" , \"\u767d\u5143\u82b3\" ], cars : [ { \"brand\" : \"BMW\" , \"max_speed\" : 240 }, { \"brand\" : \"Benz\" , \"max_speed\" : 280 }, { \"brand\" : \"Audi\" , \"max_speed\" : 280 } ] } \u4e0a\u9762\u7684 obj \u5c31\u662fJavaScript\u4e2d\u7684\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 obj.name \u6216 obj[\"name\"] \u4e24\u79cd\u65b9\u5f0f\u83b7\u53d6\u5230 name \u5bf9\u5e94\u7684\u503c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c obj[\"name\"] \u8fd9\u79cd\u83b7\u53d6\u6570\u636e\u7684\u65b9\u5f0f\u8ddfPython\u5b57\u5178\u901a\u8fc7\u952e\u83b7\u53d6\u503c\u7684\u7d22\u5f15\u64cd\u4f5c\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u800cPython\u4e2d\u4e5f\u901a\u8fc7\u540d\u4e3a json \u7684\u6a21\u5757\u63d0\u4f9b\u4e86\u5b57\u5178\u4e0eJSON\u53cc\u5411\u8f6c\u6362\u7684\u652f\u6301\u3002 \u6211\u4eec\u5728JSON\u4e2d\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\uff08JavaScript\u6570\u636e\u7c7b\u578b\uff09\u548cPython\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u4e5f\u662f\u5f88\u5bb9\u6613\u627e\u5230\u5bf9\u5e94\u5173\u7cfb\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u770b\u4e0b\u9762\u7684\u4e24\u5f20\u8868\u3002 \u88681\uff1aJavaScript\u6570\u636e\u7c7b\u578b\uff08\u503c\uff09\u5bf9\u5e94\u7684Python\u6570\u636e\u7c7b\u578b\uff08\u503c\uff09 JSON Python object dict array list string str number int / float number (real) float boolean ( true / false ) bool ( True / False ) null None \u88682\uff1aPython\u6570\u636e\u7c7b\u578b\uff08\u503c\uff09\u5bf9\u5e94\u7684JavaScript\u6570\u636e\u7c7b\u578b\uff08\u503c\uff09 Python JSON dict object list / tuple array str string int / float number bool \uff08 True / False \uff09 boolean ( true / false ) None null \u8bfb\u5199JSON\u683c\u5f0f\u7684\u6570\u636e \u5728Python\u4e2d\uff0c\u5982\u679c\u8981\u5c06\u5b57\u5178\u5904\u7406\u6210JSON\u683c\u5f0f\uff08\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u5b58\u5728\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528 json \u6a21\u5757\u7684 dumps \u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import json my_dict = { 'name' : '\u9a86\u660a' , 'age' : 40 , 'friends' : [ '\u738b\u5927\u9524' , '\u767d\u5143\u82b3' ], 'cars' : [ { 'brand' : 'BMW' , 'max_speed' : 240 }, { 'brand' : 'Audi' , 'max_speed' : 280 }, { 'brand' : 'Benz' , 'max_speed' : 280 } ] } print ( json . dumps ( my_dict )) \u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u8f93\u51fa\u5982\u4e0b\u6240\u793a\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230\u4e2d\u6587\u5b57\u7b26\u90fd\u662f\u7528Unicode\u7f16\u7801\u663e\u793a\u7684\u3002 { \"name\" : \"\\u9a86\\u660a\" , \"age\" : 40 , \"friends\" : [ \"\\u738b\\u5927\\u9524\" , \"\\u767d\\u5143\\u82b3\" ], \"cars\" : [{ \"brand\" : \"BMW\" , \"max_speed\" : 240 }, { \"brand\" : \"Audi\" , \"max_speed\" : 280 }, { \"brand\" : \"Benz\" , \"max_speed\" : 280 }]} \u5982\u679c\u8981\u5c06\u5b57\u5178\u5904\u7406\u6210JSON\u683c\u5f0f\u5e76\u5199\u5165\u6587\u672c\u6587\u4ef6\uff0c\u53ea\u9700\u8981\u5c06 dumps \u51fd\u6570\u6362\u6210 dump \u51fd\u6570\u5e76\u4f20\u5165\u6587\u4ef6\u5bf9\u8c61\u5373\u53ef\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import json my_dict = { 'name' : '\u9a86\u660a' , 'age' : 40 , 'friends' : [ '\u738b\u5927\u9524' , '\u767d\u5143\u82b3' ], 'cars' : [ { 'brand' : 'BMW' , 'max_speed' : 240 }, { 'brand' : 'Audi' , 'max_speed' : 280 }, { 'brand' : 'Benz' , 'max_speed' : 280 } ] } with open ( 'data.json' , 'w' ) as file : json . dump ( my_dict , file ) \u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u4f1a\u521b\u5efa data.json \u6587\u4ef6\uff0c\u6587\u4ef6\u7684\u5185\u5bb9\u8ddf\u4e0a\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u662f\u4e00\u6837\u7684\u3002 json \u6a21\u5757\u6709\u56db\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u51fd\u6570\uff0c\u5206\u522b\u662f\uff1a dump - \u5c06Python\u5bf9\u8c61\u6309\u7167JSON\u683c\u5f0f\u5e8f\u5217\u5316\u5230\u6587\u4ef6\u4e2d dumps - \u5c06Python\u5bf9\u8c61\u5904\u7406\u6210JSON\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 load - \u5c06\u6587\u4ef6\u4e2d\u7684JSON\u6570\u636e\u53cd\u5e8f\u5217\u5316\u6210\u5bf9\u8c61 loads - \u5c06\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u53cd\u5e8f\u5217\u5316\u6210Python\u5bf9\u8c61 \u8fd9\u91cc\u51fa\u73b0\u4e86\u4e24\u4e2a\u6982\u5ff5\uff0c\u4e00\u4e2a\u53eb\u5e8f\u5217\u5316\uff0c\u4e00\u4e2a\u53eb\u53cd\u5e8f\u5217\u5316\uff0c \u7ef4\u57fa\u767e\u79d1 \u4e0a\u7684\u89e3\u91ca\u662f\uff1a\u201c\u5e8f\u5217\u5316\uff08serialization\uff09\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6570\u636e\u5904\u7406\u4e2d\uff0c\u662f\u6307\u5c06\u6570\u636e\u7ed3\u6784\u6216\u5bf9\u8c61\u72b6\u6001\u8f6c\u6362\u4e3a\u53ef\u4ee5\u5b58\u50a8\u6216\u4f20\u8f93\u7684\u5f62\u5f0f\uff0c\u8fd9\u6837\u5728\u9700\u8981\u7684\u65f6\u5019\u80fd\u591f\u6062\u590d\u5230\u539f\u5148\u7684\u72b6\u6001\uff0c\u800c\u4e14\u901a\u8fc7\u5e8f\u5217\u5316\u7684\u6570\u636e\u91cd\u65b0\u83b7\u53d6\u5b57\u8282\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u5b57\u8282\u6765\u4ea7\u751f\u539f\u59cb\u5bf9\u8c61\u7684\u526f\u672c\uff08\u62f7\u8d1d\uff09\u3002\u4e0e\u8fd9\u4e2a\u8fc7\u7a0b\u76f8\u53cd\u7684\u52a8\u4f5c\uff0c\u5373\u4ece\u4e00\u7cfb\u5217\u5b57\u8282\u4e2d\u63d0\u53d6\u6570\u636e\u7ed3\u6784\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u53cd\u5e8f\u5217\u5316\uff08deserialization\uff09\u201d\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u8bfb\u53d6\u4e0a\u9762\u521b\u5efa\u7684 data.json \u6587\u4ef6\uff0c\u5c06JSON\u683c\u5f0f\u7684\u6570\u636e\u8fd8\u539f\u6210Python\u4e2d\u7684\u5b57\u5178\u3002 import json with open ( 'data.json' , 'r' ) as file : my_dict = json . load ( file ) print ( type ( my_dict )) print ( my_dict ) \u5305\u7ba1\u7406\u5de5\u5177pip\u7684\u4f7f\u7528 Python\u6807\u51c6\u5e93\u4e2d\u7684 json \u6a21\u5757\u5728\u6570\u636e\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65f6\u6027\u80fd\u5e76\u4e0d\u662f\u975e\u5e38\u7406\u60f3\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e09\u65b9\u5e93 ujson \u6765\u66ff\u6362 json \u3002\u6240\u8c13\u4e09\u65b9\u5e93\uff0c\u662f\u6307\u975e\u516c\u53f8\u5185\u90e8\u5f00\u53d1\u548c\u4f7f\u7528\u7684\uff0c\u4e5f\u4e0d\u662f\u6765\u81ea\u4e8e\u5b98\u65b9\u6807\u51c6\u5e93\u7684Python\u6a21\u5757\uff0c\u8fd9\u4e9b\u6a21\u5757\u901a\u5e38\u7531\u5176\u4ed6\u516c\u53f8\u3001\u7ec4\u7ec7\u6216\u4e2a\u4eba\u5f00\u53d1\uff0c\u6240\u4ee5\u88ab\u79f0\u4e3a\u4e09\u65b9\u5e93\u3002\u867d\u7136Python\u8bed\u8a00\u7684\u6807\u51c6\u5e93\u867d\u7136\u5df2\u7ecf\u63d0\u4f9b\u4e86\u8bf8\u591a\u6a21\u5757\u6765\u65b9\u4fbf\u6211\u4eec\u7684\u5f00\u53d1\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a\u5f3a\u5927\u7684\u8bed\u8a00\u6765\u8bf4\uff0c\u5b83\u7684\u751f\u6001\u5708\u4e00\u5b9a\u4e5f\u662f\u975e\u5e38\u7e41\u8363\u7684\u3002 \u4e4b\u524d\u5b89\u88c5Python\u89e3\u91ca\u5668\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5df2\u7ecf\u52fe\u9009\u4e86\u5b89\u88c5pip\uff0c\u5927\u5bb6\u53ef\u4ee5\u5728\u547d\u4ee4\u63d0\u793a\u7b26\u6216\u7ec8\u7aef\u4e2d\u901a\u8fc7 pip --version \u6765\u786e\u5b9a\u662f\u5426\u5df2\u7ecf\u62e5\u6709\u4e86pip\u3002pip\u662fPython\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u901a\u8fc7pip\u53ef\u4ee5\u67e5\u627e\u3001\u5b89\u88c5\u3001\u5378\u8f7d\u3001\u66f4\u65b0Python\u7684\u4e09\u65b9\u5e93\u6216\u5de5\u5177\uff0cmacOS\u548cLinux\u7cfb\u7edf\u5e94\u8be5\u4f7f\u7528pip3\u3002\u4f8b\u5982\u8981\u5b89\u88c5\u66ff\u4ee3 json \u6a21\u5757\u7684 ujson \uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u3002 pip install ujson \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cpip\u4f1a\u8bbf\u95ee https://pypi.org/simple/ \u6765\u83b7\u5f97\u4e09\u65b9\u5e93\u76f8\u5173\u7684\u6570\u636e\uff0c\u4f46\u662f\u56fd\u5185\u8bbf\u95ee\u8fd9\u4e2a\u7f51\u7ad9\u7684\u901f\u5ea6\u5e76\u4e0d\u662f\u5341\u5206\u7406\u60f3\uff0c\u56e0\u6b64\u56fd\u5185\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u8c46\u74e3\u7f51\u63d0\u4f9b\u7684\u955c\u50cf\u6765\u66ff\u4ee3\u8fd9\u4e2a\u9ed8\u8ba4\u7684\u4e0b\u8f7d\u6e90\uff0c\u64cd\u4f5c\u5982\u4e0b\u6240\u793a\u3002 pip install ujson \u53ef\u4ee5\u901a\u8fc7 pip search \u547d\u4ee4\u6839\u636e\u540d\u5b57\u67e5\u627e\u9700\u8981\u7684\u4e09\u65b9\u5e93\uff0c\u53ef\u4ee5\u901a\u8fc7 pip list \u547d\u4ee4\u6765\u67e5\u770b\u5df2\u7ecf\u5b89\u88c5\u8fc7\u7684\u4e09\u65b9\u5e93\u3002\u5982\u679c\u60f3\u66f4\u65b0\u67d0\u4e2a\u4e09\u65b9\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528 pip install -U \u6216 pip install --upgrade \uff1b\u5982\u679c\u8981\u5220\u9664\u67d0\u4e2a\u4e09\u65b9\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528 pip uninstall \u547d\u4ee4\u3002 \u641c\u7d22 ujson \u4e09\u65b9\u5e93\u3002 pip search ujson micropython-cpython-ujson ( 0 .2 ) - MicroPython module ujson ported to CPython pycopy-cpython-ujson ( 0 .2 ) - Pycopy module ujson ported to CPython ujson ( 3 .0.0 ) - Ultra fast JSON encoder and decoder for Python ujson-bedframe ( 1 .33.0 ) - Ultra fast JSON encoder and decoder for Python ujson-segfault ( 2 .1.57 ) - Ultra fast JSON encoder and decoder for Python. Continuing development. ujson-ia ( 2 .1.1 ) - Ultra fast JSON encoder and decoder for Python ( Internet Archive fork ) ujson-x ( 1 .37 ) - Ultra fast JSON encoder and decoder for Python ujson-x-legacy ( 1 .35.1 ) - Ultra fast JSON encoder and decoder for Python drf_ujson ( 1 .2 ) - Django Rest Framework UJSON Renderer drf-ujson2 ( 1 .6.1 ) - Django Rest Framework UJSON Renderer ujsonDB ( 0 .1.0 ) - A lightweight and simple database using ujson. fast-json ( 0 .3.2 ) - Combines best parts of json and ujson for fast serialization decimal-monkeypatch ( 0 .4.3 ) - Python 2 performance patches: decimal to cdecimal, json to ujson for psycopg2 \u67e5\u770b\u5df2\u7ecf\u5b89\u88c5\u7684\u4e09\u65b9\u5e93\u3002 pip list Package Version ----------------------------- ---------- aiohttp 3 .5.4 alipay 0 .7.4 altgraph 0 .16.1 amqp 2 .4.2 ... ... \u66f4\u65b0 ujson \u4e09\u65b9\u5e93\u3002 pip install -U ujson \u5220\u9664 ujson \u4e09\u65b9\u5e93\u3002 pip uninstall -y ujson \u63d0\u793a \uff1a\u5982\u679c\u8981\u66f4\u65b0 pip \u81ea\u8eab\uff0c\u5bf9\u4e8emacOS\u7cfb\u7edf\u6765\u8bf4\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 pip install -U pip \u3002\u5728Windows\u7cfb\u7edf\u4e0a\uff0c\u53ef\u4ee5\u5c06\u547d\u4ee4\u66ff\u6362\u4e3a python -m pip install -U --user pip \u3002 \u4f7f\u7528\u7f51\u7edcAPI\u83b7\u53d6\u6570\u636e \u5982\u679c\u60f3\u5728\u6211\u4eec\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e2d\u663e\u793a\u5929\u6c14\u3001\u8def\u51b5\u3001\u822a\u73ed\u7b49\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u6211\u4eec\u81ea\u5df1\u6ca1\u6709\u80fd\u529b\u63d0\u4f9b\uff0c\u6240\u4ee5\u5fc5\u987b\u4f7f\u7528\u7f51\u7edc\u6570\u636e\u670d\u52a1\u3002\u76ee\u524d\u7edd\u5927\u591a\u6570\u7684\u7f51\u7edc\u6570\u636e\u670d\u52a1\uff08\u6216\u79f0\u4e4b\u4e3a\u7f51\u7edcAPI\uff09\u90fd\u662f\u57fa\u4e8e HTTP \u6216HTTPS\u63d0\u4f9bJSON\u683c\u5f0f\u7684\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Python\u7a0b\u5e8f\u53d1\u9001HTTP\u8bf7\u6c42\u7ed9\u6307\u5b9a\u7684URL\uff08\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26\uff09\uff0c\u8fd9\u4e2aURL\u5c31\u662f\u6240\u8c13\u7684\u7f51\u7edcAPI\uff0c\u5982\u679c\u8bf7\u6c42\u6210\u529f\uff0c\u5b83\u4f1a\u8fd4\u56deHTTP\u54cd\u5e94\uff0c\u800cHTTP\u54cd\u5e94\u7684\u6d88\u606f\u4f53\u4e2d\u5c31\u6709\u6211\u4eec\u9700\u8981\u7684JSON\u683c\u5f0f\u7684\u6570\u636e\u3002\u5173\u4e8eHTTP\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u53ef\u4ee5\u770b\u770b\u962e\u4e00\u5cf0\u7684 \u300aHTTP\u534f\u8bae\u5165\u95e8\u300b \u4e00\u6587\u3002 \u56fd\u5185\u6709\u5f88\u591a\u63d0\u4f9b\u7f51\u7edcAPI\u63a5\u53e3\u7684\u7f51\u7ad9\uff0c\u4f8b\u5982 \u805a\u5408\u6570\u636e \u3001 \u963f\u51e1\u8fbe\u6570\u636e \u7b49\uff0c\u8fd9\u4e9b\u7f51\u7ad9\u4e0a\u6709\u514d\u8d39\u7684\u548c\u4ed8\u8d39\u7684\u6570\u636e\u63a5\u53e3\uff0c\u56fd\u5916\u7684 {API}Search \u7f51\u7ad9\u4e5f\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 requests \u5e93\uff08\u57fa\u4e8eHTTP\u8fdb\u884c\u7f51\u7edc\u8d44\u6e90\u8bbf\u95ee\u7684\u4e09\u65b9\u5e93\uff09\u8bbf\u95ee\u7f51\u7edcAPI\u83b7\u53d6\u56fd\u5185\u65b0\u95fb\u5e76\u663e\u793a\u65b0\u95fb\u6807\u9898\u548c\u94fe\u63a5\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u540d\u4e3a \u5929\u884c\u6570\u636e \u7684\u7f51\u7ad9\u63d0\u4f9b\u7684\u56fd\u5185\u65b0\u95fb\u6570\u636e\u63a5\u53e3\uff0c\u5176\u4e2d\u7684APIKey\u9700\u8981\u81ea\u5df1\u5230\u7f51\u7ad9\u4e0a\u6ce8\u518c\u7533\u8bf7\u3002\u5728\u5929\u884c\u6570\u636e\u7f51\u7ad9\u6ce8\u518c\u8d26\u53f7\u540e\u4f1a\u81ea\u52a8\u5206\u914dAPIKey\uff0c\u4f46\u662f\u8981\u8bbf\u95ee\u63a5\u53e3\u83b7\u53d6\u6570\u636e\uff0c\u9700\u8981\u7ed1\u5b9a\u9a8c\u8bc1\u90ae\u7bb1\u6216\u624b\u673a\uff0c\u7136\u540e\u8fd8\u8981\u7533\u8bf7\u9700\u8981\u4f7f\u7528\u7684\u63a5\u53e3\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 Python\u901a\u8fc7URL\u63a5\u5165\u7f51\u7edc\uff0c\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 requests \u4e09\u65b9\u5e93\uff0c\u5b83\u7b80\u5355\u4e14\u5f3a\u5927\uff0c\u4f46\u9700\u8981\u81ea\u884c\u5b89\u88c5\u3002 pip install requests \u83b7\u53d6\u56fd\u5185\u65b0\u95fb\u5e76\u663e\u793a\u65b0\u95fb\u6807\u9898\u548c\u94fe\u63a5\u3002 import requests resp = requests . get ( 'http://api.tianapi.com/guonei/?key=APIKey&num=10' ) if resp . status_code == 200 : data_model = resp . json () for news in data_model [ 'newslist' ]: print ( news [ 'title' ]) print ( news [ 'url' ]) print ( '-' * 60 ) \u4e0a\u9762\u7684\u4ee3\u7801\u901a\u8fc7 requests \u6a21\u5757\u7684 get \u51fd\u6570\u5411\u5929\u884c\u6570\u636e\u7684\u56fd\u5185\u65b0\u95fb\u63a5\u53e3\u53d1\u8d77\u4e86\u4e00\u6b21\u8bf7\u6c42\uff0c\u5982\u679c\u8bf7\u6c42\u8fc7\u7a0b\u6ca1\u6709\u51fa\u73b0\u95ee\u9898\uff0c get \u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a Response \u5bf9\u8c61\uff0c\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684 status_code \u5c5e\u6027\u8868\u793aHTTP\u54cd\u5e94\u72b6\u6001\u7801\uff0c\u5982\u679c\u4e0d\u7406\u89e3\u6ca1\u5173\u7cfb\uff0c\u4f60\u53ea\u9700\u8981\u5173\u6ce8\u5b83\u7684\u503c\uff0c\u5982\u679c\u503c\u7b49\u4e8e 200 \u6216\u8005\u5176\u4ed6 2 \u5b57\u5934\u7684\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u8bf7\u6c42\u662f\u6210\u529f\u7684\u3002\u901a\u8fc7 Response \u5bf9\u8c61\u7684 json() \u65b9\u6cd5\u53ef\u4ee5\u5c06\u8fd4\u56de\u7684JSON\u683c\u5f0f\u7684\u6570\u636e\u76f4\u63a5\u5904\u7406\u6210Python\u5b57\u5178\uff0c\u975e\u5e38\u65b9\u4fbf\u3002\u5929\u884c\u6570\u636e\u56fd\u5185\u65b0\u95fb\u63a5\u53e3\u8fd4\u56de\u7684JSON\u683c\u5f0f\u7684\u6570\u636e\uff08\u90e8\u5206\uff09\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u63d0\u793a \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684APIKey\u9700\u8981\u6362\u6210\u81ea\u5df1\u5728\u5929\u884c\u6570\u636e\u7f51\u7ad9\u7533\u8bf7\u7684APIKey\u3002\u5929\u884c\u6570\u636e\u7f51\u7ad9\u4e0a\u8fd8\u6709\u63d0\u4f9b\u4e86\u5f88\u591a\u975e\u5e38\u6709\u610f\u601d\u7684API\u63a5\u53e3\uff0c\u4f8b\u5982\uff1a\u5783\u573e\u5206\u7c7b\u3001\u5468\u516c\u89e3\u68a6\u7b49\uff0c\u5927\u5bb6\u53ef\u4ee5\u4eff\u7167\u4e0a\u9762\u7684\u4ee3\u7801\u6765\u8c03\u7528\u8fd9\u4e9b\u63a5\u53e3\u3002\u6bcf\u4e2a\u63a5\u53e3\u90fd\u6709\u5bf9\u5e94\u7684\u63a5\u53e3\u6587\u6863\uff0c\u6587\u6863\u4e2d\u6709\u5173\u4e8e\u5982\u4f55\u4f7f\u7528\u63a5\u53e3\u7684\u8be6\u7ec6\u8bf4\u660e\u3002 \u7b80\u5355\u7684\u603b\u7ed3 Python\u4e2d\u5b9e\u73b0\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u9664\u4e86\u4f7f\u7528 json \u6a21\u5757\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 pickle \u548c shelve \u6a21\u5757\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u6a21\u5757\u662f\u4f7f\u7528\u7279\u6709\u7684\u5e8f\u5217\u5316\u534f\u8bae\u6765\u5e8f\u5217\u5316\u6570\u636e\uff0c\u56e0\u6b64\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\u53ea\u80fd\u88abPython\u8bc6\u522b\uff0c\u5173\u4e8e\u8fd9\u4e24\u4e2a\u6a21\u5757\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u5df1\u67e5\u627e\u7f51\u7edc\u4e0a\u7684\u8d44\u6599\u3002\u5904\u7406JSON\u683c\u5f0f\u7684\u6570\u636e\u5f88\u663e\u7136\u662f\u7a0b\u5e8f\u5458\u5fc5\u987b\u638c\u63e1\u7684\u4e00\u9879\u6280\u80fd\uff0c\u56e0\u4e3a\u4e0d\u7ba1\u662f\u8bbf\u95ee\u7f51\u7edcAPI\u63a5\u53e3\u8fd8\u662f\u63d0\u4f9b\u7f51\u7edcAPI\u63a5\u53e3\u7ed9\u4ed6\u4eba\u4f7f\u7528\uff0c\u90fd\u9700\u8981\u5177\u5907\u5904\u7406JSON\u683c\u5f0f\u6570\u636e\u7684\u76f8\u5173\u77e5\u8bc6\u3002","title":"\u7b2c22\u8bfe\uff1a\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316"},{"location":"%E7%AC%AC22%E8%AF%BE%EF%BC%9A%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#22","text":"","title":"\u7b2c22\u8bfe\uff1a\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316"},{"location":"%E7%AC%AC22%E8%AF%BE%EF%BC%9A%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#json","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u8bb2\u89e3\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5982\u4f55\u5c06\u6587\u672c\u6570\u636e\u548c\u4e8c\u8fdb\u5236\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u90a3\u4e48\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5e0c\u671b\u628a\u4e00\u4e2a\u5217\u8868\u6216\u8005\u4e00\u4e2a\u5b57\u5178\u4e2d\u7684\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\u53c8\u8be5\u600e\u4e48\u505a\u5462\uff1f\u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u4ee5JSON\u683c\u5f0f\u8fdb\u884c\u4fdd\u5b58\u3002JSON\u662f\u201cJavaScript Object Notation\u201d\u7684\u7f29\u5199\uff0c\u5b83\u672c\u6765\u662fJavaScript\u8bed\u8a00\u4e2d\u521b\u5efa\u5bf9\u8c61\u7684\u4e00\u79cd\u5b57\u9762\u91cf\u8bed\u6cd5\uff0c\u73b0\u5728\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u8de8\u8bed\u8a00\u8de8\u5e73\u53f0\u7684\u6570\u636e\u4ea4\u6362\u3002\u4f7f\u7528JSON\u7684\u539f\u56e0\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u7ed3\u6784\u7d27\u51d1\u800c\u4e14\u662f\u7eaf\u6587\u672c\uff0c\u4efb\u4f55\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u7a0b\u8bed\u8a00\u90fd\u80fd\u5904\u7406\u7eaf\u6587\u672c\uff0c\u8fd9\u5c31\u662f \u5b9e\u73b0\u8de8\u8bed\u8a00\u8de8\u5e73\u53f0\u6570\u636e\u4ea4\u6362 \u7684\u524d\u63d0\u6761\u4ef6\u3002\u76ee\u524dJSON\u57fa\u672c\u4e0a\u5df2\u7ecf\u53d6\u4ee3\u4e86XML\uff08\u53ef\u6269\u5c55\u6807\u8bb0\u8bed\u8a00\uff09\u4f5c\u4e3a \u5f02\u6784\u7cfb\u7edf\u95f4\u4ea4\u6362\u6570\u636e\u7684\u4e8b\u5b9e\u6807\u51c6 \u3002\u53ef\u4ee5\u5728 JSON\u7684\u5b98\u65b9\u7f51\u7ad9 \u627e\u5230\u66f4\u591a\u5173\u4e8eJSON\u7684\u77e5\u8bc6\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u8fd8\u63d0\u4f9b\u4e86\u6bcf\u79cd\u8bed\u8a00\u5904\u7406JSON\u6570\u636e\u683c\u5f0f\u53ef\u4ee5\u4f7f\u7528\u7684\u5de5\u5177\u6216\u4e09\u65b9\u5e93\u3002 { name : \"\u9a86\u660a\" , age : 40 , friends : [ \"\u738b\u5927\u9524\" , \"\u767d\u5143\u82b3\" ], cars : [ { \"brand\" : \"BMW\" , \"max_speed\" : 240 }, { \"brand\" : \"Benz\" , \"max_speed\" : 280 }, { \"brand\" : \"Audi\" , \"max_speed\" : 280 } ] } \u4e0a\u9762\u662fJSON\u7684\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\uff0c\u5927\u5bb6\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86\uff0c\u5b83\u8ddfPython\u4e2d\u7684\u5b57\u5178\u975e\u5e38\u7c7b\u4f3c\u800c\u4e14\u652f\u6301\u5d4c\u5957\u7ed3\u6784\uff0c\u5c31\u597d\u6bd4Python\u5b57\u5178\u4e2d\u7684\u503c\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u5b57\u5178\u3002\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u628a\u4e0b\u9762\u7684\u4ee3\u7801\u8f93\u5165\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\uff08\u5bf9\u4e8eChrome\u6d4f\u89c8\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7\u201c\u66f4\u591a\u5de5\u5177\u201d\u83dc\u5355\u627e\u5230\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\u5b50\u83dc\u5355\uff0c\u5c31\u53ef\u4ee5\u6253\u5f00\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\uff09\uff0c\u6d4f\u89c8\u5668\u7684\u63a7\u5236\u53f0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8fd0\u884cJavaScript\u4ee3\u7801\u7684\u4ea4\u4e92\u5f0f\u73af\u5883\uff08\u7c7b\u4f3c\u4e8ePython\u7684\u4ea4\u4e92\u5f0f\u73af\u5883\uff09\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u5e2e\u6211\u4eec\u521b\u5efa\u51fa\u4e00\u4e2aJavaScript\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u5c06\u5176\u8d4b\u503c\u7ed9\u540d\u4e3a obj \u7684\u53d8\u91cf\u3002 let obj = { name : \"\u9a86\u660a\" , age : 40 , friends : [ \"\u738b\u5927\u9524\" , \"\u767d\u5143\u82b3\" ], cars : [ { \"brand\" : \"BMW\" , \"max_speed\" : 240 }, { \"brand\" : \"Benz\" , \"max_speed\" : 280 }, { \"brand\" : \"Audi\" , \"max_speed\" : 280 } ] } \u4e0a\u9762\u7684 obj \u5c31\u662fJavaScript\u4e2d\u7684\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 obj.name \u6216 obj[\"name\"] \u4e24\u79cd\u65b9\u5f0f\u83b7\u53d6\u5230 name \u5bf9\u5e94\u7684\u503c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c obj[\"name\"] \u8fd9\u79cd\u83b7\u53d6\u6570\u636e\u7684\u65b9\u5f0f\u8ddfPython\u5b57\u5178\u901a\u8fc7\u952e\u83b7\u53d6\u503c\u7684\u7d22\u5f15\u64cd\u4f5c\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u800cPython\u4e2d\u4e5f\u901a\u8fc7\u540d\u4e3a json \u7684\u6a21\u5757\u63d0\u4f9b\u4e86\u5b57\u5178\u4e0eJSON\u53cc\u5411\u8f6c\u6362\u7684\u652f\u6301\u3002 \u6211\u4eec\u5728JSON\u4e2d\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\uff08JavaScript\u6570\u636e\u7c7b\u578b\uff09\u548cPython\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u4e5f\u662f\u5f88\u5bb9\u6613\u627e\u5230\u5bf9\u5e94\u5173\u7cfb\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u770b\u4e0b\u9762\u7684\u4e24\u5f20\u8868\u3002 \u88681\uff1aJavaScript\u6570\u636e\u7c7b\u578b\uff08\u503c\uff09\u5bf9\u5e94\u7684Python\u6570\u636e\u7c7b\u578b\uff08\u503c\uff09 JSON Python object dict array list string str number int / float number (real) float boolean ( true / false ) bool ( True / False ) null None \u88682\uff1aPython\u6570\u636e\u7c7b\u578b\uff08\u503c\uff09\u5bf9\u5e94\u7684JavaScript\u6570\u636e\u7c7b\u578b\uff08\u503c\uff09 Python JSON dict object list / tuple array str string int / float number bool \uff08 True / False \uff09 boolean ( true / false ) None null","title":"JSON\u6982\u8ff0"},{"location":"%E7%AC%AC22%E8%AF%BE%EF%BC%9A%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#json_1","text":"\u5728Python\u4e2d\uff0c\u5982\u679c\u8981\u5c06\u5b57\u5178\u5904\u7406\u6210JSON\u683c\u5f0f\uff08\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u5b58\u5728\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528 json \u6a21\u5757\u7684 dumps \u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import json my_dict = { 'name' : '\u9a86\u660a' , 'age' : 40 , 'friends' : [ '\u738b\u5927\u9524' , '\u767d\u5143\u82b3' ], 'cars' : [ { 'brand' : 'BMW' , 'max_speed' : 240 }, { 'brand' : 'Audi' , 'max_speed' : 280 }, { 'brand' : 'Benz' , 'max_speed' : 280 } ] } print ( json . dumps ( my_dict )) \u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u8f93\u51fa\u5982\u4e0b\u6240\u793a\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230\u4e2d\u6587\u5b57\u7b26\u90fd\u662f\u7528Unicode\u7f16\u7801\u663e\u793a\u7684\u3002 { \"name\" : \"\\u9a86\\u660a\" , \"age\" : 40 , \"friends\" : [ \"\\u738b\\u5927\\u9524\" , \"\\u767d\\u5143\\u82b3\" ], \"cars\" : [{ \"brand\" : \"BMW\" , \"max_speed\" : 240 }, { \"brand\" : \"Audi\" , \"max_speed\" : 280 }, { \"brand\" : \"Benz\" , \"max_speed\" : 280 }]} \u5982\u679c\u8981\u5c06\u5b57\u5178\u5904\u7406\u6210JSON\u683c\u5f0f\u5e76\u5199\u5165\u6587\u672c\u6587\u4ef6\uff0c\u53ea\u9700\u8981\u5c06 dumps \u51fd\u6570\u6362\u6210 dump \u51fd\u6570\u5e76\u4f20\u5165\u6587\u4ef6\u5bf9\u8c61\u5373\u53ef\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import json my_dict = { 'name' : '\u9a86\u660a' , 'age' : 40 , 'friends' : [ '\u738b\u5927\u9524' , '\u767d\u5143\u82b3' ], 'cars' : [ { 'brand' : 'BMW' , 'max_speed' : 240 }, { 'brand' : 'Audi' , 'max_speed' : 280 }, { 'brand' : 'Benz' , 'max_speed' : 280 } ] } with open ( 'data.json' , 'w' ) as file : json . dump ( my_dict , file ) \u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u4f1a\u521b\u5efa data.json \u6587\u4ef6\uff0c\u6587\u4ef6\u7684\u5185\u5bb9\u8ddf\u4e0a\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u662f\u4e00\u6837\u7684\u3002 json \u6a21\u5757\u6709\u56db\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u51fd\u6570\uff0c\u5206\u522b\u662f\uff1a dump - \u5c06Python\u5bf9\u8c61\u6309\u7167JSON\u683c\u5f0f\u5e8f\u5217\u5316\u5230\u6587\u4ef6\u4e2d dumps - \u5c06Python\u5bf9\u8c61\u5904\u7406\u6210JSON\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 load - \u5c06\u6587\u4ef6\u4e2d\u7684JSON\u6570\u636e\u53cd\u5e8f\u5217\u5316\u6210\u5bf9\u8c61 loads - \u5c06\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u53cd\u5e8f\u5217\u5316\u6210Python\u5bf9\u8c61 \u8fd9\u91cc\u51fa\u73b0\u4e86\u4e24\u4e2a\u6982\u5ff5\uff0c\u4e00\u4e2a\u53eb\u5e8f\u5217\u5316\uff0c\u4e00\u4e2a\u53eb\u53cd\u5e8f\u5217\u5316\uff0c \u7ef4\u57fa\u767e\u79d1 \u4e0a\u7684\u89e3\u91ca\u662f\uff1a\u201c\u5e8f\u5217\u5316\uff08serialization\uff09\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6570\u636e\u5904\u7406\u4e2d\uff0c\u662f\u6307\u5c06\u6570\u636e\u7ed3\u6784\u6216\u5bf9\u8c61\u72b6\u6001\u8f6c\u6362\u4e3a\u53ef\u4ee5\u5b58\u50a8\u6216\u4f20\u8f93\u7684\u5f62\u5f0f\uff0c\u8fd9\u6837\u5728\u9700\u8981\u7684\u65f6\u5019\u80fd\u591f\u6062\u590d\u5230\u539f\u5148\u7684\u72b6\u6001\uff0c\u800c\u4e14\u901a\u8fc7\u5e8f\u5217\u5316\u7684\u6570\u636e\u91cd\u65b0\u83b7\u53d6\u5b57\u8282\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u5b57\u8282\u6765\u4ea7\u751f\u539f\u59cb\u5bf9\u8c61\u7684\u526f\u672c\uff08\u62f7\u8d1d\uff09\u3002\u4e0e\u8fd9\u4e2a\u8fc7\u7a0b\u76f8\u53cd\u7684\u52a8\u4f5c\uff0c\u5373\u4ece\u4e00\u7cfb\u5217\u5b57\u8282\u4e2d\u63d0\u53d6\u6570\u636e\u7ed3\u6784\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u53cd\u5e8f\u5217\u5316\uff08deserialization\uff09\u201d\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u8bfb\u53d6\u4e0a\u9762\u521b\u5efa\u7684 data.json \u6587\u4ef6\uff0c\u5c06JSON\u683c\u5f0f\u7684\u6570\u636e\u8fd8\u539f\u6210Python\u4e2d\u7684\u5b57\u5178\u3002 import json with open ( 'data.json' , 'r' ) as file : my_dict = json . load ( file ) print ( type ( my_dict )) print ( my_dict )","title":"\u8bfb\u5199JSON\u683c\u5f0f\u7684\u6570\u636e"},{"location":"%E7%AC%AC22%E8%AF%BE%EF%BC%9A%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#pip","text":"Python\u6807\u51c6\u5e93\u4e2d\u7684 json \u6a21\u5757\u5728\u6570\u636e\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65f6\u6027\u80fd\u5e76\u4e0d\u662f\u975e\u5e38\u7406\u60f3\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e09\u65b9\u5e93 ujson \u6765\u66ff\u6362 json \u3002\u6240\u8c13\u4e09\u65b9\u5e93\uff0c\u662f\u6307\u975e\u516c\u53f8\u5185\u90e8\u5f00\u53d1\u548c\u4f7f\u7528\u7684\uff0c\u4e5f\u4e0d\u662f\u6765\u81ea\u4e8e\u5b98\u65b9\u6807\u51c6\u5e93\u7684Python\u6a21\u5757\uff0c\u8fd9\u4e9b\u6a21\u5757\u901a\u5e38\u7531\u5176\u4ed6\u516c\u53f8\u3001\u7ec4\u7ec7\u6216\u4e2a\u4eba\u5f00\u53d1\uff0c\u6240\u4ee5\u88ab\u79f0\u4e3a\u4e09\u65b9\u5e93\u3002\u867d\u7136Python\u8bed\u8a00\u7684\u6807\u51c6\u5e93\u867d\u7136\u5df2\u7ecf\u63d0\u4f9b\u4e86\u8bf8\u591a\u6a21\u5757\u6765\u65b9\u4fbf\u6211\u4eec\u7684\u5f00\u53d1\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a\u5f3a\u5927\u7684\u8bed\u8a00\u6765\u8bf4\uff0c\u5b83\u7684\u751f\u6001\u5708\u4e00\u5b9a\u4e5f\u662f\u975e\u5e38\u7e41\u8363\u7684\u3002 \u4e4b\u524d\u5b89\u88c5Python\u89e3\u91ca\u5668\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5df2\u7ecf\u52fe\u9009\u4e86\u5b89\u88c5pip\uff0c\u5927\u5bb6\u53ef\u4ee5\u5728\u547d\u4ee4\u63d0\u793a\u7b26\u6216\u7ec8\u7aef\u4e2d\u901a\u8fc7 pip --version \u6765\u786e\u5b9a\u662f\u5426\u5df2\u7ecf\u62e5\u6709\u4e86pip\u3002pip\u662fPython\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u901a\u8fc7pip\u53ef\u4ee5\u67e5\u627e\u3001\u5b89\u88c5\u3001\u5378\u8f7d\u3001\u66f4\u65b0Python\u7684\u4e09\u65b9\u5e93\u6216\u5de5\u5177\uff0cmacOS\u548cLinux\u7cfb\u7edf\u5e94\u8be5\u4f7f\u7528pip3\u3002\u4f8b\u5982\u8981\u5b89\u88c5\u66ff\u4ee3 json \u6a21\u5757\u7684 ujson \uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u3002 pip install ujson \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cpip\u4f1a\u8bbf\u95ee https://pypi.org/simple/ \u6765\u83b7\u5f97\u4e09\u65b9\u5e93\u76f8\u5173\u7684\u6570\u636e\uff0c\u4f46\u662f\u56fd\u5185\u8bbf\u95ee\u8fd9\u4e2a\u7f51\u7ad9\u7684\u901f\u5ea6\u5e76\u4e0d\u662f\u5341\u5206\u7406\u60f3\uff0c\u56e0\u6b64\u56fd\u5185\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u8c46\u74e3\u7f51\u63d0\u4f9b\u7684\u955c\u50cf\u6765\u66ff\u4ee3\u8fd9\u4e2a\u9ed8\u8ba4\u7684\u4e0b\u8f7d\u6e90\uff0c\u64cd\u4f5c\u5982\u4e0b\u6240\u793a\u3002 pip install ujson \u53ef\u4ee5\u901a\u8fc7 pip search \u547d\u4ee4\u6839\u636e\u540d\u5b57\u67e5\u627e\u9700\u8981\u7684\u4e09\u65b9\u5e93\uff0c\u53ef\u4ee5\u901a\u8fc7 pip list \u547d\u4ee4\u6765\u67e5\u770b\u5df2\u7ecf\u5b89\u88c5\u8fc7\u7684\u4e09\u65b9\u5e93\u3002\u5982\u679c\u60f3\u66f4\u65b0\u67d0\u4e2a\u4e09\u65b9\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528 pip install -U \u6216 pip install --upgrade \uff1b\u5982\u679c\u8981\u5220\u9664\u67d0\u4e2a\u4e09\u65b9\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528 pip uninstall \u547d\u4ee4\u3002 \u641c\u7d22 ujson \u4e09\u65b9\u5e93\u3002 pip search ujson micropython-cpython-ujson ( 0 .2 ) - MicroPython module ujson ported to CPython pycopy-cpython-ujson ( 0 .2 ) - Pycopy module ujson ported to CPython ujson ( 3 .0.0 ) - Ultra fast JSON encoder and decoder for Python ujson-bedframe ( 1 .33.0 ) - Ultra fast JSON encoder and decoder for Python ujson-segfault ( 2 .1.57 ) - Ultra fast JSON encoder and decoder for Python. Continuing development. ujson-ia ( 2 .1.1 ) - Ultra fast JSON encoder and decoder for Python ( Internet Archive fork ) ujson-x ( 1 .37 ) - Ultra fast JSON encoder and decoder for Python ujson-x-legacy ( 1 .35.1 ) - Ultra fast JSON encoder and decoder for Python drf_ujson ( 1 .2 ) - Django Rest Framework UJSON Renderer drf-ujson2 ( 1 .6.1 ) - Django Rest Framework UJSON Renderer ujsonDB ( 0 .1.0 ) - A lightweight and simple database using ujson. fast-json ( 0 .3.2 ) - Combines best parts of json and ujson for fast serialization decimal-monkeypatch ( 0 .4.3 ) - Python 2 performance patches: decimal to cdecimal, json to ujson for psycopg2 \u67e5\u770b\u5df2\u7ecf\u5b89\u88c5\u7684\u4e09\u65b9\u5e93\u3002 pip list Package Version ----------------------------- ---------- aiohttp 3 .5.4 alipay 0 .7.4 altgraph 0 .16.1 amqp 2 .4.2 ... ... \u66f4\u65b0 ujson \u4e09\u65b9\u5e93\u3002 pip install -U ujson \u5220\u9664 ujson \u4e09\u65b9\u5e93\u3002 pip uninstall -y ujson \u63d0\u793a \uff1a\u5982\u679c\u8981\u66f4\u65b0 pip \u81ea\u8eab\uff0c\u5bf9\u4e8emacOS\u7cfb\u7edf\u6765\u8bf4\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 pip install -U pip \u3002\u5728Windows\u7cfb\u7edf\u4e0a\uff0c\u53ef\u4ee5\u5c06\u547d\u4ee4\u66ff\u6362\u4e3a python -m pip install -U --user pip \u3002","title":"\u5305\u7ba1\u7406\u5de5\u5177pip\u7684\u4f7f\u7528"},{"location":"%E7%AC%AC22%E8%AF%BE%EF%BC%9A%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#api","text":"\u5982\u679c\u60f3\u5728\u6211\u4eec\u81ea\u5df1\u7684\u7a0b\u5e8f\u4e2d\u663e\u793a\u5929\u6c14\u3001\u8def\u51b5\u3001\u822a\u73ed\u7b49\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u6211\u4eec\u81ea\u5df1\u6ca1\u6709\u80fd\u529b\u63d0\u4f9b\uff0c\u6240\u4ee5\u5fc5\u987b\u4f7f\u7528\u7f51\u7edc\u6570\u636e\u670d\u52a1\u3002\u76ee\u524d\u7edd\u5927\u591a\u6570\u7684\u7f51\u7edc\u6570\u636e\u670d\u52a1\uff08\u6216\u79f0\u4e4b\u4e3a\u7f51\u7edcAPI\uff09\u90fd\u662f\u57fa\u4e8e HTTP \u6216HTTPS\u63d0\u4f9bJSON\u683c\u5f0f\u7684\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Python\u7a0b\u5e8f\u53d1\u9001HTTP\u8bf7\u6c42\u7ed9\u6307\u5b9a\u7684URL\uff08\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26\uff09\uff0c\u8fd9\u4e2aURL\u5c31\u662f\u6240\u8c13\u7684\u7f51\u7edcAPI\uff0c\u5982\u679c\u8bf7\u6c42\u6210\u529f\uff0c\u5b83\u4f1a\u8fd4\u56deHTTP\u54cd\u5e94\uff0c\u800cHTTP\u54cd\u5e94\u7684\u6d88\u606f\u4f53\u4e2d\u5c31\u6709\u6211\u4eec\u9700\u8981\u7684JSON\u683c\u5f0f\u7684\u6570\u636e\u3002\u5173\u4e8eHTTP\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u53ef\u4ee5\u770b\u770b\u962e\u4e00\u5cf0\u7684 \u300aHTTP\u534f\u8bae\u5165\u95e8\u300b \u4e00\u6587\u3002 \u56fd\u5185\u6709\u5f88\u591a\u63d0\u4f9b\u7f51\u7edcAPI\u63a5\u53e3\u7684\u7f51\u7ad9\uff0c\u4f8b\u5982 \u805a\u5408\u6570\u636e \u3001 \u963f\u51e1\u8fbe\u6570\u636e \u7b49\uff0c\u8fd9\u4e9b\u7f51\u7ad9\u4e0a\u6709\u514d\u8d39\u7684\u548c\u4ed8\u8d39\u7684\u6570\u636e\u63a5\u53e3\uff0c\u56fd\u5916\u7684 {API}Search \u7f51\u7ad9\u4e5f\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 requests \u5e93\uff08\u57fa\u4e8eHTTP\u8fdb\u884c\u7f51\u7edc\u8d44\u6e90\u8bbf\u95ee\u7684\u4e09\u65b9\u5e93\uff09\u8bbf\u95ee\u7f51\u7edcAPI\u83b7\u53d6\u56fd\u5185\u65b0\u95fb\u5e76\u663e\u793a\u65b0\u95fb\u6807\u9898\u548c\u94fe\u63a5\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u540d\u4e3a \u5929\u884c\u6570\u636e \u7684\u7f51\u7ad9\u63d0\u4f9b\u7684\u56fd\u5185\u65b0\u95fb\u6570\u636e\u63a5\u53e3\uff0c\u5176\u4e2d\u7684APIKey\u9700\u8981\u81ea\u5df1\u5230\u7f51\u7ad9\u4e0a\u6ce8\u518c\u7533\u8bf7\u3002\u5728\u5929\u884c\u6570\u636e\u7f51\u7ad9\u6ce8\u518c\u8d26\u53f7\u540e\u4f1a\u81ea\u52a8\u5206\u914dAPIKey\uff0c\u4f46\u662f\u8981\u8bbf\u95ee\u63a5\u53e3\u83b7\u53d6\u6570\u636e\uff0c\u9700\u8981\u7ed1\u5b9a\u9a8c\u8bc1\u90ae\u7bb1\u6216\u624b\u673a\uff0c\u7136\u540e\u8fd8\u8981\u7533\u8bf7\u9700\u8981\u4f7f\u7528\u7684\u63a5\u53e3\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 Python\u901a\u8fc7URL\u63a5\u5165\u7f51\u7edc\uff0c\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 requests \u4e09\u65b9\u5e93\uff0c\u5b83\u7b80\u5355\u4e14\u5f3a\u5927\uff0c\u4f46\u9700\u8981\u81ea\u884c\u5b89\u88c5\u3002 pip install requests \u83b7\u53d6\u56fd\u5185\u65b0\u95fb\u5e76\u663e\u793a\u65b0\u95fb\u6807\u9898\u548c\u94fe\u63a5\u3002 import requests resp = requests . get ( 'http://api.tianapi.com/guonei/?key=APIKey&num=10' ) if resp . status_code == 200 : data_model = resp . json () for news in data_model [ 'newslist' ]: print ( news [ 'title' ]) print ( news [ 'url' ]) print ( '-' * 60 ) \u4e0a\u9762\u7684\u4ee3\u7801\u901a\u8fc7 requests \u6a21\u5757\u7684 get \u51fd\u6570\u5411\u5929\u884c\u6570\u636e\u7684\u56fd\u5185\u65b0\u95fb\u63a5\u53e3\u53d1\u8d77\u4e86\u4e00\u6b21\u8bf7\u6c42\uff0c\u5982\u679c\u8bf7\u6c42\u8fc7\u7a0b\u6ca1\u6709\u51fa\u73b0\u95ee\u9898\uff0c get \u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a Response \u5bf9\u8c61\uff0c\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684 status_code \u5c5e\u6027\u8868\u793aHTTP\u54cd\u5e94\u72b6\u6001\u7801\uff0c\u5982\u679c\u4e0d\u7406\u89e3\u6ca1\u5173\u7cfb\uff0c\u4f60\u53ea\u9700\u8981\u5173\u6ce8\u5b83\u7684\u503c\uff0c\u5982\u679c\u503c\u7b49\u4e8e 200 \u6216\u8005\u5176\u4ed6 2 \u5b57\u5934\u7684\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u8bf7\u6c42\u662f\u6210\u529f\u7684\u3002\u901a\u8fc7 Response \u5bf9\u8c61\u7684 json() \u65b9\u6cd5\u53ef\u4ee5\u5c06\u8fd4\u56de\u7684JSON\u683c\u5f0f\u7684\u6570\u636e\u76f4\u63a5\u5904\u7406\u6210Python\u5b57\u5178\uff0c\u975e\u5e38\u65b9\u4fbf\u3002\u5929\u884c\u6570\u636e\u56fd\u5185\u65b0\u95fb\u63a5\u53e3\u8fd4\u56de\u7684JSON\u683c\u5f0f\u7684\u6570\u636e\uff08\u90e8\u5206\uff09\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u63d0\u793a \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684APIKey\u9700\u8981\u6362\u6210\u81ea\u5df1\u5728\u5929\u884c\u6570\u636e\u7f51\u7ad9\u7533\u8bf7\u7684APIKey\u3002\u5929\u884c\u6570\u636e\u7f51\u7ad9\u4e0a\u8fd8\u6709\u63d0\u4f9b\u4e86\u5f88\u591a\u975e\u5e38\u6709\u610f\u601d\u7684API\u63a5\u53e3\uff0c\u4f8b\u5982\uff1a\u5783\u573e\u5206\u7c7b\u3001\u5468\u516c\u89e3\u68a6\u7b49\uff0c\u5927\u5bb6\u53ef\u4ee5\u4eff\u7167\u4e0a\u9762\u7684\u4ee3\u7801\u6765\u8c03\u7528\u8fd9\u4e9b\u63a5\u53e3\u3002\u6bcf\u4e2a\u63a5\u53e3\u90fd\u6709\u5bf9\u5e94\u7684\u63a5\u53e3\u6587\u6863\uff0c\u6587\u6863\u4e2d\u6709\u5173\u4e8e\u5982\u4f55\u4f7f\u7528\u63a5\u53e3\u7684\u8be6\u7ec6\u8bf4\u660e\u3002","title":"\u4f7f\u7528\u7f51\u7edcAPI\u83b7\u53d6\u6570\u636e"},{"location":"%E7%AC%AC22%E8%AF%BE%EF%BC%9A%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_1","text":"Python\u4e2d\u5b9e\u73b0\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u9664\u4e86\u4f7f\u7528 json \u6a21\u5757\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 pickle \u548c shelve \u6a21\u5757\uff0c\u4f46\u662f\u8fd9\u4e24\u4e2a\u6a21\u5757\u662f\u4f7f\u7528\u7279\u6709\u7684\u5e8f\u5217\u5316\u534f\u8bae\u6765\u5e8f\u5217\u5316\u6570\u636e\uff0c\u56e0\u6b64\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\u53ea\u80fd\u88abPython\u8bc6\u522b\uff0c\u5173\u4e8e\u8fd9\u4e24\u4e2a\u6a21\u5757\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u5df1\u67e5\u627e\u7f51\u7edc\u4e0a\u7684\u8d44\u6599\u3002\u5904\u7406JSON\u683c\u5f0f\u7684\u6570\u636e\u5f88\u663e\u7136\u662f\u7a0b\u5e8f\u5458\u5fc5\u987b\u638c\u63e1\u7684\u4e00\u9879\u6280\u80fd\uff0c\u56e0\u4e3a\u4e0d\u7ba1\u662f\u8bbf\u95ee\u7f51\u7edcAPI\u63a5\u53e3\u8fd8\u662f\u63d0\u4f9b\u7f51\u7edcAPI\u63a5\u53e3\u7ed9\u4ed6\u4eba\u4f7f\u7528\uff0c\u90fd\u9700\u8981\u5177\u5907\u5904\u7406JSON\u683c\u5f0f\u6570\u636e\u7684\u76f8\u5173\u77e5\u8bc6\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC23%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99CSV%E6%96%87%E4%BB%B6/","text":"\u7b2c23\u8bfe\uff1a\u7528Python\u8bfb\u5199CSV\u6587\u4ef6 CSV\u6587\u4ef6\u4ecb\u7ecd CSV\uff08Comma Separated Values\uff09\u5168\u79f0\u9017\u53f7\u5206\u9694\u503c\u6587\u4ef6\u662f\u4e00\u79cd\u7b80\u5355\u3001\u901a\u7528\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u88ab\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u5e94\u7528\u7a0b\u5e8f\uff08\u6570\u636e\u5e93\u3001\u7535\u5b50\u8868\u683c\u7b49\uff09\u6570\u636e\u7684\u5bfc\u5165\u548c\u5bfc\u51fa\u4ee5\u53ca\u5f02\u6784\u7cfb\u7edf\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u6362\u3002\u56e0\u4e3aCSV\u662f\u7eaf\u6587\u672c\u6587\u4ef6\uff0c\u4e0d\u7ba1\u662f\u4ec0\u4e48\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u7a0b\u8bed\u8a00\u90fd\u662f\u53ef\u4ee5\u5904\u7406\u7eaf\u6587\u672c\u7684\uff0c\u800c\u4e14\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u63d0\u4f9b\u4e86\u5bf9\u8bfb\u5199CSV\u6587\u4ef6\u7684\u652f\u6301\uff0c\u56e0\u6b64CSV\u683c\u5f0f\u5728\u6570\u636e\u5904\u7406\u548c\u6570\u636e\u79d1\u5b66\u4e2d\u88ab\u5e7f\u6cdb\u5e94\u7528\u3002 CSV\u6587\u4ef6\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a \u7eaf\u6587\u672c\uff0c\u4f7f\u7528\u67d0\u79cd\u5b57\u7b26\u96c6\uff08\u5982 ASCII \u3001 Unicode \u3001 GB2312 \uff09\u7b49\uff09\uff1b \u7531\u4e00\u6761\u6761\u7684\u8bb0\u5f55\u7ec4\u6210\uff08\u5178\u578b\u7684\u662f\u6bcf\u884c\u4e00\u6761\u8bb0\u5f55\uff09\uff1b \u6bcf\u6761\u8bb0\u5f55\u88ab\u5206\u9694\u7b26\uff08\u5982\u9017\u53f7\u3001\u5206\u53f7\u3001\u5236\u8868\u7b26\u7b49\uff09\u5206\u9694\u4e3a\u5b57\u6bb5\uff08\u5217\uff09\uff1b \u6bcf\u6761\u8bb0\u5f55\u90fd\u6709\u540c\u6837\u7684\u5b57\u6bb5\u5e8f\u5217\u3002 CSV\u6587\u4ef6\u53ef\u4ee5\u4f7f\u7528\u6587\u672c\u7f16\u8f91\u5668\u6216\u7c7b\u4f3c\u4e8eExcel\u7535\u5b50\u8868\u683c\u8fd9\u7c7b\u5de5\u5177\u6253\u5f00\u548c\u7f16\u8f91\uff0c\u5f53\u4f7f\u7528Excel\u8fd9\u7c7b\u7535\u5b50\u8868\u683c\u6253\u5f00CSV\u6587\u4ef6\u65f6\uff0c\u4f60\u751a\u81f3\u611f\u89c9\u4e0d\u5230CSV\u548cExcel\u6587\u4ef6\u7684\u533a\u522b\u3002\u5f88\u591a\u6570\u636e\u5e93\u7cfb\u7edf\u90fd\u652f\u6301\u5c06\u6570\u636e\u5bfc\u51fa\u5230CSV\u6587\u4ef6\u4e2d\uff0c\u5f53\u7136\u4e5f\u652f\u6301\u4eceCSV\u6587\u4ef6\u4e2d\u8bfb\u5165\u6570\u636e\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5e76\u4e0d\u662f\u73b0\u5728\u8981\u8ba8\u8bba\u7684\u91cd\u70b9\u3002 \u5c06\u6570\u636e\u5199\u5165CSV\u6587\u4ef6 \u73b0\u6709\u4e94\u4e2a\u5b66\u751f\u4e09\u95e8\u8bfe\u7a0b\u7684\u8003\u8bd5\u6210\u7ee9\u9700\u8981\u4fdd\u5b58\u5230\u4e00\u4e2aCSV\u6587\u4ef6\u4e2d\uff0c\u8981\u8fbe\u6210\u8fd9\u4e2a\u76ee\u6807\uff0c\u53ef\u4ee5\u4f7f\u7528Python\u6807\u51c6\u5e93\u4e2d\u7684 csv \u6a21\u5757\uff0c\u8be5\u6a21\u5757\u7684 writer \u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a csvwriter \u5bf9\u8c61\uff0c\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684 writerow \u6216 writerows \u65b9\u6cd5\u5c31\u53ef\u4ee5\u5c06\u6570\u636e\u5199\u5165\u5230CSV\u6587\u4ef6\u4e2d\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import csv import random with open ( 'scores.csv' , 'w' ) as file : writer = csv . writer ( file ) writer . writerow ([ '\u59d3\u540d' , '\u8bed\u6587' , '\u6570\u5b66' , '\u82f1\u8bed' ]) names = [ '\u5173\u7fbd' , '\u5f20\u98de' , '\u8d75\u4e91' , '\u9a6c\u8d85' , '\u9ec4\u5fe0' ] for name in names : scores = [ random . randrange ( 50 , 101 ) for _ in range ( 3 )] scores . insert ( 0 , name ) writer . writerow ( scores ) \u751f\u6210\u7684CSV\u6587\u4ef6\u7684\u5185\u5bb9\u3002 \u59d3\u540d,\u8bed\u6587,\u6570\u5b66,\u82f1\u8bed \u5173\u7fbd,98,86,61 \u5f20\u98de,86,58,80 \u8d75\u4e91,95,73,70 \u9a6c\u8d85,83,97,55 \u9ec4\u5fe0,61,54,87 \u9700\u8981\u8bf4\u660e\u7684\u662f\u4e0a\u9762\u7684 writer \u51fd\u6570\uff0c\u9664\u4e86\u4f20\u5165\u8981\u5199\u5165\u6570\u636e\u7684\u6587\u4ef6\u5bf9\u8c61\u5916\uff0c\u8fd8\u53ef\u4ee5 dialect \u53c2\u6570\uff0c\u5b83\u8868\u793aCSV\u6587\u4ef6\u7684\u65b9\u8a00\uff0c\u9ed8\u8ba4\u503c\u662f excel \u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 delimiter \u3001 quotechar \u3001 quoting \u53c2\u6570\u6765\u6307\u5b9a\u5206\u9694\u7b26\uff08\u9ed8\u8ba4\u662f\u9017\u53f7\uff09\u3001\u5305\u56f4\u503c\u7684\u5b57\u7b26\uff08\u9ed8\u8ba4\u662f\u53cc\u5f15\u53f7\uff09\u4ee5\u53ca\u5305\u56f4\u7684\u65b9\u5f0f\u3002\u5176\u4e2d\uff0c\u5305\u56f4\u503c\u7684\u5b57\u7b26\u4e3b\u8981\u7528\u4e8e\u5f53\u5b57\u6bb5\u4e2d\u6709\u7279\u6b8a\u7b26\u53f7\u65f6\uff0c\u901a\u8fc7\u6dfb\u52a0\u5305\u56f4\u503c\u7684\u5b57\u7b26\u53ef\u4ee5\u907f\u514d\u4e8c\u4e49\u6027\u3002\u5927\u5bb6\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u4e0a\u9762\u7b2c5\u884c\u4ee3\u7801\u4fee\u6539\u4e3a\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u7136\u540e\u67e5\u770b\u751f\u6210\u7684CSV\u6587\u4ef6\u3002 writer = csv . writer ( file , delimiter = '|' , quoting = csv . QUOTE_ALL ) \u751f\u6210\u7684CSV\u6587\u4ef6\u7684\u5185\u5bb9\u3002 \"\u59d3\u540d\"|\"\u8bed\u6587\"|\"\u6570\u5b66\"|\"\u82f1\u8bed\" \"\u5173\u7fbd\"|\"88\"|\"64\"|\"65\" \"\u5f20\u98de\"|\"76\"|\"93\"|\"79\" \"\u8d75\u4e91\"|\"78\"|\"55\"|\"76\" \"\u9a6c\u8d85\"|\"72\"|\"77\"|\"68\" \"\u9ec4\u5fe0\"|\"70\"|\"72\"|\"51\" \u4eceCSV\u6587\u4ef6\u8bfb\u53d6\u6570\u636e \u5982\u679c\u8981\u8bfb\u53d6\u521a\u624d\u521b\u5efa\u7684CSV\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u901a\u8fc7 csv \u6a21\u5757\u7684 reader \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u51fa csvreader \u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7 next \u51fd\u6570\u6216 for-in \u5faa\u73af\u8bfb\u53d6\u5230\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u3002 import csv with open ( 'scores.csv' , 'r' ) as file : reader = csv . reader ( file , delimiter = '|' ) for data_list in reader : print ( reader . line_num , end = ' \\t ' ) for elem in data_list : print ( elem , end = ' \\t ' ) print () \u6ce8\u610f \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u5bf9 csvreader \u5bf9\u8c61\u505a for \u5faa\u73af\u65f6\uff0c\u6bcf\u6b21\u4f1a\u53d6\u51fa\u4e00\u4e2a\u5217\u8868\u5bf9\u8c61\uff0c\u8be5\u5217\u8868\u5bf9\u8c61\u5305\u542b\u4e86\u4e00\u884c\u4e2d\u6240\u6709\u7684\u5b57\u6bb5\u3002 \u7b80\u5355\u7684\u603b\u7ed3 \u5c06\u6765\u5982\u679c\u5927\u5bb6\u4f7f\u7528Python\u505a\u6570\u636e\u5206\u6790\uff0c\u5f88\u6709\u53ef\u80fd\u4f1a\u7528\u5230\u540d\u4e3a pandas \u7684\u4e09\u65b9\u5e93\uff0c\u5b83\u662fPython\u6570\u636e\u5206\u6790\u7684\u795e\u5668\u4e4b\u4e00\u3002 pandas \u4e2d\u5c01\u88c5\u4e86\u540d\u4e3a read_csv \u548c to_csv \u7684\u51fd\u6570\u7528\u6765\u8bfb\u5199CSV\u6587\u4ef6\uff0c\u5176\u4e2d read_CSV \u4f1a\u5c06\u8bfb\u53d6\u5230\u7684\u6570\u636e\u53d8\u6210\u4e00\u4e2a DataFrame \u5bf9\u8c61\uff0c\u800c DataFrame \u5c31\u662f pandas \u5e93\u4e2d\u6700\u91cd\u8981\u7684\u7c7b\u578b\uff0c\u5b83\u5c01\u88c5\u4e86\u4e00\u7cfb\u5217\u7528\u4e8e\u6570\u636e\u5904\u7406\u7684\u65b9\u6cd5\uff08\u6e05\u6d17\u3001\u8f6c\u6362\u3001\u805a\u5408\u7b49\uff09\uff1b\u800c to_csv \u4f1a\u5c06 DataFrame \u5bf9\u8c61\u4e2d\u7684\u6570\u636e\u5199\u5165CSV\u6587\u4ef6\uff0c\u5b8c\u6210\u6570\u636e\u7684\u6301\u4e45\u5316\u3002 read_csv \u51fd\u6570\u548c to_csv \u51fd\u6570\u8fdc\u8fdc\u6bd4\u539f\u751f\u7684 csvreader \u548c csvwriter \u5f3a\u5927\u3002","title":"\u7b2c23\u8bfe\uff1a\u7528Python\u8bfb\u5199CSV\u6587\u4ef6"},{"location":"%E7%AC%AC23%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99CSV%E6%96%87%E4%BB%B6/#23pythoncsv","text":"","title":"\u7b2c23\u8bfe\uff1a\u7528Python\u8bfb\u5199CSV\u6587\u4ef6"},{"location":"%E7%AC%AC23%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99CSV%E6%96%87%E4%BB%B6/#csv","text":"CSV\uff08Comma Separated Values\uff09\u5168\u79f0\u9017\u53f7\u5206\u9694\u503c\u6587\u4ef6\u662f\u4e00\u79cd\u7b80\u5355\u3001\u901a\u7528\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u88ab\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u5e94\u7528\u7a0b\u5e8f\uff08\u6570\u636e\u5e93\u3001\u7535\u5b50\u8868\u683c\u7b49\uff09\u6570\u636e\u7684\u5bfc\u5165\u548c\u5bfc\u51fa\u4ee5\u53ca\u5f02\u6784\u7cfb\u7edf\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u6362\u3002\u56e0\u4e3aCSV\u662f\u7eaf\u6587\u672c\u6587\u4ef6\uff0c\u4e0d\u7ba1\u662f\u4ec0\u4e48\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u7a0b\u8bed\u8a00\u90fd\u662f\u53ef\u4ee5\u5904\u7406\u7eaf\u6587\u672c\u7684\uff0c\u800c\u4e14\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u63d0\u4f9b\u4e86\u5bf9\u8bfb\u5199CSV\u6587\u4ef6\u7684\u652f\u6301\uff0c\u56e0\u6b64CSV\u683c\u5f0f\u5728\u6570\u636e\u5904\u7406\u548c\u6570\u636e\u79d1\u5b66\u4e2d\u88ab\u5e7f\u6cdb\u5e94\u7528\u3002 CSV\u6587\u4ef6\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a \u7eaf\u6587\u672c\uff0c\u4f7f\u7528\u67d0\u79cd\u5b57\u7b26\u96c6\uff08\u5982 ASCII \u3001 Unicode \u3001 GB2312 \uff09\u7b49\uff09\uff1b \u7531\u4e00\u6761\u6761\u7684\u8bb0\u5f55\u7ec4\u6210\uff08\u5178\u578b\u7684\u662f\u6bcf\u884c\u4e00\u6761\u8bb0\u5f55\uff09\uff1b \u6bcf\u6761\u8bb0\u5f55\u88ab\u5206\u9694\u7b26\uff08\u5982\u9017\u53f7\u3001\u5206\u53f7\u3001\u5236\u8868\u7b26\u7b49\uff09\u5206\u9694\u4e3a\u5b57\u6bb5\uff08\u5217\uff09\uff1b \u6bcf\u6761\u8bb0\u5f55\u90fd\u6709\u540c\u6837\u7684\u5b57\u6bb5\u5e8f\u5217\u3002 CSV\u6587\u4ef6\u53ef\u4ee5\u4f7f\u7528\u6587\u672c\u7f16\u8f91\u5668\u6216\u7c7b\u4f3c\u4e8eExcel\u7535\u5b50\u8868\u683c\u8fd9\u7c7b\u5de5\u5177\u6253\u5f00\u548c\u7f16\u8f91\uff0c\u5f53\u4f7f\u7528Excel\u8fd9\u7c7b\u7535\u5b50\u8868\u683c\u6253\u5f00CSV\u6587\u4ef6\u65f6\uff0c\u4f60\u751a\u81f3\u611f\u89c9\u4e0d\u5230CSV\u548cExcel\u6587\u4ef6\u7684\u533a\u522b\u3002\u5f88\u591a\u6570\u636e\u5e93\u7cfb\u7edf\u90fd\u652f\u6301\u5c06\u6570\u636e\u5bfc\u51fa\u5230CSV\u6587\u4ef6\u4e2d\uff0c\u5f53\u7136\u4e5f\u652f\u6301\u4eceCSV\u6587\u4ef6\u4e2d\u8bfb\u5165\u6570\u636e\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5e76\u4e0d\u662f\u73b0\u5728\u8981\u8ba8\u8bba\u7684\u91cd\u70b9\u3002","title":"CSV\u6587\u4ef6\u4ecb\u7ecd"},{"location":"%E7%AC%AC23%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99CSV%E6%96%87%E4%BB%B6/#csv_1","text":"\u73b0\u6709\u4e94\u4e2a\u5b66\u751f\u4e09\u95e8\u8bfe\u7a0b\u7684\u8003\u8bd5\u6210\u7ee9\u9700\u8981\u4fdd\u5b58\u5230\u4e00\u4e2aCSV\u6587\u4ef6\u4e2d\uff0c\u8981\u8fbe\u6210\u8fd9\u4e2a\u76ee\u6807\uff0c\u53ef\u4ee5\u4f7f\u7528Python\u6807\u51c6\u5e93\u4e2d\u7684 csv \u6a21\u5757\uff0c\u8be5\u6a21\u5757\u7684 writer \u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a csvwriter \u5bf9\u8c61\uff0c\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684 writerow \u6216 writerows \u65b9\u6cd5\u5c31\u53ef\u4ee5\u5c06\u6570\u636e\u5199\u5165\u5230CSV\u6587\u4ef6\u4e2d\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import csv import random with open ( 'scores.csv' , 'w' ) as file : writer = csv . writer ( file ) writer . writerow ([ '\u59d3\u540d' , '\u8bed\u6587' , '\u6570\u5b66' , '\u82f1\u8bed' ]) names = [ '\u5173\u7fbd' , '\u5f20\u98de' , '\u8d75\u4e91' , '\u9a6c\u8d85' , '\u9ec4\u5fe0' ] for name in names : scores = [ random . randrange ( 50 , 101 ) for _ in range ( 3 )] scores . insert ( 0 , name ) writer . writerow ( scores ) \u751f\u6210\u7684CSV\u6587\u4ef6\u7684\u5185\u5bb9\u3002 \u59d3\u540d,\u8bed\u6587,\u6570\u5b66,\u82f1\u8bed \u5173\u7fbd,98,86,61 \u5f20\u98de,86,58,80 \u8d75\u4e91,95,73,70 \u9a6c\u8d85,83,97,55 \u9ec4\u5fe0,61,54,87 \u9700\u8981\u8bf4\u660e\u7684\u662f\u4e0a\u9762\u7684 writer \u51fd\u6570\uff0c\u9664\u4e86\u4f20\u5165\u8981\u5199\u5165\u6570\u636e\u7684\u6587\u4ef6\u5bf9\u8c61\u5916\uff0c\u8fd8\u53ef\u4ee5 dialect \u53c2\u6570\uff0c\u5b83\u8868\u793aCSV\u6587\u4ef6\u7684\u65b9\u8a00\uff0c\u9ed8\u8ba4\u503c\u662f excel \u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 delimiter \u3001 quotechar \u3001 quoting \u53c2\u6570\u6765\u6307\u5b9a\u5206\u9694\u7b26\uff08\u9ed8\u8ba4\u662f\u9017\u53f7\uff09\u3001\u5305\u56f4\u503c\u7684\u5b57\u7b26\uff08\u9ed8\u8ba4\u662f\u53cc\u5f15\u53f7\uff09\u4ee5\u53ca\u5305\u56f4\u7684\u65b9\u5f0f\u3002\u5176\u4e2d\uff0c\u5305\u56f4\u503c\u7684\u5b57\u7b26\u4e3b\u8981\u7528\u4e8e\u5f53\u5b57\u6bb5\u4e2d\u6709\u7279\u6b8a\u7b26\u53f7\u65f6\uff0c\u901a\u8fc7\u6dfb\u52a0\u5305\u56f4\u503c\u7684\u5b57\u7b26\u53ef\u4ee5\u907f\u514d\u4e8c\u4e49\u6027\u3002\u5927\u5bb6\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u4e0a\u9762\u7b2c5\u884c\u4ee3\u7801\u4fee\u6539\u4e3a\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u7136\u540e\u67e5\u770b\u751f\u6210\u7684CSV\u6587\u4ef6\u3002 writer = csv . writer ( file , delimiter = '|' , quoting = csv . QUOTE_ALL ) \u751f\u6210\u7684CSV\u6587\u4ef6\u7684\u5185\u5bb9\u3002 \"\u59d3\u540d\"|\"\u8bed\u6587\"|\"\u6570\u5b66\"|\"\u82f1\u8bed\" \"\u5173\u7fbd\"|\"88\"|\"64\"|\"65\" \"\u5f20\u98de\"|\"76\"|\"93\"|\"79\" \"\u8d75\u4e91\"|\"78\"|\"55\"|\"76\" \"\u9a6c\u8d85\"|\"72\"|\"77\"|\"68\" \"\u9ec4\u5fe0\"|\"70\"|\"72\"|\"51\"","title":"\u5c06\u6570\u636e\u5199\u5165CSV\u6587\u4ef6"},{"location":"%E7%AC%AC23%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99CSV%E6%96%87%E4%BB%B6/#csv_2","text":"\u5982\u679c\u8981\u8bfb\u53d6\u521a\u624d\u521b\u5efa\u7684CSV\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u901a\u8fc7 csv \u6a21\u5757\u7684 reader \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u51fa csvreader \u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7 next \u51fd\u6570\u6216 for-in \u5faa\u73af\u8bfb\u53d6\u5230\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u3002 import csv with open ( 'scores.csv' , 'r' ) as file : reader = csv . reader ( file , delimiter = '|' ) for data_list in reader : print ( reader . line_num , end = ' \\t ' ) for elem in data_list : print ( elem , end = ' \\t ' ) print () \u6ce8\u610f \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u5bf9 csvreader \u5bf9\u8c61\u505a for \u5faa\u73af\u65f6\uff0c\u6bcf\u6b21\u4f1a\u53d6\u51fa\u4e00\u4e2a\u5217\u8868\u5bf9\u8c61\uff0c\u8be5\u5217\u8868\u5bf9\u8c61\u5305\u542b\u4e86\u4e00\u884c\u4e2d\u6240\u6709\u7684\u5b57\u6bb5\u3002","title":"\u4eceCSV\u6587\u4ef6\u8bfb\u53d6\u6570\u636e"},{"location":"%E7%AC%AC23%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99CSV%E6%96%87%E4%BB%B6/#_1","text":"\u5c06\u6765\u5982\u679c\u5927\u5bb6\u4f7f\u7528Python\u505a\u6570\u636e\u5206\u6790\uff0c\u5f88\u6709\u53ef\u80fd\u4f1a\u7528\u5230\u540d\u4e3a pandas \u7684\u4e09\u65b9\u5e93\uff0c\u5b83\u662fPython\u6570\u636e\u5206\u6790\u7684\u795e\u5668\u4e4b\u4e00\u3002 pandas \u4e2d\u5c01\u88c5\u4e86\u540d\u4e3a read_csv \u548c to_csv \u7684\u51fd\u6570\u7528\u6765\u8bfb\u5199CSV\u6587\u4ef6\uff0c\u5176\u4e2d read_CSV \u4f1a\u5c06\u8bfb\u53d6\u5230\u7684\u6570\u636e\u53d8\u6210\u4e00\u4e2a DataFrame \u5bf9\u8c61\uff0c\u800c DataFrame \u5c31\u662f pandas \u5e93\u4e2d\u6700\u91cd\u8981\u7684\u7c7b\u578b\uff0c\u5b83\u5c01\u88c5\u4e86\u4e00\u7cfb\u5217\u7528\u4e8e\u6570\u636e\u5904\u7406\u7684\u65b9\u6cd5\uff08\u6e05\u6d17\u3001\u8f6c\u6362\u3001\u805a\u5408\u7b49\uff09\uff1b\u800c to_csv \u4f1a\u5c06 DataFrame \u5bf9\u8c61\u4e2d\u7684\u6570\u636e\u5199\u5165CSV\u6587\u4ef6\uff0c\u5b8c\u6210\u6570\u636e\u7684\u6301\u4e45\u5316\u3002 read_csv \u51fd\u6570\u548c to_csv \u51fd\u6570\u8fdc\u8fdc\u6bd4\u539f\u751f\u7684 csvreader \u548c csvwriter \u5f3a\u5927\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC24%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-1/","text":"\u7b2c24\u8bfe\uff1a\u7528Python\u8bfb\u5199Excel\u6587\u4ef6-1 Excel\u7b80\u4ecb Excel\u662fMicrosoft\uff08\u5fae\u8f6f\uff09\u4e3a\u4f7f\u7528Windows\u548cmacOS\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u7684\u4e00\u6b3e\u7535\u5b50\u8868\u683c\u8f6f\u4ef6\u3002Excel\u51ed\u501f\u5176\u76f4\u89c2\u7684\u754c\u9762\u3001\u51fa\u8272\u7684\u8ba1\u7b97\u529f\u80fd\u548c\u56fe\u8868\u5de5\u5177\uff0c\u518d\u52a0\u4e0a\u6210\u529f\u7684\u5e02\u573a\u8425\u9500\uff0c\u4e00\u76f4\u4ee5\u6765\u90fd\u662f\u6700\u4e3a\u6d41\u884c\u7684\u4e2a\u4eba\u8ba1\u7b97\u673a\u6570\u636e\u5904\u7406\u8f6f\u4ef6\u3002\u5f53\u7136\uff0cExcel\u4e5f\u6709\u5f88\u591a\u7ade\u54c1\uff0c\u4f8b\u5982Google Sheets\u3001LibreOffice Calc\u3001Numbers\u7b49\uff0c\u8fd9\u4e9b\u7ade\u54c1\u57fa\u672c\u4e0a\u4e5f\u80fd\u591f\u517c\u5bb9Excel\uff0c\u81f3\u5c11\u80fd\u591f\u8bfb\u5199\u8f83\u65b0\u7248\u672c\u7684Excel\u6587\u4ef6\uff0c\u5f53\u7136\u8fd9\u4e9b\u4e0d\u662f\u6211\u4eec\u8ba8\u8bba\u7684\u91cd\u70b9\u3002\u638c\u63e1\u7528Python\u7a0b\u5e8f\u64cd\u4f5cExcel\u6587\u4ef6\uff0c\u53ef\u4ee5\u8ba9\u65e5\u5e38\u529e\u516c\u81ea\u52a8\u5316\u7684\u5de5\u4f5c\u66f4\u52a0\u8f7b\u677e\u6109\u5feb\uff0c\u800c\u4e14\u5728\u5f88\u591a\u5546\u4e1a\u9879\u76ee\u4e2d\uff0c\u5bfc\u5165\u5bfc\u51faExcel\u6587\u4ef6\u90fd\u662f\u7279\u522b\u5e38\u89c1\u7684\u529f\u80fd\u3002 Python\u64cd\u4f5cExcel\u9700\u8981\u4e09\u65b9\u5e93\u7684\u652f\u6301\uff0c\u5982\u679c\u8981\u517c\u5bb9Excel 2007\u4ee5\u524d\u7684\u7248\u672c\uff0c\u4e5f\u5c31\u662f xls \u683c\u5f0f\u7684Excel\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e09\u65b9\u5e93 xlrd \u548c xlwt \uff0c\u524d\u8005\u7528\u4e8e\u8bfbExcel\u6587\u4ef6\uff0c\u540e\u8005\u7528\u4e8e\u5199Excel\u6587\u4ef6\u3002\u5982\u679c\u4f7f\u7528\u8f83\u65b0\u7248\u672c\u7684Excel\uff0c\u5373\u64cd\u4f5c xlsx \u683c\u5f0f\u7684Excel\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528 openpyxl \u5e93\uff0c\u5f53\u7136\u8fd9\u4e2a\u5e93\u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u64cd\u4f5cExcel\uff0c\u8fd8\u53ef\u4ee5\u64cd\u4f5c\u5176\u4ed6\u57fa\u4e8eOffice Open XML\u7684\u7535\u5b50\u8868\u683c\u6587\u4ef6\u3002 \u672c\u7ae0\u6211\u4eec\u5148\u8bb2\u89e3\u57fa\u4e8e xlwt \u548c xlrd \u64cd\u4f5cExcel\u6587\u4ef6\uff0c\u5927\u5bb6\u53ef\u4ee5\u5148\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5b89\u88c5\u8fd9\u4e24\u4e2a\u4e09\u65b9\u5e93\u4ee5\u53ca\u914d\u5408\u4f7f\u7528\u7684\u5de5\u5177\u6a21\u5757 xlutils \u3002 pip install xlwt xlrd xlutils \u8bfbExcel\u6587\u4ef6 \u4f8b\u5982\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u6709\u4e00\u4e2a\u540d\u4e3a\u201c\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xls\u201d\u7684Excel\u6587\u4ef6\uff0c\u5982\u679c\u60f3\u8bfb\u53d6\u5e76\u663e\u793a\u8be5\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u3002 import xlrd # \u4f7f\u7528xlrd\u6a21\u5757\u7684open_workbook\u51fd\u6570\u6253\u5f00\u6307\u5b9aExcel\u6587\u4ef6\u5e76\u83b7\u5f97Book\u5bf9\u8c61\uff08\u5de5\u4f5c\u7c3f\uff09 wb = xlrd . open_workbook ( '\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xls' ) # \u901a\u8fc7Book\u5bf9\u8c61\u7684sheet_names\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u6240\u6709\u8868\u5355\u540d\u79f0 sheetnames = wb . sheet_names () print ( sheetnames ) # \u901a\u8fc7\u6307\u5b9a\u7684\u8868\u5355\u540d\u79f0\u83b7\u53d6Sheet\u5bf9\u8c61\uff08\u5de5\u4f5c\u8868\uff09 sheet = wb . sheet_by_name ( sheetnames [ 0 ]) # \u901a\u8fc7Sheet\u5bf9\u8c61\u7684nrows\u548cncols\u5c5e\u6027\u83b7\u53d6\u8868\u5355\u7684\u884c\u6570\u548c\u5217\u6570 print ( sheet . nrows , sheet . ncols ) for row in range ( sheet . nrows ): for col in range ( sheet . ncols ): # \u901a\u8fc7Sheet\u5bf9\u8c61\u7684cell\u65b9\u6cd5\u83b7\u53d6\u6307\u5b9aCell\u5bf9\u8c61\uff08\u5355\u5143\u683c\uff09 # \u901a\u8fc7Cell\u5bf9\u8c61\u7684value\u5c5e\u6027\u83b7\u53d6\u5355\u5143\u683c\u4e2d\u7684\u503c value = sheet . cell ( row , col ) . value # \u5bf9\u9664\u9996\u884c\u5916\u7684\u5176\u4ed6\u884c\u8fdb\u884c\u6570\u636e\u683c\u5f0f\u5316\u5904\u7406 if row > 0 : # \u7b2c1\u5217\u7684xldate\u7c7b\u578b\u5148\u8f6c\u6210\u5143\u7ec4\u518d\u683c\u5f0f\u5316\u4e3a\u201c\u5e74\u6708\u65e5\u201d\u7684\u683c\u5f0f if col == 0 : # xldate_as_tuple\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ea\u67090\u548c1\u4e24\u4e2a\u53d6\u503c # \u5176\u4e2d0\u4ee3\u8868\u4ee51900-01-01\u4e3a\u57fa\u51c6\u7684\u65e5\u671f\uff0c1\u4ee3\u8868\u4ee51904-01-01\u4e3a\u57fa\u51c6\u7684\u65e5\u671f value = xlrd . xldate_as_tuple ( value , 0 ) value = f ' { value [ 0 ] } \u5e74 { value [ 1 ] : >02d } \u6708 { value [ 2 ] : >02d } \u65e5' # \u5176\u4ed6\u5217\u7684number\u7c7b\u578b\u5904\u7406\u6210\u5c0f\u6570\u70b9\u540e\u4fdd\u7559\u4e24\u4f4d\u6709\u6548\u6570\u5b57\u7684\u6d6e\u70b9\u6570 else : value = f ' { value : .2f } ' print ( value , end = ' \\t ' ) print () # \u83b7\u53d6\u6700\u540e\u4e00\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\u7c7b\u578b # 0 - \u7a7a\u503c\uff0c1 - \u5b57\u7b26\u4e32\uff0c2 - \u6570\u5b57\uff0c3 - \u65e5\u671f\uff0c4 - \u5e03\u5c14\uff0c5 - \u9519\u8bef last_cell_type = sheet . cell_type ( sheet . nrows - 1 , sheet . ncols - 1 ) print ( last_cell_type ) # \u83b7\u53d6\u7b2c\u4e00\u884c\u7684\u503c\uff08\u5217\u8868\uff09 print ( sheet . row_values ( 0 )) # \u83b7\u53d6\u6307\u5b9a\u884c\u6307\u5b9a\u5217\u8303\u56f4\u7684\u6570\u636e\uff08\u5217\u8868\uff09 # \u7b2c\u4e00\u4e2a\u53c2\u6570\u4ee3\u8868\u884c\u7d22\u5f15\uff0c\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4ee3\u8868\u5217\u7684\u5f00\u59cb\uff08\u542b\uff09\u548c\u7ed3\u675f\uff08\u4e0d\u542b\uff09\u7d22\u5f15 print ( sheet . row_slice ( 3 , 0 , 5 )) \u63d0\u793a \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684Excel\u6587\u4ef6\u201c\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xls\u201d\u53ef\u4ee5\u901a\u8fc7\u540e\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u5730\u5740\u8fdb\u884c\u83b7\u53d6\u3002\u94fe\u63a5:https://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g \u63d0\u53d6\u7801:e7b4\u3002 \u76f8\u4fe1\u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5927\u5bb6\u5df2\u7ecf\u4e86\u89e3\u5230\u4e86\u5982\u4f55\u8bfb\u53d6\u4e00\u4e2aExcel\u6587\u4ef6\uff0c\u5982\u679c\u60f3\u77e5\u9053\u66f4\u591a\u5173\u4e8e xlrd \u6a21\u5757\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u9605\u8bfb\u5b83\u7684 \u5b98\u65b9\u6587\u6863 \u3002 \u5199Excel\u6587\u4ef6 \u5199\u5165Excel\u6587\u4ef6\u53ef\u4ee5\u901a\u8fc7 xlwt \u6a21\u5757\u7684 Workbook \u7c7b\u521b\u5efa\u5de5\u4f5c\u7c3f\u5bf9\u8c61\uff0c\u901a\u8fc7\u5de5\u4f5c\u7c3f\u5bf9\u8c61\u7684 add_sheet \u65b9\u6cd5\u53ef\u4ee5\u6dfb\u52a0\u5de5\u4f5c\u8868\uff0c\u901a\u8fc7\u5de5\u4f5c\u8868\u5bf9\u8c61\u7684 write \u65b9\u6cd5\u53ef\u4ee5\u5411\u6307\u5b9a\u5355\u5143\u683c\u4e2d\u5199\u5165\u6570\u636e\uff0c\u6700\u540e\u901a\u8fc7\u5de5\u4f5c\u7c3f\u5bf9\u8c61\u7684 save \u65b9\u6cd5\u5c06\u5de5\u4f5c\u7c3f\u5199\u5165\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u6216\u5185\u5b58\u4e2d\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u5c06 5 \u4e2a\u5b66\u751f 3 \u95e8\u8bfe\u7a0b\u7684\u8003\u8bd5\u6210\u7ee9\u5199\u5165Excel\u6587\u4ef6\u7684\u64cd\u4f5c\u3002 import random import xlwt student_names = [ '\u5173\u7fbd' , '\u5f20\u98de' , '\u8d75\u4e91' , '\u9a6c\u8d85' , '\u9ec4\u5fe0' ] scores = [[ random . randrange ( 50 , 101 ) for _ in range ( 3 )] for _ in range ( 5 )] # \u521b\u5efa\u5de5\u4f5c\u7c3f\u5bf9\u8c61\uff08Workbook\uff09 wb = xlwt . Workbook () # \u521b\u5efa\u5de5\u4f5c\u8868\u5bf9\u8c61\uff08Worksheet\uff09 sheet = wb . add_sheet ( '\u4e00\u5e74\u7ea7\u4e8c\u73ed' ) # \u6dfb\u52a0\u8868\u5934\u6570\u636e titles = ( '\u59d3\u540d' , '\u8bed\u6587' , '\u6570\u5b66' , '\u82f1\u8bed' ) for index , title in enumerate ( titles ): sheet . write ( 0 , index , title ) # \u5c06\u5b66\u751f\u59d3\u540d\u548c\u8003\u8bd5\u6210\u7ee9\u5199\u5165\u5355\u5143\u683c for row in range ( len ( scores )): sheet . write ( row + 1 , 0 , student_names [ row ]) for col in range ( len ( scores [ row ])): sheet . write ( row + 1 , col + 1 , scores [ row ][ col ]) # \u4fdd\u5b58Excel\u5de5\u4f5c\u7c3f wb . save ( '\u8003\u8bd5\u6210\u7ee9\u8868.xls' ) \u8c03\u6574\u5355\u5143\u683c\u6837\u5f0f \u5728\u5199Excel\u6587\u4ef6\u65f6\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4e3a\u5355\u5143\u683c\u8bbe\u7f6e\u6837\u5f0f\uff0c\u4e3b\u8981\u5305\u62ec\u5b57\u4f53\uff08Font\uff09\u3001\u5bf9\u9f50\u65b9\u5f0f\uff08Alignment\uff09\u3001\u8fb9\u6846\uff08Border\uff09\u548c\u80cc\u666f\uff08Background\uff09\u7684\u8bbe\u7f6e\uff0c xlwt \u5bf9\u8fd9\u51e0\u9879\u8bbe\u7f6e\u90fd\u5c01\u88c5\u4e86\u5bf9\u5e94\u7684\u7c7b\u6765\u652f\u6301\u3002\u8981\u8bbe\u7f6e\u5355\u5143\u683c\u6837\u5f0f\u9700\u8981\u9996\u5148\u521b\u5efa\u4e00\u4e2a XFStyle \u5bf9\u8c61\uff0c\u518d\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684\u5c5e\u6027\u5bf9\u5b57\u4f53\u3001\u5bf9\u9f50\u65b9\u5f0f\u3001\u8fb9\u6846\u7b49\u8fdb\u884c\u8bbe\u5b9a\uff0c\u4f8b\u5982\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u5e0c\u671b\u5c06\u8868\u5934\u5355\u5143\u683c\u7684\u80cc\u666f\u8272\u4fee\u6539\u4e3a\u9ec4\u8272\uff0c\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u7684\u65b9\u5f0f\u8fdb\u884c\u64cd\u4f5c\u3002 header_style = xlwt . XFStyle () pattern = xlwt . Pattern () pattern . pattern = xlwt . Pattern . SOLID_PATTERN # 0 - \u9ed1\u8272\u30011 - \u767d\u8272\u30012 - \u7ea2\u8272\u30013 - \u7eff\u8272\u30014 - \u84dd\u8272\u30015 - \u9ec4\u8272\u30016 - \u7c89\u8272\u30017 - \u9752\u8272 pattern . pattern_fore_colour = 5 header_style . pattern = pattern titles = ( '\u59d3\u540d' , '\u8bed\u6587' , '\u6570\u5b66' , '\u82f1\u8bed' ) for index , title in enumerate ( titles ): sheet . write ( 0 , index , title , header_style ) \u5982\u679c\u5e0c\u671b\u4e3a\u8868\u5934\u8bbe\u7f6e\u6307\u5b9a\u7684\u5b57\u4f53\uff0c\u53ef\u4ee5\u4f7f\u7528 Font \u7c7b\u5e76\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\u3002 font = xlwt . Font () # \u5b57\u4f53\u540d\u79f0 font . name = '\u534e\u6587\u6977\u4f53' # \u5b57\u4f53\u5927\u5c0f\uff0820\u662f\u57fa\u51c6\u5355\u4f4d\uff0c18\u8868\u793a18px\uff09 font . height = 20 * 18 # \u662f\u5426\u4f7f\u7528\u7c97\u4f53 font . bold = True # \u662f\u5426\u4f7f\u7528\u659c\u4f53 font . italic = False # \u5b57\u4f53\u989c\u8272 font . colour_index = 1 header_style . font = font \u6ce8\u610f \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u6307\u5b9a\u7684\u5b57\u4f53\u540d\uff08 font.name \uff09\u5e94\u5f53\u662f\u672c\u5730\u7cfb\u7edf\u6709\u7684\u5b57\u4f53\uff0c\u4f8b\u5982\u5728\u6211\u7684\u7535\u8111\u4e0a\u6709\u540d\u4e3a\u201c\u534e\u6587\u6977\u4f53\u201d\u7684\u5b57\u4f53\u3002 \u5982\u679c\u5e0c\u671b\u8868\u5934\u5782\u76f4\u5c45\u4e2d\u5bf9\u9f50\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u8bbe\u7f6e\u3002 align = xlwt . Alignment () # \u5782\u76f4\u65b9\u5411\u7684\u5bf9\u9f50\u65b9\u5f0f align . vert = xlwt . Alignment . VERT_CENTER # \u6c34\u5e73\u65b9\u5411\u7684\u5bf9\u9f50\u65b9\u5f0f align . horz = xlwt . Alignment . HORZ_CENTER header_style . alignment = align \u5982\u679c\u5e0c\u671b\u7ed9\u8868\u5934\u52a0\u4e0a\u9ec4\u8272\u7684\u865a\u7ebf\u8fb9\u6846\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u8bbe\u7f6e\u3002 borders = xlwt . Borders () props = ( ( 'top' , 'top_colour' ), ( 'right' , 'right_colour' ), ( 'bottom' , 'bottom_colour' ), ( 'left' , 'left_colour' ) ) # \u901a\u8fc7\u5faa\u73af\u5bf9\u56db\u4e2a\u65b9\u5411\u7684\u8fb9\u6846\u6837\u5f0f\u53ca\u989c\u8272\u8fdb\u884c\u8bbe\u5b9a for position , color in props : # \u4f7f\u7528setattr\u5185\u7f6e\u51fd\u6570\u52a8\u6001\u7ed9\u5bf9\u8c61\u6307\u5b9a\u7684\u5c5e\u6027\u8d4b\u503c setattr ( borders , position , xlwt . Borders . DASHED ) setattr ( borders , color , 5 ) header_style . borders = borders \u5982\u679c\u8981\u8c03\u6574\u5355\u5143\u683c\u7684\u5bbd\u5ea6\uff08\u5217\u5bbd\uff09\u548c\u8868\u5934\u7684\u9ad8\u5ea6\uff08\u884c\u9ad8\uff09\uff0c\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u64cd\u4f5c\u3002 # \u8bbe\u7f6e\u884c\u9ad8\u4e3a40px sheet . row ( 0 ) . set_style ( xlwt . easyxf ( f 'font:height { 20 * 40 } ' )) titles = ( '\u59d3\u540d' , '\u8bed\u6587' , '\u6570\u5b66' , '\u82f1\u8bed' ) for index , title in enumerate ( titles ): # \u8bbe\u7f6e\u5217\u5bbd\u4e3a200px sheet . col ( index ) . width = 20 * 200 # \u8bbe\u7f6e\u5355\u5143\u683c\u7684\u6570\u636e\u548c\u6837\u5f0f sheet . write ( 0 , index , title , header_style ) \u516c\u5f0f\u8ba1\u7b97 \u5bf9\u4e8e\u524d\u9762\u6253\u5f00\u7684\u201c\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xls\u201d\u6587\u4ef6\uff0c\u5982\u679c\u8981\u7edf\u8ba1\u5168\u5e74\u6536\u76d8\u4ef7\uff08Close\u5b57\u6bb5\uff09\u7684\u5e73\u5747\u503c\u4ee5\u53ca\u5168\u5e74\u4ea4\u6613\u91cf\uff08Volume\u5b57\u6bb5\uff09\u7684\u603b\u548c\uff0c\u53ef\u4ee5\u4f7f\u7528Excel\u7684\u516c\u5f0f\u8ba1\u7b97\u5373\u53ef\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u4f7f\u7528 xlrd \u8bfb\u53d6Excel\u6587\u4ef6\u5939\uff0c\u7136\u540e\u901a\u8fc7 xlutils \u4e09\u65b9\u5e93\u63d0\u4f9b\u7684 copy \u51fd\u6570\u5c06\u8bfb\u53d6\u5230\u7684Excel\u6587\u4ef6\u8f6c\u6210 Workbook \u5bf9\u8c61\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u5728\u8c03\u7528 write \u65b9\u6cd5\u65f6\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e2a Formula \u5bf9\u8c61\u5199\u5165\u5355\u5143\u683c\u3002 \u5b9e\u73b0\u516c\u5f0f\u8ba1\u7b97\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import xlrd import xlwt from xlutils.copy import copy wb_for_read = xlrd . open_workbook ( '\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xls' ) sheet1 = wb_for_read . sheet_by_index ( 0 ) nrows , ncols = sheet1 . nrows , sheet1 . ncols wb_for_write = copy ( wb_for_read ) sheet2 = wb_for_write . get_sheet ( 0 ) sheet2 . write ( nrows , 4 , xlwt . Formula ( f 'average(E2:E { nrows } )' )) sheet2 . write ( nrows , 6 , xlwt . Formula ( f 'sum(G2:G { nrows } )' )) wb_for_write . save ( '\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e\u6c47\u603b.xls' ) \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u6709\u4e00\u4e9b\u5c0f\u7455\u75b5\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u63a2\u7d22\u5e76\u601d\u8003\u5982\u4f55\u89e3\u51b3\u3002 \u7b80\u5355\u7684\u603b\u7ed3 \u638c\u63e1\u4e86Python\u7a0b\u5e8f\u64cd\u4f5cExcel\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u89e3\u51b3\u65e5\u5e38\u529e\u516c\u4e2d\u5f88\u591a\u7e41\u7410\u7684\u5904\u7406Excel\u7535\u5b50\u8868\u683c\u5de5\u4f5c\uff0c\u6700\u5e38\u89c1\u5c31\u662f\u5c06\u591a\u4e2a\u6570\u636e\u683c\u5f0f\u76f8\u540c\u7684Excel\u6587\u4ef6\u5408\u5e76\u5230\u4e00\u4e2a\u6587\u4ef6\u4ee5\u53ca\u4ece\u591a\u4e2aExcel\u6587\u4ef6\u6216\u8868\u5355\u4e2d\u63d0\u53d6\u6307\u5b9a\u7684\u6570\u636e\u3002\u5f53\u7136\uff0c\u5982\u679c\u8981\u5bf9\u8868\u683c\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u4f7f\u7528Python\u6570\u636e\u5206\u6790\u795e\u5668\u4e4b\u4e00\u7684 pandas \u5e93\u53ef\u80fd\u66f4\u4e3a\u65b9\u4fbf\u3002","title":"\u7b2c24\u8bfe\uff1a\u7528Python\u8bfb\u5199Excel\u6587\u4ef6 1"},{"location":"%E7%AC%AC24%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-1/#24pythonexcel-1","text":"","title":"\u7b2c24\u8bfe\uff1a\u7528Python\u8bfb\u5199Excel\u6587\u4ef6-1"},{"location":"%E7%AC%AC24%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-1/#excel","text":"Excel\u662fMicrosoft\uff08\u5fae\u8f6f\uff09\u4e3a\u4f7f\u7528Windows\u548cmacOS\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u7684\u4e00\u6b3e\u7535\u5b50\u8868\u683c\u8f6f\u4ef6\u3002Excel\u51ed\u501f\u5176\u76f4\u89c2\u7684\u754c\u9762\u3001\u51fa\u8272\u7684\u8ba1\u7b97\u529f\u80fd\u548c\u56fe\u8868\u5de5\u5177\uff0c\u518d\u52a0\u4e0a\u6210\u529f\u7684\u5e02\u573a\u8425\u9500\uff0c\u4e00\u76f4\u4ee5\u6765\u90fd\u662f\u6700\u4e3a\u6d41\u884c\u7684\u4e2a\u4eba\u8ba1\u7b97\u673a\u6570\u636e\u5904\u7406\u8f6f\u4ef6\u3002\u5f53\u7136\uff0cExcel\u4e5f\u6709\u5f88\u591a\u7ade\u54c1\uff0c\u4f8b\u5982Google Sheets\u3001LibreOffice Calc\u3001Numbers\u7b49\uff0c\u8fd9\u4e9b\u7ade\u54c1\u57fa\u672c\u4e0a\u4e5f\u80fd\u591f\u517c\u5bb9Excel\uff0c\u81f3\u5c11\u80fd\u591f\u8bfb\u5199\u8f83\u65b0\u7248\u672c\u7684Excel\u6587\u4ef6\uff0c\u5f53\u7136\u8fd9\u4e9b\u4e0d\u662f\u6211\u4eec\u8ba8\u8bba\u7684\u91cd\u70b9\u3002\u638c\u63e1\u7528Python\u7a0b\u5e8f\u64cd\u4f5cExcel\u6587\u4ef6\uff0c\u53ef\u4ee5\u8ba9\u65e5\u5e38\u529e\u516c\u81ea\u52a8\u5316\u7684\u5de5\u4f5c\u66f4\u52a0\u8f7b\u677e\u6109\u5feb\uff0c\u800c\u4e14\u5728\u5f88\u591a\u5546\u4e1a\u9879\u76ee\u4e2d\uff0c\u5bfc\u5165\u5bfc\u51faExcel\u6587\u4ef6\u90fd\u662f\u7279\u522b\u5e38\u89c1\u7684\u529f\u80fd\u3002 Python\u64cd\u4f5cExcel\u9700\u8981\u4e09\u65b9\u5e93\u7684\u652f\u6301\uff0c\u5982\u679c\u8981\u517c\u5bb9Excel 2007\u4ee5\u524d\u7684\u7248\u672c\uff0c\u4e5f\u5c31\u662f xls \u683c\u5f0f\u7684Excel\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e09\u65b9\u5e93 xlrd \u548c xlwt \uff0c\u524d\u8005\u7528\u4e8e\u8bfbExcel\u6587\u4ef6\uff0c\u540e\u8005\u7528\u4e8e\u5199Excel\u6587\u4ef6\u3002\u5982\u679c\u4f7f\u7528\u8f83\u65b0\u7248\u672c\u7684Excel\uff0c\u5373\u64cd\u4f5c xlsx \u683c\u5f0f\u7684Excel\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528 openpyxl \u5e93\uff0c\u5f53\u7136\u8fd9\u4e2a\u5e93\u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u64cd\u4f5cExcel\uff0c\u8fd8\u53ef\u4ee5\u64cd\u4f5c\u5176\u4ed6\u57fa\u4e8eOffice Open XML\u7684\u7535\u5b50\u8868\u683c\u6587\u4ef6\u3002 \u672c\u7ae0\u6211\u4eec\u5148\u8bb2\u89e3\u57fa\u4e8e xlwt \u548c xlrd \u64cd\u4f5cExcel\u6587\u4ef6\uff0c\u5927\u5bb6\u53ef\u4ee5\u5148\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5b89\u88c5\u8fd9\u4e24\u4e2a\u4e09\u65b9\u5e93\u4ee5\u53ca\u914d\u5408\u4f7f\u7528\u7684\u5de5\u5177\u6a21\u5757 xlutils \u3002 pip install xlwt xlrd xlutils","title":"Excel\u7b80\u4ecb"},{"location":"%E7%AC%AC24%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-1/#excel_1","text":"\u4f8b\u5982\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u6709\u4e00\u4e2a\u540d\u4e3a\u201c\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xls\u201d\u7684Excel\u6587\u4ef6\uff0c\u5982\u679c\u60f3\u8bfb\u53d6\u5e76\u663e\u793a\u8be5\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u3002 import xlrd # \u4f7f\u7528xlrd\u6a21\u5757\u7684open_workbook\u51fd\u6570\u6253\u5f00\u6307\u5b9aExcel\u6587\u4ef6\u5e76\u83b7\u5f97Book\u5bf9\u8c61\uff08\u5de5\u4f5c\u7c3f\uff09 wb = xlrd . open_workbook ( '\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xls' ) # \u901a\u8fc7Book\u5bf9\u8c61\u7684sheet_names\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u6240\u6709\u8868\u5355\u540d\u79f0 sheetnames = wb . sheet_names () print ( sheetnames ) # \u901a\u8fc7\u6307\u5b9a\u7684\u8868\u5355\u540d\u79f0\u83b7\u53d6Sheet\u5bf9\u8c61\uff08\u5de5\u4f5c\u8868\uff09 sheet = wb . sheet_by_name ( sheetnames [ 0 ]) # \u901a\u8fc7Sheet\u5bf9\u8c61\u7684nrows\u548cncols\u5c5e\u6027\u83b7\u53d6\u8868\u5355\u7684\u884c\u6570\u548c\u5217\u6570 print ( sheet . nrows , sheet . ncols ) for row in range ( sheet . nrows ): for col in range ( sheet . ncols ): # \u901a\u8fc7Sheet\u5bf9\u8c61\u7684cell\u65b9\u6cd5\u83b7\u53d6\u6307\u5b9aCell\u5bf9\u8c61\uff08\u5355\u5143\u683c\uff09 # \u901a\u8fc7Cell\u5bf9\u8c61\u7684value\u5c5e\u6027\u83b7\u53d6\u5355\u5143\u683c\u4e2d\u7684\u503c value = sheet . cell ( row , col ) . value # \u5bf9\u9664\u9996\u884c\u5916\u7684\u5176\u4ed6\u884c\u8fdb\u884c\u6570\u636e\u683c\u5f0f\u5316\u5904\u7406 if row > 0 : # \u7b2c1\u5217\u7684xldate\u7c7b\u578b\u5148\u8f6c\u6210\u5143\u7ec4\u518d\u683c\u5f0f\u5316\u4e3a\u201c\u5e74\u6708\u65e5\u201d\u7684\u683c\u5f0f if col == 0 : # xldate_as_tuple\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ea\u67090\u548c1\u4e24\u4e2a\u53d6\u503c # \u5176\u4e2d0\u4ee3\u8868\u4ee51900-01-01\u4e3a\u57fa\u51c6\u7684\u65e5\u671f\uff0c1\u4ee3\u8868\u4ee51904-01-01\u4e3a\u57fa\u51c6\u7684\u65e5\u671f value = xlrd . xldate_as_tuple ( value , 0 ) value = f ' { value [ 0 ] } \u5e74 { value [ 1 ] : >02d } \u6708 { value [ 2 ] : >02d } \u65e5' # \u5176\u4ed6\u5217\u7684number\u7c7b\u578b\u5904\u7406\u6210\u5c0f\u6570\u70b9\u540e\u4fdd\u7559\u4e24\u4f4d\u6709\u6548\u6570\u5b57\u7684\u6d6e\u70b9\u6570 else : value = f ' { value : .2f } ' print ( value , end = ' \\t ' ) print () # \u83b7\u53d6\u6700\u540e\u4e00\u4e2a\u5355\u5143\u683c\u7684\u6570\u636e\u7c7b\u578b # 0 - \u7a7a\u503c\uff0c1 - \u5b57\u7b26\u4e32\uff0c2 - \u6570\u5b57\uff0c3 - \u65e5\u671f\uff0c4 - \u5e03\u5c14\uff0c5 - \u9519\u8bef last_cell_type = sheet . cell_type ( sheet . nrows - 1 , sheet . ncols - 1 ) print ( last_cell_type ) # \u83b7\u53d6\u7b2c\u4e00\u884c\u7684\u503c\uff08\u5217\u8868\uff09 print ( sheet . row_values ( 0 )) # \u83b7\u53d6\u6307\u5b9a\u884c\u6307\u5b9a\u5217\u8303\u56f4\u7684\u6570\u636e\uff08\u5217\u8868\uff09 # \u7b2c\u4e00\u4e2a\u53c2\u6570\u4ee3\u8868\u884c\u7d22\u5f15\uff0c\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4ee3\u8868\u5217\u7684\u5f00\u59cb\uff08\u542b\uff09\u548c\u7ed3\u675f\uff08\u4e0d\u542b\uff09\u7d22\u5f15 print ( sheet . row_slice ( 3 , 0 , 5 )) \u63d0\u793a \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684Excel\u6587\u4ef6\u201c\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xls\u201d\u53ef\u4ee5\u901a\u8fc7\u540e\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u5730\u5740\u8fdb\u884c\u83b7\u53d6\u3002\u94fe\u63a5:https://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g \u63d0\u53d6\u7801:e7b4\u3002 \u76f8\u4fe1\u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5927\u5bb6\u5df2\u7ecf\u4e86\u89e3\u5230\u4e86\u5982\u4f55\u8bfb\u53d6\u4e00\u4e2aExcel\u6587\u4ef6\uff0c\u5982\u679c\u60f3\u77e5\u9053\u66f4\u591a\u5173\u4e8e xlrd \u6a21\u5757\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u9605\u8bfb\u5b83\u7684 \u5b98\u65b9\u6587\u6863 \u3002","title":"\u8bfbExcel\u6587\u4ef6"},{"location":"%E7%AC%AC24%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-1/#excel_2","text":"\u5199\u5165Excel\u6587\u4ef6\u53ef\u4ee5\u901a\u8fc7 xlwt \u6a21\u5757\u7684 Workbook \u7c7b\u521b\u5efa\u5de5\u4f5c\u7c3f\u5bf9\u8c61\uff0c\u901a\u8fc7\u5de5\u4f5c\u7c3f\u5bf9\u8c61\u7684 add_sheet \u65b9\u6cd5\u53ef\u4ee5\u6dfb\u52a0\u5de5\u4f5c\u8868\uff0c\u901a\u8fc7\u5de5\u4f5c\u8868\u5bf9\u8c61\u7684 write \u65b9\u6cd5\u53ef\u4ee5\u5411\u6307\u5b9a\u5355\u5143\u683c\u4e2d\u5199\u5165\u6570\u636e\uff0c\u6700\u540e\u901a\u8fc7\u5de5\u4f5c\u7c3f\u5bf9\u8c61\u7684 save \u65b9\u6cd5\u5c06\u5de5\u4f5c\u7c3f\u5199\u5165\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u6216\u5185\u5b58\u4e2d\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u5c06 5 \u4e2a\u5b66\u751f 3 \u95e8\u8bfe\u7a0b\u7684\u8003\u8bd5\u6210\u7ee9\u5199\u5165Excel\u6587\u4ef6\u7684\u64cd\u4f5c\u3002 import random import xlwt student_names = [ '\u5173\u7fbd' , '\u5f20\u98de' , '\u8d75\u4e91' , '\u9a6c\u8d85' , '\u9ec4\u5fe0' ] scores = [[ random . randrange ( 50 , 101 ) for _ in range ( 3 )] for _ in range ( 5 )] # \u521b\u5efa\u5de5\u4f5c\u7c3f\u5bf9\u8c61\uff08Workbook\uff09 wb = xlwt . Workbook () # \u521b\u5efa\u5de5\u4f5c\u8868\u5bf9\u8c61\uff08Worksheet\uff09 sheet = wb . add_sheet ( '\u4e00\u5e74\u7ea7\u4e8c\u73ed' ) # \u6dfb\u52a0\u8868\u5934\u6570\u636e titles = ( '\u59d3\u540d' , '\u8bed\u6587' , '\u6570\u5b66' , '\u82f1\u8bed' ) for index , title in enumerate ( titles ): sheet . write ( 0 , index , title ) # \u5c06\u5b66\u751f\u59d3\u540d\u548c\u8003\u8bd5\u6210\u7ee9\u5199\u5165\u5355\u5143\u683c for row in range ( len ( scores )): sheet . write ( row + 1 , 0 , student_names [ row ]) for col in range ( len ( scores [ row ])): sheet . write ( row + 1 , col + 1 , scores [ row ][ col ]) # \u4fdd\u5b58Excel\u5de5\u4f5c\u7c3f wb . save ( '\u8003\u8bd5\u6210\u7ee9\u8868.xls' )","title":"\u5199Excel\u6587\u4ef6"},{"location":"%E7%AC%AC24%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-1/#_1","text":"\u5728\u5199Excel\u6587\u4ef6\u65f6\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4e3a\u5355\u5143\u683c\u8bbe\u7f6e\u6837\u5f0f\uff0c\u4e3b\u8981\u5305\u62ec\u5b57\u4f53\uff08Font\uff09\u3001\u5bf9\u9f50\u65b9\u5f0f\uff08Alignment\uff09\u3001\u8fb9\u6846\uff08Border\uff09\u548c\u80cc\u666f\uff08Background\uff09\u7684\u8bbe\u7f6e\uff0c xlwt \u5bf9\u8fd9\u51e0\u9879\u8bbe\u7f6e\u90fd\u5c01\u88c5\u4e86\u5bf9\u5e94\u7684\u7c7b\u6765\u652f\u6301\u3002\u8981\u8bbe\u7f6e\u5355\u5143\u683c\u6837\u5f0f\u9700\u8981\u9996\u5148\u521b\u5efa\u4e00\u4e2a XFStyle \u5bf9\u8c61\uff0c\u518d\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684\u5c5e\u6027\u5bf9\u5b57\u4f53\u3001\u5bf9\u9f50\u65b9\u5f0f\u3001\u8fb9\u6846\u7b49\u8fdb\u884c\u8bbe\u5b9a\uff0c\u4f8b\u5982\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u5e0c\u671b\u5c06\u8868\u5934\u5355\u5143\u683c\u7684\u80cc\u666f\u8272\u4fee\u6539\u4e3a\u9ec4\u8272\uff0c\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u7684\u65b9\u5f0f\u8fdb\u884c\u64cd\u4f5c\u3002 header_style = xlwt . XFStyle () pattern = xlwt . Pattern () pattern . pattern = xlwt . Pattern . SOLID_PATTERN # 0 - \u9ed1\u8272\u30011 - \u767d\u8272\u30012 - \u7ea2\u8272\u30013 - \u7eff\u8272\u30014 - \u84dd\u8272\u30015 - \u9ec4\u8272\u30016 - \u7c89\u8272\u30017 - \u9752\u8272 pattern . pattern_fore_colour = 5 header_style . pattern = pattern titles = ( '\u59d3\u540d' , '\u8bed\u6587' , '\u6570\u5b66' , '\u82f1\u8bed' ) for index , title in enumerate ( titles ): sheet . write ( 0 , index , title , header_style ) \u5982\u679c\u5e0c\u671b\u4e3a\u8868\u5934\u8bbe\u7f6e\u6307\u5b9a\u7684\u5b57\u4f53\uff0c\u53ef\u4ee5\u4f7f\u7528 Font \u7c7b\u5e76\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\u3002 font = xlwt . Font () # \u5b57\u4f53\u540d\u79f0 font . name = '\u534e\u6587\u6977\u4f53' # \u5b57\u4f53\u5927\u5c0f\uff0820\u662f\u57fa\u51c6\u5355\u4f4d\uff0c18\u8868\u793a18px\uff09 font . height = 20 * 18 # \u662f\u5426\u4f7f\u7528\u7c97\u4f53 font . bold = True # \u662f\u5426\u4f7f\u7528\u659c\u4f53 font . italic = False # \u5b57\u4f53\u989c\u8272 font . colour_index = 1 header_style . font = font \u6ce8\u610f \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u6307\u5b9a\u7684\u5b57\u4f53\u540d\uff08 font.name \uff09\u5e94\u5f53\u662f\u672c\u5730\u7cfb\u7edf\u6709\u7684\u5b57\u4f53\uff0c\u4f8b\u5982\u5728\u6211\u7684\u7535\u8111\u4e0a\u6709\u540d\u4e3a\u201c\u534e\u6587\u6977\u4f53\u201d\u7684\u5b57\u4f53\u3002 \u5982\u679c\u5e0c\u671b\u8868\u5934\u5782\u76f4\u5c45\u4e2d\u5bf9\u9f50\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u8bbe\u7f6e\u3002 align = xlwt . Alignment () # \u5782\u76f4\u65b9\u5411\u7684\u5bf9\u9f50\u65b9\u5f0f align . vert = xlwt . Alignment . VERT_CENTER # \u6c34\u5e73\u65b9\u5411\u7684\u5bf9\u9f50\u65b9\u5f0f align . horz = xlwt . Alignment . HORZ_CENTER header_style . alignment = align \u5982\u679c\u5e0c\u671b\u7ed9\u8868\u5934\u52a0\u4e0a\u9ec4\u8272\u7684\u865a\u7ebf\u8fb9\u6846\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u8bbe\u7f6e\u3002 borders = xlwt . Borders () props = ( ( 'top' , 'top_colour' ), ( 'right' , 'right_colour' ), ( 'bottom' , 'bottom_colour' ), ( 'left' , 'left_colour' ) ) # \u901a\u8fc7\u5faa\u73af\u5bf9\u56db\u4e2a\u65b9\u5411\u7684\u8fb9\u6846\u6837\u5f0f\u53ca\u989c\u8272\u8fdb\u884c\u8bbe\u5b9a for position , color in props : # \u4f7f\u7528setattr\u5185\u7f6e\u51fd\u6570\u52a8\u6001\u7ed9\u5bf9\u8c61\u6307\u5b9a\u7684\u5c5e\u6027\u8d4b\u503c setattr ( borders , position , xlwt . Borders . DASHED ) setattr ( borders , color , 5 ) header_style . borders = borders \u5982\u679c\u8981\u8c03\u6574\u5355\u5143\u683c\u7684\u5bbd\u5ea6\uff08\u5217\u5bbd\uff09\u548c\u8868\u5934\u7684\u9ad8\u5ea6\uff08\u884c\u9ad8\uff09\uff0c\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u4ee3\u7801\u8fdb\u884c\u64cd\u4f5c\u3002 # \u8bbe\u7f6e\u884c\u9ad8\u4e3a40px sheet . row ( 0 ) . set_style ( xlwt . easyxf ( f 'font:height { 20 * 40 } ' )) titles = ( '\u59d3\u540d' , '\u8bed\u6587' , '\u6570\u5b66' , '\u82f1\u8bed' ) for index , title in enumerate ( titles ): # \u8bbe\u7f6e\u5217\u5bbd\u4e3a200px sheet . col ( index ) . width = 20 * 200 # \u8bbe\u7f6e\u5355\u5143\u683c\u7684\u6570\u636e\u548c\u6837\u5f0f sheet . write ( 0 , index , title , header_style )","title":"\u8c03\u6574\u5355\u5143\u683c\u6837\u5f0f"},{"location":"%E7%AC%AC24%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-1/#_2","text":"\u5bf9\u4e8e\u524d\u9762\u6253\u5f00\u7684\u201c\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xls\u201d\u6587\u4ef6\uff0c\u5982\u679c\u8981\u7edf\u8ba1\u5168\u5e74\u6536\u76d8\u4ef7\uff08Close\u5b57\u6bb5\uff09\u7684\u5e73\u5747\u503c\u4ee5\u53ca\u5168\u5e74\u4ea4\u6613\u91cf\uff08Volume\u5b57\u6bb5\uff09\u7684\u603b\u548c\uff0c\u53ef\u4ee5\u4f7f\u7528Excel\u7684\u516c\u5f0f\u8ba1\u7b97\u5373\u53ef\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u4f7f\u7528 xlrd \u8bfb\u53d6Excel\u6587\u4ef6\u5939\uff0c\u7136\u540e\u901a\u8fc7 xlutils \u4e09\u65b9\u5e93\u63d0\u4f9b\u7684 copy \u51fd\u6570\u5c06\u8bfb\u53d6\u5230\u7684Excel\u6587\u4ef6\u8f6c\u6210 Workbook \u5bf9\u8c61\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u5728\u8c03\u7528 write \u65b9\u6cd5\u65f6\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e2a Formula \u5bf9\u8c61\u5199\u5165\u5355\u5143\u683c\u3002 \u5b9e\u73b0\u516c\u5f0f\u8ba1\u7b97\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import xlrd import xlwt from xlutils.copy import copy wb_for_read = xlrd . open_workbook ( '\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xls' ) sheet1 = wb_for_read . sheet_by_index ( 0 ) nrows , ncols = sheet1 . nrows , sheet1 . ncols wb_for_write = copy ( wb_for_read ) sheet2 = wb_for_write . get_sheet ( 0 ) sheet2 . write ( nrows , 4 , xlwt . Formula ( f 'average(E2:E { nrows } )' )) sheet2 . write ( nrows , 6 , xlwt . Formula ( f 'sum(G2:G { nrows } )' )) wb_for_write . save ( '\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e\u6c47\u603b.xls' ) \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u6709\u4e00\u4e9b\u5c0f\u7455\u75b5\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u63a2\u7d22\u5e76\u601d\u8003\u5982\u4f55\u89e3\u51b3\u3002","title":"\u516c\u5f0f\u8ba1\u7b97"},{"location":"%E7%AC%AC24%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-1/#_3","text":"\u638c\u63e1\u4e86Python\u7a0b\u5e8f\u64cd\u4f5cExcel\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u89e3\u51b3\u65e5\u5e38\u529e\u516c\u4e2d\u5f88\u591a\u7e41\u7410\u7684\u5904\u7406Excel\u7535\u5b50\u8868\u683c\u5de5\u4f5c\uff0c\u6700\u5e38\u89c1\u5c31\u662f\u5c06\u591a\u4e2a\u6570\u636e\u683c\u5f0f\u76f8\u540c\u7684Excel\u6587\u4ef6\u5408\u5e76\u5230\u4e00\u4e2a\u6587\u4ef6\u4ee5\u53ca\u4ece\u591a\u4e2aExcel\u6587\u4ef6\u6216\u8868\u5355\u4e2d\u63d0\u53d6\u6307\u5b9a\u7684\u6570\u636e\u3002\u5f53\u7136\uff0c\u5982\u679c\u8981\u5bf9\u8868\u683c\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u4f7f\u7528Python\u6570\u636e\u5206\u6790\u795e\u5668\u4e4b\u4e00\u7684 pandas \u5e93\u53ef\u80fd\u66f4\u4e3a\u65b9\u4fbf\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC25%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-2/","text":"\u7b2c25\u8bfe\uff1a\u7528Python\u8bfb\u5199Excel\u6587\u4ef6-2 Excel\u7b80\u4ecb Excel\u662fMicrosoft\uff08\u5fae\u8f6f\uff09\u4e3a\u4f7f\u7528Windows\u548cmacOS\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u7684\u4e00\u6b3e\u7535\u5b50\u8868\u683c\u8f6f\u4ef6\u3002Excel\u51ed\u501f\u5176\u76f4\u89c2\u7684\u754c\u9762\u3001\u51fa\u8272\u7684\u8ba1\u7b97\u529f\u80fd\u548c\u56fe\u8868\u5de5\u5177\uff0c\u518d\u52a0\u4e0a\u6210\u529f\u7684\u5e02\u573a\u8425\u9500\uff0c\u4e00\u76f4\u4ee5\u6765\u90fd\u662f\u6700\u4e3a\u6d41\u884c\u7684\u4e2a\u4eba\u8ba1\u7b97\u673a\u6570\u636e\u5904\u7406\u8f6f\u4ef6\u3002\u5f53\u7136\uff0cExcel\u4e5f\u6709\u5f88\u591a\u7ade\u54c1\uff0c\u4f8b\u5982Google Sheets\u3001LibreOffice Calc\u3001Numbers\u7b49\uff0c\u8fd9\u4e9b\u7ade\u54c1\u57fa\u672c\u4e0a\u4e5f\u80fd\u591f\u517c\u5bb9Excel\uff0c\u81f3\u5c11\u80fd\u591f\u8bfb\u5199\u8f83\u65b0\u7248\u672c\u7684Excel\u6587\u4ef6\uff0c\u5f53\u7136\u8fd9\u4e9b\u4e0d\u662f\u6211\u4eec\u8ba8\u8bba\u7684\u91cd\u70b9\u3002\u638c\u63e1\u7528Python\u7a0b\u5e8f\u64cd\u4f5cExcel\u6587\u4ef6\uff0c\u53ef\u4ee5\u8ba9\u65e5\u5e38\u529e\u516c\u81ea\u52a8\u5316\u7684\u5de5\u4f5c\u66f4\u52a0\u8f7b\u677e\u6109\u5feb\uff0c\u800c\u4e14\u5728\u5f88\u591a\u5546\u4e1a\u9879\u76ee\u4e2d\uff0c\u5bfc\u5165\u5bfc\u51faExcel\u6587\u4ef6\u90fd\u662f\u7279\u522b\u5e38\u89c1\u7684\u529f\u80fd\u3002 \u672c\u7ae0\u6211\u4eec\u7ee7\u7eed\u8bb2\u89e3\u57fa\u4e8e\u53e6\u4e00\u4e2a\u4e09\u65b9\u5e93 openpyxl \u5982\u4f55\u8fdb\u884cExcel\u6587\u4ef6\u64cd\u4f5c\uff0c\u9996\u5148\u9700\u8981\u5148\u5b89\u88c5\u5b83\u3002 pip install openpyxl openpyxl \u7684\u4f18\u70b9\u5728\u4e8e\uff0c\u5f53\u6211\u4eec\u6253\u5f00\u4e00\u4e2aExcel\u6587\u4ef6\u540e\uff0c\u65e2\u53ef\u4ee5\u5bf9\u5b83\u8fdb\u884c\u8bfb\u64cd\u4f5c\uff0c\u53c8\u53ef\u4ee5\u5bf9\u5b83\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u800c\u4e14\u5728\u64cd\u4f5c\u7684\u4fbf\u6377\u6027\u4e0a\u662f\u4f18\u4e8e xlwt \u548c xlrd \u7684\u3002\u6b64\u5916\uff0c\u5982\u679c\u8981\u8fdb\u884c\u6837\u5f0f\u7f16\u8f91\u548c\u516c\u5f0f\u8ba1\u7b97\uff0c\u4f7f\u7528 openpyxl \u4e5f\u8fdc\u6bd4\u4e0a\u4e00\u4e2a\u7ae0\u8282\u6211\u4eec\u8bb2\u89e3\u7684\u65b9\u5f0f\u66f4\u4e3a\u7b80\u5355\uff0c\u800c\u4e14 openpyxl \u8fd8\u652f\u6301\u6570\u636e\u900f\u89c6\u548c\u63d2\u5165\u56fe\u8868\u7b49\u64cd\u4f5c\uff0c\u529f\u80fd\u975e\u5e38\u5f3a\u5927\u3002\u6709\u4e00\u70b9\u9700\u8981\u518d\u6b21\u5f3a\u8c03\uff0c openpyxl \u5e76\u4e0d\u652f\u6301\u64cd\u4f5cOffice 2007\u4ee5\u524d\u7248\u672c\u7684Excel\u6587\u4ef6\u3002 \u8bfb\u53d6Excel\u6587\u4ef6 \u4f8b\u5982\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u6709\u4e00\u4e2a\u540d\u4e3a\u201c\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xlsx\u201d\u7684Excel\u6587\u4ef6\uff0c\u5982\u679c\u60f3\u8bfb\u53d6\u5e76\u663e\u793a\u8be5\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u3002 import datetime import openpyxl # \u52a0\u8f7d\u4e00\u4e2a\u5de5\u4f5c\u7c3f ---> Workbook wb = openpyxl . load_workbook ( '\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xlsx' ) # \u83b7\u53d6\u5de5\u4f5c\u8868\u7684\u540d\u5b57 print ( wb . sheetnames ) # \u83b7\u53d6\u5de5\u4f5c\u8868 ---> Worksheet sheet = wb . worksheets [ 0 ] # \u83b7\u5f97\u5355\u5143\u683c\u7684\u8303\u56f4 print ( sheet . dimensions ) # \u83b7\u5f97\u884c\u6570\u548c\u5217\u6570 print ( sheet . max_row , sheet . max_column ) # \u83b7\u53d6\u6307\u5b9a\u5355\u5143\u683c\u7684\u503c print ( sheet . cell ( 3 , 3 ) . value ) print ( sheet [ 'C3' ] . value ) print ( sheet [ 'G255' ] . value ) # \u83b7\u53d6\u591a\u4e2a\u5355\u5143\u683c\uff08\u5d4c\u5957\u5143\u7ec4\uff09 print ( sheet [ 'A2:C5' ]) # \u8bfb\u53d6\u6240\u6709\u5355\u5143\u683c\u7684\u6570\u636e for row_ch in range ( 2 , sheet . max_row + 1 ): for col_ch in 'ABCDEFG' : value = sheet [ f ' { col_ch }{ row_ch } ' ] . value if type ( value ) == datetime . datetime : print ( value . strftime ( '%Y\u5e74%m\u6708 %d \u65e5' ), end = ' \\t ' ) elif type ( value ) == int : print ( f ' { value : <10d } ' , end = ' \\t ' ) elif type ( value ) == float : print ( f ' { value : .4f } ' , end = ' \\t ' ) else : print ( value , end = ' \\t ' ) print () \u63d0\u793a \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684Excel\u6587\u4ef6\u201c\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xlsx\u201d\u53ef\u4ee5\u901a\u8fc7\u540e\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u5730\u5740\u8fdb\u884c\u83b7\u53d6\u3002\u94fe\u63a5:https://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g \u63d0\u53d6\u7801:e7b4\u3002 \u9700\u8981\u63d0\u9192\u5927\u5bb6\u4e00\u70b9\uff0c openpyxl \u83b7\u53d6\u6307\u5b9a\u7684\u5355\u5143\u683c\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u901a\u8fc7 cell \u65b9\u6cd5\uff0c\u9700\u8981\u6ce8\u610f\uff0c\u8be5\u65b9\u6cd5\u7684\u884c\u7d22\u5f15\u548c\u5217\u7d22\u5f15\u90fd\u662f\u4ece 1 \u5f00\u59cb\u7684\uff0c\u8fd9\u662f\u4e3a\u4e86\u7167\u987e\u7528\u60ef\u4e86Excel\u7684\u4eba\u7684\u4e60\u60ef\uff1b\u53e6\u4e00\u79cd\u662f\u901a\u8fc7\u7d22\u5f15\u8fd0\u7b97\uff0c\u901a\u8fc7\u6307\u5b9a\u5355\u5143\u683c\u7684\u5750\u6807\uff0c\u4f8b\u5982 C3 \u3001 G255 \uff0c\u4e5f\u53ef\u4ee5\u53d6\u5f97\u5bf9\u5e94\u7684\u5355\u5143\u683c\uff0c\u518d\u901a\u8fc7\u5355\u5143\u683c\u5bf9\u8c61\u7684 value \u5c5e\u6027\uff0c\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230\u5355\u5143\u683c\u7684\u503c\u3002\u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u76f8\u4fe1\u5927\u5bb6\u8fd8\u6ce8\u610f\u5230\u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c sheet['A2:C5'] \u6216 sheet['A2':'C5'] \u8fd9\u6837\u7684\u5207\u7247\u64cd\u4f5c\u83b7\u53d6\u591a\u4e2a\u5355\u5143\u683c\uff0c\u8be5\u64cd\u4f5c\u5c06\u8fd4\u56de\u5d4c\u5957\u7684\u5143\u7ec4\uff0c\u76f8\u5f53\u4e8e\u83b7\u53d6\u5230\u4e86\u591a\u884c\u591a\u5217\u3002 \u5199Excel\u6587\u4ef6 \u4e0b\u9762\u6211\u4eec\u4f7f\u7528 openpyxl \u6765\u8fdb\u884c\u5199Excel\u64cd\u4f5c\u3002 import random import openpyxl # \u7b2c\u4e00\u6b65\uff1a\u521b\u5efa\u5de5\u4f5c\u7c3f\uff08Workbook\uff09 wb = openpyxl . Workbook () # \u7b2c\u4e8c\u6b65\uff1a\u6dfb\u52a0\u5de5\u4f5c\u8868\uff08Worksheet\uff09 sheet = wb . active sheet . title = '\u671f\u672b\u6210\u7ee9' titles = ( '\u59d3\u540d' , '\u8bed\u6587' , '\u6570\u5b66' , '\u82f1\u8bed' ) for col_index , title in enumerate ( titles ): sheet . cell ( 1 , col_index + 1 , title ) names = ( '\u5173\u7fbd' , '\u5f20\u98de' , '\u8d75\u4e91' , '\u9a6c\u8d85' , '\u9ec4\u5fe0' ) for row_index , name in enumerate ( names ): sheet . cell ( row_index + 2 , 1 , name ) for col_index in range ( 2 , 5 ): sheet . cell ( row_index + 2 , col_index , random . randrange ( 50 , 101 )) # \u7b2c\u56db\u6b65\uff1a\u4fdd\u5b58\u5de5\u4f5c\u7c3f wb . save ( '\u8003\u8bd5\u6210\u7ee9\u8868.xlsx' ) \u8c03\u6574\u6837\u5f0f\u548c\u516c\u5f0f\u8ba1\u7b97 \u5728\u4f7f\u7528 openpyxl \u64cd\u4f5cExcel\u65f6\uff0c\u5982\u679c\u8981\u8c03\u6574\u5355\u5143\u683c\u7684\u6837\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5355\u5143\u683c\u5bf9\u8c61\uff08 Cell \u5bf9\u8c61\uff09\u7684\u5c5e\u6027\u8fdb\u884c\u64cd\u4f5c\u3002\u5355\u5143\u683c\u5bf9\u8c61\u7684\u5c5e\u6027\u5305\u62ec\u5b57\u4f53\uff08 font \uff09\u3001\u5bf9\u9f50\uff08 alignment \uff09\u3001\u8fb9\u6846\uff08 border \uff09\u7b49\uff0c\u5177\u4f53\u7684\u53ef\u4ee5\u53c2\u8003 openpyxl \u7684 \u5b98\u65b9\u6587\u6863 \u3002\u5728\u4f7f\u7528 openpyxl \u65f6\uff0c\u5982\u679c\u9700\u8981\u505a\u516c\u5f0f\u8ba1\u7b97\uff0c\u53ef\u4ee5\u5b8c\u5168\u6309\u7167Excel\u4e2d\u7684\u64cd\u4f5c\u65b9\u5f0f\u6765\u8fdb\u884c\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import openpyxl from openpyxl.styles import Font , Alignment , Border , Side # \u5bf9\u9f50\u65b9\u5f0f alignment = Alignment ( horizontal = 'center' , vertical = 'center' ) # \u8fb9\u6846\u7ebf\u6761 side = Side ( color = 'ff7f50' , style = 'mediumDashed' ) wb = openpyxl . load_workbook ( '\u8003\u8bd5\u6210\u7ee9\u8868.xlsx' ) sheet = wb . worksheets [ 0 ] # \u8c03\u6574\u884c\u9ad8\u548c\u5217\u5bbd sheet . row_dimensions [ 1 ] . height = 30 sheet . column_dimensions [ 'E' ] . width = 120 sheet [ 'E1' ] = '\u5e73\u5747\u5206' # \u8bbe\u7f6e\u5b57\u4f53 sheet . cell ( 1 , 5 ) . font = Font ( size = 18 , bold = True , color = 'ff1493' , name = '\u534e\u6587\u6977\u4f53' ) # \u8bbe\u7f6e\u5bf9\u9f50\u65b9\u5f0f sheet . cell ( 1 , 5 ) . alignment = alignment # \u8bbe\u7f6e\u5355\u5143\u683c\u8fb9\u6846 sheet . cell ( 1 , 5 ) . border = Border ( left = side , top = side , right = side , bottom = side ) for i in range ( 2 , 7 ): # \u516c\u5f0f\u8ba1\u7b97\u6bcf\u4e2a\u5b66\u751f\u7684\u5e73\u5747\u5206 sheet [ f 'E { i } ' ] = f '=average(B { i } :D { i } )' sheet . cell ( i , 5 ) . font = Font ( size = 12 , color = '4169e1' , italic = True ) sheet . cell ( i , 5 ) . alignment = alignment wb . save ( '\u8003\u8bd5\u6210\u7ee9\u8868.xlsx' ) \u751f\u6210\u7edf\u8ba1\u56fe\u8868 \u901a\u8fc7 openpyxl \u5e93\uff0c\u53ef\u4ee5\u76f4\u63a5\u5411Excel\u4e2d\u63d2\u5165\u7edf\u8ba1\u56fe\u8868\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u8ddf\u5728Excel\u4e2d\u63d2\u5165\u56fe\u8868\u5927\u4f53\u4e00\u81f4\u3002\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u6307\u5b9a\u7c7b\u578b\u7684\u56fe\u8868\u5bf9\u8c61\uff0c\u7136\u540e\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684\u5c5e\u6027\u5bf9\u56fe\u8868\u8fdb\u884c\u8bbe\u7f6e\u3002\u5f53\u7136\uff0c\u6700\u4e3a\u91cd\u8981\u7684\u662f\u4e3a\u56fe\u8868\u7ed1\u5b9a\u6570\u636e\uff0c\u5373\u6a2a\u8f74\u4ee3\u8868\u4ec0\u4e48\uff0c\u7eb5\u8f74\u4ee3\u8868\u4ec0\u4e48\uff0c\u5177\u4f53\u7684\u6570\u503c\u662f\u591a\u5c11\u3002\u6700\u540e\uff0c\u53ef\u4ee5\u5c06\u56fe\u8868\u5bf9\u8c61\u6dfb\u52a0\u5230\u8868\u5355\u4e2d\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from openpyxl import Workbook from openpyxl.chart import BarChart , Reference wb = Workbook ( write_only = True ) sheet = wb . create_sheet () rows = [ ( '\u7c7b\u522b' , '\u9500\u552eA\u7ec4' , '\u9500\u552eB\u7ec4' ), ( '\u624b\u673a' , 40 , 30 ), ( '\u5e73\u677f' , 50 , 60 ), ( '\u7b14\u8bb0\u672c' , 80 , 70 ), ( '\u5916\u56f4\u8bbe\u5907' , 20 , 10 ), ] # \u5411\u8868\u5355\u4e2d\u6dfb\u52a0\u884c for row in rows : sheet . append ( row ) # \u521b\u5efa\u56fe\u8868\u5bf9\u8c61 chart = BarChart () chart . type = 'col' chart . style = 10 # \u8bbe\u7f6e\u56fe\u8868\u7684\u6807\u9898 chart . title = '\u9500\u552e\u7edf\u8ba1\u56fe' # \u8bbe\u7f6e\u56fe\u8868\u7eb5\u8f74\u7684\u6807\u9898 chart . y_axis . title = '\u9500\u91cf' # \u8bbe\u7f6e\u56fe\u8868\u6a2a\u8f74\u7684\u6807\u9898 chart . x_axis . title = '\u5546\u54c1\u7c7b\u522b' # \u8bbe\u7f6e\u6570\u636e\u7684\u8303\u56f4 data = Reference ( sheet , min_col = 2 , min_row = 1 , max_row = 5 , max_col = 3 ) # \u8bbe\u7f6e\u5206\u7c7b\u7684\u8303\u56f4 cats = Reference ( sheet , min_col = 1 , min_row = 2 , max_row = 5 ) # \u7ed9\u56fe\u8868\u6dfb\u52a0\u6570\u636e chart . add_data ( data , titles_from_data = True ) # \u7ed9\u56fe\u8868\u8bbe\u7f6e\u5206\u7c7b chart . set_categories ( cats ) chart . shape = 4 # \u5c06\u56fe\u8868\u6dfb\u52a0\u5230\u8868\u5355\u6307\u5b9a\u7684\u5355\u5143\u683c\u4e2d sheet . add_chart ( chart , 'A10' ) wb . save ( 'demo.xlsx' ) \u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6253\u5f00\u751f\u6210\u7684Excel\u6587\u4ef6\uff0c\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u7b80\u5355\u7684\u603b\u7ed3 \u638c\u63e1\u4e86Python\u7a0b\u5e8f\u64cd\u4f5cExcel\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u89e3\u51b3\u65e5\u5e38\u529e\u516c\u4e2d\u5f88\u591a\u7e41\u7410\u7684\u5904\u7406Excel\u7535\u5b50\u8868\u683c\u5de5\u4f5c\uff0c\u6700\u5e38\u89c1\u5c31\u662f\u5c06\u591a\u4e2a\u6570\u636e\u683c\u5f0f\u76f8\u540c\u7684Excel\u6587\u4ef6\u5408\u5e76\u5230\u4e00\u4e2a\u6587\u4ef6\u4ee5\u53ca\u4ece\u591a\u4e2aExcel\u6587\u4ef6\u6216\u8868\u5355\u4e2d\u63d0\u53d6\u6307\u5b9a\u7684\u6570\u636e\u3002\u5982\u679c\u6570\u636e\u4f53\u91cf\u8f83\u5927\u6216\u8005\u5904\u7406\u6570\u636e\u7684\u65b9\u5f0f\u6bd4\u8f83\u590d\u6742\uff0c\u6211\u4eec\u8fd8\u662f\u63a8\u8350\u5927\u5bb6\u4f7f\u7528Python\u6570\u636e\u5206\u6790\u795e\u5668\u4e4b\u4e00\u7684 pandas \u5e93\u3002","title":"\u7b2c25\u8bfe\uff1a\u7528Python\u8bfb\u5199Excel\u6587\u4ef6 2"},{"location":"%E7%AC%AC25%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-2/#25pythonexcel-2","text":"","title":"\u7b2c25\u8bfe\uff1a\u7528Python\u8bfb\u5199Excel\u6587\u4ef6-2"},{"location":"%E7%AC%AC25%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-2/#excel","text":"Excel\u662fMicrosoft\uff08\u5fae\u8f6f\uff09\u4e3a\u4f7f\u7528Windows\u548cmacOS\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u7684\u4e00\u6b3e\u7535\u5b50\u8868\u683c\u8f6f\u4ef6\u3002Excel\u51ed\u501f\u5176\u76f4\u89c2\u7684\u754c\u9762\u3001\u51fa\u8272\u7684\u8ba1\u7b97\u529f\u80fd\u548c\u56fe\u8868\u5de5\u5177\uff0c\u518d\u52a0\u4e0a\u6210\u529f\u7684\u5e02\u573a\u8425\u9500\uff0c\u4e00\u76f4\u4ee5\u6765\u90fd\u662f\u6700\u4e3a\u6d41\u884c\u7684\u4e2a\u4eba\u8ba1\u7b97\u673a\u6570\u636e\u5904\u7406\u8f6f\u4ef6\u3002\u5f53\u7136\uff0cExcel\u4e5f\u6709\u5f88\u591a\u7ade\u54c1\uff0c\u4f8b\u5982Google Sheets\u3001LibreOffice Calc\u3001Numbers\u7b49\uff0c\u8fd9\u4e9b\u7ade\u54c1\u57fa\u672c\u4e0a\u4e5f\u80fd\u591f\u517c\u5bb9Excel\uff0c\u81f3\u5c11\u80fd\u591f\u8bfb\u5199\u8f83\u65b0\u7248\u672c\u7684Excel\u6587\u4ef6\uff0c\u5f53\u7136\u8fd9\u4e9b\u4e0d\u662f\u6211\u4eec\u8ba8\u8bba\u7684\u91cd\u70b9\u3002\u638c\u63e1\u7528Python\u7a0b\u5e8f\u64cd\u4f5cExcel\u6587\u4ef6\uff0c\u53ef\u4ee5\u8ba9\u65e5\u5e38\u529e\u516c\u81ea\u52a8\u5316\u7684\u5de5\u4f5c\u66f4\u52a0\u8f7b\u677e\u6109\u5feb\uff0c\u800c\u4e14\u5728\u5f88\u591a\u5546\u4e1a\u9879\u76ee\u4e2d\uff0c\u5bfc\u5165\u5bfc\u51faExcel\u6587\u4ef6\u90fd\u662f\u7279\u522b\u5e38\u89c1\u7684\u529f\u80fd\u3002 \u672c\u7ae0\u6211\u4eec\u7ee7\u7eed\u8bb2\u89e3\u57fa\u4e8e\u53e6\u4e00\u4e2a\u4e09\u65b9\u5e93 openpyxl \u5982\u4f55\u8fdb\u884cExcel\u6587\u4ef6\u64cd\u4f5c\uff0c\u9996\u5148\u9700\u8981\u5148\u5b89\u88c5\u5b83\u3002 pip install openpyxl openpyxl \u7684\u4f18\u70b9\u5728\u4e8e\uff0c\u5f53\u6211\u4eec\u6253\u5f00\u4e00\u4e2aExcel\u6587\u4ef6\u540e\uff0c\u65e2\u53ef\u4ee5\u5bf9\u5b83\u8fdb\u884c\u8bfb\u64cd\u4f5c\uff0c\u53c8\u53ef\u4ee5\u5bf9\u5b83\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u800c\u4e14\u5728\u64cd\u4f5c\u7684\u4fbf\u6377\u6027\u4e0a\u662f\u4f18\u4e8e xlwt \u548c xlrd \u7684\u3002\u6b64\u5916\uff0c\u5982\u679c\u8981\u8fdb\u884c\u6837\u5f0f\u7f16\u8f91\u548c\u516c\u5f0f\u8ba1\u7b97\uff0c\u4f7f\u7528 openpyxl \u4e5f\u8fdc\u6bd4\u4e0a\u4e00\u4e2a\u7ae0\u8282\u6211\u4eec\u8bb2\u89e3\u7684\u65b9\u5f0f\u66f4\u4e3a\u7b80\u5355\uff0c\u800c\u4e14 openpyxl \u8fd8\u652f\u6301\u6570\u636e\u900f\u89c6\u548c\u63d2\u5165\u56fe\u8868\u7b49\u64cd\u4f5c\uff0c\u529f\u80fd\u975e\u5e38\u5f3a\u5927\u3002\u6709\u4e00\u70b9\u9700\u8981\u518d\u6b21\u5f3a\u8c03\uff0c openpyxl \u5e76\u4e0d\u652f\u6301\u64cd\u4f5cOffice 2007\u4ee5\u524d\u7248\u672c\u7684Excel\u6587\u4ef6\u3002","title":"Excel\u7b80\u4ecb"},{"location":"%E7%AC%AC25%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-2/#excel_1","text":"\u4f8b\u5982\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u6709\u4e00\u4e2a\u540d\u4e3a\u201c\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xlsx\u201d\u7684Excel\u6587\u4ef6\uff0c\u5982\u679c\u60f3\u8bfb\u53d6\u5e76\u663e\u793a\u8be5\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u3002 import datetime import openpyxl # \u52a0\u8f7d\u4e00\u4e2a\u5de5\u4f5c\u7c3f ---> Workbook wb = openpyxl . load_workbook ( '\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xlsx' ) # \u83b7\u53d6\u5de5\u4f5c\u8868\u7684\u540d\u5b57 print ( wb . sheetnames ) # \u83b7\u53d6\u5de5\u4f5c\u8868 ---> Worksheet sheet = wb . worksheets [ 0 ] # \u83b7\u5f97\u5355\u5143\u683c\u7684\u8303\u56f4 print ( sheet . dimensions ) # \u83b7\u5f97\u884c\u6570\u548c\u5217\u6570 print ( sheet . max_row , sheet . max_column ) # \u83b7\u53d6\u6307\u5b9a\u5355\u5143\u683c\u7684\u503c print ( sheet . cell ( 3 , 3 ) . value ) print ( sheet [ 'C3' ] . value ) print ( sheet [ 'G255' ] . value ) # \u83b7\u53d6\u591a\u4e2a\u5355\u5143\u683c\uff08\u5d4c\u5957\u5143\u7ec4\uff09 print ( sheet [ 'A2:C5' ]) # \u8bfb\u53d6\u6240\u6709\u5355\u5143\u683c\u7684\u6570\u636e for row_ch in range ( 2 , sheet . max_row + 1 ): for col_ch in 'ABCDEFG' : value = sheet [ f ' { col_ch }{ row_ch } ' ] . value if type ( value ) == datetime . datetime : print ( value . strftime ( '%Y\u5e74%m\u6708 %d \u65e5' ), end = ' \\t ' ) elif type ( value ) == int : print ( f ' { value : <10d } ' , end = ' \\t ' ) elif type ( value ) == float : print ( f ' { value : .4f } ' , end = ' \\t ' ) else : print ( value , end = ' \\t ' ) print () \u63d0\u793a \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684Excel\u6587\u4ef6\u201c\u963f\u91cc\u5df4\u5df42020\u5e74\u80a1\u7968\u6570\u636e.xlsx\u201d\u53ef\u4ee5\u901a\u8fc7\u540e\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u5730\u5740\u8fdb\u884c\u83b7\u53d6\u3002\u94fe\u63a5:https://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g \u63d0\u53d6\u7801:e7b4\u3002 \u9700\u8981\u63d0\u9192\u5927\u5bb6\u4e00\u70b9\uff0c openpyxl \u83b7\u53d6\u6307\u5b9a\u7684\u5355\u5143\u683c\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u901a\u8fc7 cell \u65b9\u6cd5\uff0c\u9700\u8981\u6ce8\u610f\uff0c\u8be5\u65b9\u6cd5\u7684\u884c\u7d22\u5f15\u548c\u5217\u7d22\u5f15\u90fd\u662f\u4ece 1 \u5f00\u59cb\u7684\uff0c\u8fd9\u662f\u4e3a\u4e86\u7167\u987e\u7528\u60ef\u4e86Excel\u7684\u4eba\u7684\u4e60\u60ef\uff1b\u53e6\u4e00\u79cd\u662f\u901a\u8fc7\u7d22\u5f15\u8fd0\u7b97\uff0c\u901a\u8fc7\u6307\u5b9a\u5355\u5143\u683c\u7684\u5750\u6807\uff0c\u4f8b\u5982 C3 \u3001 G255 \uff0c\u4e5f\u53ef\u4ee5\u53d6\u5f97\u5bf9\u5e94\u7684\u5355\u5143\u683c\uff0c\u518d\u901a\u8fc7\u5355\u5143\u683c\u5bf9\u8c61\u7684 value \u5c5e\u6027\uff0c\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230\u5355\u5143\u683c\u7684\u503c\u3002\u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u76f8\u4fe1\u5927\u5bb6\u8fd8\u6ce8\u610f\u5230\u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c sheet['A2:C5'] \u6216 sheet['A2':'C5'] \u8fd9\u6837\u7684\u5207\u7247\u64cd\u4f5c\u83b7\u53d6\u591a\u4e2a\u5355\u5143\u683c\uff0c\u8be5\u64cd\u4f5c\u5c06\u8fd4\u56de\u5d4c\u5957\u7684\u5143\u7ec4\uff0c\u76f8\u5f53\u4e8e\u83b7\u53d6\u5230\u4e86\u591a\u884c\u591a\u5217\u3002","title":"\u8bfb\u53d6Excel\u6587\u4ef6"},{"location":"%E7%AC%AC25%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-2/#excel_2","text":"\u4e0b\u9762\u6211\u4eec\u4f7f\u7528 openpyxl \u6765\u8fdb\u884c\u5199Excel\u64cd\u4f5c\u3002 import random import openpyxl # \u7b2c\u4e00\u6b65\uff1a\u521b\u5efa\u5de5\u4f5c\u7c3f\uff08Workbook\uff09 wb = openpyxl . Workbook () # \u7b2c\u4e8c\u6b65\uff1a\u6dfb\u52a0\u5de5\u4f5c\u8868\uff08Worksheet\uff09 sheet = wb . active sheet . title = '\u671f\u672b\u6210\u7ee9' titles = ( '\u59d3\u540d' , '\u8bed\u6587' , '\u6570\u5b66' , '\u82f1\u8bed' ) for col_index , title in enumerate ( titles ): sheet . cell ( 1 , col_index + 1 , title ) names = ( '\u5173\u7fbd' , '\u5f20\u98de' , '\u8d75\u4e91' , '\u9a6c\u8d85' , '\u9ec4\u5fe0' ) for row_index , name in enumerate ( names ): sheet . cell ( row_index + 2 , 1 , name ) for col_index in range ( 2 , 5 ): sheet . cell ( row_index + 2 , col_index , random . randrange ( 50 , 101 )) # \u7b2c\u56db\u6b65\uff1a\u4fdd\u5b58\u5de5\u4f5c\u7c3f wb . save ( '\u8003\u8bd5\u6210\u7ee9\u8868.xlsx' )","title":"\u5199Excel\u6587\u4ef6"},{"location":"%E7%AC%AC25%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-2/#_1","text":"\u5728\u4f7f\u7528 openpyxl \u64cd\u4f5cExcel\u65f6\uff0c\u5982\u679c\u8981\u8c03\u6574\u5355\u5143\u683c\u7684\u6837\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5355\u5143\u683c\u5bf9\u8c61\uff08 Cell \u5bf9\u8c61\uff09\u7684\u5c5e\u6027\u8fdb\u884c\u64cd\u4f5c\u3002\u5355\u5143\u683c\u5bf9\u8c61\u7684\u5c5e\u6027\u5305\u62ec\u5b57\u4f53\uff08 font \uff09\u3001\u5bf9\u9f50\uff08 alignment \uff09\u3001\u8fb9\u6846\uff08 border \uff09\u7b49\uff0c\u5177\u4f53\u7684\u53ef\u4ee5\u53c2\u8003 openpyxl \u7684 \u5b98\u65b9\u6587\u6863 \u3002\u5728\u4f7f\u7528 openpyxl \u65f6\uff0c\u5982\u679c\u9700\u8981\u505a\u516c\u5f0f\u8ba1\u7b97\uff0c\u53ef\u4ee5\u5b8c\u5168\u6309\u7167Excel\u4e2d\u7684\u64cd\u4f5c\u65b9\u5f0f\u6765\u8fdb\u884c\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import openpyxl from openpyxl.styles import Font , Alignment , Border , Side # \u5bf9\u9f50\u65b9\u5f0f alignment = Alignment ( horizontal = 'center' , vertical = 'center' ) # \u8fb9\u6846\u7ebf\u6761 side = Side ( color = 'ff7f50' , style = 'mediumDashed' ) wb = openpyxl . load_workbook ( '\u8003\u8bd5\u6210\u7ee9\u8868.xlsx' ) sheet = wb . worksheets [ 0 ] # \u8c03\u6574\u884c\u9ad8\u548c\u5217\u5bbd sheet . row_dimensions [ 1 ] . height = 30 sheet . column_dimensions [ 'E' ] . width = 120 sheet [ 'E1' ] = '\u5e73\u5747\u5206' # \u8bbe\u7f6e\u5b57\u4f53 sheet . cell ( 1 , 5 ) . font = Font ( size = 18 , bold = True , color = 'ff1493' , name = '\u534e\u6587\u6977\u4f53' ) # \u8bbe\u7f6e\u5bf9\u9f50\u65b9\u5f0f sheet . cell ( 1 , 5 ) . alignment = alignment # \u8bbe\u7f6e\u5355\u5143\u683c\u8fb9\u6846 sheet . cell ( 1 , 5 ) . border = Border ( left = side , top = side , right = side , bottom = side ) for i in range ( 2 , 7 ): # \u516c\u5f0f\u8ba1\u7b97\u6bcf\u4e2a\u5b66\u751f\u7684\u5e73\u5747\u5206 sheet [ f 'E { i } ' ] = f '=average(B { i } :D { i } )' sheet . cell ( i , 5 ) . font = Font ( size = 12 , color = '4169e1' , italic = True ) sheet . cell ( i , 5 ) . alignment = alignment wb . save ( '\u8003\u8bd5\u6210\u7ee9\u8868.xlsx' )","title":"\u8c03\u6574\u6837\u5f0f\u548c\u516c\u5f0f\u8ba1\u7b97"},{"location":"%E7%AC%AC25%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-2/#_2","text":"\u901a\u8fc7 openpyxl \u5e93\uff0c\u53ef\u4ee5\u76f4\u63a5\u5411Excel\u4e2d\u63d2\u5165\u7edf\u8ba1\u56fe\u8868\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u8ddf\u5728Excel\u4e2d\u63d2\u5165\u56fe\u8868\u5927\u4f53\u4e00\u81f4\u3002\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u6307\u5b9a\u7c7b\u578b\u7684\u56fe\u8868\u5bf9\u8c61\uff0c\u7136\u540e\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684\u5c5e\u6027\u5bf9\u56fe\u8868\u8fdb\u884c\u8bbe\u7f6e\u3002\u5f53\u7136\uff0c\u6700\u4e3a\u91cd\u8981\u7684\u662f\u4e3a\u56fe\u8868\u7ed1\u5b9a\u6570\u636e\uff0c\u5373\u6a2a\u8f74\u4ee3\u8868\u4ec0\u4e48\uff0c\u7eb5\u8f74\u4ee3\u8868\u4ec0\u4e48\uff0c\u5177\u4f53\u7684\u6570\u503c\u662f\u591a\u5c11\u3002\u6700\u540e\uff0c\u53ef\u4ee5\u5c06\u56fe\u8868\u5bf9\u8c61\u6dfb\u52a0\u5230\u8868\u5355\u4e2d\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from openpyxl import Workbook from openpyxl.chart import BarChart , Reference wb = Workbook ( write_only = True ) sheet = wb . create_sheet () rows = [ ( '\u7c7b\u522b' , '\u9500\u552eA\u7ec4' , '\u9500\u552eB\u7ec4' ), ( '\u624b\u673a' , 40 , 30 ), ( '\u5e73\u677f' , 50 , 60 ), ( '\u7b14\u8bb0\u672c' , 80 , 70 ), ( '\u5916\u56f4\u8bbe\u5907' , 20 , 10 ), ] # \u5411\u8868\u5355\u4e2d\u6dfb\u52a0\u884c for row in rows : sheet . append ( row ) # \u521b\u5efa\u56fe\u8868\u5bf9\u8c61 chart = BarChart () chart . type = 'col' chart . style = 10 # \u8bbe\u7f6e\u56fe\u8868\u7684\u6807\u9898 chart . title = '\u9500\u552e\u7edf\u8ba1\u56fe' # \u8bbe\u7f6e\u56fe\u8868\u7eb5\u8f74\u7684\u6807\u9898 chart . y_axis . title = '\u9500\u91cf' # \u8bbe\u7f6e\u56fe\u8868\u6a2a\u8f74\u7684\u6807\u9898 chart . x_axis . title = '\u5546\u54c1\u7c7b\u522b' # \u8bbe\u7f6e\u6570\u636e\u7684\u8303\u56f4 data = Reference ( sheet , min_col = 2 , min_row = 1 , max_row = 5 , max_col = 3 ) # \u8bbe\u7f6e\u5206\u7c7b\u7684\u8303\u56f4 cats = Reference ( sheet , min_col = 1 , min_row = 2 , max_row = 5 ) # \u7ed9\u56fe\u8868\u6dfb\u52a0\u6570\u636e chart . add_data ( data , titles_from_data = True ) # \u7ed9\u56fe\u8868\u8bbe\u7f6e\u5206\u7c7b chart . set_categories ( cats ) chart . shape = 4 # \u5c06\u56fe\u8868\u6dfb\u52a0\u5230\u8868\u5355\u6307\u5b9a\u7684\u5355\u5143\u683c\u4e2d sheet . add_chart ( chart , 'A10' ) wb . save ( 'demo.xlsx' ) \u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6253\u5f00\u751f\u6210\u7684Excel\u6587\u4ef6\uff0c\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002","title":"\u751f\u6210\u7edf\u8ba1\u56fe\u8868"},{"location":"%E7%AC%AC25%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%AF%BB%E5%86%99Excel%E6%96%87%E4%BB%B6-2/#_3","text":"\u638c\u63e1\u4e86Python\u7a0b\u5e8f\u64cd\u4f5cExcel\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u89e3\u51b3\u65e5\u5e38\u529e\u516c\u4e2d\u5f88\u591a\u7e41\u7410\u7684\u5904\u7406Excel\u7535\u5b50\u8868\u683c\u5de5\u4f5c\uff0c\u6700\u5e38\u89c1\u5c31\u662f\u5c06\u591a\u4e2a\u6570\u636e\u683c\u5f0f\u76f8\u540c\u7684Excel\u6587\u4ef6\u5408\u5e76\u5230\u4e00\u4e2a\u6587\u4ef6\u4ee5\u53ca\u4ece\u591a\u4e2aExcel\u6587\u4ef6\u6216\u8868\u5355\u4e2d\u63d0\u53d6\u6307\u5b9a\u7684\u6570\u636e\u3002\u5982\u679c\u6570\u636e\u4f53\u91cf\u8f83\u5927\u6216\u8005\u5904\u7406\u6570\u636e\u7684\u65b9\u5f0f\u6bd4\u8f83\u590d\u6742\uff0c\u6211\u4eec\u8fd8\u662f\u63a8\u8350\u5927\u5bb6\u4f7f\u7528Python\u6570\u636e\u5206\u6790\u795e\u5668\u4e4b\u4e00\u7684 pandas \u5e93\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC26%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E6%93%8D%E4%BD%9CWord%E6%96%87%E4%BB%B6%E5%92%8CPowerPoint/","text":"\u7b2c26\u8bfe\uff1a\u7528Python\u64cd\u4f5cWord\u548cPowerPoint \u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u6709\u5f88\u591a\u7b80\u5355\u91cd\u590d\u7684\u52b3\u52a8\u5176\u5b9e\u5b8c\u5168\u53ef\u4ee5\u4ea4\u7ed9Python\u7a0b\u5e8f\uff0c\u6bd4\u5982\u6839\u636e\u6837\u677f\u6587\u4ef6\uff08\u6a21\u677f\u6587\u4ef6\uff09\u6279\u91cf\u7684\u751f\u6210\u5f88\u591a\u4e2aWord\u6587\u4ef6\u6216PowerPoint\u6587\u4ef6\u3002Word\u662f\u5fae\u8f6f\u516c\u53f8\u5f00\u53d1\u7684\u6587\u5b57\u5904\u7406\u7a0b\u5e8f\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u4e0d\u964c\u751f\uff0c\u65e5\u5e38\u529e\u516c\u4e2d\u5f88\u591a\u6b63\u5f0f\u7684\u6587\u6863\u90fd\u662f\u7528Word\u8fdb\u884c\u64b0\u5199\u548c\u7f16\u8f91\u7684\uff0c\u76ee\u524d\u4f7f\u7528\u7684Word\u6587\u4ef6\u540e\u7f00\u540d\u4e00\u822c\u4e3a .docx \u3002PowerPoint\u662f\u5fae\u8f6f\u516c\u53f8\u5f00\u53d1\u7684\u6f14\u793a\u6587\u7a3f\u7a0b\u5e8f\uff0c\u662f\u5fae\u8f6f\u7684Office\u7cfb\u5217\u8f6f\u4ef6\u4e2d\u7684\u4e00\u5458\uff0c\u88ab\u5546\u4e1a\u4eba\u58eb\u3001\u6559\u5e08\u3001\u5b66\u751f\u7b49\u7fa4\u4f53\u5e7f\u6cdb\u4f7f\u7528\uff0c\u901a\u5e38\u4e5f\u5c06\u5176\u79f0\u4e4b\u4e3a\u201c\u5e7b\u706f\u7247\u201d\u3002\u5728Python\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a python-docx \u7684\u4e09\u65b9\u5e93\u6765\u64cd\u4f5cWord\uff0c\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a python-pptx \u7684\u4e09\u65b9\u5e93\u6765\u751f\u6210PowerPoint\u3002 \u64cd\u4f5cWord\u6587\u6863 \u6211\u4eec\u53ef\u4ee5\u5148\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5 python-docx \u4e09\u65b9\u5e93\u3002 pip install python-docx \u6309\u7167 \u5b98\u65b9\u6587\u6863 \u7684\u4ecb\u7ecd\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\u6765\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u7684Word\u6587\u6863\u3002 from docx import Document from docx.shared import Cm , Pt from docx.document import Document as Doc # \u521b\u5efa\u4ee3\u8868Word\u6587\u6863\u7684Doc\u5bf9\u8c61 document = Document () # type: Doc # \u6dfb\u52a0\u5927\u6807\u9898 document . add_heading ( '\u5feb\u5feb\u4e50\u4e50\u5b66Python' , 0 ) # \u6dfb\u52a0\u6bb5\u843d p = document . add_paragraph ( 'Python\u662f\u4e00\u95e8\u975e\u5e38\u6d41\u884c\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83' ) run = p . add_run ( '\u7b80\u5355' ) run . bold = True run . font . size = Pt ( 18 ) p . add_run ( '\u800c\u4e14' ) run = p . add_run ( '\u4f18\u96c5' ) run . font . size = Pt ( 18 ) run . underline = True p . add_run ( '\u3002' ) # \u6dfb\u52a0\u4e00\u7ea7\u6807\u9898 document . add_heading ( 'Heading, level 1' , level = 1 ) # \u6dfb\u52a0\u5e26\u6837\u5f0f\u7684\u6bb5\u843d document . add_paragraph ( 'Intense quote' , style = 'Intense Quote' ) # \u6dfb\u52a0\u65e0\u5e8f\u5217\u8868 document . add_paragraph ( 'first item in unordered list' , style = 'List Bullet' ) document . add_paragraph ( 'second item in ordered list' , style = 'List Bullet' ) # \u6dfb\u52a0\u6709\u5e8f\u5217\u8868 document . add_paragraph ( 'first item in ordered list' , style = 'List Number' ) document . add_paragraph ( 'second item in ordered list' , style = 'List Number' ) # \u6dfb\u52a0\u56fe\u7247\uff08\u6ce8\u610f\u8def\u5f84\u548c\u56fe\u7247\u5fc5\u987b\u8981\u5b58\u5728\uff09 document . add_picture ( 'resources/guido.jpg' , width = Cm ( 5.2 )) # \u6dfb\u52a0\u5206\u8282\u7b26 document . add_section () records = ( ( '\u9a86\u660a' , '\u7537' , '1995-5-5' ), ( '\u5b59\u7f8e\u4e3d' , '\u5973' , '1992-2-2' ) ) # \u6dfb\u52a0\u8868\u683c table = document . add_table ( rows = 1 , cols = 3 ) table . style = 'Dark List' hdr_cells = table . rows [ 0 ] . cells hdr_cells [ 0 ] . text = '\u59d3\u540d' hdr_cells [ 1 ] . text = '\u6027\u522b' hdr_cells [ 2 ] . text = '\u51fa\u751f\u65e5\u671f' # \u4e3a\u8868\u683c\u6dfb\u52a0\u884c for name , sex , birthday in records : row_cells = table . add_row () . cells row_cells [ 0 ] . text = name row_cells [ 1 ] . text = sex row_cells [ 2 ] . text = birthday # \u6dfb\u52a0\u5206\u9875\u7b26 document . add_page_break () # \u4fdd\u5b58\u6587\u6863 document . save ( 'demo.docx' ) \u63d0\u793a \uff1a\u4e0a\u9762\u4ee3\u7801\u7b2c7\u884c\u4e2d\u7684\u6ce8\u91ca # type: Doc \u662f\u4e3a\u4e86\u5728PyCharm\u4e2d\u83b7\u5f97\u4ee3\u7801\u8865\u5168\u63d0\u793a\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u6e05\u695a\u5bf9\u8c61\u5177\u4f53\u7684\u6570\u636e\u7c7b\u578b\uff0cPyCharm\u65e0\u6cd5\u5728\u540e\u7eed\u4ee3\u7801\u4e2d\u7ed9\u51fa Doc \u5bf9\u8c61\u7684\u4ee3\u7801\u8865\u5168\u63d0\u793a\u3002 \u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6253\u5f00\u751f\u6210\u7684Word\u6587\u6863\uff0c\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684Word\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u53bb\u904d\u5386\u5b83\u6240\u6709\u7684\u6bb5\u843d\u5e76\u83b7\u53d6\u5bf9\u5e94\u7684\u5185\u5bb9\u3002 from docx import Document from docx.document import Document as Doc doc = Document ( 'resources/\u79bb\u804c\u8bc1\u660e.docx' ) # type: Doc for no , p in enumerate ( doc . paragraphs ): print ( no , p . text ) \u63d0\u793a \uff1a\u5982\u679c\u9700\u8981\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684Word\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u5730\u5740\u8fdb\u884c\u83b7\u53d6\u3002\u94fe\u63a5:https://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g \u63d0\u53d6\u7801:e7b4\u3002 \u8bfb\u53d6\u5230\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\u3002 0 1 \u79bb \u804c \u8bc1 \u660e 2 3 \u5179\u8bc1\u660e \u738b\u5927\u9524 \uff0c\u8eab\u4efd\u8bc1\u53f7\u7801\uff1a 100200199512120001 \uff0c\u4e8e 2018 \u5e74 8 \u6708 7 \u65e5\u81f3 2020 \u5e74 6 \u6708 28 \u65e5\u5728\u6211\u5355\u4f4d \u5f00\u53d1\u90e8 \u90e8\u95e8\u62c5\u4efb Java\u5f00\u53d1\u5de5\u7a0b\u5e08 \u804c\u52a1\uff0c\u5728\u804c\u671f\u95f4\u65e0\u4e0d\u826f\u8868\u73b0\u3002\u56e0 \u4e2a\u4eba \u539f\u56e0\uff0c\u4e8e 2020 \u5e74 6 \u6708 28 \u65e5\u8d77\u7ec8\u6b62\u89e3\u9664\u52b3\u52a8\u5408\u540c\u3002\u73b0\u5df2\u7ed3\u6e05\u8d22\u52a1\u76f8\u5173\u8d39\u7528\uff0c\u529e\u7406\u5b8c\u89e3\u9664\u52b3\u52a8\u5173\u7cfb\u76f8\u5173\u624b\u7eed\uff0c\u53cc\u65b9\u4e0d\u5b58\u5728\u4efb\u4f55\u52b3\u52a8\u4e89\u8bae\u3002 4 5 \u7279\u6b64\u8bc1\u660e\uff01 6 7 8 \u516c\u53f8\u540d\u79f0\uff08\u76d6\u7ae0\uff09:\u6210\u90fd\u98ce\u8f66\u8f66\u79d1\u6280\u6709\u9650\u516c\u53f8 9 2020 \u5e74 6 \u6708 28 \u65e5 \u8bb2\u5230\u8fd9\u91cc\uff0c\u76f8\u4fe1\u5f88\u591a\u8bfb\u8005\u5df2\u7ecf\u60f3\u5230\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e0a\u9762\u7684\u79bb\u804c\u8bc1\u660e\u5236\u4f5c\u6210\u4e00\u4e2a\u6a21\u677f\u6587\u4ef6\uff0c\u628a\u59d3\u540d\u3001\u8eab\u4efd\u8bc1\u53f7\u3001\u5165\u804c\u548c\u79bb\u804c\u65e5\u671f\u7b49\u4fe1\u606f\u7528\u5360\u4f4d\u7b26\u4ee3\u66ff\uff0c\u8fd9\u6837\u901a\u8fc7\u5bf9\u5360\u4f4d\u7b26\u7684\u66ff\u6362\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u8981\u5199\u5165\u5bf9\u5e94\u7684\u4fe1\u606f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6279\u91cf\u7684\u751f\u6210Word\u6587\u6863\u3002 \u6309\u7167\u4e0a\u9762\u7684\u601d\u8def\uff0c\u6211\u4eec\u9996\u5148\u7f16\u8f91\u4e00\u4e2a\u79bb\u804c\u8bc1\u660e\u7684\u6a21\u677f\u6587\u4ef6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u8bfb\u53d6\u8be5\u6587\u4ef6\uff0c\u5c06\u5360\u4f4d\u7b26\u66ff\u6362\u4e3a\u771f\u5b9e\u4fe1\u606f\uff0c\u5c31\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u65b0\u7684Word\u6587\u6863\uff0c\u5982\u4e0b\u6240\u793a\u3002 from docx import Document from docx.document import Document as Doc # \u5c06\u771f\u5b9e\u4fe1\u606f\u7528\u5b57\u5178\u7684\u65b9\u5f0f\u4fdd\u5b58\u5728\u5217\u8868\u4e2d employees = [ { 'name' : '\u9a86\u660a' , 'id' : '100200198011280001' , 'sdate' : '2008\u5e743\u67081\u65e5' , 'edate' : '2012\u5e742\u670829\u65e5' , 'department' : '\u4ea7\u54c1\u7814\u53d1' , 'position' : '\u67b6\u6784\u5e08' , 'company' : '\u6210\u90fd\u534e\u4e3a\u6280\u672f\u6709\u9650\u516c\u53f8' }, { 'name' : '\u738b\u5927\u9524' , 'id' : '510210199012125566' , 'sdate' : '2019\u5e741\u67081\u65e5' , 'edate' : '2021\u5e744\u670830\u65e5' , 'department' : '\u4ea7\u54c1\u7814\u53d1' , 'position' : 'Python\u5f00\u53d1\u5de5\u7a0b\u5e08' , 'company' : '\u6210\u90fd\u8c37\u9053\u79d1\u6280\u6709\u9650\u516c\u53f8' }, { 'name' : '\u674e\u5143\u82b3' , 'id' : '2102101995103221599' , 'sdate' : '2020\u5e745\u670810\u65e5' , 'edate' : '2021\u5e743\u67085\u65e5' , 'department' : '\u4ea7\u54c1\u7814\u53d1' , 'position' : 'Java\u5f00\u53d1\u5de5\u7a0b\u5e08' , 'company' : '\u540c\u57ce\u4f01\u4e1a\u7ba1\u7406\u96c6\u56e2\u6709\u9650\u516c\u53f8' }, ] # \u5bf9\u5217\u8868\u8fdb\u884c\u5faa\u73af\u904d\u5386\uff0c\u6279\u91cf\u751f\u6210Word\u6587\u6863 for emp_dict in employees : # \u8bfb\u53d6\u79bb\u804c\u8bc1\u660e\u6a21\u677f\u6587\u4ef6 doc = Document ( 'resources/\u79bb\u804c\u8bc1\u660e\u6a21\u677f.docx' ) # type: Doc # \u5faa\u73af\u904d\u5386\u6240\u6709\u6bb5\u843d\u5bfb\u627e\u5360\u4f4d\u7b26 for p in doc . paragraphs : if '{' not in p . text : continue # \u4e0d\u80fd\u76f4\u63a5\u4fee\u6539\u6bb5\u843d\u5185\u5bb9\uff0c\u5426\u5219\u4f1a\u4e22\u5931\u6837\u5f0f # \u6240\u4ee5\u9700\u8981\u5bf9\u6bb5\u843d\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u904d\u5386\u5e76\u8fdb\u884c\u67e5\u627e\u66ff\u6362 for run in p . runs : if '{' not in run . text : continue # \u5c06\u5360\u4f4d\u7b26\u6362\u6210\u5b9e\u9645\u5185\u5bb9 start , end = run . text . find ( '{' ), run . text . find ( '}' ) key , place_holder = run . text [ start + 1 : end ], run . text [ start : end + 1 ] run . text = run . text . replace ( place_holder , emp_dict [ key ]) # \u6bcf\u4e2a\u4eba\u5bf9\u5e94\u4fdd\u5b58\u4e00\u4e2aWord\u6587\u6863 doc . save ( f ' { emp_dict [ \"name\" ] } \u79bb\u804c\u8bc1\u660e.docx' ) \u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u4f1a\u5728\u5f53\u524d\u8def\u5f84\u4e0b\u751f\u6210\u4e09\u4e2aWord\u6587\u6863\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u751f\u6210PowerPoint \u9996\u5148\u6211\u4eec\u9700\u8981\u5b89\u88c5\u540d\u4e3a python-pptx \u7684\u4e09\u65b9\u5e93\uff0c\u547d\u4ee4\u5982\u4e0b\u6240\u793a\u3002 pip install python-pptx \u7528Python\u64cd\u4f5cPowerPoint\u7684\u5185\u5bb9\uff0c\u56e0\u4e3a\u5b9e\u9645\u5e94\u7528\u573a\u666f\u4e0d\u7b97\u5f88\u591a\uff0c\u6211\u4e0d\u6253\u7b97\u5728\u8fd9\u91cc\u8fdb\u884c\u8d58\u8ff0\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb python-pptx \u7684 \u5b98\u65b9\u6587\u6863 \uff0c\u4e0b\u9762\u4ec5\u5c55\u793a\u4e00\u6bb5\u6765\u81ea\u4e8e\u5b98\u65b9\u6587\u6863\u7684\u4ee3\u7801\u3002 from pptx import Presentation # \u521b\u5efa\u5e7b\u706f\u7247\u5bf9\u8c61 pres = Presentation () # \u9009\u62e9\u6bcd\u7248\u6dfb\u52a0\u4e00\u9875 title_slide_layout = pres . slide_layouts [ 0 ] slide = pres . slides . add_slide ( title_slide_layout ) # \u83b7\u53d6\u6807\u9898\u680f\u548c\u526f\u6807\u9898\u680f title = slide . shapes . title subtitle = slide . placeholders [ 1 ] # \u7f16\u8f91\u6807\u9898\u548c\u526f\u6807\u9898 title . text = \"Welcome to Python\" subtitle . text = \"Life is short, I use Python\" # \u9009\u62e9\u6bcd\u7248\u6dfb\u52a0\u4e00\u9875 bullet_slide_layout = pres . slide_layouts [ 1 ] slide = pres . slides . add_slide ( bullet_slide_layout ) # \u83b7\u53d6\u9875\u9762\u4e0a\u6240\u6709\u5f62\u72b6 shapes = slide . shapes # \u83b7\u53d6\u6807\u9898\u548c\u4e3b\u4f53 title_shape = shapes . title body_shape = shapes . placeholders [ 1 ] # \u7f16\u8f91\u6807\u9898 title_shape . text = 'Introduction' # \u7f16\u8f91\u4e3b\u4f53\u5185\u5bb9 tf = body_shape . text_frame tf . text = 'History of Python' # \u6dfb\u52a0\u4e00\u4e2a\u4e00\u7ea7\u6bb5\u843d p = tf . add_paragraph () p . text = 'X \\' max 1989' p . level = 1 # \u6dfb\u52a0\u4e00\u4e2a\u4e8c\u7ea7\u6bb5\u843d p = tf . add_paragraph () p . text = 'Guido began to write interpreter for Python.' p . level = 2 # \u4fdd\u5b58\u5e7b\u706f\u7247 pres . save ( 'test.pptx' ) \u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u751f\u6210\u7684PowerPoint\u6587\u4ef6\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u7b80\u5355\u7684\u603b\u7ed3 \u7528Python\u7a0b\u5e8f\u89e3\u51b3\u529e\u516c\u81ea\u52a8\u5316\u7684\u95ee\u9898\u771f\u7684\u975e\u5e38\u9177\uff0c\u5b83\u53ef\u4ee5\u5c06\u6211\u4eec\u4ece\u7e41\u7410\u4e4f\u5473\u7684\u52b3\u52a8\u4e2d\u89e3\u653e\u51fa\u6765\u3002\u5199\u8fd9\u7c7b\u4ee3\u7801\u5c31\u662f\u53bb\u505a\u4e00\u4ef6\u4e00\u52b3\u6c38\u9038\u7684\u4e8b\u60c5\uff0c\u5199\u4ee3\u7801\u7684\u8fc7\u7a0b\u5373\u4fbf\u4e0d\u600e\u4e48\u6109\u5feb\uff0c\u4f7f\u7528\u8fd9\u4e9b\u4ee3\u7801\u7684\u65f6\u5019\u5e94\u8be5\u662f\u975e\u5e38\u5f00\u5fc3\u7684\u3002","title":"\u7b2c26\u8bfe\uff1a\u7528Python\u64cd\u4f5cWord\u6587\u4ef6\u548cPowerPoint"},{"location":"%E7%AC%AC26%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E6%93%8D%E4%BD%9CWord%E6%96%87%E4%BB%B6%E5%92%8CPowerPoint/#26pythonwordpowerpoint","text":"\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u6709\u5f88\u591a\u7b80\u5355\u91cd\u590d\u7684\u52b3\u52a8\u5176\u5b9e\u5b8c\u5168\u53ef\u4ee5\u4ea4\u7ed9Python\u7a0b\u5e8f\uff0c\u6bd4\u5982\u6839\u636e\u6837\u677f\u6587\u4ef6\uff08\u6a21\u677f\u6587\u4ef6\uff09\u6279\u91cf\u7684\u751f\u6210\u5f88\u591a\u4e2aWord\u6587\u4ef6\u6216PowerPoint\u6587\u4ef6\u3002Word\u662f\u5fae\u8f6f\u516c\u53f8\u5f00\u53d1\u7684\u6587\u5b57\u5904\u7406\u7a0b\u5e8f\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u4e0d\u964c\u751f\uff0c\u65e5\u5e38\u529e\u516c\u4e2d\u5f88\u591a\u6b63\u5f0f\u7684\u6587\u6863\u90fd\u662f\u7528Word\u8fdb\u884c\u64b0\u5199\u548c\u7f16\u8f91\u7684\uff0c\u76ee\u524d\u4f7f\u7528\u7684Word\u6587\u4ef6\u540e\u7f00\u540d\u4e00\u822c\u4e3a .docx \u3002PowerPoint\u662f\u5fae\u8f6f\u516c\u53f8\u5f00\u53d1\u7684\u6f14\u793a\u6587\u7a3f\u7a0b\u5e8f\uff0c\u662f\u5fae\u8f6f\u7684Office\u7cfb\u5217\u8f6f\u4ef6\u4e2d\u7684\u4e00\u5458\uff0c\u88ab\u5546\u4e1a\u4eba\u58eb\u3001\u6559\u5e08\u3001\u5b66\u751f\u7b49\u7fa4\u4f53\u5e7f\u6cdb\u4f7f\u7528\uff0c\u901a\u5e38\u4e5f\u5c06\u5176\u79f0\u4e4b\u4e3a\u201c\u5e7b\u706f\u7247\u201d\u3002\u5728Python\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a python-docx \u7684\u4e09\u65b9\u5e93\u6765\u64cd\u4f5cWord\uff0c\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a python-pptx \u7684\u4e09\u65b9\u5e93\u6765\u751f\u6210PowerPoint\u3002","title":"\u7b2c26\u8bfe\uff1a\u7528Python\u64cd\u4f5cWord\u548cPowerPoint"},{"location":"%E7%AC%AC26%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E6%93%8D%E4%BD%9CWord%E6%96%87%E4%BB%B6%E5%92%8CPowerPoint/#word","text":"\u6211\u4eec\u53ef\u4ee5\u5148\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5 python-docx \u4e09\u65b9\u5e93\u3002 pip install python-docx \u6309\u7167 \u5b98\u65b9\u6587\u6863 \u7684\u4ecb\u7ecd\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684\u4ee3\u7801\u6765\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u7684Word\u6587\u6863\u3002 from docx import Document from docx.shared import Cm , Pt from docx.document import Document as Doc # \u521b\u5efa\u4ee3\u8868Word\u6587\u6863\u7684Doc\u5bf9\u8c61 document = Document () # type: Doc # \u6dfb\u52a0\u5927\u6807\u9898 document . add_heading ( '\u5feb\u5feb\u4e50\u4e50\u5b66Python' , 0 ) # \u6dfb\u52a0\u6bb5\u843d p = document . add_paragraph ( 'Python\u662f\u4e00\u95e8\u975e\u5e38\u6d41\u884c\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83' ) run = p . add_run ( '\u7b80\u5355' ) run . bold = True run . font . size = Pt ( 18 ) p . add_run ( '\u800c\u4e14' ) run = p . add_run ( '\u4f18\u96c5' ) run . font . size = Pt ( 18 ) run . underline = True p . add_run ( '\u3002' ) # \u6dfb\u52a0\u4e00\u7ea7\u6807\u9898 document . add_heading ( 'Heading, level 1' , level = 1 ) # \u6dfb\u52a0\u5e26\u6837\u5f0f\u7684\u6bb5\u843d document . add_paragraph ( 'Intense quote' , style = 'Intense Quote' ) # \u6dfb\u52a0\u65e0\u5e8f\u5217\u8868 document . add_paragraph ( 'first item in unordered list' , style = 'List Bullet' ) document . add_paragraph ( 'second item in ordered list' , style = 'List Bullet' ) # \u6dfb\u52a0\u6709\u5e8f\u5217\u8868 document . add_paragraph ( 'first item in ordered list' , style = 'List Number' ) document . add_paragraph ( 'second item in ordered list' , style = 'List Number' ) # \u6dfb\u52a0\u56fe\u7247\uff08\u6ce8\u610f\u8def\u5f84\u548c\u56fe\u7247\u5fc5\u987b\u8981\u5b58\u5728\uff09 document . add_picture ( 'resources/guido.jpg' , width = Cm ( 5.2 )) # \u6dfb\u52a0\u5206\u8282\u7b26 document . add_section () records = ( ( '\u9a86\u660a' , '\u7537' , '1995-5-5' ), ( '\u5b59\u7f8e\u4e3d' , '\u5973' , '1992-2-2' ) ) # \u6dfb\u52a0\u8868\u683c table = document . add_table ( rows = 1 , cols = 3 ) table . style = 'Dark List' hdr_cells = table . rows [ 0 ] . cells hdr_cells [ 0 ] . text = '\u59d3\u540d' hdr_cells [ 1 ] . text = '\u6027\u522b' hdr_cells [ 2 ] . text = '\u51fa\u751f\u65e5\u671f' # \u4e3a\u8868\u683c\u6dfb\u52a0\u884c for name , sex , birthday in records : row_cells = table . add_row () . cells row_cells [ 0 ] . text = name row_cells [ 1 ] . text = sex row_cells [ 2 ] . text = birthday # \u6dfb\u52a0\u5206\u9875\u7b26 document . add_page_break () # \u4fdd\u5b58\u6587\u6863 document . save ( 'demo.docx' ) \u63d0\u793a \uff1a\u4e0a\u9762\u4ee3\u7801\u7b2c7\u884c\u4e2d\u7684\u6ce8\u91ca # type: Doc \u662f\u4e3a\u4e86\u5728PyCharm\u4e2d\u83b7\u5f97\u4ee3\u7801\u8865\u5168\u63d0\u793a\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u6e05\u695a\u5bf9\u8c61\u5177\u4f53\u7684\u6570\u636e\u7c7b\u578b\uff0cPyCharm\u65e0\u6cd5\u5728\u540e\u7eed\u4ee3\u7801\u4e2d\u7ed9\u51fa Doc \u5bf9\u8c61\u7684\u4ee3\u7801\u8865\u5168\u63d0\u793a\u3002 \u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6253\u5f00\u751f\u6210\u7684Word\u6587\u6863\uff0c\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684Word\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u53bb\u904d\u5386\u5b83\u6240\u6709\u7684\u6bb5\u843d\u5e76\u83b7\u53d6\u5bf9\u5e94\u7684\u5185\u5bb9\u3002 from docx import Document from docx.document import Document as Doc doc = Document ( 'resources/\u79bb\u804c\u8bc1\u660e.docx' ) # type: Doc for no , p in enumerate ( doc . paragraphs ): print ( no , p . text ) \u63d0\u793a \uff1a\u5982\u679c\u9700\u8981\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684Word\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u5730\u5740\u8fdb\u884c\u83b7\u53d6\u3002\u94fe\u63a5:https://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g \u63d0\u53d6\u7801:e7b4\u3002 \u8bfb\u53d6\u5230\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\u3002 0 1 \u79bb \u804c \u8bc1 \u660e 2 3 \u5179\u8bc1\u660e \u738b\u5927\u9524 \uff0c\u8eab\u4efd\u8bc1\u53f7\u7801\uff1a 100200199512120001 \uff0c\u4e8e 2018 \u5e74 8 \u6708 7 \u65e5\u81f3 2020 \u5e74 6 \u6708 28 \u65e5\u5728\u6211\u5355\u4f4d \u5f00\u53d1\u90e8 \u90e8\u95e8\u62c5\u4efb Java\u5f00\u53d1\u5de5\u7a0b\u5e08 \u804c\u52a1\uff0c\u5728\u804c\u671f\u95f4\u65e0\u4e0d\u826f\u8868\u73b0\u3002\u56e0 \u4e2a\u4eba \u539f\u56e0\uff0c\u4e8e 2020 \u5e74 6 \u6708 28 \u65e5\u8d77\u7ec8\u6b62\u89e3\u9664\u52b3\u52a8\u5408\u540c\u3002\u73b0\u5df2\u7ed3\u6e05\u8d22\u52a1\u76f8\u5173\u8d39\u7528\uff0c\u529e\u7406\u5b8c\u89e3\u9664\u52b3\u52a8\u5173\u7cfb\u76f8\u5173\u624b\u7eed\uff0c\u53cc\u65b9\u4e0d\u5b58\u5728\u4efb\u4f55\u52b3\u52a8\u4e89\u8bae\u3002 4 5 \u7279\u6b64\u8bc1\u660e\uff01 6 7 8 \u516c\u53f8\u540d\u79f0\uff08\u76d6\u7ae0\uff09:\u6210\u90fd\u98ce\u8f66\u8f66\u79d1\u6280\u6709\u9650\u516c\u53f8 9 2020 \u5e74 6 \u6708 28 \u65e5 \u8bb2\u5230\u8fd9\u91cc\uff0c\u76f8\u4fe1\u5f88\u591a\u8bfb\u8005\u5df2\u7ecf\u60f3\u5230\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e0a\u9762\u7684\u79bb\u804c\u8bc1\u660e\u5236\u4f5c\u6210\u4e00\u4e2a\u6a21\u677f\u6587\u4ef6\uff0c\u628a\u59d3\u540d\u3001\u8eab\u4efd\u8bc1\u53f7\u3001\u5165\u804c\u548c\u79bb\u804c\u65e5\u671f\u7b49\u4fe1\u606f\u7528\u5360\u4f4d\u7b26\u4ee3\u66ff\uff0c\u8fd9\u6837\u901a\u8fc7\u5bf9\u5360\u4f4d\u7b26\u7684\u66ff\u6362\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u8981\u5199\u5165\u5bf9\u5e94\u7684\u4fe1\u606f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6279\u91cf\u7684\u751f\u6210Word\u6587\u6863\u3002 \u6309\u7167\u4e0a\u9762\u7684\u601d\u8def\uff0c\u6211\u4eec\u9996\u5148\u7f16\u8f91\u4e00\u4e2a\u79bb\u804c\u8bc1\u660e\u7684\u6a21\u677f\u6587\u4ef6\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u8bfb\u53d6\u8be5\u6587\u4ef6\uff0c\u5c06\u5360\u4f4d\u7b26\u66ff\u6362\u4e3a\u771f\u5b9e\u4fe1\u606f\uff0c\u5c31\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u65b0\u7684Word\u6587\u6863\uff0c\u5982\u4e0b\u6240\u793a\u3002 from docx import Document from docx.document import Document as Doc # \u5c06\u771f\u5b9e\u4fe1\u606f\u7528\u5b57\u5178\u7684\u65b9\u5f0f\u4fdd\u5b58\u5728\u5217\u8868\u4e2d employees = [ { 'name' : '\u9a86\u660a' , 'id' : '100200198011280001' , 'sdate' : '2008\u5e743\u67081\u65e5' , 'edate' : '2012\u5e742\u670829\u65e5' , 'department' : '\u4ea7\u54c1\u7814\u53d1' , 'position' : '\u67b6\u6784\u5e08' , 'company' : '\u6210\u90fd\u534e\u4e3a\u6280\u672f\u6709\u9650\u516c\u53f8' }, { 'name' : '\u738b\u5927\u9524' , 'id' : '510210199012125566' , 'sdate' : '2019\u5e741\u67081\u65e5' , 'edate' : '2021\u5e744\u670830\u65e5' , 'department' : '\u4ea7\u54c1\u7814\u53d1' , 'position' : 'Python\u5f00\u53d1\u5de5\u7a0b\u5e08' , 'company' : '\u6210\u90fd\u8c37\u9053\u79d1\u6280\u6709\u9650\u516c\u53f8' }, { 'name' : '\u674e\u5143\u82b3' , 'id' : '2102101995103221599' , 'sdate' : '2020\u5e745\u670810\u65e5' , 'edate' : '2021\u5e743\u67085\u65e5' , 'department' : '\u4ea7\u54c1\u7814\u53d1' , 'position' : 'Java\u5f00\u53d1\u5de5\u7a0b\u5e08' , 'company' : '\u540c\u57ce\u4f01\u4e1a\u7ba1\u7406\u96c6\u56e2\u6709\u9650\u516c\u53f8' }, ] # \u5bf9\u5217\u8868\u8fdb\u884c\u5faa\u73af\u904d\u5386\uff0c\u6279\u91cf\u751f\u6210Word\u6587\u6863 for emp_dict in employees : # \u8bfb\u53d6\u79bb\u804c\u8bc1\u660e\u6a21\u677f\u6587\u4ef6 doc = Document ( 'resources/\u79bb\u804c\u8bc1\u660e\u6a21\u677f.docx' ) # type: Doc # \u5faa\u73af\u904d\u5386\u6240\u6709\u6bb5\u843d\u5bfb\u627e\u5360\u4f4d\u7b26 for p in doc . paragraphs : if '{' not in p . text : continue # \u4e0d\u80fd\u76f4\u63a5\u4fee\u6539\u6bb5\u843d\u5185\u5bb9\uff0c\u5426\u5219\u4f1a\u4e22\u5931\u6837\u5f0f # \u6240\u4ee5\u9700\u8981\u5bf9\u6bb5\u843d\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u904d\u5386\u5e76\u8fdb\u884c\u67e5\u627e\u66ff\u6362 for run in p . runs : if '{' not in run . text : continue # \u5c06\u5360\u4f4d\u7b26\u6362\u6210\u5b9e\u9645\u5185\u5bb9 start , end = run . text . find ( '{' ), run . text . find ( '}' ) key , place_holder = run . text [ start + 1 : end ], run . text [ start : end + 1 ] run . text = run . text . replace ( place_holder , emp_dict [ key ]) # \u6bcf\u4e2a\u4eba\u5bf9\u5e94\u4fdd\u5b58\u4e00\u4e2aWord\u6587\u6863 doc . save ( f ' { emp_dict [ \"name\" ] } \u79bb\u804c\u8bc1\u660e.docx' ) \u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u4f1a\u5728\u5f53\u524d\u8def\u5f84\u4e0b\u751f\u6210\u4e09\u4e2aWord\u6587\u6863\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002","title":"\u64cd\u4f5cWord\u6587\u6863"},{"location":"%E7%AC%AC26%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E6%93%8D%E4%BD%9CWord%E6%96%87%E4%BB%B6%E5%92%8CPowerPoint/#powerpoint","text":"\u9996\u5148\u6211\u4eec\u9700\u8981\u5b89\u88c5\u540d\u4e3a python-pptx \u7684\u4e09\u65b9\u5e93\uff0c\u547d\u4ee4\u5982\u4e0b\u6240\u793a\u3002 pip install python-pptx \u7528Python\u64cd\u4f5cPowerPoint\u7684\u5185\u5bb9\uff0c\u56e0\u4e3a\u5b9e\u9645\u5e94\u7528\u573a\u666f\u4e0d\u7b97\u5f88\u591a\uff0c\u6211\u4e0d\u6253\u7b97\u5728\u8fd9\u91cc\u8fdb\u884c\u8d58\u8ff0\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb python-pptx \u7684 \u5b98\u65b9\u6587\u6863 \uff0c\u4e0b\u9762\u4ec5\u5c55\u793a\u4e00\u6bb5\u6765\u81ea\u4e8e\u5b98\u65b9\u6587\u6863\u7684\u4ee3\u7801\u3002 from pptx import Presentation # \u521b\u5efa\u5e7b\u706f\u7247\u5bf9\u8c61 pres = Presentation () # \u9009\u62e9\u6bcd\u7248\u6dfb\u52a0\u4e00\u9875 title_slide_layout = pres . slide_layouts [ 0 ] slide = pres . slides . add_slide ( title_slide_layout ) # \u83b7\u53d6\u6807\u9898\u680f\u548c\u526f\u6807\u9898\u680f title = slide . shapes . title subtitle = slide . placeholders [ 1 ] # \u7f16\u8f91\u6807\u9898\u548c\u526f\u6807\u9898 title . text = \"Welcome to Python\" subtitle . text = \"Life is short, I use Python\" # \u9009\u62e9\u6bcd\u7248\u6dfb\u52a0\u4e00\u9875 bullet_slide_layout = pres . slide_layouts [ 1 ] slide = pres . slides . add_slide ( bullet_slide_layout ) # \u83b7\u53d6\u9875\u9762\u4e0a\u6240\u6709\u5f62\u72b6 shapes = slide . shapes # \u83b7\u53d6\u6807\u9898\u548c\u4e3b\u4f53 title_shape = shapes . title body_shape = shapes . placeholders [ 1 ] # \u7f16\u8f91\u6807\u9898 title_shape . text = 'Introduction' # \u7f16\u8f91\u4e3b\u4f53\u5185\u5bb9 tf = body_shape . text_frame tf . text = 'History of Python' # \u6dfb\u52a0\u4e00\u4e2a\u4e00\u7ea7\u6bb5\u843d p = tf . add_paragraph () p . text = 'X \\' max 1989' p . level = 1 # \u6dfb\u52a0\u4e00\u4e2a\u4e8c\u7ea7\u6bb5\u843d p = tf . add_paragraph () p . text = 'Guido began to write interpreter for Python.' p . level = 2 # \u4fdd\u5b58\u5e7b\u706f\u7247 pres . save ( 'test.pptx' ) \u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u751f\u6210\u7684PowerPoint\u6587\u4ef6\u5982\u4e0b\u56fe\u6240\u793a\u3002","title":"\u751f\u6210PowerPoint"},{"location":"%E7%AC%AC26%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E6%93%8D%E4%BD%9CWord%E6%96%87%E4%BB%B6%E5%92%8CPowerPoint/#_1","text":"\u7528Python\u7a0b\u5e8f\u89e3\u51b3\u529e\u516c\u81ea\u52a8\u5316\u7684\u95ee\u9898\u771f\u7684\u975e\u5e38\u9177\uff0c\u5b83\u53ef\u4ee5\u5c06\u6211\u4eec\u4ece\u7e41\u7410\u4e4f\u5473\u7684\u52b3\u52a8\u4e2d\u89e3\u653e\u51fa\u6765\u3002\u5199\u8fd9\u7c7b\u4ee3\u7801\u5c31\u662f\u53bb\u505a\u4e00\u4ef6\u4e00\u52b3\u6c38\u9038\u7684\u4e8b\u60c5\uff0c\u5199\u4ee3\u7801\u7684\u8fc7\u7a0b\u5373\u4fbf\u4e0d\u600e\u4e48\u6109\u5feb\uff0c\u4f7f\u7528\u8fd9\u4e9b\u4ee3\u7801\u7684\u65f6\u5019\u5e94\u8be5\u662f\u975e\u5e38\u5f00\u5fc3\u7684\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC27%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E6%93%8D%E4%BD%9CPDF%E6%96%87%E4%BB%B6/","text":"\u7b2c27\u8bfe\uff1a\u7528Python\u64cd\u4f5cPDF\u6587\u4ef6 PDF\u662fPortable Document Format\u7684\u7f29\u5199\uff0c\u8fd9\u7c7b\u6587\u4ef6\u901a\u5e38\u4f7f\u7528 .pdf \u4f5c\u4e3a\u5176\u6269\u5c55\u540d\u3002\u5728\u65e5\u5e38\u5f00\u53d1\u5de5\u4f5c\u4e2d\uff0c\u6700\u5bb9\u6613\u9047\u5230\u7684\u5c31\u662f\u4ecePDF\u4e2d\u8bfb\u53d6\u6587\u672c\u5185\u5bb9\u4ee5\u53ca\u7528\u5df2\u6709\u7684\u5185\u5bb9\u751f\u6210PDF\u6587\u6863\u8fd9\u4e24\u4e2a\u4efb\u52a1\u3002 \u4ecePDF\u4e2d\u63d0\u53d6\u6587\u672c \u5728Python\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a PyPDF2 \u7684\u4e09\u65b9\u5e93\u6765\u8bfb\u53d6PDF\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5\u5b83\u3002 pip install PyPDF2 PyPDF2 \u6ca1\u6709\u529e\u6cd5\u4ecePDF\u6587\u6863\u4e2d\u63d0\u53d6\u56fe\u50cf\u3001\u56fe\u8868\u6216\u5176\u4ed6\u5a92\u4f53\uff0c\u4f46\u5b83\u53ef\u4ee5\u63d0\u53d6\u6587\u672c\uff0c\u5e76\u5c06\u5176\u8fd4\u56de\u4e3aPython\u5b57\u7b26\u4e32\u3002 import PyPDF2 reader = PyPDF2 . PdfFileReader ( 'test.pdf' ) page = reader . getPage ( 0 ) print ( page . extractText ()) \u63d0\u793a \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684PDF\u6587\u4ef6\u201ctest.pdf\u201d\u4ee5\u53ca\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u9700\u8981\u7528\u5230\u7684PDF\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u5730\u5740\u8fdb\u884c\u83b7\u53d6\u3002\u94fe\u63a5:https://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g \u63d0\u53d6\u7801:e7b4\u3002 \u5f53\u7136\uff0c PyPDF2 \u5e76\u4e0d\u662f\u4ec0\u4e48\u6837\u7684PDF\u6587\u6863\u90fd\u80fd\u63d0\u53d6\u51fa\u6587\u5b57\u6765\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u6211\u6240\u77e5\u5e76\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u5c24\u5176\u662f\u5728\u63d0\u53d6\u4e2d\u6587\u7684\u65f6\u5019\u3002\u7f51\u4e0a\u4e5f\u6709\u5f88\u591a\u8bb2\u89e3\u4ecePDF\u4e2d\u63d0\u53d6\u6587\u5b57\u7684\u6587\u7ae0\uff0c\u63a8\u8350\u5927\u5bb6\u81ea\u884c\u9605\u8bfb \u300a\u4e09\u5927\u795e\u5668\u52a9\u529bPython\u63d0\u53d6pdf\u6587\u6863\u4fe1\u606f\u300b \u4e00\u6587\u8fdb\u884c\u4e86\u89e3\u3002 \u8981\u4ecePDF\u6587\u4ef6\u4e2d\u63d0\u53d6\u6587\u672c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e09\u65b9\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u5982\u4e0b\u6240\u793a\u3002 pip install pdfminer.six pdf2text.py test.pdf \u65cb\u8f6c\u548c\u53e0\u52a0\u9875\u9762 \u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u901a\u8fc7\u521b\u5efa PdfFileReader \u5bf9\u8c61\u7684\u65b9\u5f0f\u6765\u8bfb\u53d6PDF\u6587\u6863\uff0c\u8be5\u5bf9\u8c61\u7684 getPage \u65b9\u6cd5\u53ef\u4ee5\u83b7\u5f97PDF\u6587\u6863\u7684\u6307\u5b9a\u9875\u5e76\u5f97\u5230\u4e00\u4e2a PageObject \u5bf9\u8c61\uff0c\u901a\u8fc7 PageObject \u5bf9\u8c61\u7684 rotateClockwise \u548c rotateCounterClockwise \u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u9875\u9762\u7684\u987a\u65f6\u9488\u548c\u9006\u65f6\u9488\u65b9\u5411\u65cb\u8f6c\uff0c\u901a\u8fc7 PageObject \u5bf9\u8c61\u7684 addBlankPage \u65b9\u6cd5\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u7a7a\u767d\u9875\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import PyPDF2 from PyPDF2.pdf import PageObject # \u521b\u5efa\u4e00\u4e2a\u8bfbPDF\u6587\u4ef6\u7684Reader\u5bf9\u8c61 reader = PyPDF2 . PdfFileReader ( 'resources/XGBoost.pdf' ) # \u521b\u5efa\u4e00\u4e2a\u5199PDF\u6587\u4ef6\u7684Writer\u5bf9\u8c61 writer = PyPDF2 . PdfFileWriter () # \u5bf9PDF\u6587\u4ef6\u6240\u6709\u9875\u8fdb\u884c\u5faa\u73af\u904d\u5386 for page_num in range ( reader . numPages ): # \u83b7\u53d6\u6307\u5b9a\u9875\u7801\u7684Page\u5bf9\u8c61 current_page = reader . getPage ( page_num ) # type: PageObject if page_num % 2 == 0 : # \u5947\u6570\u9875\u987a\u65f6\u9488\u65cb\u8f6c90\u5ea6 current_page . rotateClockwise ( 90 ) else : # \u5076\u6570\u9875\u53cd\u65f6\u9488\u65cb\u8f6c90\u5ea6 current_page . rotateCounterClockwise ( 90 ) writer . addPage ( current_page ) # \u6700\u540e\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u767d\u9875\u5e76\u65cb\u8f6c90\u5ea6 page = writer . addBlankPage () # type: PageObject page . rotateClockwise ( 90 ) # \u901a\u8fc7Writer\u5bf9\u8c61\u7684write\u65b9\u6cd5\u5c06PDF\u5199\u5165\u6587\u4ef6 with open ( 'resources/XGBoost-modified.pdf' , 'wb' ) as file : writer . write ( file ) \u52a0\u5bc6PDF\u6587\u4ef6 \u4f7f\u7528 PyPDF2 \u4e2d\u7684 PdfFileWrite \u5bf9\u8c61\u53ef\u4ee5\u4e3aPDF\u6587\u6863\u52a0\u5bc6\uff0c\u5982\u679c\u9700\u8981\u7ed9\u4e00\u7cfb\u5217\u7684PDF\u6587\u6863\u8bbe\u7f6e\u7edf\u4e00\u7684\u8bbf\u95ee\u53e3\u4ee4\uff0c\u4f7f\u7528Python\u7a0b\u5e8f\u6765\u5904\u7406\u5c31\u4f1a\u975e\u5e38\u7684\u65b9\u4fbf\u3002 import PyPDF2 reader = PyPDF2 . PdfFileReader ( 'resources/XGBoost.pdf' ) writer = PyPDF2 . PdfFileWriter () for page_num in range ( reader . numPages ): writer . addPage ( reader . getPage ( page_num )) # \u901a\u8fc7encrypt\u65b9\u6cd5\u52a0\u5bc6PDF\u6587\u4ef6\uff0c\u65b9\u6cd5\u7684\u53c2\u6570\u5c31\u662f\u8bbe\u7f6e\u7684\u5bc6\u7801 writer . encrypt ( 'foobared' ) with open ( 'resources/XGBoost-encrypted.pdf' , 'wb' ) as file : writer . write ( file ) \u6279\u91cf\u6dfb\u52a0\u6c34\u5370 \u4e0a\u9762\u63d0\u5230\u7684 PageObject \u5bf9\u8c61\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a mergePage \u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4e24\u4e2aPDF\u9875\u9762\u8fdb\u884c\u53e0\u52a0\uff0c\u901a\u8fc7\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5b9e\u73b0\u7ed9PDF\u6587\u4ef6\u6dfb\u52a0\u6c34\u5370\u7684\u529f\u80fd\u3002\u4f8b\u5982\u8981\u7ed9\u4e0a\u9762\u7684\u201cXGBoost.pdf\u201d\u6587\u4ef6\u6dfb\u52a0\u4e00\u4e2a\u6c34\u5370\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u51c6\u5907\u597d\u4e00\u4e2a\u63d0\u4f9b\u6c34\u5370\u9875\u9762\u7684PDF\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u5305\u542b\u6c34\u5370\u7684 PageObject \u8bfb\u53d6\u51fa\u6765\uff0c\u7136\u540e\u518d\u5faa\u73af\u904d\u5386\u201cXGBoost.pdf\u201d\u6587\u4ef6\u7684\u6bcf\u4e2a\u9875\uff0c\u83b7\u53d6\u5230 PageObject \u5bf9\u8c61\uff0c\u7136\u540e\u901a\u8fc7 mergePage \u65b9\u6cd5\u5b9e\u73b0\u6c34\u5370\u9875\u548c\u539f\u59cb\u9875\u7684\u5408\u5e76\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import PyPDF2 from PyPDF2.pdf import PageObject reader1 = PyPDF2 . PdfFileReader ( 'resources/XGBoost.pdf' ) reader2 = PyPDF2 . PdfFileReader ( 'resources/watermark.pdf' ) writer = PyPDF2 . PdfFileWriter () # \u83b7\u53d6\u6c34\u5370\u9875 watermark_page = reader2 . getPage ( 0 ) for page_num in range ( reader1 . numPages ): current_page = reader1 . getPage ( page_num ) # type: PageObject current_page . mergePage ( watermark_page ) # \u5c06\u539f\u59cb\u9875\u548c\u6c34\u5370\u9875\u8fdb\u884c\u5408\u5e76 writer . addPage ( current_page ) # \u5c06PDF\u5199\u5165\u6587\u4ef6 with open ( 'resources/XGBoost-watermarked.pdf' , 'wb' ) as file : writer . write ( file ) \u5982\u679c\u613f\u610f\uff0c\u8fd8\u53ef\u4ee5\u8ba9\u5947\u6570\u9875\u548c\u5076\u6570\u9875\u4f7f\u7528\u4e0d\u540c\u7684\u6c34\u5370\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u601d\u8003\u4e0b\u5e94\u8be5\u600e\u4e48\u505a\u3002 \u521b\u5efaPDF\u6587\u4ef6 \u521b\u5efaPDF\u6587\u6863\u9700\u8981\u4e09\u65b9\u5e93 reportlab \u7684\u652f\u6301\uff0c\u5b89\u88c5\u7684\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\u3002 pip install reportlab \u4e0b\u9762\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u4e3a\u5927\u5bb6\u5c55\u793a reportlab \u7684\u7528\u6cd5\u3002 from reportlab.lib.pagesizes import A4 from reportlab.pdfbase import pdfmetrics from reportlab.pdfbase.ttfonts import TTFont from reportlab.pdfgen import canvas pdf_canvas = canvas . Canvas ( 'resources/demo.pdf' , pagesize = A4 ) width , height = A4 # \u7ed8\u56fe image = canvas . ImageReader ( 'resources/guido.jpg' ) pdf_canvas . drawImage ( image , 20 , height - 395 , 250 , 375 ) # \u663e\u793a\u5f53\u524d\u9875 pdf_canvas . showPage () # \u6ce8\u518c\u5b57\u4f53\u6587\u4ef6 pdfmetrics . registerFont ( TTFont ( 'Font1' , 'resources/fonts/Vera.ttf' )) pdfmetrics . registerFont ( TTFont ( 'Font2' , 'resources/fonts/\u9752\u5471\u77f3\u5934\u4f53.ttf' )) # \u5199\u5b57 pdf_canvas . setFont ( 'Font2' , 40 ) pdf_canvas . setFillColorRGB ( 0.9 , 0.5 , 0.3 , 1 ) pdf_canvas . drawString ( width // 2 - 120 , height // 2 , '\u4f60\u597d\uff0c\u4e16\u754c\uff01' ) pdf_canvas . setFont ( 'Font1' , 40 ) pdf_canvas . setFillColorRGB ( 0 , 1 , 0 , 0.5 ) pdf_canvas . rotate ( 18 ) pdf_canvas . drawString ( 250 , 250 , 'hello, world!' ) # \u4fdd\u5b58 pdf_canvas . save () \u4e0a\u9762\u7684\u4ee3\u7801\u5982\u679c\u4e0d\u592a\u7406\u89e3\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u7b49\u771f\u6b63\u9700\u8981\u7528Python\u521b\u5efaPDF\u6587\u6863\u7684\u65f6\u5019\uff0c\u518d\u597d\u597d\u7814\u8bfb\u4e00\u4e0b reportlab \u7684 \u5b98\u65b9\u6587\u6863 \u5c31\u53ef\u4ee5\u4e86\u3002 \u63d0\u793a \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u7528\u5230\u7684\u56fe\u7247\u548c\u5b57\u4f53\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u94fe\u63a5\u83b7\u53d6\u3002\u94fe\u63a5:https://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g \u63d0\u53d6\u7801:e7b4\u3002 \u7b80\u5355\u7684\u603b\u7ed3 \u5728\u5b66\u4e60\u5b8c\u4e0a\u9762\u7684\u5185\u5bb9\u4e4b\u540e\uff0c\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u77e5\u9053\u50cf\u5408\u5e76\u591a\u4e2aPDF\u6587\u4ef6\u8fd9\u6837\u7684\u5de5\u4f5c\u5e94\u8be5\u5982\u4f55\u7528Python\u4ee3\u7801\u6765\u5904\u7406\u4e86\uff0c\u8d76\u7d27\u81ea\u5df1\u52a8\u624b\u8bd5\u4e00\u8bd5\u5427\u3002","title":"\u7b2c27\u8bfe\uff1a\u7528Python\u64cd\u4f5cPDF\u6587\u4ef6"},{"location":"%E7%AC%AC27%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E6%93%8D%E4%BD%9CPDF%E6%96%87%E4%BB%B6/#27pythonpdf","text":"PDF\u662fPortable Document Format\u7684\u7f29\u5199\uff0c\u8fd9\u7c7b\u6587\u4ef6\u901a\u5e38\u4f7f\u7528 .pdf \u4f5c\u4e3a\u5176\u6269\u5c55\u540d\u3002\u5728\u65e5\u5e38\u5f00\u53d1\u5de5\u4f5c\u4e2d\uff0c\u6700\u5bb9\u6613\u9047\u5230\u7684\u5c31\u662f\u4ecePDF\u4e2d\u8bfb\u53d6\u6587\u672c\u5185\u5bb9\u4ee5\u53ca\u7528\u5df2\u6709\u7684\u5185\u5bb9\u751f\u6210PDF\u6587\u6863\u8fd9\u4e24\u4e2a\u4efb\u52a1\u3002","title":"\u7b2c27\u8bfe\uff1a\u7528Python\u64cd\u4f5cPDF\u6587\u4ef6"},{"location":"%E7%AC%AC27%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E6%93%8D%E4%BD%9CPDF%E6%96%87%E4%BB%B6/#pdf","text":"\u5728Python\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a PyPDF2 \u7684\u4e09\u65b9\u5e93\u6765\u8bfb\u53d6PDF\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5\u5b83\u3002 pip install PyPDF2 PyPDF2 \u6ca1\u6709\u529e\u6cd5\u4ecePDF\u6587\u6863\u4e2d\u63d0\u53d6\u56fe\u50cf\u3001\u56fe\u8868\u6216\u5176\u4ed6\u5a92\u4f53\uff0c\u4f46\u5b83\u53ef\u4ee5\u63d0\u53d6\u6587\u672c\uff0c\u5e76\u5c06\u5176\u8fd4\u56de\u4e3aPython\u5b57\u7b26\u4e32\u3002 import PyPDF2 reader = PyPDF2 . PdfFileReader ( 'test.pdf' ) page = reader . getPage ( 0 ) print ( page . extractText ()) \u63d0\u793a \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684PDF\u6587\u4ef6\u201ctest.pdf\u201d\u4ee5\u53ca\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u9700\u8981\u7528\u5230\u7684PDF\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u5730\u5740\u8fdb\u884c\u83b7\u53d6\u3002\u94fe\u63a5:https://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g \u63d0\u53d6\u7801:e7b4\u3002 \u5f53\u7136\uff0c PyPDF2 \u5e76\u4e0d\u662f\u4ec0\u4e48\u6837\u7684PDF\u6587\u6863\u90fd\u80fd\u63d0\u53d6\u51fa\u6587\u5b57\u6765\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u6211\u6240\u77e5\u5e76\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u5c24\u5176\u662f\u5728\u63d0\u53d6\u4e2d\u6587\u7684\u65f6\u5019\u3002\u7f51\u4e0a\u4e5f\u6709\u5f88\u591a\u8bb2\u89e3\u4ecePDF\u4e2d\u63d0\u53d6\u6587\u5b57\u7684\u6587\u7ae0\uff0c\u63a8\u8350\u5927\u5bb6\u81ea\u884c\u9605\u8bfb \u300a\u4e09\u5927\u795e\u5668\u52a9\u529bPython\u63d0\u53d6pdf\u6587\u6863\u4fe1\u606f\u300b \u4e00\u6587\u8fdb\u884c\u4e86\u89e3\u3002 \u8981\u4ecePDF\u6587\u4ef6\u4e2d\u63d0\u53d6\u6587\u672c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e09\u65b9\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u5982\u4e0b\u6240\u793a\u3002 pip install pdfminer.six pdf2text.py test.pdf","title":"\u4ecePDF\u4e2d\u63d0\u53d6\u6587\u672c"},{"location":"%E7%AC%AC27%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E6%93%8D%E4%BD%9CPDF%E6%96%87%E4%BB%B6/#_1","text":"\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u901a\u8fc7\u521b\u5efa PdfFileReader \u5bf9\u8c61\u7684\u65b9\u5f0f\u6765\u8bfb\u53d6PDF\u6587\u6863\uff0c\u8be5\u5bf9\u8c61\u7684 getPage \u65b9\u6cd5\u53ef\u4ee5\u83b7\u5f97PDF\u6587\u6863\u7684\u6307\u5b9a\u9875\u5e76\u5f97\u5230\u4e00\u4e2a PageObject \u5bf9\u8c61\uff0c\u901a\u8fc7 PageObject \u5bf9\u8c61\u7684 rotateClockwise \u548c rotateCounterClockwise \u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u9875\u9762\u7684\u987a\u65f6\u9488\u548c\u9006\u65f6\u9488\u65b9\u5411\u65cb\u8f6c\uff0c\u901a\u8fc7 PageObject \u5bf9\u8c61\u7684 addBlankPage \u65b9\u6cd5\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u7a7a\u767d\u9875\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import PyPDF2 from PyPDF2.pdf import PageObject # \u521b\u5efa\u4e00\u4e2a\u8bfbPDF\u6587\u4ef6\u7684Reader\u5bf9\u8c61 reader = PyPDF2 . PdfFileReader ( 'resources/XGBoost.pdf' ) # \u521b\u5efa\u4e00\u4e2a\u5199PDF\u6587\u4ef6\u7684Writer\u5bf9\u8c61 writer = PyPDF2 . PdfFileWriter () # \u5bf9PDF\u6587\u4ef6\u6240\u6709\u9875\u8fdb\u884c\u5faa\u73af\u904d\u5386 for page_num in range ( reader . numPages ): # \u83b7\u53d6\u6307\u5b9a\u9875\u7801\u7684Page\u5bf9\u8c61 current_page = reader . getPage ( page_num ) # type: PageObject if page_num % 2 == 0 : # \u5947\u6570\u9875\u987a\u65f6\u9488\u65cb\u8f6c90\u5ea6 current_page . rotateClockwise ( 90 ) else : # \u5076\u6570\u9875\u53cd\u65f6\u9488\u65cb\u8f6c90\u5ea6 current_page . rotateCounterClockwise ( 90 ) writer . addPage ( current_page ) # \u6700\u540e\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u767d\u9875\u5e76\u65cb\u8f6c90\u5ea6 page = writer . addBlankPage () # type: PageObject page . rotateClockwise ( 90 ) # \u901a\u8fc7Writer\u5bf9\u8c61\u7684write\u65b9\u6cd5\u5c06PDF\u5199\u5165\u6587\u4ef6 with open ( 'resources/XGBoost-modified.pdf' , 'wb' ) as file : writer . write ( file )","title":"\u65cb\u8f6c\u548c\u53e0\u52a0\u9875\u9762"},{"location":"%E7%AC%AC27%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E6%93%8D%E4%BD%9CPDF%E6%96%87%E4%BB%B6/#pdf_1","text":"\u4f7f\u7528 PyPDF2 \u4e2d\u7684 PdfFileWrite \u5bf9\u8c61\u53ef\u4ee5\u4e3aPDF\u6587\u6863\u52a0\u5bc6\uff0c\u5982\u679c\u9700\u8981\u7ed9\u4e00\u7cfb\u5217\u7684PDF\u6587\u6863\u8bbe\u7f6e\u7edf\u4e00\u7684\u8bbf\u95ee\u53e3\u4ee4\uff0c\u4f7f\u7528Python\u7a0b\u5e8f\u6765\u5904\u7406\u5c31\u4f1a\u975e\u5e38\u7684\u65b9\u4fbf\u3002 import PyPDF2 reader = PyPDF2 . PdfFileReader ( 'resources/XGBoost.pdf' ) writer = PyPDF2 . PdfFileWriter () for page_num in range ( reader . numPages ): writer . addPage ( reader . getPage ( page_num )) # \u901a\u8fc7encrypt\u65b9\u6cd5\u52a0\u5bc6PDF\u6587\u4ef6\uff0c\u65b9\u6cd5\u7684\u53c2\u6570\u5c31\u662f\u8bbe\u7f6e\u7684\u5bc6\u7801 writer . encrypt ( 'foobared' ) with open ( 'resources/XGBoost-encrypted.pdf' , 'wb' ) as file : writer . write ( file )","title":"\u52a0\u5bc6PDF\u6587\u4ef6"},{"location":"%E7%AC%AC27%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E6%93%8D%E4%BD%9CPDF%E6%96%87%E4%BB%B6/#_2","text":"\u4e0a\u9762\u63d0\u5230\u7684 PageObject \u5bf9\u8c61\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a mergePage \u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4e24\u4e2aPDF\u9875\u9762\u8fdb\u884c\u53e0\u52a0\uff0c\u901a\u8fc7\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5b9e\u73b0\u7ed9PDF\u6587\u4ef6\u6dfb\u52a0\u6c34\u5370\u7684\u529f\u80fd\u3002\u4f8b\u5982\u8981\u7ed9\u4e0a\u9762\u7684\u201cXGBoost.pdf\u201d\u6587\u4ef6\u6dfb\u52a0\u4e00\u4e2a\u6c34\u5370\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u51c6\u5907\u597d\u4e00\u4e2a\u63d0\u4f9b\u6c34\u5370\u9875\u9762\u7684PDF\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u5305\u542b\u6c34\u5370\u7684 PageObject \u8bfb\u53d6\u51fa\u6765\uff0c\u7136\u540e\u518d\u5faa\u73af\u904d\u5386\u201cXGBoost.pdf\u201d\u6587\u4ef6\u7684\u6bcf\u4e2a\u9875\uff0c\u83b7\u53d6\u5230 PageObject \u5bf9\u8c61\uff0c\u7136\u540e\u901a\u8fc7 mergePage \u65b9\u6cd5\u5b9e\u73b0\u6c34\u5370\u9875\u548c\u539f\u59cb\u9875\u7684\u5408\u5e76\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import PyPDF2 from PyPDF2.pdf import PageObject reader1 = PyPDF2 . PdfFileReader ( 'resources/XGBoost.pdf' ) reader2 = PyPDF2 . PdfFileReader ( 'resources/watermark.pdf' ) writer = PyPDF2 . PdfFileWriter () # \u83b7\u53d6\u6c34\u5370\u9875 watermark_page = reader2 . getPage ( 0 ) for page_num in range ( reader1 . numPages ): current_page = reader1 . getPage ( page_num ) # type: PageObject current_page . mergePage ( watermark_page ) # \u5c06\u539f\u59cb\u9875\u548c\u6c34\u5370\u9875\u8fdb\u884c\u5408\u5e76 writer . addPage ( current_page ) # \u5c06PDF\u5199\u5165\u6587\u4ef6 with open ( 'resources/XGBoost-watermarked.pdf' , 'wb' ) as file : writer . write ( file ) \u5982\u679c\u613f\u610f\uff0c\u8fd8\u53ef\u4ee5\u8ba9\u5947\u6570\u9875\u548c\u5076\u6570\u9875\u4f7f\u7528\u4e0d\u540c\u7684\u6c34\u5370\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u601d\u8003\u4e0b\u5e94\u8be5\u600e\u4e48\u505a\u3002","title":"\u6279\u91cf\u6dfb\u52a0\u6c34\u5370"},{"location":"%E7%AC%AC27%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E6%93%8D%E4%BD%9CPDF%E6%96%87%E4%BB%B6/#pdf_2","text":"\u521b\u5efaPDF\u6587\u6863\u9700\u8981\u4e09\u65b9\u5e93 reportlab \u7684\u652f\u6301\uff0c\u5b89\u88c5\u7684\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\u3002 pip install reportlab \u4e0b\u9762\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u4e3a\u5927\u5bb6\u5c55\u793a reportlab \u7684\u7528\u6cd5\u3002 from reportlab.lib.pagesizes import A4 from reportlab.pdfbase import pdfmetrics from reportlab.pdfbase.ttfonts import TTFont from reportlab.pdfgen import canvas pdf_canvas = canvas . Canvas ( 'resources/demo.pdf' , pagesize = A4 ) width , height = A4 # \u7ed8\u56fe image = canvas . ImageReader ( 'resources/guido.jpg' ) pdf_canvas . drawImage ( image , 20 , height - 395 , 250 , 375 ) # \u663e\u793a\u5f53\u524d\u9875 pdf_canvas . showPage () # \u6ce8\u518c\u5b57\u4f53\u6587\u4ef6 pdfmetrics . registerFont ( TTFont ( 'Font1' , 'resources/fonts/Vera.ttf' )) pdfmetrics . registerFont ( TTFont ( 'Font2' , 'resources/fonts/\u9752\u5471\u77f3\u5934\u4f53.ttf' )) # \u5199\u5b57 pdf_canvas . setFont ( 'Font2' , 40 ) pdf_canvas . setFillColorRGB ( 0.9 , 0.5 , 0.3 , 1 ) pdf_canvas . drawString ( width // 2 - 120 , height // 2 , '\u4f60\u597d\uff0c\u4e16\u754c\uff01' ) pdf_canvas . setFont ( 'Font1' , 40 ) pdf_canvas . setFillColorRGB ( 0 , 1 , 0 , 0.5 ) pdf_canvas . rotate ( 18 ) pdf_canvas . drawString ( 250 , 250 , 'hello, world!' ) # \u4fdd\u5b58 pdf_canvas . save () \u4e0a\u9762\u7684\u4ee3\u7801\u5982\u679c\u4e0d\u592a\u7406\u89e3\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u7b49\u771f\u6b63\u9700\u8981\u7528Python\u521b\u5efaPDF\u6587\u6863\u7684\u65f6\u5019\uff0c\u518d\u597d\u597d\u7814\u8bfb\u4e00\u4e0b reportlab \u7684 \u5b98\u65b9\u6587\u6863 \u5c31\u53ef\u4ee5\u4e86\u3002 \u63d0\u793a \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u7528\u5230\u7684\u56fe\u7247\u548c\u5b57\u4f53\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u767e\u5ea6\u4e91\u76d8\u94fe\u63a5\u83b7\u53d6\u3002\u94fe\u63a5:https://pan.baidu.com/s/1rQujl5RQn9R7PadB2Z5g_g \u63d0\u53d6\u7801:e7b4\u3002","title":"\u521b\u5efaPDF\u6587\u4ef6"},{"location":"%E7%AC%AC27%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E6%93%8D%E4%BD%9CPDF%E6%96%87%E4%BB%B6/#_3","text":"\u5728\u5b66\u4e60\u5b8c\u4e0a\u9762\u7684\u5185\u5bb9\u4e4b\u540e\uff0c\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u77e5\u9053\u50cf\u5408\u5e76\u591a\u4e2aPDF\u6587\u4ef6\u8fd9\u6837\u7684\u5de5\u4f5c\u5e94\u8be5\u5982\u4f55\u7528Python\u4ee3\u7801\u6765\u5904\u7406\u4e86\uff0c\u8d76\u7d27\u81ea\u5df1\u52a8\u624b\u8bd5\u4e00\u8bd5\u5427\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC28%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E5%A4%84%E7%90%86%E5%9B%BE%E5%83%8F/","text":"\u7b2c28\u8bfe\uff1a\u7528Python\u5904\u7406\u56fe\u50cf \u5165\u95e8\u77e5\u8bc6 \u989c\u8272\u3002\u5982\u679c\u4f60\u6709\u4f7f\u7528\u989c\u6599\u753b\u753b\u7684\u7ecf\u5386\uff0c\u90a3\u4e48\u4e00\u5b9a\u77e5\u9053\u6df7\u5408\u7ea2\u3001\u9ec4\u3001\u84dd\u4e09\u79cd\u989c\u6599\u53ef\u4ee5\u5f97\u5230\u5176\u4ed6\u7684\u989c\u8272\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u4e09\u79cd\u989c\u8272\u5c31\u662f\u7f8e\u672f\u4e2d\u7684\u4e09\u539f\u8272\uff0c\u5b83\u4eec\u662f\u4e0d\u80fd\u518d\u5206\u89e3\u7684\u57fa\u672c\u989c\u8272\u3002\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7ea2\u3001\u7eff\u3001\u84dd\u4e09\u79cd\u8272\u5149\u4ee5\u4e0d\u540c\u7684\u6bd4\u4f8b\u53e0\u52a0\u6765\u7ec4\u5408\u6210\u5176\u4ed6\u7684\u989c\u8272\uff0c\u56e0\u6b64\u8fd9\u4e09\u79cd\u989c\u8272\u5c31\u662f\u8272\u5149\u4e09\u539f\u8272\u3002\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5c06\u4e00\u4e2a\u989c\u8272\u8868\u793a\u4e3a\u4e00\u4e2aRGB\u503c\u6216RGBA\u503c\uff08\u5176\u4e2d\u7684A\u8868\u793aAlpha\u901a\u9053\uff0c\u5b83\u51b3\u5b9a\u4e86\u900f\u8fc7\u8fd9\u4e2a\u56fe\u50cf\u7684\u50cf\u7d20\uff0c\u4e5f\u5c31\u662f\u900f\u660e\u5ea6\uff09\u3002 \u540d\u79f0 RGB\u503c \u540d\u79f0 RGB\u503c White\uff08\u767d\uff09 (255, 255, 255) Red\uff08\u7ea2\uff09 (255, 0, 0) Green\uff08\u7eff\uff09 (0, 255, 0) Blue\uff08\u84dd\uff09 (0, 0, 255) Gray\uff08\u7070\uff09 (128, 128, 128) Yellow\uff08\u9ec4\uff09 (255, 255, 0) Black\uff08\u9ed1\uff09 (0, 0, 0) Purple\uff08\u7d2b\uff09 (128, 0, 128) \u50cf\u7d20\u3002\u5bf9\u4e8e\u4e00\u4e2a\u7531\u6570\u5b57\u5e8f\u5217\u8868\u793a\u7684\u56fe\u50cf\u6765\u8bf4\uff0c\u6700\u5c0f\u7684\u5355\u4f4d\u5c31\u662f\u56fe\u50cf\u4e0a\u5355\u4e00\u989c\u8272\u7684\u5c0f\u65b9\u683c\uff0c\u8fd9\u4e9b\u5c0f\u65b9\u5757\u90fd\u6709\u4e00\u4e2a\u660e\u786e\u7684\u4f4d\u7f6e\u548c\u88ab\u5206\u914d\u7684\u8272\u5f69\u6570\u503c\uff0c\u800c\u8fd9\u4e9b\u4e00\u5c0f\u65b9\u683c\u7684\u989c\u8272\u548c\u4f4d\u7f6e\u51b3\u5b9a\u4e86\u8be5\u56fe\u50cf\u6700\u7ec8\u5448\u73b0\u51fa\u6765\u7684\u6837\u5b50\uff0c\u5b83\u4eec\u662f\u4e0d\u53ef\u5206\u5272\u7684\u5355\u4f4d\uff0c\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u50cf\u7d20\uff08pixel\uff09\u3002\u6bcf\u4e00\u4e2a\u56fe\u50cf\u90fd\u5305\u542b\u4e86\u4e00\u5b9a\u91cf\u7684\u50cf\u7d20\uff0c\u8fd9\u4e9b\u50cf\u7d20\u51b3\u5b9a\u56fe\u50cf\u5728\u5c4f\u5e55\u4e0a\u6240\u5448\u73b0\u7684\u5927\u5c0f\uff0c\u5927\u5bb6\u5982\u679c\u7231\u597d\u62cd\u7167\u6216\u8005\u81ea\u62cd\uff0c\u5bf9\u50cf\u7d20\u8fd9\u4e2a\u8bcd\u5c31\u4e0d\u4f1a\u964c\u751f\u3002 \u7528Pillow\u5904\u7406\u56fe\u50cf Pillow\u662f\u7531\u4ece\u8457\u540d\u7684Python\u56fe\u50cf\u5904\u7406\u5e93PIL\u53d1\u5c55\u51fa\u6765\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u901a\u8fc7Pillow\u53ef\u4ee5\u5b9e\u73b0\u56fe\u50cf\u538b\u7f29\u548c\u56fe\u50cf\u5904\u7406\u7b49\u5404\u79cd\u64cd\u4f5c\u3002\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5Pillow\u3002 pip install pillow Pillow\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u662f Image \u7c7b\uff0c\u53ef\u4ee5\u901a\u8fc7 Image \u6a21\u5757\u7684 open \u51fd\u6570\u6765\u8bfb\u53d6\u56fe\u50cf\u5e76\u83b7\u5f97 Image \u7c7b\u578b\u7684\u5bf9\u8c61\u3002 \u8bfb\u53d6\u548c\u663e\u793a\u56fe\u50cf from PIL import Image # \u8bfb\u53d6\u56fe\u50cf\u83b7\u5f97Image\u5bf9\u8c61 image = Image . open ( 'guido.jpg' ) # \u901a\u8fc7Image\u5bf9\u8c61\u7684format\u5c5e\u6027\u83b7\u5f97\u56fe\u50cf\u7684\u683c\u5f0f print ( image . format ) # JPEG # \u901a\u8fc7Image\u5bf9\u8c61\u7684size\u5c5e\u6027\u83b7\u5f97\u56fe\u50cf\u7684\u5c3a\u5bf8 print ( image . size ) # (500, 750) # \u901a\u8fc7Image\u5bf9\u8c61\u7684mode\u5c5e\u6027\u83b7\u53d6\u56fe\u50cf\u7684\u6a21\u5f0f print ( image . mode ) # RGB # \u901a\u8fc7Image\u5bf9\u8c61\u7684show\u65b9\u6cd5\u663e\u793a\u56fe\u50cf image . show () \u526a\u88c1\u56fe\u50cf # \u901a\u8fc7Image\u5bf9\u8c61\u7684crop\u65b9\u6cd5\u6307\u5b9a\u526a\u88c1\u533a\u57df\u526a\u88c1\u56fe\u50cf image . crop (( 80 , 20 , 310 , 360 )) . show () \u751f\u6210\u7f29\u7565\u56fe # \u901a\u8fc7Image\u5bf9\u8c61\u7684thumbnail\u65b9\u6cd5\u751f\u6210\u6307\u5b9a\u5c3a\u5bf8\u7684\u7f29\u7565\u56fe image . thumbnail (( 128 , 128 )) image . show () \u7f29\u653e\u548c\u9ecf\u8d34\u56fe\u50cf # \u8bfb\u53d6\u9a86\u660a\u7684\u7167\u7247\u83b7\u5f97Image\u5bf9\u8c61 luohao_image = Image . open ( 'luohao.png' ) # \u8bfb\u53d6\u5409\u591a\u7684\u7167\u7247\u83b7\u5f97Image\u5bf9\u8c61 guido_image = Image . open ( 'guido.jpg' ) # \u4ece\u5409\u591a\u7684\u7167\u7247\u4e0a\u526a\u88c1\u51fa\u5409\u591a\u7684\u5934 guido_head = guido_image . crop (( 80 , 20 , 310 , 360 )) width , height = guido_head . size # \u4f7f\u7528Image\u5bf9\u8c61\u7684resize\u65b9\u6cd5\u4fee\u6539\u56fe\u50cf\u7684\u5c3a\u5bf8 # \u4f7f\u7528Image\u5bf9\u8c61\u7684paste\u65b9\u6cd5\u5c06\u5409\u591a\u7684\u5934\u7c98\u8d34\u5230\u9a86\u660a\u7684\u7167\u7247\u4e0a luohao_image . paste ( guido_head . resize (( int ( width / 1.5 ), int ( height / 1.5 ))), ( 172 , 40 )) luohao_image . show () \u65cb\u8f6c\u548c\u7ffb\u8f6c image = Image . open ( 'guido.jpg' ) # \u4f7f\u7528Image\u5bf9\u8c61\u7684rotate\u65b9\u6cd5\u5b9e\u73b0\u56fe\u50cf\u7684\u65cb\u8f6c image . rotate ( 45 ) . show () # \u4f7f\u7528Image\u5bf9\u8c61\u7684transpose\u65b9\u6cd5\u5b9e\u73b0\u56fe\u50cf\u7ffb\u8f6c # Image.FLIP_LEFT_RIGHT - \u6c34\u5e73\u7ffb\u8f6c # Image.FLIP_TOP_BOTTOM - \u5782\u76f4\u7ffb\u8f6c image . transpose ( Image . FLIP_TOP_BOTTOM ) . show () \u64cd\u4f5c\u50cf\u7d20 for x in range ( 80 , 310 ): for y in range ( 20 , 360 ): # \u901a\u8fc7Image\u5bf9\u8c61\u7684putpixel\u65b9\u6cd5\u4fee\u6539\u56fe\u50cf\u6307\u5b9a\u50cf\u7d20\u70b9 image . putpixel (( x , y ), ( 128 , 128 , 128 )) image . show () \u6ee4\u955c\u6548\u679c from PIL import ImageFilter # \u4f7f\u7528Image\u5bf9\u8c61\u7684filter\u65b9\u6cd5\u5bf9\u56fe\u50cf\u8fdb\u884c\u6ee4\u955c\u5904\u7406 # ImageFilter\u6a21\u5757\u5305\u542b\u4e86\u8bf8\u591a\u9884\u8bbe\u7684\u6ee4\u955c\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6ee4\u955c image . filter ( ImageFilter . CONTOUR ) . show () \u4f7f\u7528Pillow\u7ed8\u56fe Pillow\u4e2d\u6709\u4e00\u4e2a\u540d\u4e3a ImageDraw \u7684\u6a21\u5757\uff0c\u8be5\u6a21\u5757\u7684 Draw \u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a ImageDraw \u5bf9\u8c61\uff0c\u901a\u8fc7 ImageDraw \u5bf9\u8c61\u7684 arc \u3001 line \u3001 rectangle \u3001 ellipse \u3001 polygon \u7b49\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u56fe\u50cf\u4e0a\u7ed8\u5236\u51fa\u5706\u5f27\u3001\u7ebf\u6761\u3001\u77e9\u5f62\u3001\u692d\u5706\u3001\u591a\u8fb9\u5f62\u7b49\u5f62\u72b6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684 text \u65b9\u6cd5\u5728\u56fe\u50cf\u4e0a\u6dfb\u52a0\u6587\u5b57\u3002 \u8981\u7ed8\u5236\u5982\u4e0a\u56fe\u6240\u793a\u7684\u56fe\u50cf\uff0c\u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import random from PIL import Image , ImageDraw , ImageFont def random_color (): \"\"\"\u751f\u6210\u968f\u673a\u989c\u8272\"\"\" red = random . randint ( 0 , 255 ) green = random . randint ( 0 , 255 ) blue = random . randint ( 0 , 255 ) return red , green , blue width , height = 800 , 600 # \u521b\u5efa\u4e00\u4e2a800*600\u7684\u56fe\u50cf\uff0c\u80cc\u666f\u8272\u4e3a\u767d\u8272 image = Image . new ( mode = 'RGB' , size = ( width , height ), color = ( 255 , 255 , 255 )) # \u521b\u5efa\u4e00\u4e2aImageDraw\u5bf9\u8c61 drawer = ImageDraw . Draw ( image ) # \u901a\u8fc7\u6307\u5b9a\u5b57\u4f53\u548c\u5927\u5c0f\u83b7\u5f97ImageFont\u5bf9\u8c61 font = ImageFont . truetype ( 'Kongxin.ttf' , 32 ) # \u901a\u8fc7ImageDraw\u5bf9\u8c61\u7684text\u65b9\u6cd5\u7ed8\u5236\u6587\u5b57 drawer . text (( 300 , 50 ), 'Hello, world!' , fill = ( 255 , 0 , 0 ), font = font ) # \u901a\u8fc7ImageDraw\u5bf9\u8c61\u7684line\u65b9\u6cd5\u7ed8\u5236\u4e24\u6761\u5bf9\u89d2\u76f4\u7ebf drawer . line (( 0 , 0 , width , height ), fill = ( 0 , 0 , 255 ), width = 2 ) drawer . line (( width , 0 , 0 , height ), fill = ( 0 , 0 , 255 ), width = 2 ) xy = width // 2 - 60 , height // 2 - 60 , width // 2 + 60 , height // 2 + 60 # \u901a\u8fc7ImageDraw\u5bf9\u8c61\u7684rectangle\u65b9\u6cd5\u7ed8\u5236\u77e9\u5f62 drawer . rectangle ( xy , outline = ( 255 , 0 , 0 ), width = 2 ) # \u901a\u8fc7ImageDraw\u5bf9\u8c61\u7684ellipse\u65b9\u6cd5\u7ed8\u5236\u692d\u5706 for i in range ( 4 ): left , top , right , bottom = 150 + i * 120 , 220 , 310 + i * 120 , 380 drawer . ellipse (( left , top , right , bottom ), outline = random_color (), width = 8 ) # \u663e\u793a\u56fe\u50cf image . show () # \u4fdd\u5b58\u56fe\u50cf image . save ( 'result.png' ) \u6ce8\u610f \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u5b57\u4f53\u6587\u4ef6\u9700\u8981\u6839\u636e\u81ea\u5df1\u51c6\u5907\uff0c\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u559c\u6b22\u7684\u5b57\u4f53\u6587\u4ef6\u5e76\u653e\u7f6e\u5728\u4ee3\u7801\u76ee\u5f55\u4e0b\u3002 \u7b80\u5355\u7684\u603b\u7ed3 \u4f7f\u7528Python\u8bed\u8a00\u505a\u5f00\u53d1\uff0c\u9664\u4e86\u53ef\u4ee5\u7528Pillow\u6765\u5904\u7406\u56fe\u50cf\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u66f4\u4e3a\u5f3a\u5927\u7684OpenCV\u5e93\u6765\u5b8c\u6210\u56fe\u5f62\u56fe\u50cf\u7684\u5904\u7406\uff0cOpenCV\uff08 Open Source C omputer V ision Library\uff09\u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u5e93\uff0c\u53ef\u4ee5\u7528\u6765\u5f00\u53d1\u5b9e\u65f6\u56fe\u50cf\u5904\u7406\u3001\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u6a21\u5f0f\u8bc6\u522b\u7a0b\u5e8f\u3002\u5728\u6211\u4eec\u7684\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u6709\u5f88\u591a\u7e41\u7410\u4e4f\u5473\u7684\u4efb\u52a1\u5176\u5b9e\u90fd\u53ef\u4ee5\u901a\u8fc7Python\u7a0b\u5e8f\u6765\u5904\u7406\uff0c\u7f16\u7a0b\u7684\u76ee\u7684\u5c31\u662f\u8ba9\u8ba1\u7b97\u673a\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u95ee\u9898\uff0c\u51cf\u5c11\u91cd\u590d\u4e4f\u5473\u7684\u52b3\u52a8\u3002\u901a\u8fc7\u672c\u7ae0\u8282\u7684\u5b66\u4e60\uff0c\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u611f\u53d7\u5230\u4e86\u4f7f\u7528Python\u7a0b\u5e8f\u7ed8\u56feP\u56fe\u7684\u4e50\u8da3\uff0c\u5176\u5b9ePython\u80fd\u505a\u7684\u4e8b\u60c5\u8fd8\u8fdc\u4e0d\u6b62\u8fd9\u4e9b\uff0c\u7ee7\u7eed\u4f60\u7684\u5b66\u4e60\u5427\u3002","title":"\u7b2c28\u8bfe\uff1a\u7528Python\u5904\u7406\u56fe\u50cf"},{"location":"%E7%AC%AC28%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E5%A4%84%E7%90%86%E5%9B%BE%E5%83%8F/#28python","text":"","title":"\u7b2c28\u8bfe\uff1a\u7528Python\u5904\u7406\u56fe\u50cf"},{"location":"%E7%AC%AC28%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E5%A4%84%E7%90%86%E5%9B%BE%E5%83%8F/#_1","text":"\u989c\u8272\u3002\u5982\u679c\u4f60\u6709\u4f7f\u7528\u989c\u6599\u753b\u753b\u7684\u7ecf\u5386\uff0c\u90a3\u4e48\u4e00\u5b9a\u77e5\u9053\u6df7\u5408\u7ea2\u3001\u9ec4\u3001\u84dd\u4e09\u79cd\u989c\u6599\u53ef\u4ee5\u5f97\u5230\u5176\u4ed6\u7684\u989c\u8272\uff0c\u4e8b\u5b9e\u4e0a\u8fd9\u4e09\u79cd\u989c\u8272\u5c31\u662f\u7f8e\u672f\u4e2d\u7684\u4e09\u539f\u8272\uff0c\u5b83\u4eec\u662f\u4e0d\u80fd\u518d\u5206\u89e3\u7684\u57fa\u672c\u989c\u8272\u3002\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7ea2\u3001\u7eff\u3001\u84dd\u4e09\u79cd\u8272\u5149\u4ee5\u4e0d\u540c\u7684\u6bd4\u4f8b\u53e0\u52a0\u6765\u7ec4\u5408\u6210\u5176\u4ed6\u7684\u989c\u8272\uff0c\u56e0\u6b64\u8fd9\u4e09\u79cd\u989c\u8272\u5c31\u662f\u8272\u5149\u4e09\u539f\u8272\u3002\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u5c06\u4e00\u4e2a\u989c\u8272\u8868\u793a\u4e3a\u4e00\u4e2aRGB\u503c\u6216RGBA\u503c\uff08\u5176\u4e2d\u7684A\u8868\u793aAlpha\u901a\u9053\uff0c\u5b83\u51b3\u5b9a\u4e86\u900f\u8fc7\u8fd9\u4e2a\u56fe\u50cf\u7684\u50cf\u7d20\uff0c\u4e5f\u5c31\u662f\u900f\u660e\u5ea6\uff09\u3002 \u540d\u79f0 RGB\u503c \u540d\u79f0 RGB\u503c White\uff08\u767d\uff09 (255, 255, 255) Red\uff08\u7ea2\uff09 (255, 0, 0) Green\uff08\u7eff\uff09 (0, 255, 0) Blue\uff08\u84dd\uff09 (0, 0, 255) Gray\uff08\u7070\uff09 (128, 128, 128) Yellow\uff08\u9ec4\uff09 (255, 255, 0) Black\uff08\u9ed1\uff09 (0, 0, 0) Purple\uff08\u7d2b\uff09 (128, 0, 128) \u50cf\u7d20\u3002\u5bf9\u4e8e\u4e00\u4e2a\u7531\u6570\u5b57\u5e8f\u5217\u8868\u793a\u7684\u56fe\u50cf\u6765\u8bf4\uff0c\u6700\u5c0f\u7684\u5355\u4f4d\u5c31\u662f\u56fe\u50cf\u4e0a\u5355\u4e00\u989c\u8272\u7684\u5c0f\u65b9\u683c\uff0c\u8fd9\u4e9b\u5c0f\u65b9\u5757\u90fd\u6709\u4e00\u4e2a\u660e\u786e\u7684\u4f4d\u7f6e\u548c\u88ab\u5206\u914d\u7684\u8272\u5f69\u6570\u503c\uff0c\u800c\u8fd9\u4e9b\u4e00\u5c0f\u65b9\u683c\u7684\u989c\u8272\u548c\u4f4d\u7f6e\u51b3\u5b9a\u4e86\u8be5\u56fe\u50cf\u6700\u7ec8\u5448\u73b0\u51fa\u6765\u7684\u6837\u5b50\uff0c\u5b83\u4eec\u662f\u4e0d\u53ef\u5206\u5272\u7684\u5355\u4f4d\uff0c\u6211\u4eec\u901a\u5e38\u79f0\u4e4b\u4e3a\u50cf\u7d20\uff08pixel\uff09\u3002\u6bcf\u4e00\u4e2a\u56fe\u50cf\u90fd\u5305\u542b\u4e86\u4e00\u5b9a\u91cf\u7684\u50cf\u7d20\uff0c\u8fd9\u4e9b\u50cf\u7d20\u51b3\u5b9a\u56fe\u50cf\u5728\u5c4f\u5e55\u4e0a\u6240\u5448\u73b0\u7684\u5927\u5c0f\uff0c\u5927\u5bb6\u5982\u679c\u7231\u597d\u62cd\u7167\u6216\u8005\u81ea\u62cd\uff0c\u5bf9\u50cf\u7d20\u8fd9\u4e2a\u8bcd\u5c31\u4e0d\u4f1a\u964c\u751f\u3002","title":"\u5165\u95e8\u77e5\u8bc6"},{"location":"%E7%AC%AC28%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E5%A4%84%E7%90%86%E5%9B%BE%E5%83%8F/#pillow","text":"Pillow\u662f\u7531\u4ece\u8457\u540d\u7684Python\u56fe\u50cf\u5904\u7406\u5e93PIL\u53d1\u5c55\u51fa\u6765\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u901a\u8fc7Pillow\u53ef\u4ee5\u5b9e\u73b0\u56fe\u50cf\u538b\u7f29\u548c\u56fe\u50cf\u5904\u7406\u7b49\u5404\u79cd\u64cd\u4f5c\u3002\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5Pillow\u3002 pip install pillow Pillow\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u662f Image \u7c7b\uff0c\u53ef\u4ee5\u901a\u8fc7 Image \u6a21\u5757\u7684 open \u51fd\u6570\u6765\u8bfb\u53d6\u56fe\u50cf\u5e76\u83b7\u5f97 Image \u7c7b\u578b\u7684\u5bf9\u8c61\u3002 \u8bfb\u53d6\u548c\u663e\u793a\u56fe\u50cf from PIL import Image # \u8bfb\u53d6\u56fe\u50cf\u83b7\u5f97Image\u5bf9\u8c61 image = Image . open ( 'guido.jpg' ) # \u901a\u8fc7Image\u5bf9\u8c61\u7684format\u5c5e\u6027\u83b7\u5f97\u56fe\u50cf\u7684\u683c\u5f0f print ( image . format ) # JPEG # \u901a\u8fc7Image\u5bf9\u8c61\u7684size\u5c5e\u6027\u83b7\u5f97\u56fe\u50cf\u7684\u5c3a\u5bf8 print ( image . size ) # (500, 750) # \u901a\u8fc7Image\u5bf9\u8c61\u7684mode\u5c5e\u6027\u83b7\u53d6\u56fe\u50cf\u7684\u6a21\u5f0f print ( image . mode ) # RGB # \u901a\u8fc7Image\u5bf9\u8c61\u7684show\u65b9\u6cd5\u663e\u793a\u56fe\u50cf image . show () \u526a\u88c1\u56fe\u50cf # \u901a\u8fc7Image\u5bf9\u8c61\u7684crop\u65b9\u6cd5\u6307\u5b9a\u526a\u88c1\u533a\u57df\u526a\u88c1\u56fe\u50cf image . crop (( 80 , 20 , 310 , 360 )) . show () \u751f\u6210\u7f29\u7565\u56fe # \u901a\u8fc7Image\u5bf9\u8c61\u7684thumbnail\u65b9\u6cd5\u751f\u6210\u6307\u5b9a\u5c3a\u5bf8\u7684\u7f29\u7565\u56fe image . thumbnail (( 128 , 128 )) image . show () \u7f29\u653e\u548c\u9ecf\u8d34\u56fe\u50cf # \u8bfb\u53d6\u9a86\u660a\u7684\u7167\u7247\u83b7\u5f97Image\u5bf9\u8c61 luohao_image = Image . open ( 'luohao.png' ) # \u8bfb\u53d6\u5409\u591a\u7684\u7167\u7247\u83b7\u5f97Image\u5bf9\u8c61 guido_image = Image . open ( 'guido.jpg' ) # \u4ece\u5409\u591a\u7684\u7167\u7247\u4e0a\u526a\u88c1\u51fa\u5409\u591a\u7684\u5934 guido_head = guido_image . crop (( 80 , 20 , 310 , 360 )) width , height = guido_head . size # \u4f7f\u7528Image\u5bf9\u8c61\u7684resize\u65b9\u6cd5\u4fee\u6539\u56fe\u50cf\u7684\u5c3a\u5bf8 # \u4f7f\u7528Image\u5bf9\u8c61\u7684paste\u65b9\u6cd5\u5c06\u5409\u591a\u7684\u5934\u7c98\u8d34\u5230\u9a86\u660a\u7684\u7167\u7247\u4e0a luohao_image . paste ( guido_head . resize (( int ( width / 1.5 ), int ( height / 1.5 ))), ( 172 , 40 )) luohao_image . show () \u65cb\u8f6c\u548c\u7ffb\u8f6c image = Image . open ( 'guido.jpg' ) # \u4f7f\u7528Image\u5bf9\u8c61\u7684rotate\u65b9\u6cd5\u5b9e\u73b0\u56fe\u50cf\u7684\u65cb\u8f6c image . rotate ( 45 ) . show () # \u4f7f\u7528Image\u5bf9\u8c61\u7684transpose\u65b9\u6cd5\u5b9e\u73b0\u56fe\u50cf\u7ffb\u8f6c # Image.FLIP_LEFT_RIGHT - \u6c34\u5e73\u7ffb\u8f6c # Image.FLIP_TOP_BOTTOM - \u5782\u76f4\u7ffb\u8f6c image . transpose ( Image . FLIP_TOP_BOTTOM ) . show () \u64cd\u4f5c\u50cf\u7d20 for x in range ( 80 , 310 ): for y in range ( 20 , 360 ): # \u901a\u8fc7Image\u5bf9\u8c61\u7684putpixel\u65b9\u6cd5\u4fee\u6539\u56fe\u50cf\u6307\u5b9a\u50cf\u7d20\u70b9 image . putpixel (( x , y ), ( 128 , 128 , 128 )) image . show () \u6ee4\u955c\u6548\u679c from PIL import ImageFilter # \u4f7f\u7528Image\u5bf9\u8c61\u7684filter\u65b9\u6cd5\u5bf9\u56fe\u50cf\u8fdb\u884c\u6ee4\u955c\u5904\u7406 # ImageFilter\u6a21\u5757\u5305\u542b\u4e86\u8bf8\u591a\u9884\u8bbe\u7684\u6ee4\u955c\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6ee4\u955c image . filter ( ImageFilter . CONTOUR ) . show ()","title":"\u7528Pillow\u5904\u7406\u56fe\u50cf"},{"location":"%E7%AC%AC28%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E5%A4%84%E7%90%86%E5%9B%BE%E5%83%8F/#pillow_1","text":"Pillow\u4e2d\u6709\u4e00\u4e2a\u540d\u4e3a ImageDraw \u7684\u6a21\u5757\uff0c\u8be5\u6a21\u5757\u7684 Draw \u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a ImageDraw \u5bf9\u8c61\uff0c\u901a\u8fc7 ImageDraw \u5bf9\u8c61\u7684 arc \u3001 line \u3001 rectangle \u3001 ellipse \u3001 polygon \u7b49\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u56fe\u50cf\u4e0a\u7ed8\u5236\u51fa\u5706\u5f27\u3001\u7ebf\u6761\u3001\u77e9\u5f62\u3001\u692d\u5706\u3001\u591a\u8fb9\u5f62\u7b49\u5f62\u72b6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684 text \u65b9\u6cd5\u5728\u56fe\u50cf\u4e0a\u6dfb\u52a0\u6587\u5b57\u3002 \u8981\u7ed8\u5236\u5982\u4e0a\u56fe\u6240\u793a\u7684\u56fe\u50cf\uff0c\u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import random from PIL import Image , ImageDraw , ImageFont def random_color (): \"\"\"\u751f\u6210\u968f\u673a\u989c\u8272\"\"\" red = random . randint ( 0 , 255 ) green = random . randint ( 0 , 255 ) blue = random . randint ( 0 , 255 ) return red , green , blue width , height = 800 , 600 # \u521b\u5efa\u4e00\u4e2a800*600\u7684\u56fe\u50cf\uff0c\u80cc\u666f\u8272\u4e3a\u767d\u8272 image = Image . new ( mode = 'RGB' , size = ( width , height ), color = ( 255 , 255 , 255 )) # \u521b\u5efa\u4e00\u4e2aImageDraw\u5bf9\u8c61 drawer = ImageDraw . Draw ( image ) # \u901a\u8fc7\u6307\u5b9a\u5b57\u4f53\u548c\u5927\u5c0f\u83b7\u5f97ImageFont\u5bf9\u8c61 font = ImageFont . truetype ( 'Kongxin.ttf' , 32 ) # \u901a\u8fc7ImageDraw\u5bf9\u8c61\u7684text\u65b9\u6cd5\u7ed8\u5236\u6587\u5b57 drawer . text (( 300 , 50 ), 'Hello, world!' , fill = ( 255 , 0 , 0 ), font = font ) # \u901a\u8fc7ImageDraw\u5bf9\u8c61\u7684line\u65b9\u6cd5\u7ed8\u5236\u4e24\u6761\u5bf9\u89d2\u76f4\u7ebf drawer . line (( 0 , 0 , width , height ), fill = ( 0 , 0 , 255 ), width = 2 ) drawer . line (( width , 0 , 0 , height ), fill = ( 0 , 0 , 255 ), width = 2 ) xy = width // 2 - 60 , height // 2 - 60 , width // 2 + 60 , height // 2 + 60 # \u901a\u8fc7ImageDraw\u5bf9\u8c61\u7684rectangle\u65b9\u6cd5\u7ed8\u5236\u77e9\u5f62 drawer . rectangle ( xy , outline = ( 255 , 0 , 0 ), width = 2 ) # \u901a\u8fc7ImageDraw\u5bf9\u8c61\u7684ellipse\u65b9\u6cd5\u7ed8\u5236\u692d\u5706 for i in range ( 4 ): left , top , right , bottom = 150 + i * 120 , 220 , 310 + i * 120 , 380 drawer . ellipse (( left , top , right , bottom ), outline = random_color (), width = 8 ) # \u663e\u793a\u56fe\u50cf image . show () # \u4fdd\u5b58\u56fe\u50cf image . save ( 'result.png' ) \u6ce8\u610f \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u5b57\u4f53\u6587\u4ef6\u9700\u8981\u6839\u636e\u81ea\u5df1\u51c6\u5907\uff0c\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u559c\u6b22\u7684\u5b57\u4f53\u6587\u4ef6\u5e76\u653e\u7f6e\u5728\u4ee3\u7801\u76ee\u5f55\u4e0b\u3002","title":"\u4f7f\u7528Pillow\u7ed8\u56fe"},{"location":"%E7%AC%AC28%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E5%A4%84%E7%90%86%E5%9B%BE%E5%83%8F/#_2","text":"\u4f7f\u7528Python\u8bed\u8a00\u505a\u5f00\u53d1\uff0c\u9664\u4e86\u53ef\u4ee5\u7528Pillow\u6765\u5904\u7406\u56fe\u50cf\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u66f4\u4e3a\u5f3a\u5927\u7684OpenCV\u5e93\u6765\u5b8c\u6210\u56fe\u5f62\u56fe\u50cf\u7684\u5904\u7406\uff0cOpenCV\uff08 Open Source C omputer V ision Library\uff09\u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u5e93\uff0c\u53ef\u4ee5\u7528\u6765\u5f00\u53d1\u5b9e\u65f6\u56fe\u50cf\u5904\u7406\u3001\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u6a21\u5f0f\u8bc6\u522b\u7a0b\u5e8f\u3002\u5728\u6211\u4eec\u7684\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u6709\u5f88\u591a\u7e41\u7410\u4e4f\u5473\u7684\u4efb\u52a1\u5176\u5b9e\u90fd\u53ef\u4ee5\u901a\u8fc7Python\u7a0b\u5e8f\u6765\u5904\u7406\uff0c\u7f16\u7a0b\u7684\u76ee\u7684\u5c31\u662f\u8ba9\u8ba1\u7b97\u673a\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u95ee\u9898\uff0c\u51cf\u5c11\u91cd\u590d\u4e4f\u5473\u7684\u52b3\u52a8\u3002\u901a\u8fc7\u672c\u7ae0\u8282\u7684\u5b66\u4e60\uff0c\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u611f\u53d7\u5230\u4e86\u4f7f\u7528Python\u7a0b\u5e8f\u7ed8\u56feP\u56fe\u7684\u4e50\u8da3\uff0c\u5176\u5b9ePython\u80fd\u505a\u7684\u4e8b\u60c5\u8fd8\u8fdc\u4e0d\u6b62\u8fd9\u4e9b\uff0c\u7ee7\u7eed\u4f60\u7684\u5b66\u4e60\u5427\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC29%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E5%92%8C%E7%9F%AD%E4%BF%A1/","text":"\u7b2c29\u8bfe\uff1a\u7528Python\u53d1\u9001\u90ae\u4ef6\u548c\u77ed\u4fe1 \u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u6559\u4f1a\u5927\u5bb6\u5982\u4f55\u7528Python\u7a0b\u5e8f\u81ea\u52a8\u7684\u751f\u6210Excel\u3001Word\u3001PDF\u6587\u6863\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u53ef\u4ee5\u66f4\u8fdb\u4e00\u6b65\uff0c\u5c31\u662f\u901a\u8fc7\u90ae\u4ef6\u5c06\u751f\u6210\u597d\u7684\u6587\u6863\u53d1\u9001\u7ed9\u6307\u5b9a\u7684\u6536\u4ef6\u4eba\uff0c\u7136\u540e\u7528\u77ed\u4fe1\u544a\u77e5\u5bf9\u65b9\u6211\u4eec\u53d1\u51fa\u4e86\u90ae\u4ef6\u3002\u8fd9\u4e9b\u4e8b\u60c5\u5229\u7528Python\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u8f7b\u677e\u6109\u5feb\u7684\u89e3\u51b3\u3002 \u53d1\u9001\u7535\u5b50\u90ae\u4ef6 \u5728\u5373\u65f6\u901a\u4fe1\u8f6f\u4ef6\u5982\u6b64\u53d1\u8fbe\u7684\u4eca\u5929\uff0c\u7535\u5b50\u90ae\u4ef6\u4ecd\u7136\u662f\u4e92\u8054\u7f51\u4e0a\u4f7f\u7528\u6700\u4e3a\u5e7f\u6cdb\u7684\u5e94\u7528\u4e4b\u4e00\uff0c\u516c\u53f8\u5411\u5e94\u8058\u8005\u53d1\u51fa\u5f55\u7528\u901a\u77e5\u3001\u7f51\u7ad9\u5411\u7528\u6237\u53d1\u9001\u4e00\u4e2a\u6fc0\u6d3b\u8d26\u53f7\u7684\u94fe\u63a5\u3001\u94f6\u884c\u5411\u5ba2\u6237\u63a8\u5e7f\u5b83\u4eec\u7684\u7406\u8d22\u4ea7\u54c1\u7b49\u51e0\u4e4e\u90fd\u662f\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u6765\u5b8c\u6210\u7684\uff0c\u800c\u8fd9\u4e9b\u4efb\u52a1\u5e94\u8be5\u90fd\u662f\u7531\u7a0b\u5e8f\u81ea\u52a8\u5b8c\u6210\u7684\u3002 \u6211\u4eec\u53ef\u4ee5\u7528HTTP\uff08\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u6765\u8bbf\u95ee\u7f51\u7ad9\u8d44\u6e90\uff0cHTTP\u662f\u4e00\u4e2a\u5e94\u7528\u7ea7\u534f\u8bae\uff0c\u5b83\u5efa\u7acb\u5728TCP\uff08\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u4e4b\u4e0a\uff0cTCP\u4e3a\u5f88\u591a\u5e94\u7528\u7ea7\u534f\u8bae\u63d0\u4f9b\u4e86\u53ef\u9760\u7684\u6570\u636e\u4f20\u8f93\u670d\u52a1\u3002\u5982\u679c\u8981\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u9700\u8981\u4f7f\u7528SMTP\uff08\u7b80\u5355\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\uff0c\u5b83\u4e5f\u662f\u5efa\u7acb\u5728TCP\u4e4b\u4e0a\u7684\u5e94\u7528\u7ea7\u534f\u8bae\uff0c\u89c4\u5b9a\u4e86\u90ae\u4ef6\u7684\u53d1\u9001\u8005\u5982\u4f55\u8ddf\u90ae\u4ef6\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u7684\u7ec6\u8282\u3002Python\u901a\u8fc7\u540d\u4e3a smtplib \u7684\u6a21\u5757\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u7b80\u5316\u6210\u4e86 SMTP_SSL \u5bf9\u8c61\uff0c\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684 login \u548c send_mail \u65b9\u6cd5\uff0c\u5c31\u80fd\u591f\u5b8c\u6210\u53d1\u9001\u90ae\u4ef6\u7684\u64cd\u4f5c\u3002 \u6211\u4eec\u5148\u5c1d\u8bd5\u4e00\u4e0b\u53d1\u9001\u4e00\u5c01\u6781\u4e3a\u7b80\u5355\u7684\u90ae\u4ef6\uff0c\u8be5\u90ae\u4ef6\u4e0d\u5305\u542b\u9644\u4ef6\u3001\u56fe\u7247\u4ee5\u53ca\u5176\u4ed6\u8d85\u6587\u672c\u5185\u5bb9\u3002\u53d1\u9001\u90ae\u4ef6\u9996\u5148\u9700\u8981\u63a5\u5165\u90ae\u4ef6\u670d\u52a1\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u67b6\u8bbe\u90ae\u4ef6\u670d\u52a1\u5668\uff0c\u8fd9\u4ef6\u4e8b\u60c5\u5bf9\u65b0\u624b\u5e76\u4e0d\u53cb\u597d\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u7b2c\u4e09\u65b9\u63d0\u4f9b\u7684\u90ae\u4ef6\u670d\u52a1\u3002\u4f8b\u5982\uff0c\u6211\u5728 \u5df2\u7ecf\u6ce8\u518c\u4e86\u8d26\u53f7\uff0c\u767b\u5f55\u6210\u529f\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5728\u8bbe\u7f6e\u4e2d\u5f00\u542fSMTP\u670d\u52a1\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u83b7\u5f97\u4e86\u90ae\u4ef6\u670d\u52a1\u5668\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u5982\u4e0b\u6240\u793a\u3002 \u7528\u624b\u673a\u626b\u7801\u4e0a\u9762\u7684\u4e8c\u7ef4\u7801\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001\u77ed\u4fe1\u7684\u65b9\u5f0f\u6765\u83b7\u53d6\u6388\u6743\u7801\uff0c\u77ed\u4fe1\u53d1\u9001\u6210\u529f\u540e\uff0c\u70b9\u51fb\u201c\u6211\u5df2\u53d1\u9001\u201d\u5c31\u53ef\u4ee5\u83b7\u5f97\u6388\u6743\u7801\u3002\u6388\u6743\u7801\u9700\u8981\u59a5\u5584\u4fdd\u7ba1\uff0c\u56e0\u4e3a\u4e00\u65e6\u6cc4\u9732\u5c31\u4f1a\u88ab\u5176\u4ed6\u4eba\u5192\u7528\u4f60\u7684\u8eab\u4efd\u6765\u53d1\u9001\u90ae\u4ef6\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7f16\u5199\u53d1\u9001\u90ae\u4ef6\u7684\u4ee3\u7801\u4e86\uff0c\u5982\u4e0b\u6240\u793a\u3002 import smtplib from email.header import Header from email.mime.multipart import MIMEMultipart from email.mime.text import MIMEText # \u521b\u5efa\u90ae\u4ef6\u4e3b\u4f53\u5bf9\u8c61 email = MIMEMultipart () # \u8bbe\u7f6e\u53d1\u4ef6\u4eba\u3001\u6536\u4ef6\u4eba\u548c\u4e3b\u9898 email [ 'From' ] = 'xxxxxxxxx@126.com' email [ 'To' ] = 'yyyyyy@qq.com;zzzzzz@1000phone.com' email [ 'Subject' ] = Header ( '\u4e0a\u534a\u5e74\u5de5\u4f5c\u60c5\u51b5\u6c47\u62a5' , 'utf-8' ) # \u6dfb\u52a0\u90ae\u4ef6\u6b63\u6587\u5185\u5bb9 content = \"\"\"\u636e\u5fb7\u56fd\u5a92\u4f53\u62a5\u9053\uff0c\u5f53\u5730\u65f6\u95f49\u65e5\uff0c\u5fb7\u56fd\u706b\u8f66\u53f8\u673a\u5de5\u4f1a\u6210\u5458\u8fdb\u884c\u4e86\u6295\u7968\uff0c \u5b9a\u4e8e\u5f53\u5730\u65f6\u95f410\u65e5\u8d77\u8fdb\u884c\u5168\u56fd\u6027\u7f62\u5de5\uff0c\u8d27\u8fd0\u4ea4\u901a\u65b9\u9762\u7684\u7f62\u5de5\u5df2\u4e8e\u5f53\u5730\u65f6\u95f410\u65e519\u65f6\u5f00\u59cb\u3002 \u6b64\u540e\uff0c\u4ece11\u65e5\u51cc\u66682\u65f6\u523013\u65e5\u51cc\u66682\u65f6\uff0c\u5fb7\u56fd\u5168\u56fd\u8303\u56f4\u5185\u7684\u5ba2\u8fd0\u548c\u94c1\u8def\u57fa\u7840\u8bbe\u65bd\u5c06\u8fdb\u884c48\u5c0f\u65f6\u7684\u7f62\u5de5\u3002\"\"\" email . attach ( MIMEText ( content , 'plain' , 'utf-8' )) # \u521b\u5efaSMTP_SSL\u5bf9\u8c61\uff08\u8fde\u63a5\u90ae\u4ef6\u670d\u52a1\u5668\uff09 smtp_obj = smtplib . SMTP_SSL ( 'smtp.126.com' , 465 ) # \u901a\u8fc7\u7528\u6237\u540d\u548c\u6388\u6743\u7801\u8fdb\u884c\u767b\u5f55 smtp_obj . login ( 'xxxxxxxxx@126.com' , '\u90ae\u4ef6\u670d\u52a1\u5668\u7684\u6388\u6743\u7801' ) # \u53d1\u9001\u90ae\u4ef6\uff08\u53d1\u4ef6\u4eba\u3001\u6536\u4ef6\u4eba\u3001\u90ae\u4ef6\u5185\u5bb9\uff08\u5b57\u7b26\u4e32\uff09\uff09 smtp_obj . sendmail ( 'xxxxxxxxx@126.com' , [ 'yyyyyy@qq.com' , 'zzzzzz@1000phone.com' ], email . as_string () ) \u5982\u679c\u8981\u53d1\u9001\u5e26\u6709\u9644\u4ef6\u7684\u90ae\u4ef6\uff0c\u53ea\u9700\u8981\u5c06\u9644\u4ef6\u7684\u5185\u5bb9\u5904\u7406\u6210BASE64\u7f16\u7801\uff0c\u90a3\u4e48\u5b83\u5c31\u548c\u666e\u901a\u7684\u6587\u672c\u5185\u5bb9\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002BASE64\u662f\u4e00\u79cd\u57fa\u4e8e64\u4e2a\u53ef\u6253\u5370\u5b57\u7b26\u6765\u8868\u793a\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u5e38\u7528\u4e8e\u67d0\u4e9b\u9700\u8981\u8868\u793a\u3001\u4f20\u8f93\u3001\u5b58\u50a8\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u573a\u5408\uff0c\u7535\u5b50\u90ae\u4ef6\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\u5bf9\u8fd9\u79cd\u7f16\u7801\u65b9\u5f0f\u4e0d\u7406\u89e3\u7684\u540c\u5b66\uff0c\u63a8\u8350\u9605\u8bfb \u300aBase64\u7b14\u8bb0\u300b \u4e00\u6587\u3002\u5728\u4e4b\u524d\u7684\u5185\u5bb9\u4e2d\uff0c\u6211\u4eec\u4e5f\u63d0\u5230\u8fc7\uff0cPython\u6807\u51c6\u5e93\u7684 base64 \u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9BASE64\u7f16\u89e3\u7801\u7684\u652f\u6301\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u53d1\u9001\u5e26\u9644\u4ef6\u7684\u90ae\u4ef6\u3002 import smtplib from email.header import Header from email.mime.multipart import MIMEMultipart from email.mime.text import MIMEText from urllib.parse import quote # \u521b\u5efa\u90ae\u4ef6\u4e3b\u4f53\u5bf9\u8c61 email = MIMEMultipart () # \u8bbe\u7f6e\u53d1\u4ef6\u4eba\u3001\u6536\u4ef6\u4eba\u548c\u4e3b\u9898 email [ 'From' ] = 'xxxxxxxxx@126.com' email [ 'To' ] = 'zzzzzzzz@1000phone.com' email [ 'Subject' ] = Header ( '\u8bf7\u67e5\u6536\u79bb\u804c\u8bc1\u660e\u6587\u4ef6' , 'utf-8' ) # \u6dfb\u52a0\u90ae\u4ef6\u6b63\u6587\u5185\u5bb9\uff08\u5e26HTML\u6807\u7b7e\u6392\u7248\u7684\u5185\u5bb9\uff09 content = \"\"\"<p>\u4eb2\u7231\u7684\u524d\u540c\u4e8b\uff1a</p> <p>\u4f60\u9700\u8981\u7684\u79bb\u804c\u8bc1\u660e\u5728\u9644\u4ef6\u4e2d\uff0c\u8bf7\u67e5\u6536\uff01</p> <br> <p>\u795d\uff0c\u597d\uff01</p> <hr> <p>\u5b59\u7f8e\u4e3d \u5373\u65e5</p>\"\"\" email . attach ( MIMEText ( content , 'html' , 'utf-8' )) # \u8bfb\u53d6\u4f5c\u4e3a\u9644\u4ef6\u7684\u6587\u4ef6 with open ( f 'resources/\u738b\u5927\u9524\u79bb\u804c\u8bc1\u660e.docx' , 'rb' ) as file : attachment = MIMEText ( file . read (), 'base64' , 'utf-8' ) # \u6307\u5b9a\u5185\u5bb9\u7c7b\u578b attachment [ 'content-type' ] = 'application/octet-stream' # \u5c06\u4e2d\u6587\u6587\u4ef6\u540d\u5904\u7406\u6210\u767e\u5206\u53f7\u7f16\u7801 filename = quote ( '\u738b\u5927\u9524\u79bb\u804c\u8bc1\u660e.docx' ) # \u6307\u5b9a\u5982\u4f55\u5904\u7f6e\u5185\u5bb9 attachment [ 'content-disposition' ] = f 'attachment; filename=\" { filename } \"' # \u521b\u5efaSMTP_SSL\u5bf9\u8c61\uff08\u8fde\u63a5\u90ae\u4ef6\u670d\u52a1\u5668\uff09 smtp_obj = smtplib . SMTP_SSL ( 'smtp.126.com' , 465 ) # \u901a\u8fc7\u7528\u6237\u540d\u548c\u6388\u6743\u7801\u8fdb\u884c\u767b\u5f55 smtp_obj . login ( 'xxxxxxxxx@126.com' , '\u90ae\u4ef6\u670d\u52a1\u5668\u7684\u6388\u6743\u7801' ) # \u53d1\u9001\u90ae\u4ef6\uff08\u53d1\u4ef6\u4eba\u3001\u6536\u4ef6\u4eba\u3001\u90ae\u4ef6\u5185\u5bb9\uff08\u5b57\u7b26\u4e32\uff09\uff09 smtp_obj . sendmail ( 'xxxxxxxxx@126.com' , 'zzzzzzzz@1000phone.com' , email . as_string () ) \u4e3a\u4e86\u65b9\u4fbf\u5927\u5bb6\u7528Python\u5b9e\u73b0\u90ae\u4ef6\u53d1\u9001\uff0c\u6211\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u5c01\u88c5\u6210\u4e86\u51fd\u6570\uff0c\u4f7f\u7528\u7684\u65f6\u5019\u5927\u5bb6\u53ea\u9700\u8981\u8c03\u6574\u90ae\u4ef6\u670d\u52a1\u5668\u57df\u540d\u3001\u7aef\u53e3\u3001\u7528\u6237\u540d\u548c\u6388\u6743\u7801\u5c31\u53ef\u4ee5\u4e86\u3002 import smtplib from email.header import Header from email.mime.multipart import MIMEMultipart from email.mime.text import MIMEText from urllib.parse import quote # \u90ae\u4ef6\u670d\u52a1\u5668\u57df\u540d\uff08\u81ea\u884c\u4fee\u6539\uff09 EMAIL_HOST = 'smtp.126.com' # \u90ae\u4ef6\u670d\u52a1\u7aef\u53e3\uff08\u901a\u5e38\u662f465\uff09 EMAIL_PORT = 465 # \u767b\u5f55\u90ae\u4ef6\u670d\u52a1\u5668\u7684\u8d26\u53f7\uff08\u81ea\u884c\u4fee\u6539\uff09 EMAIL_USER = 'xxxxxxxxx@126.com' # \u5f00\u901aSMTP\u670d\u52a1\u7684\u6388\u6743\u7801\uff08\u81ea\u884c\u4fee\u6539\uff09 EMAIL_AUTH = '\u90ae\u4ef6\u670d\u52a1\u5668\u7684\u6388\u6743\u7801' def send_email ( * , from_user , to_users , subject = '' , content = '' , filenames = []): \"\"\"\u53d1\u9001\u90ae\u4ef6 :param from_user: \u53d1\u4ef6\u4eba :param to_users: \u6536\u4ef6\u4eba\uff0c\u591a\u4e2a\u6536\u4ef6\u4eba\u7528\u82f1\u6587\u5206\u53f7\u8fdb\u884c\u5206\u9694 :param subject: \u90ae\u4ef6\u7684\u4e3b\u9898 :param content: \u90ae\u4ef6\u6b63\u6587\u5185\u5bb9 :param filenames: \u9644\u4ef6\u8981\u53d1\u9001\u7684\u6587\u4ef6\u8def\u5f84 \"\"\" email = MIMEMultipart () email [ 'From' ] = from_user email [ 'To' ] = to_users email [ 'Subject' ] = subject message = MIMEText ( content , 'plain' , 'utf-8' ) email . attach ( message ) for filename in filenames : with open ( filename , 'rb' ) as file : pos = filename . rfind ( '/' ) display_filename = filename [ pos + 1 :] if pos >= 0 else filename display_filename = quote ( display_filename ) attachment = MIMEText ( file . read (), 'base64' , 'utf-8' ) attachment [ 'content-type' ] = 'application/octet-stream' attachment [ 'content-disposition' ] = f 'attachment; filename=\" { display_filename } \"' email . attach ( attachment ) smtp = smtplib . SMTP_SSL ( EMAIL_HOST , EMAIL_PORT ) smtp . login ( EMAIL_USER , EMAIL_AUTH ) smtp . sendmail ( from_user , to_users . split ( ';' ), email . as_string ()) \u53d1\u9001\u77ed\u4fe1 \u53d1\u9001\u77ed\u4fe1\u4e5f\u662f\u9879\u76ee\u4e2d\u5e38\u89c1\u7684\u529f\u80fd\uff0c\u7f51\u7ad9\u7684\u6ce8\u518c\u7801\u3001\u9a8c\u8bc1\u7801\u3001\u8425\u9500\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u901a\u8fc7\u77ed\u4fe1\u6765\u53d1\u9001\u7ed9\u7528\u6237\u7684\u3002\u53d1\u9001\u77ed\u4fe1\u9700\u8981\u4e09\u65b9\u5e73\u53f0\u7684\u652f\u6301\uff0c\u4e0b\u9762\u6211\u4eec\u4ee5 \u87ba\u4e1d\u5e3d\u5e73\u53f0 \u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5982\u4f55\u7528Python\u7a0b\u5e8f\u53d1\u9001\u77ed\u4fe1\u3002\u6ce8\u518c\u8d26\u53f7\u548c\u8d2d\u4e70\u77ed\u4fe1\u670d\u52a1\u7684\u7ec6\u8282\u6211\u4eec\u4e0d\u5728\u8fd9\u91cc\u8fdb\u884c\u8d58\u8ff0\uff0c\u5927\u5bb6\u53ef\u4ee5\u54a8\u8be2\u5e73\u53f0\u7684\u5ba2\u670d\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 requests \u5e93\u5411\u5e73\u53f0\u63d0\u4f9b\u7684\u77ed\u4fe1\u7f51\u5173\u53d1\u8d77\u4e00\u4e2aHTTP\u8bf7\u6c42\uff0c\u901a\u8fc7\u5c06\u63a5\u6536\u77ed\u4fe1\u7684\u624b\u673a\u53f7\u548c\u77ed\u4fe1\u5185\u5bb9\u4f5c\u4e3a\u53c2\u6570\uff0c\u5c31\u53ef\u4ee5\u53d1\u9001\u77ed\u4fe1\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import random import requests def send_message_by_luosimao ( tel , message ): \"\"\"\u53d1\u9001\u77ed\u4fe1\uff08\u8c03\u7528\u87ba\u4e1d\u5e3d\u77ed\u4fe1\u7f51\u5173\uff09\"\"\" resp = requests . post ( url = 'http://sms-api.luosimao.com/v1/send.json' , auth = ( 'api' , 'key-\u6ce8\u518c\u6210\u529f\u540e\u5e73\u53f0\u5206\u914d\u7684KEY' ), data = { 'mobile' : tel , 'message' : message }, timeout = 10 , verify = False ) return resp . json () def gen_mobile_code ( length = 6 ): \"\"\"\u751f\u6210\u6307\u5b9a\u957f\u5ea6\u7684\u624b\u673a\u9a8c\u8bc1\u7801\"\"\" return '' . join ( random . choices ( '0123456789' , k = length )) def main (): code = gen_mobile_code () message = f '\u60a8\u7684\u77ed\u4fe1\u9a8c\u8bc1\u7801\u662f { code } \uff0c\u6253\u6b7b\u4e5f\u4e0d\u80fd\u544a\u8bc9\u522b\u4eba\u54df\uff01\u3010Python\u5c0f\u8bfe\u3011' print ( send_message_by_luosimao ( '13500112233' , message )) if __name__ == '__main__' : main () \u4e0a\u9762\u8bf7\u6c42\u87ba\u4e1d\u5e3d\u7684\u77ed\u4fe1\u7f51\u5173 http://sms-api.luosimao.com/v1/send.json \u4f1a\u8fd4\u56deJSON\u683c\u5f0f\u7684\u6570\u636e\uff0c\u5982\u679c\u8fd4\u56de {'error': 0, 'msg': 'OK'} \u5c31\u8bf4\u660e\u77ed\u4fe1\u5df2\u7ecf\u53d1\u9001\u6210\u529f\u4e86\uff0c\u5982\u679c error \u7684\u503c\u4e0d\u662f 0 \uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u5b98\u65b9\u7684 \u5f00\u53d1\u6587\u6863 \u4e86\u89e3\u5230\u5e95\u54ea\u4e2a\u73af\u8282\u51fa\u4e86\u95ee\u9898\u3002\u87ba\u4e1d\u5e3d\u5e73\u53f0\u5e38\u89c1\u7684\u9519\u8bef\u7c7b\u578b\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u76ee\u524d\uff0c\u5927\u591a\u6570\u77ed\u4fe1\u5e73\u53f0\u90fd\u4f1a\u8981\u6c42\u77ed\u4fe1\u5185\u5bb9\u5fc5\u987b\u9644\u4e0a\u7b7e\u540d\uff0c\u4e0b\u56fe\u662f\u6211\u5728\u87ba\u4e1d\u5e3d\u5e73\u53f0\u914d\u7f6e\u7684\u77ed\u4fe1\u7b7e\u540d\u201c\u3010Python\u5c0f\u8bfe\u3011\u201d\u3002\u6709\u4e9b\u6d89\u53ca\u5230\u654f\u611f\u5185\u5bb9\u7684\u77ed\u4fe1\uff0c\u8fd8\u9700\u8981\u63d0\u524d\u914d\u7f6e\u77ed\u4fe1\u6a21\u677f\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5e73\u53f0\u4e3a\u4e86\u9632\u8303\u77ed\u4fe1\u88ab\u76d7\u7528\uff0c\u8fd8\u4f1a\u8981\u6c42\u8bbe\u7f6e\u201cIP\u767d\u540d\u5355\u201d\uff0c\u4e0d\u6e05\u695a\u5982\u4f55\u914d\u7f6e\u7684\u53ef\u4ee5\u54a8\u8be2\u5e73\u53f0\u5ba2\u670d\u3002 \u5f53\u7136\u56fd\u5185\u7684\u77ed\u4fe1\u5e73\u53f0\u5f88\u591a\uff0c\u8bfb\u8005\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u8fdb\u884c\u9009\u62e9\uff08\u901a\u5e38\u4f1a\u8003\u8651\u8d39\u7528\u9884\u7b97\u3001\u77ed\u4fe1\u8fbe\u5230\u7387\u3001\u4f7f\u7528\u7684\u96be\u6613\u7a0b\u5ea6\u7b49\u6307\u6807\uff09\uff0c\u5982\u679c\u9700\u8981\u5728\u5546\u4e1a\u9879\u76ee\u4e2d\u4f7f\u7528\u77ed\u4fe1\u670d\u52a1\u5efa\u8bae\u8d2d\u4e70\u77ed\u4fe1\u5e73\u53f0\u63d0\u4f9b\u7684\u5957\u9910\u670d\u52a1\u3002 \u7b80\u5355\u7684\u603b\u7ed3 \u5176\u5b9e\uff0c\u53d1\u9001\u90ae\u4ef6\u548c\u53d1\u9001\u77ed\u4fe1\u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u4e09\u65b9\u670d\u52a1\u6765\u5b8c\u6210\uff0c\u5728\u5b9e\u9645\u7684\u5546\u4e1a\u9879\u76ee\u4e2d\uff0c\u5efa\u8bae\u81ea\u5df1\u67b6\u8bbe\u90ae\u4ef6\u670d\u52a1\u5668\u6216\u8d2d\u4e70\u4e09\u65b9\u670d\u52a1\u6765\u53d1\u9001\u90ae\u4ef6\uff0c\u8fd9\u4e2a\u624d\u662f\u6bd4\u8f83\u9760\u8c31\u7684\u9009\u62e9\u3002","title":"\u7b2c29\u8bfe\uff1a\u7528Python\u53d1\u9001\u90ae\u4ef6\u548c\u77ed\u4fe1"},{"location":"%E7%AC%AC29%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E5%92%8C%E7%9F%AD%E4%BF%A1/#29python","text":"\u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u6559\u4f1a\u5927\u5bb6\u5982\u4f55\u7528Python\u7a0b\u5e8f\u81ea\u52a8\u7684\u751f\u6210Excel\u3001Word\u3001PDF\u6587\u6863\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8fd8\u53ef\u4ee5\u66f4\u8fdb\u4e00\u6b65\uff0c\u5c31\u662f\u901a\u8fc7\u90ae\u4ef6\u5c06\u751f\u6210\u597d\u7684\u6587\u6863\u53d1\u9001\u7ed9\u6307\u5b9a\u7684\u6536\u4ef6\u4eba\uff0c\u7136\u540e\u7528\u77ed\u4fe1\u544a\u77e5\u5bf9\u65b9\u6211\u4eec\u53d1\u51fa\u4e86\u90ae\u4ef6\u3002\u8fd9\u4e9b\u4e8b\u60c5\u5229\u7528Python\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u8f7b\u677e\u6109\u5feb\u7684\u89e3\u51b3\u3002","title":"\u7b2c29\u8bfe\uff1a\u7528Python\u53d1\u9001\u90ae\u4ef6\u548c\u77ed\u4fe1"},{"location":"%E7%AC%AC29%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E5%92%8C%E7%9F%AD%E4%BF%A1/#_1","text":"\u5728\u5373\u65f6\u901a\u4fe1\u8f6f\u4ef6\u5982\u6b64\u53d1\u8fbe\u7684\u4eca\u5929\uff0c\u7535\u5b50\u90ae\u4ef6\u4ecd\u7136\u662f\u4e92\u8054\u7f51\u4e0a\u4f7f\u7528\u6700\u4e3a\u5e7f\u6cdb\u7684\u5e94\u7528\u4e4b\u4e00\uff0c\u516c\u53f8\u5411\u5e94\u8058\u8005\u53d1\u51fa\u5f55\u7528\u901a\u77e5\u3001\u7f51\u7ad9\u5411\u7528\u6237\u53d1\u9001\u4e00\u4e2a\u6fc0\u6d3b\u8d26\u53f7\u7684\u94fe\u63a5\u3001\u94f6\u884c\u5411\u5ba2\u6237\u63a8\u5e7f\u5b83\u4eec\u7684\u7406\u8d22\u4ea7\u54c1\u7b49\u51e0\u4e4e\u90fd\u662f\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u6765\u5b8c\u6210\u7684\uff0c\u800c\u8fd9\u4e9b\u4efb\u52a1\u5e94\u8be5\u90fd\u662f\u7531\u7a0b\u5e8f\u81ea\u52a8\u5b8c\u6210\u7684\u3002 \u6211\u4eec\u53ef\u4ee5\u7528HTTP\uff08\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u6765\u8bbf\u95ee\u7f51\u7ad9\u8d44\u6e90\uff0cHTTP\u662f\u4e00\u4e2a\u5e94\u7528\u7ea7\u534f\u8bae\uff0c\u5b83\u5efa\u7acb\u5728TCP\uff08\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u4e4b\u4e0a\uff0cTCP\u4e3a\u5f88\u591a\u5e94\u7528\u7ea7\u534f\u8bae\u63d0\u4f9b\u4e86\u53ef\u9760\u7684\u6570\u636e\u4f20\u8f93\u670d\u52a1\u3002\u5982\u679c\u8981\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u9700\u8981\u4f7f\u7528SMTP\uff08\u7b80\u5355\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\uff0c\u5b83\u4e5f\u662f\u5efa\u7acb\u5728TCP\u4e4b\u4e0a\u7684\u5e94\u7528\u7ea7\u534f\u8bae\uff0c\u89c4\u5b9a\u4e86\u90ae\u4ef6\u7684\u53d1\u9001\u8005\u5982\u4f55\u8ddf\u90ae\u4ef6\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u7684\u7ec6\u8282\u3002Python\u901a\u8fc7\u540d\u4e3a smtplib \u7684\u6a21\u5757\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u7b80\u5316\u6210\u4e86 SMTP_SSL \u5bf9\u8c61\uff0c\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684 login \u548c send_mail \u65b9\u6cd5\uff0c\u5c31\u80fd\u591f\u5b8c\u6210\u53d1\u9001\u90ae\u4ef6\u7684\u64cd\u4f5c\u3002 \u6211\u4eec\u5148\u5c1d\u8bd5\u4e00\u4e0b\u53d1\u9001\u4e00\u5c01\u6781\u4e3a\u7b80\u5355\u7684\u90ae\u4ef6\uff0c\u8be5\u90ae\u4ef6\u4e0d\u5305\u542b\u9644\u4ef6\u3001\u56fe\u7247\u4ee5\u53ca\u5176\u4ed6\u8d85\u6587\u672c\u5185\u5bb9\u3002\u53d1\u9001\u90ae\u4ef6\u9996\u5148\u9700\u8981\u63a5\u5165\u90ae\u4ef6\u670d\u52a1\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u67b6\u8bbe\u90ae\u4ef6\u670d\u52a1\u5668\uff0c\u8fd9\u4ef6\u4e8b\u60c5\u5bf9\u65b0\u624b\u5e76\u4e0d\u53cb\u597d\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u7b2c\u4e09\u65b9\u63d0\u4f9b\u7684\u90ae\u4ef6\u670d\u52a1\u3002\u4f8b\u5982\uff0c\u6211\u5728 \u5df2\u7ecf\u6ce8\u518c\u4e86\u8d26\u53f7\uff0c\u767b\u5f55\u6210\u529f\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5728\u8bbe\u7f6e\u4e2d\u5f00\u542fSMTP\u670d\u52a1\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u83b7\u5f97\u4e86\u90ae\u4ef6\u670d\u52a1\u5668\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u5982\u4e0b\u6240\u793a\u3002 \u7528\u624b\u673a\u626b\u7801\u4e0a\u9762\u7684\u4e8c\u7ef4\u7801\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001\u77ed\u4fe1\u7684\u65b9\u5f0f\u6765\u83b7\u53d6\u6388\u6743\u7801\uff0c\u77ed\u4fe1\u53d1\u9001\u6210\u529f\u540e\uff0c\u70b9\u51fb\u201c\u6211\u5df2\u53d1\u9001\u201d\u5c31\u53ef\u4ee5\u83b7\u5f97\u6388\u6743\u7801\u3002\u6388\u6743\u7801\u9700\u8981\u59a5\u5584\u4fdd\u7ba1\uff0c\u56e0\u4e3a\u4e00\u65e6\u6cc4\u9732\u5c31\u4f1a\u88ab\u5176\u4ed6\u4eba\u5192\u7528\u4f60\u7684\u8eab\u4efd\u6765\u53d1\u9001\u90ae\u4ef6\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7f16\u5199\u53d1\u9001\u90ae\u4ef6\u7684\u4ee3\u7801\u4e86\uff0c\u5982\u4e0b\u6240\u793a\u3002 import smtplib from email.header import Header from email.mime.multipart import MIMEMultipart from email.mime.text import MIMEText # \u521b\u5efa\u90ae\u4ef6\u4e3b\u4f53\u5bf9\u8c61 email = MIMEMultipart () # \u8bbe\u7f6e\u53d1\u4ef6\u4eba\u3001\u6536\u4ef6\u4eba\u548c\u4e3b\u9898 email [ 'From' ] = 'xxxxxxxxx@126.com' email [ 'To' ] = 'yyyyyy@qq.com;zzzzzz@1000phone.com' email [ 'Subject' ] = Header ( '\u4e0a\u534a\u5e74\u5de5\u4f5c\u60c5\u51b5\u6c47\u62a5' , 'utf-8' ) # \u6dfb\u52a0\u90ae\u4ef6\u6b63\u6587\u5185\u5bb9 content = \"\"\"\u636e\u5fb7\u56fd\u5a92\u4f53\u62a5\u9053\uff0c\u5f53\u5730\u65f6\u95f49\u65e5\uff0c\u5fb7\u56fd\u706b\u8f66\u53f8\u673a\u5de5\u4f1a\u6210\u5458\u8fdb\u884c\u4e86\u6295\u7968\uff0c \u5b9a\u4e8e\u5f53\u5730\u65f6\u95f410\u65e5\u8d77\u8fdb\u884c\u5168\u56fd\u6027\u7f62\u5de5\uff0c\u8d27\u8fd0\u4ea4\u901a\u65b9\u9762\u7684\u7f62\u5de5\u5df2\u4e8e\u5f53\u5730\u65f6\u95f410\u65e519\u65f6\u5f00\u59cb\u3002 \u6b64\u540e\uff0c\u4ece11\u65e5\u51cc\u66682\u65f6\u523013\u65e5\u51cc\u66682\u65f6\uff0c\u5fb7\u56fd\u5168\u56fd\u8303\u56f4\u5185\u7684\u5ba2\u8fd0\u548c\u94c1\u8def\u57fa\u7840\u8bbe\u65bd\u5c06\u8fdb\u884c48\u5c0f\u65f6\u7684\u7f62\u5de5\u3002\"\"\" email . attach ( MIMEText ( content , 'plain' , 'utf-8' )) # \u521b\u5efaSMTP_SSL\u5bf9\u8c61\uff08\u8fde\u63a5\u90ae\u4ef6\u670d\u52a1\u5668\uff09 smtp_obj = smtplib . SMTP_SSL ( 'smtp.126.com' , 465 ) # \u901a\u8fc7\u7528\u6237\u540d\u548c\u6388\u6743\u7801\u8fdb\u884c\u767b\u5f55 smtp_obj . login ( 'xxxxxxxxx@126.com' , '\u90ae\u4ef6\u670d\u52a1\u5668\u7684\u6388\u6743\u7801' ) # \u53d1\u9001\u90ae\u4ef6\uff08\u53d1\u4ef6\u4eba\u3001\u6536\u4ef6\u4eba\u3001\u90ae\u4ef6\u5185\u5bb9\uff08\u5b57\u7b26\u4e32\uff09\uff09 smtp_obj . sendmail ( 'xxxxxxxxx@126.com' , [ 'yyyyyy@qq.com' , 'zzzzzz@1000phone.com' ], email . as_string () ) \u5982\u679c\u8981\u53d1\u9001\u5e26\u6709\u9644\u4ef6\u7684\u90ae\u4ef6\uff0c\u53ea\u9700\u8981\u5c06\u9644\u4ef6\u7684\u5185\u5bb9\u5904\u7406\u6210BASE64\u7f16\u7801\uff0c\u90a3\u4e48\u5b83\u5c31\u548c\u666e\u901a\u7684\u6587\u672c\u5185\u5bb9\u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u3002BASE64\u662f\u4e00\u79cd\u57fa\u4e8e64\u4e2a\u53ef\u6253\u5370\u5b57\u7b26\u6765\u8868\u793a\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u5e38\u7528\u4e8e\u67d0\u4e9b\u9700\u8981\u8868\u793a\u3001\u4f20\u8f93\u3001\u5b58\u50a8\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u573a\u5408\uff0c\u7535\u5b50\u90ae\u4ef6\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\u5bf9\u8fd9\u79cd\u7f16\u7801\u65b9\u5f0f\u4e0d\u7406\u89e3\u7684\u540c\u5b66\uff0c\u63a8\u8350\u9605\u8bfb \u300aBase64\u7b14\u8bb0\u300b \u4e00\u6587\u3002\u5728\u4e4b\u524d\u7684\u5185\u5bb9\u4e2d\uff0c\u6211\u4eec\u4e5f\u63d0\u5230\u8fc7\uff0cPython\u6807\u51c6\u5e93\u7684 base64 \u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9BASE64\u7f16\u89e3\u7801\u7684\u652f\u6301\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u53d1\u9001\u5e26\u9644\u4ef6\u7684\u90ae\u4ef6\u3002 import smtplib from email.header import Header from email.mime.multipart import MIMEMultipart from email.mime.text import MIMEText from urllib.parse import quote # \u521b\u5efa\u90ae\u4ef6\u4e3b\u4f53\u5bf9\u8c61 email = MIMEMultipart () # \u8bbe\u7f6e\u53d1\u4ef6\u4eba\u3001\u6536\u4ef6\u4eba\u548c\u4e3b\u9898 email [ 'From' ] = 'xxxxxxxxx@126.com' email [ 'To' ] = 'zzzzzzzz@1000phone.com' email [ 'Subject' ] = Header ( '\u8bf7\u67e5\u6536\u79bb\u804c\u8bc1\u660e\u6587\u4ef6' , 'utf-8' ) # \u6dfb\u52a0\u90ae\u4ef6\u6b63\u6587\u5185\u5bb9\uff08\u5e26HTML\u6807\u7b7e\u6392\u7248\u7684\u5185\u5bb9\uff09 content = \"\"\"<p>\u4eb2\u7231\u7684\u524d\u540c\u4e8b\uff1a</p> <p>\u4f60\u9700\u8981\u7684\u79bb\u804c\u8bc1\u660e\u5728\u9644\u4ef6\u4e2d\uff0c\u8bf7\u67e5\u6536\uff01</p> <br> <p>\u795d\uff0c\u597d\uff01</p> <hr> <p>\u5b59\u7f8e\u4e3d \u5373\u65e5</p>\"\"\" email . attach ( MIMEText ( content , 'html' , 'utf-8' )) # \u8bfb\u53d6\u4f5c\u4e3a\u9644\u4ef6\u7684\u6587\u4ef6 with open ( f 'resources/\u738b\u5927\u9524\u79bb\u804c\u8bc1\u660e.docx' , 'rb' ) as file : attachment = MIMEText ( file . read (), 'base64' , 'utf-8' ) # \u6307\u5b9a\u5185\u5bb9\u7c7b\u578b attachment [ 'content-type' ] = 'application/octet-stream' # \u5c06\u4e2d\u6587\u6587\u4ef6\u540d\u5904\u7406\u6210\u767e\u5206\u53f7\u7f16\u7801 filename = quote ( '\u738b\u5927\u9524\u79bb\u804c\u8bc1\u660e.docx' ) # \u6307\u5b9a\u5982\u4f55\u5904\u7f6e\u5185\u5bb9 attachment [ 'content-disposition' ] = f 'attachment; filename=\" { filename } \"' # \u521b\u5efaSMTP_SSL\u5bf9\u8c61\uff08\u8fde\u63a5\u90ae\u4ef6\u670d\u52a1\u5668\uff09 smtp_obj = smtplib . SMTP_SSL ( 'smtp.126.com' , 465 ) # \u901a\u8fc7\u7528\u6237\u540d\u548c\u6388\u6743\u7801\u8fdb\u884c\u767b\u5f55 smtp_obj . login ( 'xxxxxxxxx@126.com' , '\u90ae\u4ef6\u670d\u52a1\u5668\u7684\u6388\u6743\u7801' ) # \u53d1\u9001\u90ae\u4ef6\uff08\u53d1\u4ef6\u4eba\u3001\u6536\u4ef6\u4eba\u3001\u90ae\u4ef6\u5185\u5bb9\uff08\u5b57\u7b26\u4e32\uff09\uff09 smtp_obj . sendmail ( 'xxxxxxxxx@126.com' , 'zzzzzzzz@1000phone.com' , email . as_string () ) \u4e3a\u4e86\u65b9\u4fbf\u5927\u5bb6\u7528Python\u5b9e\u73b0\u90ae\u4ef6\u53d1\u9001\uff0c\u6211\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u5c01\u88c5\u6210\u4e86\u51fd\u6570\uff0c\u4f7f\u7528\u7684\u65f6\u5019\u5927\u5bb6\u53ea\u9700\u8981\u8c03\u6574\u90ae\u4ef6\u670d\u52a1\u5668\u57df\u540d\u3001\u7aef\u53e3\u3001\u7528\u6237\u540d\u548c\u6388\u6743\u7801\u5c31\u53ef\u4ee5\u4e86\u3002 import smtplib from email.header import Header from email.mime.multipart import MIMEMultipart from email.mime.text import MIMEText from urllib.parse import quote # \u90ae\u4ef6\u670d\u52a1\u5668\u57df\u540d\uff08\u81ea\u884c\u4fee\u6539\uff09 EMAIL_HOST = 'smtp.126.com' # \u90ae\u4ef6\u670d\u52a1\u7aef\u53e3\uff08\u901a\u5e38\u662f465\uff09 EMAIL_PORT = 465 # \u767b\u5f55\u90ae\u4ef6\u670d\u52a1\u5668\u7684\u8d26\u53f7\uff08\u81ea\u884c\u4fee\u6539\uff09 EMAIL_USER = 'xxxxxxxxx@126.com' # \u5f00\u901aSMTP\u670d\u52a1\u7684\u6388\u6743\u7801\uff08\u81ea\u884c\u4fee\u6539\uff09 EMAIL_AUTH = '\u90ae\u4ef6\u670d\u52a1\u5668\u7684\u6388\u6743\u7801' def send_email ( * , from_user , to_users , subject = '' , content = '' , filenames = []): \"\"\"\u53d1\u9001\u90ae\u4ef6 :param from_user: \u53d1\u4ef6\u4eba :param to_users: \u6536\u4ef6\u4eba\uff0c\u591a\u4e2a\u6536\u4ef6\u4eba\u7528\u82f1\u6587\u5206\u53f7\u8fdb\u884c\u5206\u9694 :param subject: \u90ae\u4ef6\u7684\u4e3b\u9898 :param content: \u90ae\u4ef6\u6b63\u6587\u5185\u5bb9 :param filenames: \u9644\u4ef6\u8981\u53d1\u9001\u7684\u6587\u4ef6\u8def\u5f84 \"\"\" email = MIMEMultipart () email [ 'From' ] = from_user email [ 'To' ] = to_users email [ 'Subject' ] = subject message = MIMEText ( content , 'plain' , 'utf-8' ) email . attach ( message ) for filename in filenames : with open ( filename , 'rb' ) as file : pos = filename . rfind ( '/' ) display_filename = filename [ pos + 1 :] if pos >= 0 else filename display_filename = quote ( display_filename ) attachment = MIMEText ( file . read (), 'base64' , 'utf-8' ) attachment [ 'content-type' ] = 'application/octet-stream' attachment [ 'content-disposition' ] = f 'attachment; filename=\" { display_filename } \"' email . attach ( attachment ) smtp = smtplib . SMTP_SSL ( EMAIL_HOST , EMAIL_PORT ) smtp . login ( EMAIL_USER , EMAIL_AUTH ) smtp . sendmail ( from_user , to_users . split ( ';' ), email . as_string ())","title":"\u53d1\u9001\u7535\u5b50\u90ae\u4ef6"},{"location":"%E7%AC%AC29%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E5%92%8C%E7%9F%AD%E4%BF%A1/#_2","text":"\u53d1\u9001\u77ed\u4fe1\u4e5f\u662f\u9879\u76ee\u4e2d\u5e38\u89c1\u7684\u529f\u80fd\uff0c\u7f51\u7ad9\u7684\u6ce8\u518c\u7801\u3001\u9a8c\u8bc1\u7801\u3001\u8425\u9500\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u901a\u8fc7\u77ed\u4fe1\u6765\u53d1\u9001\u7ed9\u7528\u6237\u7684\u3002\u53d1\u9001\u77ed\u4fe1\u9700\u8981\u4e09\u65b9\u5e73\u53f0\u7684\u652f\u6301\uff0c\u4e0b\u9762\u6211\u4eec\u4ee5 \u87ba\u4e1d\u5e3d\u5e73\u53f0 \u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5982\u4f55\u7528Python\u7a0b\u5e8f\u53d1\u9001\u77ed\u4fe1\u3002\u6ce8\u518c\u8d26\u53f7\u548c\u8d2d\u4e70\u77ed\u4fe1\u670d\u52a1\u7684\u7ec6\u8282\u6211\u4eec\u4e0d\u5728\u8fd9\u91cc\u8fdb\u884c\u8d58\u8ff0\uff0c\u5927\u5bb6\u53ef\u4ee5\u54a8\u8be2\u5e73\u53f0\u7684\u5ba2\u670d\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 requests \u5e93\u5411\u5e73\u53f0\u63d0\u4f9b\u7684\u77ed\u4fe1\u7f51\u5173\u53d1\u8d77\u4e00\u4e2aHTTP\u8bf7\u6c42\uff0c\u901a\u8fc7\u5c06\u63a5\u6536\u77ed\u4fe1\u7684\u624b\u673a\u53f7\u548c\u77ed\u4fe1\u5185\u5bb9\u4f5c\u4e3a\u53c2\u6570\uff0c\u5c31\u53ef\u4ee5\u53d1\u9001\u77ed\u4fe1\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import random import requests def send_message_by_luosimao ( tel , message ): \"\"\"\u53d1\u9001\u77ed\u4fe1\uff08\u8c03\u7528\u87ba\u4e1d\u5e3d\u77ed\u4fe1\u7f51\u5173\uff09\"\"\" resp = requests . post ( url = 'http://sms-api.luosimao.com/v1/send.json' , auth = ( 'api' , 'key-\u6ce8\u518c\u6210\u529f\u540e\u5e73\u53f0\u5206\u914d\u7684KEY' ), data = { 'mobile' : tel , 'message' : message }, timeout = 10 , verify = False ) return resp . json () def gen_mobile_code ( length = 6 ): \"\"\"\u751f\u6210\u6307\u5b9a\u957f\u5ea6\u7684\u624b\u673a\u9a8c\u8bc1\u7801\"\"\" return '' . join ( random . choices ( '0123456789' , k = length )) def main (): code = gen_mobile_code () message = f '\u60a8\u7684\u77ed\u4fe1\u9a8c\u8bc1\u7801\u662f { code } \uff0c\u6253\u6b7b\u4e5f\u4e0d\u80fd\u544a\u8bc9\u522b\u4eba\u54df\uff01\u3010Python\u5c0f\u8bfe\u3011' print ( send_message_by_luosimao ( '13500112233' , message )) if __name__ == '__main__' : main () \u4e0a\u9762\u8bf7\u6c42\u87ba\u4e1d\u5e3d\u7684\u77ed\u4fe1\u7f51\u5173 http://sms-api.luosimao.com/v1/send.json \u4f1a\u8fd4\u56deJSON\u683c\u5f0f\u7684\u6570\u636e\uff0c\u5982\u679c\u8fd4\u56de {'error': 0, 'msg': 'OK'} \u5c31\u8bf4\u660e\u77ed\u4fe1\u5df2\u7ecf\u53d1\u9001\u6210\u529f\u4e86\uff0c\u5982\u679c error \u7684\u503c\u4e0d\u662f 0 \uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u5b98\u65b9\u7684 \u5f00\u53d1\u6587\u6863 \u4e86\u89e3\u5230\u5e95\u54ea\u4e2a\u73af\u8282\u51fa\u4e86\u95ee\u9898\u3002\u87ba\u4e1d\u5e3d\u5e73\u53f0\u5e38\u89c1\u7684\u9519\u8bef\u7c7b\u578b\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u76ee\u524d\uff0c\u5927\u591a\u6570\u77ed\u4fe1\u5e73\u53f0\u90fd\u4f1a\u8981\u6c42\u77ed\u4fe1\u5185\u5bb9\u5fc5\u987b\u9644\u4e0a\u7b7e\u540d\uff0c\u4e0b\u56fe\u662f\u6211\u5728\u87ba\u4e1d\u5e3d\u5e73\u53f0\u914d\u7f6e\u7684\u77ed\u4fe1\u7b7e\u540d\u201c\u3010Python\u5c0f\u8bfe\u3011\u201d\u3002\u6709\u4e9b\u6d89\u53ca\u5230\u654f\u611f\u5185\u5bb9\u7684\u77ed\u4fe1\uff0c\u8fd8\u9700\u8981\u63d0\u524d\u914d\u7f6e\u77ed\u4fe1\u6a21\u677f\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5e73\u53f0\u4e3a\u4e86\u9632\u8303\u77ed\u4fe1\u88ab\u76d7\u7528\uff0c\u8fd8\u4f1a\u8981\u6c42\u8bbe\u7f6e\u201cIP\u767d\u540d\u5355\u201d\uff0c\u4e0d\u6e05\u695a\u5982\u4f55\u914d\u7f6e\u7684\u53ef\u4ee5\u54a8\u8be2\u5e73\u53f0\u5ba2\u670d\u3002 \u5f53\u7136\u56fd\u5185\u7684\u77ed\u4fe1\u5e73\u53f0\u5f88\u591a\uff0c\u8bfb\u8005\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u8fdb\u884c\u9009\u62e9\uff08\u901a\u5e38\u4f1a\u8003\u8651\u8d39\u7528\u9884\u7b97\u3001\u77ed\u4fe1\u8fbe\u5230\u7387\u3001\u4f7f\u7528\u7684\u96be\u6613\u7a0b\u5ea6\u7b49\u6307\u6807\uff09\uff0c\u5982\u679c\u9700\u8981\u5728\u5546\u4e1a\u9879\u76ee\u4e2d\u4f7f\u7528\u77ed\u4fe1\u670d\u52a1\u5efa\u8bae\u8d2d\u4e70\u77ed\u4fe1\u5e73\u53f0\u63d0\u4f9b\u7684\u5957\u9910\u670d\u52a1\u3002","title":"\u53d1\u9001\u77ed\u4fe1"},{"location":"%E7%AC%AC29%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E5%92%8C%E7%9F%AD%E4%BF%A1/#_3","text":"\u5176\u5b9e\uff0c\u53d1\u9001\u90ae\u4ef6\u548c\u53d1\u9001\u77ed\u4fe1\u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u4e09\u65b9\u670d\u52a1\u6765\u5b8c\u6210\uff0c\u5728\u5b9e\u9645\u7684\u5546\u4e1a\u9879\u76ee\u4e2d\uff0c\u5efa\u8bae\u81ea\u5df1\u67b6\u8bbe\u90ae\u4ef6\u670d\u52a1\u5668\u6216\u8d2d\u4e70\u4e09\u65b9\u670d\u52a1\u6765\u53d1\u9001\u90ae\u4ef6\uff0c\u8fd9\u4e2a\u624d\u662f\u6bd4\u8f83\u9760\u8c31\u7684\u9009\u62e9\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC30%E8%AF%BE%EF%BC%9A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/","text":"\u7b2c30\u8bfe\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5e94\u7528 \u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u77e5\u8bc6 \u5728\u7f16\u5199\u5904\u7406\u5b57\u7b26\u4e32\u7684\u7a0b\u65f6\uff0c\u7ecf\u5e38\u4f1a\u9047\u5230\u5728\u4e00\u6bb5\u6587\u672c\u4e2d\u67e5\u627e\u7b26\u5408\u67d0\u4e9b\u89c4\u5219\u7684\u5b57\u7b26\u4e32\u7684\u9700\u6c42\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u662f\u7528\u4e8e\u63cf\u8ff0\u8fd9\u4e9b\u89c4\u5219\u7684\u5de5\u5177\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5b9a\u4e49\u5b57\u7b26\u4e32\u7684\u5339\u914d\u6a21\u5f0f\uff0c\u5373\u5982\u4f55\u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u6709\u8ddf\u67d0\u79cd\u6a21\u5f0f\u5339\u914d\u7684\u90e8\u5206\u6216\u8005\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5c06\u4e0e\u6a21\u5f0f\u5339\u914d\u7684\u90e8\u5206\u63d0\u53d6\u51fa\u6765\u6216\u8005\u66ff\u6362\u6389\u3002 \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u5728Windows\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4f7f\u7528\u8fc7\u6587\u4ef6\u67e5\u627e\u5e76\u4e14\u5728\u6307\u5b9a\u6587\u4ef6\u540d\u65f6\u4f7f\u7528\u8fc7\u901a\u914d\u7b26\uff08 * \u548c ? \uff09\uff0c\u90a3\u4e48\u6b63\u5219\u8868\u8fbe\u5f0f\u4e5f\u662f\u4e0e\u4e4b\u7c7b\u4f3c\u7684\u7528 \u6765\u8fdb\u884c\u6587\u672c\u5339\u914d\u7684\u5de5\u5177\uff0c\u53ea\u4e0d\u8fc7\u6bd4\u8d77\u901a\u914d\u7b26\u6b63\u5219\u8868\u8fbe\u5f0f\u66f4\u5f3a\u5927\uff0c\u5b83\u80fd\u66f4\u7cbe\u786e\u5730\u63cf\u8ff0\u4f60\u7684\u9700\u6c42\uff0c\u5f53\u7136\u4f60\u4ed8\u51fa\u7684\u4ee3\u4ef7\u662f\u4e66\u5199\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6bd4\u4f7f\u7528\u901a\u914d\u7b26\u8981\u590d\u6742\u5f97\u591a\uff0c\u56e0\u4e3a\u4efb\u4f55\u7ed9\u4f60\u5e26\u6765\u597d\u5904\u7684\u4e1c\u897f\u90fd\u9700\u8981\u4f60\u4ed8\u51fa\u5bf9\u5e94\u7684\u4ee3\u4ef7\u3002 \u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u4ece\u67d0\u4e2a\u5730\u65b9\uff08\u53ef\u80fd\u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u4e5f\u53ef\u80fd\u662f\u7f51\u7edc\u4e0a\u7684\u4e00\u5219\u65b0\u95fb\uff09\u83b7\u5f97\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e0c\u671b\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u624b\u673a\u53f7\u548c\u5ea7\u673a\u53f7\u3002\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u8bbe\u5b9a\u624b\u673a\u53f7\u662f11\u4f4d\u7684\u6570\u5b57\uff08\u6ce8\u610f\u5e76\u4e0d\u662f\u968f\u673a\u768411\u4f4d\u6570\u5b57\uff0c\u56e0\u4e3a\u4f60\u6ca1\u6709\u89c1\u8fc7\u201c25012345678\u201d\u8fd9\u6837\u7684\u624b\u673a\u53f7\uff09\uff0c\u800c\u5ea7\u673a\u53f7\u5219\u662f\u7c7b\u4f3c\u4e8e\u201c\u533a\u53f7-\u53f7\u7801\u201d\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u8981\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u5c31\u4f1a\u6bd4\u8f83\u9ebb\u70e6\u3002\u6700\u521d\u8ba1\u7b97\u673a\u662f\u4e3a\u4e86\u505a\u6570\u5b66\u8fd0\u7b97\u800c\u8bde\u751f\u7684\uff0c\u5904\u7406\u7684\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u6570\u503c\uff0c\u800c\u4eca\u5929\u6211\u4eec\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u5904\u7406\u7684\u4fe1\u606f\u5f88\u591a\u90fd\u662f\u6587\u672c\u6570\u636e\uff0c\u6211\u4eec\u5e0c\u671b\u8ba1\u7b97\u673a\u80fd\u591f\u8bc6\u522b\u548c\u5904\u7406\u7b26\u5408\u67d0\u4e9b\u6a21\u5f0f\u7684\u6587\u672c\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u663e\u5f97\u975e\u5e38\u91cd\u8981\u4e86\u3002\u4eca\u5929\u51e0\u4e4e\u6240\u6709\u7684\u7f16\u7a0b\u8bed\u8a00\u90fd\u63d0\u4f9b\u4e86\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u7684\u652f\u6301\uff0cPython\u901a\u8fc7\u6807\u51c6\u5e93\u4e2d\u7684 re \u6a21\u5757\u6765\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u3002 \u5173\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5927\u5bb6\u53ef\u4ee5\u9605\u8bfb\u4e00\u7bc7\u975e\u5e38\u6709\u540d\u7684\u535a\u6587\u53eb \u300a\u6b63\u5219\u8868\u8fbe\u5f0f30\u5206\u949f\u5165\u95e8\u6559\u7a0b\u300b \uff0c\u8bfb\u5b8c\u8fd9\u7bc7\u6587\u7ae0\u540e\u4f60\u5c31\u53ef\u4ee5\u770b\u61c2\u4e0b\u9762\u7684\u8868\u683c\uff0c\u8fd9\u662f\u6211\u4eec\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u4e00\u4e9b\u57fa\u672c\u7b26\u53f7\u8fdb\u884c\u7684\u627c\u8981\u603b\u7ed3\u3002 \u7b26\u53f7 \u89e3\u91ca \u793a\u4f8b \u8bf4\u660e . \u5339\u914d\u4efb\u610f\u5b57\u7b26 b.t \u53ef\u4ee5\u5339\u914dbat / but / b#t / b1t\u7b49 \\w \u5339\u914d\u5b57\u6bcd/\u6570\u5b57/\u4e0b\u5212\u7ebf b\\wt \u53ef\u4ee5\u5339\u914dbat / b1t / b_t\u7b49 \u4f46\u4e0d\u80fd\u5339\u914db#t \\s \u5339\u914d\u7a7a\u767d\u5b57\u7b26\uff08\u5305\u62ec\\r\u3001\\n\u3001\\t\u7b49\uff09 love\\syou \u53ef\u4ee5\u5339\u914dlove you \\d \u5339\u914d\u6570\u5b57 \\d\\d \u53ef\u4ee5\u5339\u914d01 / 23 / 99\u7b49 \\b \u5339\u914d\u5355\u8bcd\u7684\u8fb9\u754c \\bThe\\b ^ \u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f00\u59cb ^The \u53ef\u4ee5\u5339\u914dThe\u5f00\u5934\u7684\u5b57\u7b26\u4e32 $ \u5339\u914d\u5b57\u7b26\u4e32\u7684\u7ed3\u675f .exe$ \u53ef\u4ee5\u5339\u914d.exe\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32 \\W \u5339\u914d\u975e\u5b57\u6bcd/\u6570\u5b57/\u4e0b\u5212\u7ebf b\\Wt \u53ef\u4ee5\u5339\u914db#t / b@t\u7b49 \u4f46\u4e0d\u80fd\u5339\u914dbut / b1t / b_t\u7b49 \\S \u5339\u914d\u975e\u7a7a\u767d\u5b57\u7b26 love\\Syou \u53ef\u4ee5\u5339\u914dlove#you\u7b49 \u4f46\u4e0d\u80fd\u5339\u914dlove you \\D \u5339\u914d\u975e\u6570\u5b57 \\d\\D \u53ef\u4ee5\u5339\u914d9a / 3# / 0F\u7b49 \\B \u5339\u914d\u975e\u5355\u8bcd\u8fb9\u754c \\Bio\\B [] \u5339\u914d\u6765\u81ea\u5b57\u7b26\u96c6\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [aeiou] \u53ef\u4ee5\u5339\u914d\u4efb\u4e00\u5143\u97f3\u5b57\u6bcd\u5b57\u7b26 [^] \u5339\u914d\u4e0d\u5728\u5b57\u7b26\u96c6\u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [^aeiou] \u53ef\u4ee5\u5339\u914d\u4efb\u4e00\u975e\u5143\u97f3\u5b57\u6bcd\u5b57\u7b26 * \u5339\u914d0\u6b21\u6216\u591a\u6b21 \\w* + \u5339\u914d1\u6b21\u6216\u591a\u6b21 \\w+ ? \u5339\u914d0\u6b21\u62161\u6b21 \\w? {N} \u5339\u914dN\u6b21 \\w{3} {M,} \u5339\u914d\u81f3\u5c11M\u6b21 \\w{3,} {M,N} \u5339\u914d\u81f3\u5c11M\u6b21\u81f3\u591aN\u6b21 \\w{3,6} | \u5206\u652f foo|bar \u53ef\u4ee5\u5339\u914dfoo\u6216\u8005bar (?#) \u6ce8\u91ca (exp) \u5339\u914dexp\u5e76\u6355\u83b7\u5230\u81ea\u52a8\u547d\u540d\u7684\u7ec4\u4e2d (?<name>exp) \u5339\u914dexp\u5e76\u6355\u83b7\u5230\u540d\u4e3aname\u7684\u7ec4\u4e2d (?:exp) \u5339\u914dexp\u4f46\u662f\u4e0d\u6355\u83b7\u5339\u914d\u7684\u6587\u672c (?=exp) \u5339\u914dexp\u524d\u9762\u7684\u4f4d\u7f6e \\b\\w+(?=ing) \u53ef\u4ee5\u5339\u914dI'm dancing\u4e2d\u7684danc (?<=exp) \u5339\u914dexp\u540e\u9762\u7684\u4f4d\u7f6e (?<=\\bdanc)\\w+\\b \u53ef\u4ee5\u5339\u914dI love dancing and reading\u4e2d\u7684\u7b2c\u4e00\u4e2aing (?!exp) \u5339\u914d\u540e\u9762\u4e0d\u662fexp\u7684\u4f4d\u7f6e (?<!exp) \u5339\u914d\u524d\u9762\u4e0d\u662fexp\u7684\u4f4d\u7f6e *? \u91cd\u590d\u4efb\u610f\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d a.*b a.*?b \u5c06\u6b63\u5219\u8868\u8fbe\u5f0f\u5e94\u7528\u4e8eaabab\uff0c\u524d\u8005\u4f1a\u5339\u914d\u6574\u4e2a\u5b57\u7b26\u4e32aabab\uff0c\u540e\u8005\u4f1a\u5339\u914daab\u548cab\u4e24\u4e2a\u5b57\u7b26\u4e32 +? \u91cd\u590d1\u6b21\u6216\u591a\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d ?? \u91cd\u590d0\u6b21\u62161\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {M,N}? \u91cd\u590dM\u5230N\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {M,}? \u91cd\u590dM\u6b21\u4ee5\u4e0a\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d \u8bf4\u660e\uff1a \u5982\u679c\u9700\u8981\u5339\u914d\u7684\u5b57\u7b26\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 \\ \u8fdb\u884c\u8f6c\u4e49\u5904\u7406\uff0c\u4f8b\u5982\u60f3\u5339\u914d\u5c0f\u6570\u70b9\u53ef\u4ee5\u5199\u6210 \\. \u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u76f4\u63a5\u5199 . \u4f1a\u5339\u914d\u4efb\u610f\u5b57\u7b26\uff1b\u540c\u7406\uff0c\u60f3\u5339\u914d\u5706\u62ec\u53f7\u5fc5\u987b\u5199\u6210 \\( \u548c \\) \uff0c\u5426\u5219\u5706\u62ec\u53f7\u88ab\u89c6\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u5206\u7ec4\u3002 Python\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u652f\u6301 Python\u63d0\u4f9b\u4e86 re \u6a21\u5757\u6765\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u64cd\u4f5c\uff0c\u4e0b\u9762\u662f re \u6a21\u5757\u4e2d\u7684\u6838\u5fc3\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e compile(pattern, flags=0) \u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\u8fd4\u56de\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61 match(pattern, string, flags=0) \u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5b57\u7b26\u4e32 \u6210\u529f\u8fd4\u56de\u5339\u914d\u5bf9\u8c61 \u5426\u5219\u8fd4\u56de None search(pattern, string, flags=0) \u641c\u7d22\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6a21\u5f0f \u6210\u529f\u8fd4\u56de\u5339\u914d\u5bf9\u8c61 \u5426\u5219\u8fd4\u56de None split(pattern, string, maxsplit=0, flags=0) \u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6307\u5b9a\u7684\u6a21\u5f0f\u5206\u9694\u7b26\u62c6\u5206\u5b57\u7b26\u4e32 \u8fd4\u56de\u5217\u8868 sub(pattern, repl, string, count=0, flags=0) \u7528\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u66ff\u6362\u539f\u5b57\u7b26\u4e32\u4e2d\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u53ef\u4ee5\u7528 count \u6307\u5b9a\u66ff\u6362\u7684\u6b21\u6570 fullmatch(pattern, string, flags=0) match \u51fd\u6570\u7684\u5b8c\u5168\u5339\u914d\uff08\u4ece\u5b57\u7b26\u4e32\u5f00\u5934\u5230\u7ed3\u5c3e\uff09\u7248\u672c findall(pattern, string, flags=0) \u67e5\u627e\u5b57\u7b26\u4e32\u6240\u6709\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u5217\u8868 finditer(pattern, string, flags=0) \u67e5\u627e\u5b57\u7b26\u4e32\u6240\u6709\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 purge() \u6e05\u9664\u9690\u5f0f\u7f16\u8bd1\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u7f13\u5b58 re.I / re.IGNORECASE \u5ffd\u7565\u5927\u5c0f\u5199\u5339\u914d\u6807\u8bb0 re.M / re.MULTILINE \u591a\u884c\u5339\u914d\u6807\u8bb0 \u8bf4\u660e\uff1a \u4e0a\u9762\u63d0\u5230\u7684 re \u6a21\u5757\u4e2d\u7684\u8fd9\u4e9b\u51fd\u6570\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u4e5f\u53ef\u4ee5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\uff08 Pattern \u5bf9\u8c61\uff09\u7684\u65b9\u6cd5\u66ff\u4ee3\u5bf9\u8fd9\u4e9b\u51fd\u6570\u7684\u4f7f\u7528\uff0c\u5982\u679c\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u9700\u8981\u91cd\u590d\u7684\u4f7f\u7528\uff0c\u90a3\u4e48\u5148\u901a\u8fc7 compile \u51fd\u6570\u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u521b\u5efa\u51fa\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\u65e0\u7591\u662f\u66f4\u4e3a\u660e\u667a\u7684\u9009\u62e9\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u4f8b\u5b50\u6765\u544a\u8bc9\u5927\u5bb6\u5728Python\u4e2d\u5982\u4f55\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u4f8b\u5b501\uff1a\u9a8c\u8bc1\u8f93\u5165\u7528\u6237\u540d\u548cQQ\u53f7\u662f\u5426\u6709\u6548\u5e76\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f\u3002 \"\"\" \u8981\u6c42\uff1a\u7528\u6237\u540d\u5fc5\u987b\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u6216\u4e0b\u5212\u7ebf\u6784\u6210\u4e14\u957f\u5ea6\u57286~20\u4e2a\u5b57\u7b26\u4e4b\u95f4\uff0cQQ\u53f7\u662f5~12\u7684\u6570\u5b57\u4e14\u9996\u4f4d\u4e0d\u80fd\u4e3a0 \"\"\" import re username = input ( '\u8bf7\u8f93\u5165\u7528\u6237\u540d: ' ) qq = input ( '\u8bf7\u8f93\u5165QQ\u53f7: ' ) # match\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u5b57\u7b26\u4e32\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61 # match\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u8ddf\u6b63\u5219\u8868\u8fbe\u5f0f\u505a\u5339\u914d\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61 m1 = re . match ( r '^[0-9a-zA-Z_]{6,20}$' , username ) if not m1 : print ( '\u8bf7\u8f93\u5165\u6709\u6548\u7684\u7528\u6237\u540d.' ) # fullmatch\u51fd\u6570\u8981\u6c42\u5b57\u7b26\u4e32\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u5b8c\u5168\u5339\u914d # \u6240\u4ee5\u6b63\u5219\u8868\u8fbe\u5f0f\u6ca1\u6709\u5199\u8d77\u59cb\u7b26\u548c\u7ed3\u675f\u7b26 m2 = re . fullmatch ( r '[1-9]\\d{4,11}' , qq ) if not m2 : print ( '\u8bf7\u8f93\u5165\u6709\u6548\u7684QQ\u53f7.' ) if m1 and m2 : print ( '\u4f60\u8f93\u5165\u7684\u4fe1\u606f\u662f\u6709\u6548\u7684!' ) \u63d0\u793a\uff1a \u4e0a\u9762\u5728\u4e66\u5199\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\u4f7f\u7528\u4e86\u201c\u539f\u59cb\u5b57\u7b26\u4e32\u201d\u7684\u5199\u6cd5\uff08\u5728\u5b57\u7b26\u4e32\u524d\u9762\u52a0\u4e0a\u4e86 r \uff09\uff0c\u6240\u8c13\u201c\u539f\u59cb\u5b57\u7b26\u4e32\u201d\u5c31\u662f\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u662f\u5b83\u539f\u59cb\u7684\u610f\u4e49\uff0c\u8bf4\u5f97\u66f4\u76f4\u63a5\u4e00\u70b9\u5c31\u662f\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u6240\u8c13\u7684\u8f6c\u4e49\u5b57\u7b26\u5566\u3002\u56e0\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u6709\u5f88\u591a\u5143\u5b57\u7b26\u548c\u9700\u8981\u8fdb\u884c\u8f6c\u4e49\u7684\u5730\u65b9\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u539f\u59cb\u5b57\u7b26\u4e32\u5c31\u9700\u8981\u5c06\u53cd\u659c\u6760\u5199\u4f5c \\\\ \uff0c\u4f8b\u5982\u8868\u793a\u6570\u5b57\u7684 \\d \u5f97\u4e66\u5199\u6210 \\\\d \uff0c\u8fd9\u6837\u4e0d\u4ec5\u5199\u8d77\u6765\u4e0d\u65b9\u4fbf\uff0c\u9605\u8bfb\u7684\u65f6\u5019\u4e5f\u4f1a\u5f88\u5403\u529b\u3002 \u4f8b\u5b502\uff1a\u4ece\u4e00\u6bb5\u6587\u5b57\u4e2d\u63d0\u53d6\u51fa\u56fd\u5185\u624b\u673a\u53f7\u7801\u3002 \u4e0b\u9762\u8fd9\u5f20\u56fe\u662f\u622a\u6b62\u52302017\u5e74\u5e95\uff0c\u56fd\u5185\u4e09\u5bb6\u8fd0\u8425\u5546\u63a8\u51fa\u7684\u624b\u673a\u53f7\u6bb5\u3002 import re # \u521b\u5efa\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\uff0c\u4f7f\u7528\u4e86\u524d\u77bb\u548c\u56de\u987e\u6765\u4fdd\u8bc1\u624b\u673a\u53f7\u524d\u540e\u4e0d\u5e94\u8be5\u518d\u51fa\u73b0\u6570\u5b57 pattern = re . compile ( r '(?<=\\D)1[34578]\\d {9} (?=\\D)' ) sentence = '''\u91cd\u8981\u7684\u4e8b\u60c5\u8bf48130123456789\u904d\uff0c\u6211\u7684\u624b\u673a\u53f7\u662f13512346789\u8fd9\u4e2a\u9753\u53f7\uff0c \u4e0d\u662f15600998765\uff0c\u4e5f\u662f110\u6216119\uff0c\u738b\u5927\u9524\u7684\u624b\u673a\u53f7\u624d\u662f15600998765\u3002''' # \u65b9\u6cd5\u4e00\uff1a\u67e5\u627e\u6240\u6709\u5339\u914d\u5e76\u4fdd\u5b58\u5230\u4e00\u4e2a\u5217\u8868\u4e2d tels_list = re . findall ( pattern , sentence ) for tel in tels_list : print ( tel ) print ( '--------\u534e\u4e3d\u7684\u5206\u9694\u7ebf--------' ) # \u65b9\u6cd5\u4e8c\uff1a\u901a\u8fc7\u8fed\u4ee3\u5668\u53d6\u51fa\u5339\u914d\u5bf9\u8c61\u5e76\u83b7\u5f97\u5339\u914d\u7684\u5185\u5bb9 for temp in pattern . finditer ( sentence ): print ( temp . group ()) print ( '--------\u534e\u4e3d\u7684\u5206\u9694\u7ebf--------' ) # \u65b9\u6cd5\u4e09\uff1a\u901a\u8fc7search\u51fd\u6570\u6307\u5b9a\u641c\u7d22\u4f4d\u7f6e\u627e\u51fa\u6240\u6709\u5339\u914d m = pattern . search ( sentence ) while m : print ( m . group ()) m = pattern . search ( sentence , m . end ()) \u8bf4\u660e\uff1a \u4e0a\u9762\u5339\u914d\u56fd\u5185\u624b\u673a\u53f7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u4e0d\u591f\u597d\uff0c\u56e0\u4e3a\u50cf14\u5f00\u5934\u7684\u53f7\u7801\u53ea\u6709145\u6216147\uff0c\u800c\u4e0a\u9762\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u6ca1\u6709\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\uff0c\u8981\u5339\u914d\u56fd\u5185\u624b\u673a\u53f7\uff0c\u66f4\u597d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5199\u6cd5\u662f\uff1a (?<=\\D)(1[38]\\d{9}|14[57]\\d{8}|15[0-35-9]\\d{8}|17[678]\\d{8})(?=\\D) \uff0c\u56fd\u5185\u597d\u50cf\u5df2\u7ecf\u670919\u548c16\u5f00\u5934\u7684\u624b\u673a\u53f7\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u6682\u65f6\u4e0d\u5728\u6211\u4eec\u8003\u8651\u4e4b\u5217\u3002 \u4f8b\u5b503\uff1a\u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u4e0d\u826f\u5185\u5bb9 import re sentence = 'Oh, shit! \u4f60\u662f\u50bb\u903c\u5417? Fuck you.' purified = re . sub ( 'fuck|shit|[\u50bb\u715e\u6c99][\u6bd4\u7b14\u903c\u53c9\u7f3a\u540a\u7889\u96d5]' , '*' , sentence , flags = re . IGNORECASE ) print ( purified ) # Oh, *! \u4f60\u662f*\u5417? * you. \u8bf4\u660e\uff1a re \u6a21\u5757\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u51fd\u6570\u4e2d\u90fd\u6709\u4e00\u4e2a flags \u53c2\u6570\uff0c\u5b83\u4ee3\u8868\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5339\u914d\u6807\u8bb0\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u6807\u8bb0\u6765\u6307\u5b9a\u5339\u914d\u65f6\u662f\u5426\u5ffd\u7565\u5927\u5c0f\u5199\u3001\u662f\u5426\u8fdb\u884c\u591a\u884c\u5339\u914d\u3001\u662f\u5426\u663e\u793a\u8c03\u8bd5\u4fe1\u606f\u7b49\u3002\u5982\u679c\u9700\u8981\u4e3aflags\u53c2\u6570\u6307\u5b9a\u591a\u4e2a\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528 \u6309\u4f4d\u6216\u8fd0\u7b97\u7b26 \u8fdb\u884c\u53e0\u52a0\uff0c\u5982 flags=re.I | re.M \u3002 \u4f8b\u5b504\uff1a\u62c6\u5206\u957f\u5b57\u7b26\u4e32 import re poem = '\u7a97\u524d\u660e\u6708\u5149\uff0c\u7591\u662f\u5730\u4e0a\u971c\u3002\u4e3e\u5934\u671b\u660e\u6708\uff0c\u4f4e\u5934\u601d\u6545\u4e61\u3002' sentences_list = re . split ( r '[\uff0c\u3002]' , poem ) sentences_list = [ sentence for sentence in sentences_list if sentence ] for sentence in sentences_list : print ( sentence ) \u7b80\u5355\u7684\u603b\u7ed3 \u6b63\u5219\u8868\u8fbe\u5f0f\u5728\u5b57\u7b26\u4e32\u7684\u5904\u7406\u548c\u5339\u914d\u4e0a\u771f\u7684\u975e\u5e38\u5f3a\u5927\uff0c\u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u611f\u53d7\u5230\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u9b45\u529b\uff0c\u5f53\u7136\u5199\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u65b0\u624b\u6765\u8bf4\u5e76\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\uff0c\u4f46\u662f\u5f88\u591a\u4e8b\u60c5\u90fd\u662f\u719f\u80fd\u751f\u5de7\uff0c\u5927\u80c6\u7684\u53bb\u5c1d\u8bd5\u5c31\u884c\u4e86\uff0c\u6709\u4e00\u4e2a\u5728\u7ebf\u7684 \u6b63\u5219\u8868\u8fbe\u5f0f\u6d4b\u8bd5\u5de5\u5177 \u76f8\u4fe1\u80fd\u591f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5e2e\u5230\u5927\u5bb6\u3002","title":"\u7b2c30\u8bfe\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5e94\u7528"},{"location":"%E7%AC%AC30%E8%AF%BE%EF%BC%9A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/#30","text":"","title":"\u7b2c30\u8bfe\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5e94\u7528"},{"location":"%E7%AC%AC30%E8%AF%BE%EF%BC%9A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/#_1","text":"\u5728\u7f16\u5199\u5904\u7406\u5b57\u7b26\u4e32\u7684\u7a0b\u65f6\uff0c\u7ecf\u5e38\u4f1a\u9047\u5230\u5728\u4e00\u6bb5\u6587\u672c\u4e2d\u67e5\u627e\u7b26\u5408\u67d0\u4e9b\u89c4\u5219\u7684\u5b57\u7b26\u4e32\u7684\u9700\u6c42\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u662f\u7528\u4e8e\u63cf\u8ff0\u8fd9\u4e9b\u89c4\u5219\u7684\u5de5\u5177\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u5b9a\u4e49\u5b57\u7b26\u4e32\u7684\u5339\u914d\u6a21\u5f0f\uff0c\u5373\u5982\u4f55\u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u6709\u8ddf\u67d0\u79cd\u6a21\u5f0f\u5339\u914d\u7684\u90e8\u5206\u6216\u8005\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5c06\u4e0e\u6a21\u5f0f\u5339\u914d\u7684\u90e8\u5206\u63d0\u53d6\u51fa\u6765\u6216\u8005\u66ff\u6362\u6389\u3002 \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u5728Windows\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4f7f\u7528\u8fc7\u6587\u4ef6\u67e5\u627e\u5e76\u4e14\u5728\u6307\u5b9a\u6587\u4ef6\u540d\u65f6\u4f7f\u7528\u8fc7\u901a\u914d\u7b26\uff08 * \u548c ? \uff09\uff0c\u90a3\u4e48\u6b63\u5219\u8868\u8fbe\u5f0f\u4e5f\u662f\u4e0e\u4e4b\u7c7b\u4f3c\u7684\u7528 \u6765\u8fdb\u884c\u6587\u672c\u5339\u914d\u7684\u5de5\u5177\uff0c\u53ea\u4e0d\u8fc7\u6bd4\u8d77\u901a\u914d\u7b26\u6b63\u5219\u8868\u8fbe\u5f0f\u66f4\u5f3a\u5927\uff0c\u5b83\u80fd\u66f4\u7cbe\u786e\u5730\u63cf\u8ff0\u4f60\u7684\u9700\u6c42\uff0c\u5f53\u7136\u4f60\u4ed8\u51fa\u7684\u4ee3\u4ef7\u662f\u4e66\u5199\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6bd4\u4f7f\u7528\u901a\u914d\u7b26\u8981\u590d\u6742\u5f97\u591a\uff0c\u56e0\u4e3a\u4efb\u4f55\u7ed9\u4f60\u5e26\u6765\u597d\u5904\u7684\u4e1c\u897f\u90fd\u9700\u8981\u4f60\u4ed8\u51fa\u5bf9\u5e94\u7684\u4ee3\u4ef7\u3002 \u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u4ece\u67d0\u4e2a\u5730\u65b9\uff08\u53ef\u80fd\u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u4e5f\u53ef\u80fd\u662f\u7f51\u7edc\u4e0a\u7684\u4e00\u5219\u65b0\u95fb\uff09\u83b7\u5f97\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e0c\u671b\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u624b\u673a\u53f7\u548c\u5ea7\u673a\u53f7\u3002\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u8bbe\u5b9a\u624b\u673a\u53f7\u662f11\u4f4d\u7684\u6570\u5b57\uff08\u6ce8\u610f\u5e76\u4e0d\u662f\u968f\u673a\u768411\u4f4d\u6570\u5b57\uff0c\u56e0\u4e3a\u4f60\u6ca1\u6709\u89c1\u8fc7\u201c25012345678\u201d\u8fd9\u6837\u7684\u624b\u673a\u53f7\uff09\uff0c\u800c\u5ea7\u673a\u53f7\u5219\u662f\u7c7b\u4f3c\u4e8e\u201c\u533a\u53f7-\u53f7\u7801\u201d\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u8981\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u5c31\u4f1a\u6bd4\u8f83\u9ebb\u70e6\u3002\u6700\u521d\u8ba1\u7b97\u673a\u662f\u4e3a\u4e86\u505a\u6570\u5b66\u8fd0\u7b97\u800c\u8bde\u751f\u7684\uff0c\u5904\u7406\u7684\u4fe1\u606f\u57fa\u672c\u4e0a\u90fd\u662f\u6570\u503c\uff0c\u800c\u4eca\u5929\u6211\u4eec\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u5904\u7406\u7684\u4fe1\u606f\u5f88\u591a\u90fd\u662f\u6587\u672c\u6570\u636e\uff0c\u6211\u4eec\u5e0c\u671b\u8ba1\u7b97\u673a\u80fd\u591f\u8bc6\u522b\u548c\u5904\u7406\u7b26\u5408\u67d0\u4e9b\u6a21\u5f0f\u7684\u6587\u672c\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u663e\u5f97\u975e\u5e38\u91cd\u8981\u4e86\u3002\u4eca\u5929\u51e0\u4e4e\u6240\u6709\u7684\u7f16\u7a0b\u8bed\u8a00\u90fd\u63d0\u4f9b\u4e86\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u7684\u652f\u6301\uff0cPython\u901a\u8fc7\u6807\u51c6\u5e93\u4e2d\u7684 re \u6a21\u5757\u6765\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\u3002 \u5173\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5927\u5bb6\u53ef\u4ee5\u9605\u8bfb\u4e00\u7bc7\u975e\u5e38\u6709\u540d\u7684\u535a\u6587\u53eb \u300a\u6b63\u5219\u8868\u8fbe\u5f0f30\u5206\u949f\u5165\u95e8\u6559\u7a0b\u300b \uff0c\u8bfb\u5b8c\u8fd9\u7bc7\u6587\u7ae0\u540e\u4f60\u5c31\u53ef\u4ee5\u770b\u61c2\u4e0b\u9762\u7684\u8868\u683c\uff0c\u8fd9\u662f\u6211\u4eec\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u4e00\u4e9b\u57fa\u672c\u7b26\u53f7\u8fdb\u884c\u7684\u627c\u8981\u603b\u7ed3\u3002 \u7b26\u53f7 \u89e3\u91ca \u793a\u4f8b \u8bf4\u660e . \u5339\u914d\u4efb\u610f\u5b57\u7b26 b.t \u53ef\u4ee5\u5339\u914dbat / but / b#t / b1t\u7b49 \\w \u5339\u914d\u5b57\u6bcd/\u6570\u5b57/\u4e0b\u5212\u7ebf b\\wt \u53ef\u4ee5\u5339\u914dbat / b1t / b_t\u7b49 \u4f46\u4e0d\u80fd\u5339\u914db#t \\s \u5339\u914d\u7a7a\u767d\u5b57\u7b26\uff08\u5305\u62ec\\r\u3001\\n\u3001\\t\u7b49\uff09 love\\syou \u53ef\u4ee5\u5339\u914dlove you \\d \u5339\u914d\u6570\u5b57 \\d\\d \u53ef\u4ee5\u5339\u914d01 / 23 / 99\u7b49 \\b \u5339\u914d\u5355\u8bcd\u7684\u8fb9\u754c \\bThe\\b ^ \u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f00\u59cb ^The \u53ef\u4ee5\u5339\u914dThe\u5f00\u5934\u7684\u5b57\u7b26\u4e32 $ \u5339\u914d\u5b57\u7b26\u4e32\u7684\u7ed3\u675f .exe$ \u53ef\u4ee5\u5339\u914d.exe\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32 \\W \u5339\u914d\u975e\u5b57\u6bcd/\u6570\u5b57/\u4e0b\u5212\u7ebf b\\Wt \u53ef\u4ee5\u5339\u914db#t / b@t\u7b49 \u4f46\u4e0d\u80fd\u5339\u914dbut / b1t / b_t\u7b49 \\S \u5339\u914d\u975e\u7a7a\u767d\u5b57\u7b26 love\\Syou \u53ef\u4ee5\u5339\u914dlove#you\u7b49 \u4f46\u4e0d\u80fd\u5339\u914dlove you \\D \u5339\u914d\u975e\u6570\u5b57 \\d\\D \u53ef\u4ee5\u5339\u914d9a / 3# / 0F\u7b49 \\B \u5339\u914d\u975e\u5355\u8bcd\u8fb9\u754c \\Bio\\B [] \u5339\u914d\u6765\u81ea\u5b57\u7b26\u96c6\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [aeiou] \u53ef\u4ee5\u5339\u914d\u4efb\u4e00\u5143\u97f3\u5b57\u6bcd\u5b57\u7b26 [^] \u5339\u914d\u4e0d\u5728\u5b57\u7b26\u96c6\u4e2d\u7684\u4efb\u610f\u5355\u4e00\u5b57\u7b26 [^aeiou] \u53ef\u4ee5\u5339\u914d\u4efb\u4e00\u975e\u5143\u97f3\u5b57\u6bcd\u5b57\u7b26 * \u5339\u914d0\u6b21\u6216\u591a\u6b21 \\w* + \u5339\u914d1\u6b21\u6216\u591a\u6b21 \\w+ ? \u5339\u914d0\u6b21\u62161\u6b21 \\w? {N} \u5339\u914dN\u6b21 \\w{3} {M,} \u5339\u914d\u81f3\u5c11M\u6b21 \\w{3,} {M,N} \u5339\u914d\u81f3\u5c11M\u6b21\u81f3\u591aN\u6b21 \\w{3,6} | \u5206\u652f foo|bar \u53ef\u4ee5\u5339\u914dfoo\u6216\u8005bar (?#) \u6ce8\u91ca (exp) \u5339\u914dexp\u5e76\u6355\u83b7\u5230\u81ea\u52a8\u547d\u540d\u7684\u7ec4\u4e2d (?<name>exp) \u5339\u914dexp\u5e76\u6355\u83b7\u5230\u540d\u4e3aname\u7684\u7ec4\u4e2d (?:exp) \u5339\u914dexp\u4f46\u662f\u4e0d\u6355\u83b7\u5339\u914d\u7684\u6587\u672c (?=exp) \u5339\u914dexp\u524d\u9762\u7684\u4f4d\u7f6e \\b\\w+(?=ing) \u53ef\u4ee5\u5339\u914dI'm dancing\u4e2d\u7684danc (?<=exp) \u5339\u914dexp\u540e\u9762\u7684\u4f4d\u7f6e (?<=\\bdanc)\\w+\\b \u53ef\u4ee5\u5339\u914dI love dancing and reading\u4e2d\u7684\u7b2c\u4e00\u4e2aing (?!exp) \u5339\u914d\u540e\u9762\u4e0d\u662fexp\u7684\u4f4d\u7f6e (?<!exp) \u5339\u914d\u524d\u9762\u4e0d\u662fexp\u7684\u4f4d\u7f6e *? \u91cd\u590d\u4efb\u610f\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d a.*b a.*?b \u5c06\u6b63\u5219\u8868\u8fbe\u5f0f\u5e94\u7528\u4e8eaabab\uff0c\u524d\u8005\u4f1a\u5339\u914d\u6574\u4e2a\u5b57\u7b26\u4e32aabab\uff0c\u540e\u8005\u4f1a\u5339\u914daab\u548cab\u4e24\u4e2a\u5b57\u7b26\u4e32 +? \u91cd\u590d1\u6b21\u6216\u591a\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d ?? \u91cd\u590d0\u6b21\u62161\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {M,N}? \u91cd\u590dM\u5230N\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {M,}? \u91cd\u590dM\u6b21\u4ee5\u4e0a\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d \u8bf4\u660e\uff1a \u5982\u679c\u9700\u8981\u5339\u914d\u7684\u5b57\u7b26\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 \\ \u8fdb\u884c\u8f6c\u4e49\u5904\u7406\uff0c\u4f8b\u5982\u60f3\u5339\u914d\u5c0f\u6570\u70b9\u53ef\u4ee5\u5199\u6210 \\. \u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u76f4\u63a5\u5199 . \u4f1a\u5339\u914d\u4efb\u610f\u5b57\u7b26\uff1b\u540c\u7406\uff0c\u60f3\u5339\u914d\u5706\u62ec\u53f7\u5fc5\u987b\u5199\u6210 \\( \u548c \\) \uff0c\u5426\u5219\u5706\u62ec\u53f7\u88ab\u89c6\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u5206\u7ec4\u3002","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u77e5\u8bc6"},{"location":"%E7%AC%AC30%E8%AF%BE%EF%BC%9A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/#python","text":"Python\u63d0\u4f9b\u4e86 re \u6a21\u5757\u6765\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u64cd\u4f5c\uff0c\u4e0b\u9762\u662f re \u6a21\u5757\u4e2d\u7684\u6838\u5fc3\u51fd\u6570\u3002 \u51fd\u6570 \u8bf4\u660e compile(pattern, flags=0) \u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\u8fd4\u56de\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61 match(pattern, string, flags=0) \u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5b57\u7b26\u4e32 \u6210\u529f\u8fd4\u56de\u5339\u914d\u5bf9\u8c61 \u5426\u5219\u8fd4\u56de None search(pattern, string, flags=0) \u641c\u7d22\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6a21\u5f0f \u6210\u529f\u8fd4\u56de\u5339\u914d\u5bf9\u8c61 \u5426\u5219\u8fd4\u56de None split(pattern, string, maxsplit=0, flags=0) \u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6307\u5b9a\u7684\u6a21\u5f0f\u5206\u9694\u7b26\u62c6\u5206\u5b57\u7b26\u4e32 \u8fd4\u56de\u5217\u8868 sub(pattern, repl, string, count=0, flags=0) \u7528\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u66ff\u6362\u539f\u5b57\u7b26\u4e32\u4e2d\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u53ef\u4ee5\u7528 count \u6307\u5b9a\u66ff\u6362\u7684\u6b21\u6570 fullmatch(pattern, string, flags=0) match \u51fd\u6570\u7684\u5b8c\u5168\u5339\u914d\uff08\u4ece\u5b57\u7b26\u4e32\u5f00\u5934\u5230\u7ed3\u5c3e\uff09\u7248\u672c findall(pattern, string, flags=0) \u67e5\u627e\u5b57\u7b26\u4e32\u6240\u6709\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u5217\u8868 finditer(pattern, string, flags=0) \u67e5\u627e\u5b57\u7b26\u4e32\u6240\u6709\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6a21\u5f0f \u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 purge() \u6e05\u9664\u9690\u5f0f\u7f16\u8bd1\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u7f13\u5b58 re.I / re.IGNORECASE \u5ffd\u7565\u5927\u5c0f\u5199\u5339\u914d\u6807\u8bb0 re.M / re.MULTILINE \u591a\u884c\u5339\u914d\u6807\u8bb0 \u8bf4\u660e\uff1a \u4e0a\u9762\u63d0\u5230\u7684 re \u6a21\u5757\u4e2d\u7684\u8fd9\u4e9b\u51fd\u6570\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u4e5f\u53ef\u4ee5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\uff08 Pattern \u5bf9\u8c61\uff09\u7684\u65b9\u6cd5\u66ff\u4ee3\u5bf9\u8fd9\u4e9b\u51fd\u6570\u7684\u4f7f\u7528\uff0c\u5982\u679c\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u9700\u8981\u91cd\u590d\u7684\u4f7f\u7528\uff0c\u90a3\u4e48\u5148\u901a\u8fc7 compile \u51fd\u6570\u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u521b\u5efa\u51fa\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\u65e0\u7591\u662f\u66f4\u4e3a\u660e\u667a\u7684\u9009\u62e9\u3002 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u4f8b\u5b50\u6765\u544a\u8bc9\u5927\u5bb6\u5728Python\u4e2d\u5982\u4f55\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u3002","title":"Python\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u652f\u6301"},{"location":"%E7%AC%AC30%E8%AF%BE%EF%BC%9A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/#1qq","text":"\"\"\" \u8981\u6c42\uff1a\u7528\u6237\u540d\u5fc5\u987b\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u6216\u4e0b\u5212\u7ebf\u6784\u6210\u4e14\u957f\u5ea6\u57286~20\u4e2a\u5b57\u7b26\u4e4b\u95f4\uff0cQQ\u53f7\u662f5~12\u7684\u6570\u5b57\u4e14\u9996\u4f4d\u4e0d\u80fd\u4e3a0 \"\"\" import re username = input ( '\u8bf7\u8f93\u5165\u7528\u6237\u540d: ' ) qq = input ( '\u8bf7\u8f93\u5165QQ\u53f7: ' ) # match\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u5b57\u7b26\u4e32\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61 # match\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u8ddf\u6b63\u5219\u8868\u8fbe\u5f0f\u505a\u5339\u914d\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61 m1 = re . match ( r '^[0-9a-zA-Z_]{6,20}$' , username ) if not m1 : print ( '\u8bf7\u8f93\u5165\u6709\u6548\u7684\u7528\u6237\u540d.' ) # fullmatch\u51fd\u6570\u8981\u6c42\u5b57\u7b26\u4e32\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u5b8c\u5168\u5339\u914d # \u6240\u4ee5\u6b63\u5219\u8868\u8fbe\u5f0f\u6ca1\u6709\u5199\u8d77\u59cb\u7b26\u548c\u7ed3\u675f\u7b26 m2 = re . fullmatch ( r '[1-9]\\d{4,11}' , qq ) if not m2 : print ( '\u8bf7\u8f93\u5165\u6709\u6548\u7684QQ\u53f7.' ) if m1 and m2 : print ( '\u4f60\u8f93\u5165\u7684\u4fe1\u606f\u662f\u6709\u6548\u7684!' ) \u63d0\u793a\uff1a \u4e0a\u9762\u5728\u4e66\u5199\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\u4f7f\u7528\u4e86\u201c\u539f\u59cb\u5b57\u7b26\u4e32\u201d\u7684\u5199\u6cd5\uff08\u5728\u5b57\u7b26\u4e32\u524d\u9762\u52a0\u4e0a\u4e86 r \uff09\uff0c\u6240\u8c13\u201c\u539f\u59cb\u5b57\u7b26\u4e32\u201d\u5c31\u662f\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u662f\u5b83\u539f\u59cb\u7684\u610f\u4e49\uff0c\u8bf4\u5f97\u66f4\u76f4\u63a5\u4e00\u70b9\u5c31\u662f\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u6240\u8c13\u7684\u8f6c\u4e49\u5b57\u7b26\u5566\u3002\u56e0\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u6709\u5f88\u591a\u5143\u5b57\u7b26\u548c\u9700\u8981\u8fdb\u884c\u8f6c\u4e49\u7684\u5730\u65b9\uff0c\u5982\u679c\u4e0d\u4f7f\u7528\u539f\u59cb\u5b57\u7b26\u4e32\u5c31\u9700\u8981\u5c06\u53cd\u659c\u6760\u5199\u4f5c \\\\ \uff0c\u4f8b\u5982\u8868\u793a\u6570\u5b57\u7684 \\d \u5f97\u4e66\u5199\u6210 \\\\d \uff0c\u8fd9\u6837\u4e0d\u4ec5\u5199\u8d77\u6765\u4e0d\u65b9\u4fbf\uff0c\u9605\u8bfb\u7684\u65f6\u5019\u4e5f\u4f1a\u5f88\u5403\u529b\u3002","title":"\u4f8b\u5b501\uff1a\u9a8c\u8bc1\u8f93\u5165\u7528\u6237\u540d\u548cQQ\u53f7\u662f\u5426\u6709\u6548\u5e76\u7ed9\u51fa\u5bf9\u5e94\u7684\u63d0\u793a\u4fe1\u606f\u3002"},{"location":"%E7%AC%AC30%E8%AF%BE%EF%BC%9A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/#2","text":"\u4e0b\u9762\u8fd9\u5f20\u56fe\u662f\u622a\u6b62\u52302017\u5e74\u5e95\uff0c\u56fd\u5185\u4e09\u5bb6\u8fd0\u8425\u5546\u63a8\u51fa\u7684\u624b\u673a\u53f7\u6bb5\u3002 import re # \u521b\u5efa\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\uff0c\u4f7f\u7528\u4e86\u524d\u77bb\u548c\u56de\u987e\u6765\u4fdd\u8bc1\u624b\u673a\u53f7\u524d\u540e\u4e0d\u5e94\u8be5\u518d\u51fa\u73b0\u6570\u5b57 pattern = re . compile ( r '(?<=\\D)1[34578]\\d {9} (?=\\D)' ) sentence = '''\u91cd\u8981\u7684\u4e8b\u60c5\u8bf48130123456789\u904d\uff0c\u6211\u7684\u624b\u673a\u53f7\u662f13512346789\u8fd9\u4e2a\u9753\u53f7\uff0c \u4e0d\u662f15600998765\uff0c\u4e5f\u662f110\u6216119\uff0c\u738b\u5927\u9524\u7684\u624b\u673a\u53f7\u624d\u662f15600998765\u3002''' # \u65b9\u6cd5\u4e00\uff1a\u67e5\u627e\u6240\u6709\u5339\u914d\u5e76\u4fdd\u5b58\u5230\u4e00\u4e2a\u5217\u8868\u4e2d tels_list = re . findall ( pattern , sentence ) for tel in tels_list : print ( tel ) print ( '--------\u534e\u4e3d\u7684\u5206\u9694\u7ebf--------' ) # \u65b9\u6cd5\u4e8c\uff1a\u901a\u8fc7\u8fed\u4ee3\u5668\u53d6\u51fa\u5339\u914d\u5bf9\u8c61\u5e76\u83b7\u5f97\u5339\u914d\u7684\u5185\u5bb9 for temp in pattern . finditer ( sentence ): print ( temp . group ()) print ( '--------\u534e\u4e3d\u7684\u5206\u9694\u7ebf--------' ) # \u65b9\u6cd5\u4e09\uff1a\u901a\u8fc7search\u51fd\u6570\u6307\u5b9a\u641c\u7d22\u4f4d\u7f6e\u627e\u51fa\u6240\u6709\u5339\u914d m = pattern . search ( sentence ) while m : print ( m . group ()) m = pattern . search ( sentence , m . end ()) \u8bf4\u660e\uff1a \u4e0a\u9762\u5339\u914d\u56fd\u5185\u624b\u673a\u53f7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u4e0d\u591f\u597d\uff0c\u56e0\u4e3a\u50cf14\u5f00\u5934\u7684\u53f7\u7801\u53ea\u6709145\u6216147\uff0c\u800c\u4e0a\u9762\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5e76\u6ca1\u6709\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\uff0c\u8981\u5339\u914d\u56fd\u5185\u624b\u673a\u53f7\uff0c\u66f4\u597d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5199\u6cd5\u662f\uff1a (?<=\\D)(1[38]\\d{9}|14[57]\\d{8}|15[0-35-9]\\d{8}|17[678]\\d{8})(?=\\D) \uff0c\u56fd\u5185\u597d\u50cf\u5df2\u7ecf\u670919\u548c16\u5f00\u5934\u7684\u624b\u673a\u53f7\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u6682\u65f6\u4e0d\u5728\u6211\u4eec\u8003\u8651\u4e4b\u5217\u3002","title":"\u4f8b\u5b502\uff1a\u4ece\u4e00\u6bb5\u6587\u5b57\u4e2d\u63d0\u53d6\u51fa\u56fd\u5185\u624b\u673a\u53f7\u7801\u3002"},{"location":"%E7%AC%AC30%E8%AF%BE%EF%BC%9A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/#3","text":"import re sentence = 'Oh, shit! \u4f60\u662f\u50bb\u903c\u5417? Fuck you.' purified = re . sub ( 'fuck|shit|[\u50bb\u715e\u6c99][\u6bd4\u7b14\u903c\u53c9\u7f3a\u540a\u7889\u96d5]' , '*' , sentence , flags = re . IGNORECASE ) print ( purified ) # Oh, *! \u4f60\u662f*\u5417? * you. \u8bf4\u660e\uff1a re \u6a21\u5757\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u5173\u51fd\u6570\u4e2d\u90fd\u6709\u4e00\u4e2a flags \u53c2\u6570\uff0c\u5b83\u4ee3\u8868\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5339\u914d\u6807\u8bb0\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u6807\u8bb0\u6765\u6307\u5b9a\u5339\u914d\u65f6\u662f\u5426\u5ffd\u7565\u5927\u5c0f\u5199\u3001\u662f\u5426\u8fdb\u884c\u591a\u884c\u5339\u914d\u3001\u662f\u5426\u663e\u793a\u8c03\u8bd5\u4fe1\u606f\u7b49\u3002\u5982\u679c\u9700\u8981\u4e3aflags\u53c2\u6570\u6307\u5b9a\u591a\u4e2a\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528 \u6309\u4f4d\u6216\u8fd0\u7b97\u7b26 \u8fdb\u884c\u53e0\u52a0\uff0c\u5982 flags=re.I | re.M \u3002","title":"\u4f8b\u5b503\uff1a\u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u4e0d\u826f\u5185\u5bb9"},{"location":"%E7%AC%AC30%E8%AF%BE%EF%BC%9A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/#4","text":"import re poem = '\u7a97\u524d\u660e\u6708\u5149\uff0c\u7591\u662f\u5730\u4e0a\u971c\u3002\u4e3e\u5934\u671b\u660e\u6708\uff0c\u4f4e\u5934\u601d\u6545\u4e61\u3002' sentences_list = re . split ( r '[\uff0c\u3002]' , poem ) sentences_list = [ sentence for sentence in sentences_list if sentence ] for sentence in sentences_list : print ( sentence )","title":"\u4f8b\u5b504\uff1a\u62c6\u5206\u957f\u5b57\u7b26\u4e32"},{"location":"%E7%AC%AC30%E8%AF%BE%EF%BC%9A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/#_2","text":"\u6b63\u5219\u8868\u8fbe\u5f0f\u5728\u5b57\u7b26\u4e32\u7684\u5904\u7406\u548c\u5339\u914d\u4e0a\u771f\u7684\u975e\u5e38\u5f3a\u5927\uff0c\u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u611f\u53d7\u5230\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u9b45\u529b\uff0c\u5f53\u7136\u5199\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u65b0\u624b\u6765\u8bf4\u5e76\u4e0d\u662f\u90a3\u4e48\u5bb9\u6613\uff0c\u4f46\u662f\u5f88\u591a\u4e8b\u60c5\u90fd\u662f\u719f\u80fd\u751f\u5de7\uff0c\u5927\u80c6\u7684\u53bb\u5c1d\u8bd5\u5c31\u884c\u4e86\uff0c\u6709\u4e00\u4e2a\u5728\u7ebf\u7684 \u6b63\u5219\u8868\u8fbe\u5f0f\u6d4b\u8bd5\u5de5\u5177 \u76f8\u4fe1\u80fd\u591f\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5e2e\u5230\u5927\u5bb6\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC31%E8%AF%BE%EF%BC%9A%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%A6%82%E8%BF%B0/","text":"\u7b2c31\u8bfe\uff1a\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u6982\u8ff0 \u722c\u866b\uff08crawler\uff09\u4e5f\u7ecf\u5e38\u88ab\u79f0\u4e3a\u7f51\u7edc\u8718\u86db\uff08spider\uff09\uff0c\u662f\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5219\u81ea\u52a8\u6d4f\u89c8\u7f51\u7ad9\u5e76\u83b7\u53d6\u6240\u9700\u4fe1\u606f\u7684\u673a\u5668\u4eba\u7a0b\u5e8f\uff08\u81ea\u52a8\u5316\u811a\u672c\u4ee3\u7801\uff09\uff0c\u88ab\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u4e92\u8054\u7f51\u641c\u7d22\u5f15\u64ce\u548c\u6570\u636e\u91c7\u96c6\u3002\u4f7f\u7528\u8fc7\u4e92\u8054\u7f51\u548c\u6d4f\u89c8\u5668\u7684\u4eba\u90fd\u77e5\u9053\uff0c\u7f51\u9875\u4e2d\u9664\u4e86\u4f9b\u7528\u6237\u9605\u8bfb\u7684\u6587\u5b57\u4fe1\u606f\u4e4b\u5916\uff0c\u8fd8\u5305\u542b\u4e00\u4e9b\u8d85\u94fe\u63a5\uff0c\u7f51\u7edc\u722c\u866b\u6b63\u662f\u901a\u8fc7\u7f51\u9875\u4e2d\u7684\u8d85\u94fe\u63a5\u4fe1\u606f\uff0c\u4e0d\u65ad\u83b7\u5f97\u7f51\u7edc\u4e0a\u5176\u5b83\u9875\u9762\u7684\u5730\u5740\uff0c\u7136\u540e\u6301\u7eed\u7684\u8fdb\u884c\u6570\u636e\u91c7\u96c6\u3002\u6b63\u56e0\u5982\u6b64\uff0c\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u7684\u8fc7\u7a0b\u5c31\u50cf\u4e00\u4e2a\u722c\u866b\u6216\u8005\u8718\u86db\u5728\u7f51\u7edc\u4e0a\u6f2b\u6e38\uff0c\u6240\u4ee5\u624d\u88ab\u5f62\u8c61\u7684\u79f0\u4e3a\u722c\u866b\u6216\u8005\u7f51\u7edc\u8718\u86db\u3002 \u722c\u866b\u7684\u5e94\u7528\u9886\u57df \u5728\u7406\u60f3\u7684\u72b6\u6001\u4e0b\uff0c\u6240\u6709 ICP\uff08Internet Content Provider\uff09\u90fd\u5e94\u8be5\u4e3a\u81ea\u5df1\u7684\u7f51\u7ad9\u63d0\u4f9b API \u63a5\u53e3\u6765\u5171\u4eab\u5b83\u4eec\u5141\u8bb8\u5176\u4ed6\u7a0b\u5e8f\u83b7\u53d6\u7684\u6570\u636e\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5c31\u6839\u672c\u4e0d\u9700\u8981\u722c\u866b\u7a0b\u5e8f\u3002\u56fd\u5185\u6bd4\u8f83\u6709\u540d\u7684\u7535\u5546\u5e73\u53f0\uff08\u5982\u6dd8\u5b9d\u3001\u4eac\u4e1c\u7b49\uff09\u3001\u793e\u4ea4\u5e73\u53f0\uff08\u5982\u5fae\u535a\u3001\u5fae\u4fe1\u7b49\uff09\u7b49\u90fd\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684 API \u63a5\u53e3\uff0c\u4f46\u662f\u8fd9\u7c7b API \u63a5\u53e3\u901a\u5e38\u4f1a\u5bf9\u53ef\u4ee5\u6293\u53d6\u7684\u6570\u636e\u4ee5\u53ca\u6293\u53d6\u6570\u636e\u7684\u9891\u7387\u8fdb\u884c\u9650\u5236\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7684\u516c\u53f8\u800c\u8a00\uff0c\u53ca\u65f6\u7684\u83b7\u53d6\u884c\u4e1a\u6570\u636e\u548c\u7ade\u5bf9\u6570\u636e\u662f\u4f01\u4e1a\u751f\u5b58\u7684\u91cd\u8981\u73af\u8282\u4e4b\u4e00\uff0c\u7136\u800c\u5bf9\u5927\u90e8\u5206\u4f01\u4e1a\u6765\u8bf4\uff0c\u6570\u636e\u90fd\u662f\u5176\u4e0e\u751f\u4ff1\u6765\u7684\u77ed\u677f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5408\u7406\u7684\u5229\u7528\u722c\u866b\u6765\u83b7\u53d6\u6570\u636e\u5e76\u4ece\u4e2d\u63d0\u53d6\u51fa\u6709\u5546\u4e1a\u4ef7\u503c\u7684\u4fe1\u606f\u5bf9\u8fd9\u4e9b\u4f01\u4e1a\u6765\u8bf4\u5c31\u663e\u5f97\u81f3\u5173\u91cd\u8981\u7684\u3002 \u722c\u866b\u7684\u5e94\u7528\u9886\u57df\u5176\u5b9e\u975e\u5e38\u5e7f\u6cdb\uff0c\u4e0b\u9762\u6211\u4eec\u5217\u4e3e\u4e86\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u63a2\u7d22\u76f8\u5173\u5185\u5bb9\u3002 \u641c\u7d22\u5f15\u64ce \u65b0\u95fb\u805a\u5408 \u793e\u4ea4\u5e94\u7528 \u8206\u60c5\u76d1\u63a7 \u884c\u4e1a\u6570\u636e \u722c\u866b\u5408\u6cd5\u6027\u63a2\u8ba8 \u7ecf\u5e38\u542c\u4eba\u8bf4\u8d77\u201c\u722c\u866b\u5199\u5f97\u597d\uff0c\u7262\u996d\u5403\u5230\u9971\u201d\uff0c\u90a3\u4e48\u7f16\u7a0b\u722c\u866b\u7a0b\u5e8f\u662f\u5426\u8fdd\u6cd5\u5462\uff1f\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u51e0\u4e2a\u89d2\u5ea6\u8fdb\u884c\u89e3\u8bfb\u3002 \u7f51\u7edc\u722c\u866b\u8fd9\u4e2a\u9886\u57df\u76ee\u524d\u8fd8\u5c5e\u4e8e\u62d3\u8352\u9636\u6bb5\uff0c\u867d\u7136\u4e92\u8054\u7f51\u4e16\u754c\u5df2\u7ecf\u901a\u8fc7\u81ea\u5df1\u7684\u6e38\u620f\u89c4\u5219\u5efa\u7acb\u8d77\u4e86\u4e00\u5b9a\u7684\u9053\u5fb7\u89c4\u8303\uff0c\u5373 Robots \u534f\u8bae\uff08\u5168\u79f0\u662f\u201c\u7f51\u7edc\u722c\u866b\u6392\u9664\u6807\u51c6\u201d\uff09\uff0c\u4f46\u6cd5\u5f8b\u90e8\u5206\u8fd8\u5728\u5efa\u7acb\u548c\u5b8c\u5584\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u73b0\u5728\u8fd9\u4e2a\u9886\u57df\u6682\u65f6\u8fd8\u662f\u7070\u8272\u5730\u5e26\u3002 \u201c\u6cd5\u4e0d\u7981\u6b62\u5373\u4e3a\u8bb8\u53ef\u201d\uff0c\u5982\u679c\u722c\u866b\u5c31\u50cf\u6d4f\u89c8\u5668\u4e00\u6837\u83b7\u53d6\u7684\u662f\u524d\u7aef\u663e\u793a\u7684\u6570\u636e\uff08\u7f51\u9875\u4e0a\u7684\u516c\u5f00\u4fe1\u606f\uff09\u800c\u4e0d\u662f\u7f51\u7ad9\u540e\u53f0\u7684\u79c1\u5bc6\u654f\u611f\u4fe1\u606f\uff0c\u5c31\u4e0d\u592a\u62c5\u5fc3\u6cd5\u5f8b\u6cd5\u89c4\u7684\u7ea6\u675f\uff0c\u56e0\u4e3a\u76ee\u524d\u5927\u6570\u636e\u4ea7\u4e1a\u94fe\u7684\u53d1\u5c55\u901f\u5ea6\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u6cd5\u5f8b\u7684\u5b8c\u5584\u7a0b\u5ea6\u3002 \u5728\u722c\u53d6\u7f51\u7ad9\u7684\u65f6\u5019\uff0c\u9700\u8981\u9650\u5236\u81ea\u5df1\u7684\u722c\u866b\u9075\u5b88 Robots \u534f\u8bae\uff0c\u540c\u65f6\u63a7\u5236\u7f51\u7edc\u722c\u866b\u7a0b\u5e8f\u7684\u6293\u53d6\u6570\u636e\u7684\u901f\u5ea6\uff1b\u5728\u4f7f\u7528\u6570\u636e\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u8981\u5c0a\u91cd\u7f51\u7ad9\u7684\u77e5\u8bc6\u4ea7\u6743\uff08\u4eceWeb 2.0\u65f6\u4ee3\u5f00\u59cb\uff0c\u867d\u7136Web\u4e0a\u7684\u6570\u636e\u5f88\u591a\u90fd\u662f\u7531\u7528\u6237\u63d0\u4f9b\u7684\uff0c\u4f46\u662f\u7f51\u7ad9\u5e73\u53f0\u662f\u6295\u5165\u4e86\u8fd0\u8425\u6210\u672c\u7684\uff0c\u5f53\u7528\u6237\u5728\u6ce8\u518c\u548c\u53d1\u5e03\u5185\u5bb9\u65f6\uff0c\u5e73\u53f0\u901a\u5e38\u5c31\u5df2\u7ecf\u83b7\u5f97\u4e86\u5bf9\u6570\u636e\u7684\u6240\u6709\u6743\u3001\u4f7f\u7528\u6743\u548c\u5206\u53d1\u6743\uff09\u3002\u5982\u679c\u8fdd\u53cd\u4e86\u8fd9\u4e9b\u89c4\u5b9a\uff0c\u5728\u6253\u5b98\u53f8\u7684\u65f6\u5019\u8d25\u8bc9\u51e0\u7387\u76f8\u5f53\u9ad8\u3002 \u9002\u5f53\u7684\u9690\u533f\u81ea\u5df1\u7684\u8eab\u4efd\u5728\u7f16\u5199\u722c\u866b\u7a0b\u5e8f\u65f6\u5fc5\u8981\u7684\uff0c\u800c\u4e14\u6700\u597d\u4e0d\u8981\u88ab\u5bf9\u65b9\u4e3e\u8bc1\u4f60\u7684\u722c\u866b\u6709\u7834\u574f\u522b\u4eba\u52a8\u4ea7\uff08\u4f8b\u5982\u670d\u52a1\u5668\uff09\u7684\u884c\u4e3a\u3002 \u4e0d\u8981\u5728\u516c\u7f51\uff08\u5982\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\uff09\u4e0a\u53bb\u5f00\u6e90\u6216\u8005\u5c55\u793a\u4f60\u7684\u722c\u866b\u4ee3\u7801\uff0c\u8fd9\u4e9b\u884c\u4e3a\u901a\u5e38\u4f1a\u7ed9\u81ea\u5df1\u5e26\u6765\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002 Robots\u534f\u8bae \u5927\u591a\u6570\u7f51\u7ad9\u90fd\u4f1a\u5b9a\u4e49 robots.txt \u6587\u4ef6\uff0c\u8fd9\u662f\u4e00\u4e2a\u541b\u5b50\u534f\u8bae\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u722c\u866b\u90fd\u5fc5\u987b\u9075\u5b88\u7684\u6e38\u620f\u89c4\u5219\u3002\u4e0b\u9762\u4ee5\u6dd8\u5b9d\u7684 robots.txt \u6587\u4ef6\u4e3a\u4f8b\uff0c\u770b\u770b\u6dd8\u5b9d\u7f51\u5bf9\u722c\u866b\u6709\u54ea\u4e9b\u9650\u5236\u3002 User-agent: Baiduspider Disallow: / User-agent: baiduspider Disallow: / \u901a\u8fc7\u4e0a\u9762\u7684\u6587\u4ef6\u53ef\u4ee5\u770b\u51fa\uff0c\u6dd8\u5b9d\u7981\u6b62\u767e\u5ea6\u722c\u866b\u722c\u53d6\u5b83\u4efb\u4f55\u8d44\u6e90\uff0c\u56e0\u6b64\u5f53\u4f60\u5728\u767e\u5ea6\u641c\u7d22\u201c\u6dd8\u5b9d\u201d\u7684\u65f6\u5019\uff0c\u641c\u7d22\u7ed3\u679c\u4e0b\u65b9\u4f1a\u51fa\u73b0\uff1a\u201c\u7531\u4e8e\u8be5\u7f51\u7ad9\u7684 robots.txt \u6587\u4ef6\u5b58\u5728\u9650\u5236\u6307\u4ee4\uff08\u9650\u5236\u641c\u7d22\u5f15\u64ce\u6293\u53d6\uff09\uff0c\u7cfb\u7edf\u65e0\u6cd5\u63d0\u4f9b\u8be5\u9875\u9762\u7684\u5185\u5bb9\u63cf\u8ff0\u201d\u3002\u767e\u5ea6\u4f5c\u4e3a\u4e00\u4e2a\u641c\u7d22\u5f15\u64ce\uff0c\u81f3\u5c11\u5728\u8868\u9762\u4e0a\u9075\u5b88\u4e86\u6dd8\u5b9d\u7f51\u7684 robots.txt \u534f\u8bae\uff0c\u6240\u4ee5\u7528\u6237\u4e0d\u80fd\u4ece\u767e\u5ea6\u4e0a\u641c\u7d22\u5230\u6dd8\u5b9d\u5185\u90e8\u7684\u4ea7\u54c1\u4fe1\u606f\u3002 \u56fe1. \u767e\u5ea6\u641c\u7d22\u6dd8\u5b9d\u7684\u7ed3\u679c \u4e0b\u9762\u662f\u8c46\u74e3\u7f51\u7684 robots.txt \u6587\u4ef6\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u89e3\u8bfb\uff0c\u770b\u770b\u5b83\u505a\u51fa\u4e86\u4ec0\u4e48\u6837\u7684\u9650\u5236\u3002 User-agent: * Disallow: /subject_search Disallow: /amazon_search Disallow: /search Disallow: /group/search Disallow: /event/search Disallow: /celebrities/search Disallow: /location/drama/search Disallow: /forum/ Disallow: /new_subject Disallow: /service/iframe Disallow: /j/ Disallow: /link2/ Disallow: /recommend/ Disallow: /doubanapp/card Disallow: /update/topic/ Disallow: /share/ Allow: /ads.txt Sitemap: https://www.douban.com/sitemap_index.xml Sitemap: https://www.douban.com/sitemap_updated_index.xml # Crawl-delay: 5 User-agent: Wandoujia Spider Disallow: / User-agent: Mediapartners-Google Disallow: /subject_search Disallow: /amazon_search Disallow: /search Disallow: /group/search Disallow: /event/search Disallow: /celebrities/search Disallow: /location/drama/search Disallow: /j/ \u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff08HTTP\uff09 \u5728\u5f00\u59cb\u8bb2\u89e3\u722c\u866b\u4e4b\u524d\uff0c\u6211\u4eec\u7a0d\u5fae\u5bf9\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff08HTTP\uff09\u505a\u4e00\u4e9b\u56de\u987e\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u7f51\u9875\u4e0a\u770b\u5230\u7684\u5185\u5bb9\u901a\u5e38\u662f\u6d4f\u89c8\u5668\u6267\u884c HTML \uff08\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\uff09\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u800c HTTP \u5c31\u662f\u4f20\u8f93 HTML \u6570\u636e\u7684\u534f\u8bae\u3002HTTP \u548c\u5176\u4ed6\u5f88\u591a\u5e94\u7528\u7ea7\u534f\u8bae\u4e00\u6837\u662f\u6784\u5efa\u5728 TCP\uff08\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u4e4b\u4e0a\u7684\uff0c\u5b83\u5229\u7528\u4e86 TCP \u63d0\u4f9b\u7684\u53ef\u9760\u7684\u4f20\u8f93\u670d\u52a1\u5b9e\u73b0\u4e86 Web \u5e94\u7528\u4e2d\u7684\u6570\u636e\u4ea4\u6362\u3002\u6309\u7167\u7ef4\u57fa\u767e\u79d1\u4e0a\u7684\u4ecb\u7ecd\uff0c\u8bbe\u8ba1 HTTP \u6700\u521d\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u4f9b\u4e00\u79cd\u53d1\u5e03\u548c\u63a5\u6536 HTML \u9875\u9762\u7684\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u534f\u8bae\u662f\u6d4f\u89c8\u5668\u548c Web \u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u8f93\u7684\u6570\u636e\u7684\u8f7d\u4f53\u3002\u5173\u4e8e HTTP \u7684\u8be6\u7ec6\u4fe1\u606f\u4ee5\u53ca\u76ee\u524d\u7684\u53d1\u5c55\u72b6\u51b5\uff0c\u5927\u5bb6\u53ef\u4ee5\u9605\u8bfb \u300aHTTP \u534f\u8bae\u5165\u95e8\u300b \u3001 \u300a\u4e92\u8054\u7f51\u534f\u8bae\u5165\u95e8\u300b \u3001 \u300a\u56fe\u89e3 HTTPS \u534f\u8bae\u300b \u7b49\u6587\u7ae0\u8fdb\u884c\u4e86\u89e3\u3002 \u4e0b\u56fe\u662f\u6211\u5728\u56db\u5ddd\u7701\u7f51\u7edc\u901a\u4fe1\u6280\u672f\u91cd\u70b9\u5b9e\u9a8c\u5ba4\u5de5\u4f5c\u671f\u95f4\u7528\u5f00\u6e90\u534f\u8bae\u5206\u6790\u5de5\u5177 Ethereal\uff08WireShark \u7684\u524d\u8eab\uff09\u622a\u53d6\u7684\u8bbf\u95ee\u767e\u5ea6\u9996\u9875\u65f6\u7684 HTTP \u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u62a5\u6587\uff08\u534f\u8bae\u6570\u636e\uff09\uff0c\u7531\u4e8e Ethereal \u622a\u53d6\u7684\u662f\u7ecf\u8fc7\u7f51\u7edc\u9002\u914d\u5668\u7684\u6570\u636e\uff0c\u56e0\u6b64\u53ef\u4ee5\u6e05\u6670\u7684\u770b\u5230\u4ece\u7269\u7406\u94fe\u8def\u5c42\u5230\u5e94\u7528\u5c42\u7684\u534f\u8bae\u6570\u636e\u3002 \u56fe2. HTTP\u8bf7\u6c42 HTTP \u8bf7\u6c42\u901a\u5e38\u662f\u7531\u8bf7\u6c42\u884c\u3001\u8bf7\u6c42\u5934\u3001\u7a7a\u884c\u3001\u6d88\u606f\u4f53\u56db\u4e2a\u90e8\u5206\u6784\u6210\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\u53d1\u7ed9\u670d\u52a1\u5668\uff0c\u6d88\u606f\u4f53\u5c31\u4e0d\u662f\u5fc5\u987b\u7684\u90e8\u5206\u3002\u8bf7\u6c42\u884c\u4e2d\u5305\u542b\u4e86\u8bf7\u6c42\u65b9\u6cd5\uff08GET\u3001POST \u7b49\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff09\u3001\u8d44\u6e90\u8def\u5f84\u548c\u534f\u8bae\u7248\u672c\uff1b\u8bf7\u6c42\u5934\u7531\u82e5\u5e72\u952e\u503c\u5bf9\u6784\u6210\uff0c\u5305\u542b\u4e86\u6d4f\u89c8\u5668\u3001\u7f16\u7801\u65b9\u5f0f\u3001\u9996\u9009\u8bed\u8a00\u3001\u7f13\u5b58\u7b56\u7565\u7b49\u4fe1\u606f\uff1b\u8bf7\u6c42\u5934\u7684\u540e\u9762\u662f\u7a7a\u884c\u548c\u6d88\u606f\u4f53\u3002 \u56fe3. HTTP\u54cd\u5e94 HTTP \u54cd\u5e94\u901a\u5e38\u662f\u7531\u54cd\u5e94\u884c\u3001\u54cd\u5e94\u5934\u3001\u7a7a\u884c\u3001\u6d88\u606f\u4f53\u56db\u4e2a\u90e8\u5206\u6784\u6210\uff0c\u5176\u4e2d\u6d88\u606f\u4f53\u662f\u670d\u52a1\u54cd\u5e94\u7684\u6570\u636e\uff0c\u53ef\u80fd\u662f HTML \u9875\u9762\uff0c\u4e5f\u6709\u53ef\u80fd\u662fJSON\u6216\u4e8c\u8fdb\u5236\u6570\u636e\u7b49\u3002\u54cd\u5e94\u884c\u4e2d\u5305\u542b\u4e86\u534f\u8bae\u7248\u672c\u548c\u54cd\u5e94\u72b6\u6001\u7801\uff0c\u54cd\u5e94\u72b6\u6001\u7801\u6709\u5f88\u591a\u79cd\uff0c\u5e38\u89c1\u7684\u5982\u4e0b\u8868\u6240\u793a\u3002 \u76f8\u5173\u5de5\u5177 \u4e0b\u9762\u6211\u4eec\u5148\u4ecb\u7ecd\u4e00\u4e9b\u5f00\u53d1\u722c\u866b\u7a0b\u5e8f\u7684\u8f85\u52a9\u5de5\u5177\uff0c\u8fd9\u4e9b\u5de5\u5177\u76f8\u4fe1\u80fd\u5e2e\u52a9\u4f60\u4e8b\u534a\u529f\u500d\u3002 Chrome Developer Tools\uff1a\u8c37\u6b4c\u6d4f\u89c8\u5668\u5185\u7f6e\u7684\u5f00\u53d1\u8005\u5de5\u5177\u3002\u8be5\u5de5\u5177\u6700\u5e38\u7528\u7684\u51e0\u4e2a\u529f\u80fd\u6a21\u5757\u662f\uff1a \u5143\u7d20\uff08ELements\uff09\uff1a\u7528\u4e8e\u67e5\u770b\u6216\u4fee\u6539 HTML \u5143\u7d20\u7684\u5c5e\u6027\u3001CSS \u5c5e\u6027\u3001\u76d1\u542c\u4e8b\u4ef6\u7b49\u3002CSS \u53ef\u4ee5\u5373\u65f6\u4fee\u6539\uff0c\u5373\u65f6\u663e\u793a\uff0c\u5927\u5927\u65b9\u4fbf\u4e86\u5f00\u53d1\u8005\u8c03\u8bd5\u9875\u9762\u3002 \u63a7\u5236\u53f0\uff08Console\uff09\uff1a\u7528\u4e8e\u6267\u884c\u4e00\u6b21\u6027\u4ee3\u7801\uff0c\u67e5\u770b JavaScript \u5bf9\u8c61\uff0c\u67e5\u770b\u8c03\u8bd5\u65e5\u5fd7\u4fe1\u606f\u6216\u5f02\u5e38\u4fe1\u606f\u3002\u63a7\u5236\u53f0\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6267\u884c JavaScript \u4ee3\u7801\u7684\u4ea4\u4e92\u5f0f\u73af\u5883\u3002 \u6e90\u4ee3\u7801\uff08Sources\uff09\uff1a\u7528\u4e8e\u67e5\u770b\u9875\u9762\u7684 HTML \u6587\u4ef6\u6e90\u4ee3\u7801\u3001JavaScript \u6e90\u4ee3\u7801\u3001CSS \u6e90\u4ee3\u7801\uff0c\u6b64\u5916\u6700\u91cd\u8981\u7684\u662f\u53ef\u4ee5\u8c03\u8bd5 JavaScript \u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u7ed9\u4ee3\u7801\u6dfb\u52a0\u65ad\u70b9\u548c\u5355\u6b65\u6267\u884c\u3002 \u7f51\u7edc\uff08Network\uff09\uff1a\u7528\u4e8e HTTP \u8bf7\u6c42\u3001HTTP \u54cd\u5e94\u4ee5\u53ca\u4e0e\u7f51\u7edc\u8fde\u63a5\u76f8\u5173\u7684\u4fe1\u606f\u3002 \u5e94\u7528\uff08Application\uff09\uff1a\u7528\u4e8e\u67e5\u770b\u6d4f\u89c8\u5668\u672c\u5730\u5b58\u50a8\u3001\u540e\u53f0\u4efb\u52a1\u7b49\u5185\u5bb9\uff0c\u672c\u5730\u5b58\u50a8\u4e3b\u8981\u5305\u62ecCookie\u3001Local Storage\u3001Session Storage\u7b49\u3002 Postman\uff1a\u529f\u80fd\u5f3a\u5927\u7684\u7f51\u9875\u8c03\u8bd5\u4e0e RESTful \u8bf7\u6c42\u5de5\u5177\u3002Postman\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u6a21\u62df\u8bf7\u6c42\uff0c\u975e\u5e38\u65b9\u4fbf\u7684\u5b9a\u5236\u6211\u4eec\u7684\u8bf7\u6c42\u4ee5\u53ca\u67e5\u770b\u670d\u52a1\u5668\u7684\u54cd\u5e94\u3002 HTTPie\uff1a\u547d\u4ee4\u884cHTTP\u5ba2\u6237\u7aef\u3002 \u5b89\u88c5\u3002 pip install httpie \u4f7f\u7528\u3002 http --header http --header https://movie.douban.com/ HTTP/1.1 200 OK Connection: keep-alive Content-Encoding: gzip Content-Type: text/html ; charset = utf-8 Date: Tue, 24 Aug 2021 16 :48:00 GMT Keep-Alive: timeout = 30 Server: dae Set-Cookie: bid = 58h4BdKC9lM ; Expires = Wed, 24 -Aug-22 16 :48:00 GMT ; Domain = .douban.com ; Path = / Strict-Transport-Security: max-age = 15552000 Transfer-Encoding: chunked X-Content-Type-Options: nosniff X-DOUBAN-NEWBID: 58h4BdKC9lM builtwith \u5e93\uff1a\u8bc6\u522b\u7f51\u7ad9\u6240\u7528\u6280\u672f\u7684\u5de5\u5177\u3002 \u5b89\u88c5\u3002 pip install builtwith \u4f7f\u7528\u3002 import ssl import builtwith ssl . _create_default_https_context = ssl . _create_unverified_context print ( builtwith . parse ( 'http://www.bootcss.com/' )) python-whois \u5e93\uff1a\u67e5\u8be2\u7f51\u7ad9\u6240\u6709\u8005\u7684\u5de5\u5177\u3002 \u5b89\u88c5\u3002 pip3 install python-whois \u4f7f\u7528\u3002 import whois print ( whois . whois ( 'https://www.bootcss.com' )) \u722c\u866b\u7684\u57fa\u672c\u5de5\u4f5c\u6d41\u7a0b \u4e00\u4e2a\u57fa\u672c\u7684\u722c\u866b\u901a\u5e38\u5206\u4e3a\u6570\u636e\u91c7\u96c6\uff08\u7f51\u9875\u4e0b\u8f7d\uff09\u3001\u6570\u636e\u5904\u7406\uff08\u7f51\u9875\u89e3\u6790\uff09\u548c\u6570\u636e\u5b58\u50a8\uff08\u5c06\u6709\u7528\u7684\u4fe1\u606f\u6301\u4e45\u5316\uff09\u4e09\u4e2a\u90e8\u5206\u7684\u5185\u5bb9\uff0c\u5f53\u7136\u66f4\u4e3a\u9ad8\u7ea7\u7684\u722c\u866b\u5728\u6570\u636e\u91c7\u96c6\u548c\u5904\u7406\u65f6\u4f1a\u4f7f\u7528\u5e76\u53d1\u7f16\u7a0b\u6216\u5206\u5e03\u5f0f\u6280\u672f\uff0c\u8fd9\u5c31\u9700\u8981\u6709\u8c03\u5ea6\u5668\uff08\u5b89\u6392\u7ebf\u7a0b\u6216\u8fdb\u7a0b\u6267\u884c\u5bf9\u5e94\u7684\u4efb\u52a1\uff09\u3001\u540e\u53f0\u7ba1\u7406\u7a0b\u5e8f\uff08\u76d1\u63a7\u722c\u866b\u7684\u5de5\u4f5c\u72b6\u6001\u4ee5\u53ca\u68c0\u67e5\u6570\u636e\u6293\u53d6\u7684\u7ed3\u679c\uff09\u7b49\u7684\u53c2\u4e0e\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u722c\u866b\u7684\u5de5\u4f5c\u6d41\u7a0b\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a \u8bbe\u5b9a\u6293\u53d6\u76ee\u6807\uff08\u79cd\u5b50\u9875\u9762/\u8d77\u59cb\u9875\u9762\uff09\u5e76\u83b7\u53d6\u7f51\u9875\u3002 \u5f53\u670d\u52a1\u5668\u65e0\u6cd5\u8bbf\u95ee\u65f6\uff0c\u6309\u7167\u6307\u5b9a\u7684\u91cd\u8bd5\u6b21\u6570\u5c1d\u8bd5\u91cd\u65b0\u4e0b\u8f7d\u9875\u9762\u3002 \u5728\u9700\u8981\u7684\u65f6\u5019\u8bbe\u7f6e\u7528\u6237\u4ee3\u7406\u6216\u9690\u85cf\u771f\u5b9eIP\uff0c\u5426\u5219\u53ef\u80fd\u65e0\u6cd5\u8bbf\u95ee\u9875\u9762\u3002 \u5bf9\u83b7\u53d6\u7684\u9875\u9762\u8fdb\u884c\u5fc5\u8981\u7684\u89e3\u7801\u64cd\u4f5c\u7136\u540e\u6293\u53d6\u51fa\u9700\u8981\u7684\u4fe1\u606f\u3002 \u5728\u83b7\u53d6\u7684\u9875\u9762\u4e2d\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\uff08\u5982\u6b63\u5219\u8868\u8fbe\u5f0f\uff09\u62bd\u53d6\u51fa\u9875\u9762\u4e2d\u7684\u94fe\u63a5\u4fe1\u606f\u3002 \u5bf9\u94fe\u63a5\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u5904\u7406\uff08\u83b7\u53d6\u9875\u9762\u5e76\u91cd\u590d\u4e0a\u9762\u7684\u52a8\u4f5c\uff09\u3002 \u5c06\u6709\u7528\u7684\u4fe1\u606f\u8fdb\u884c\u6301\u4e45\u5316\u4ee5\u5907\u540e\u7eed\u7684\u5904\u7406\u3002","title":"\u7b2c31\u8bfe\uff1a\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u6982\u8ff0"},{"location":"%E7%AC%AC31%E8%AF%BE%EF%BC%9A%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%A6%82%E8%BF%B0/#31","text":"\u722c\u866b\uff08crawler\uff09\u4e5f\u7ecf\u5e38\u88ab\u79f0\u4e3a\u7f51\u7edc\u8718\u86db\uff08spider\uff09\uff0c\u662f\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5219\u81ea\u52a8\u6d4f\u89c8\u7f51\u7ad9\u5e76\u83b7\u53d6\u6240\u9700\u4fe1\u606f\u7684\u673a\u5668\u4eba\u7a0b\u5e8f\uff08\u81ea\u52a8\u5316\u811a\u672c\u4ee3\u7801\uff09\uff0c\u88ab\u5e7f\u6cdb\u7684\u5e94\u7528\u4e8e\u4e92\u8054\u7f51\u641c\u7d22\u5f15\u64ce\u548c\u6570\u636e\u91c7\u96c6\u3002\u4f7f\u7528\u8fc7\u4e92\u8054\u7f51\u548c\u6d4f\u89c8\u5668\u7684\u4eba\u90fd\u77e5\u9053\uff0c\u7f51\u9875\u4e2d\u9664\u4e86\u4f9b\u7528\u6237\u9605\u8bfb\u7684\u6587\u5b57\u4fe1\u606f\u4e4b\u5916\uff0c\u8fd8\u5305\u542b\u4e00\u4e9b\u8d85\u94fe\u63a5\uff0c\u7f51\u7edc\u722c\u866b\u6b63\u662f\u901a\u8fc7\u7f51\u9875\u4e2d\u7684\u8d85\u94fe\u63a5\u4fe1\u606f\uff0c\u4e0d\u65ad\u83b7\u5f97\u7f51\u7edc\u4e0a\u5176\u5b83\u9875\u9762\u7684\u5730\u5740\uff0c\u7136\u540e\u6301\u7eed\u7684\u8fdb\u884c\u6570\u636e\u91c7\u96c6\u3002\u6b63\u56e0\u5982\u6b64\uff0c\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u7684\u8fc7\u7a0b\u5c31\u50cf\u4e00\u4e2a\u722c\u866b\u6216\u8005\u8718\u86db\u5728\u7f51\u7edc\u4e0a\u6f2b\u6e38\uff0c\u6240\u4ee5\u624d\u88ab\u5f62\u8c61\u7684\u79f0\u4e3a\u722c\u866b\u6216\u8005\u7f51\u7edc\u8718\u86db\u3002","title":"\u7b2c31\u8bfe\uff1a\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u6982\u8ff0"},{"location":"%E7%AC%AC31%E8%AF%BE%EF%BC%9A%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%A6%82%E8%BF%B0/#_1","text":"\u5728\u7406\u60f3\u7684\u72b6\u6001\u4e0b\uff0c\u6240\u6709 ICP\uff08Internet Content Provider\uff09\u90fd\u5e94\u8be5\u4e3a\u81ea\u5df1\u7684\u7f51\u7ad9\u63d0\u4f9b API \u63a5\u53e3\u6765\u5171\u4eab\u5b83\u4eec\u5141\u8bb8\u5176\u4ed6\u7a0b\u5e8f\u83b7\u53d6\u7684\u6570\u636e\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5c31\u6839\u672c\u4e0d\u9700\u8981\u722c\u866b\u7a0b\u5e8f\u3002\u56fd\u5185\u6bd4\u8f83\u6709\u540d\u7684\u7535\u5546\u5e73\u53f0\uff08\u5982\u6dd8\u5b9d\u3001\u4eac\u4e1c\u7b49\uff09\u3001\u793e\u4ea4\u5e73\u53f0\uff08\u5982\u5fae\u535a\u3001\u5fae\u4fe1\u7b49\uff09\u7b49\u90fd\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684 API \u63a5\u53e3\uff0c\u4f46\u662f\u8fd9\u7c7b API \u63a5\u53e3\u901a\u5e38\u4f1a\u5bf9\u53ef\u4ee5\u6293\u53d6\u7684\u6570\u636e\u4ee5\u53ca\u6293\u53d6\u6570\u636e\u7684\u9891\u7387\u8fdb\u884c\u9650\u5236\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7684\u516c\u53f8\u800c\u8a00\uff0c\u53ca\u65f6\u7684\u83b7\u53d6\u884c\u4e1a\u6570\u636e\u548c\u7ade\u5bf9\u6570\u636e\u662f\u4f01\u4e1a\u751f\u5b58\u7684\u91cd\u8981\u73af\u8282\u4e4b\u4e00\uff0c\u7136\u800c\u5bf9\u5927\u90e8\u5206\u4f01\u4e1a\u6765\u8bf4\uff0c\u6570\u636e\u90fd\u662f\u5176\u4e0e\u751f\u4ff1\u6765\u7684\u77ed\u677f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5408\u7406\u7684\u5229\u7528\u722c\u866b\u6765\u83b7\u53d6\u6570\u636e\u5e76\u4ece\u4e2d\u63d0\u53d6\u51fa\u6709\u5546\u4e1a\u4ef7\u503c\u7684\u4fe1\u606f\u5bf9\u8fd9\u4e9b\u4f01\u4e1a\u6765\u8bf4\u5c31\u663e\u5f97\u81f3\u5173\u91cd\u8981\u7684\u3002 \u722c\u866b\u7684\u5e94\u7528\u9886\u57df\u5176\u5b9e\u975e\u5e38\u5e7f\u6cdb\uff0c\u4e0b\u9762\u6211\u4eec\u5217\u4e3e\u4e86\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u63a2\u7d22\u76f8\u5173\u5185\u5bb9\u3002 \u641c\u7d22\u5f15\u64ce \u65b0\u95fb\u805a\u5408 \u793e\u4ea4\u5e94\u7528 \u8206\u60c5\u76d1\u63a7 \u884c\u4e1a\u6570\u636e","title":"\u722c\u866b\u7684\u5e94\u7528\u9886\u57df"},{"location":"%E7%AC%AC31%E8%AF%BE%EF%BC%9A%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%A6%82%E8%BF%B0/#_2","text":"\u7ecf\u5e38\u542c\u4eba\u8bf4\u8d77\u201c\u722c\u866b\u5199\u5f97\u597d\uff0c\u7262\u996d\u5403\u5230\u9971\u201d\uff0c\u90a3\u4e48\u7f16\u7a0b\u722c\u866b\u7a0b\u5e8f\u662f\u5426\u8fdd\u6cd5\u5462\uff1f\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u51e0\u4e2a\u89d2\u5ea6\u8fdb\u884c\u89e3\u8bfb\u3002 \u7f51\u7edc\u722c\u866b\u8fd9\u4e2a\u9886\u57df\u76ee\u524d\u8fd8\u5c5e\u4e8e\u62d3\u8352\u9636\u6bb5\uff0c\u867d\u7136\u4e92\u8054\u7f51\u4e16\u754c\u5df2\u7ecf\u901a\u8fc7\u81ea\u5df1\u7684\u6e38\u620f\u89c4\u5219\u5efa\u7acb\u8d77\u4e86\u4e00\u5b9a\u7684\u9053\u5fb7\u89c4\u8303\uff0c\u5373 Robots \u534f\u8bae\uff08\u5168\u79f0\u662f\u201c\u7f51\u7edc\u722c\u866b\u6392\u9664\u6807\u51c6\u201d\uff09\uff0c\u4f46\u6cd5\u5f8b\u90e8\u5206\u8fd8\u5728\u5efa\u7acb\u548c\u5b8c\u5584\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u73b0\u5728\u8fd9\u4e2a\u9886\u57df\u6682\u65f6\u8fd8\u662f\u7070\u8272\u5730\u5e26\u3002 \u201c\u6cd5\u4e0d\u7981\u6b62\u5373\u4e3a\u8bb8\u53ef\u201d\uff0c\u5982\u679c\u722c\u866b\u5c31\u50cf\u6d4f\u89c8\u5668\u4e00\u6837\u83b7\u53d6\u7684\u662f\u524d\u7aef\u663e\u793a\u7684\u6570\u636e\uff08\u7f51\u9875\u4e0a\u7684\u516c\u5f00\u4fe1\u606f\uff09\u800c\u4e0d\u662f\u7f51\u7ad9\u540e\u53f0\u7684\u79c1\u5bc6\u654f\u611f\u4fe1\u606f\uff0c\u5c31\u4e0d\u592a\u62c5\u5fc3\u6cd5\u5f8b\u6cd5\u89c4\u7684\u7ea6\u675f\uff0c\u56e0\u4e3a\u76ee\u524d\u5927\u6570\u636e\u4ea7\u4e1a\u94fe\u7684\u53d1\u5c55\u901f\u5ea6\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u6cd5\u5f8b\u7684\u5b8c\u5584\u7a0b\u5ea6\u3002 \u5728\u722c\u53d6\u7f51\u7ad9\u7684\u65f6\u5019\uff0c\u9700\u8981\u9650\u5236\u81ea\u5df1\u7684\u722c\u866b\u9075\u5b88 Robots \u534f\u8bae\uff0c\u540c\u65f6\u63a7\u5236\u7f51\u7edc\u722c\u866b\u7a0b\u5e8f\u7684\u6293\u53d6\u6570\u636e\u7684\u901f\u5ea6\uff1b\u5728\u4f7f\u7528\u6570\u636e\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u8981\u5c0a\u91cd\u7f51\u7ad9\u7684\u77e5\u8bc6\u4ea7\u6743\uff08\u4eceWeb 2.0\u65f6\u4ee3\u5f00\u59cb\uff0c\u867d\u7136Web\u4e0a\u7684\u6570\u636e\u5f88\u591a\u90fd\u662f\u7531\u7528\u6237\u63d0\u4f9b\u7684\uff0c\u4f46\u662f\u7f51\u7ad9\u5e73\u53f0\u662f\u6295\u5165\u4e86\u8fd0\u8425\u6210\u672c\u7684\uff0c\u5f53\u7528\u6237\u5728\u6ce8\u518c\u548c\u53d1\u5e03\u5185\u5bb9\u65f6\uff0c\u5e73\u53f0\u901a\u5e38\u5c31\u5df2\u7ecf\u83b7\u5f97\u4e86\u5bf9\u6570\u636e\u7684\u6240\u6709\u6743\u3001\u4f7f\u7528\u6743\u548c\u5206\u53d1\u6743\uff09\u3002\u5982\u679c\u8fdd\u53cd\u4e86\u8fd9\u4e9b\u89c4\u5b9a\uff0c\u5728\u6253\u5b98\u53f8\u7684\u65f6\u5019\u8d25\u8bc9\u51e0\u7387\u76f8\u5f53\u9ad8\u3002 \u9002\u5f53\u7684\u9690\u533f\u81ea\u5df1\u7684\u8eab\u4efd\u5728\u7f16\u5199\u722c\u866b\u7a0b\u5e8f\u65f6\u5fc5\u8981\u7684\uff0c\u800c\u4e14\u6700\u597d\u4e0d\u8981\u88ab\u5bf9\u65b9\u4e3e\u8bc1\u4f60\u7684\u722c\u866b\u6709\u7834\u574f\u522b\u4eba\u52a8\u4ea7\uff08\u4f8b\u5982\u670d\u52a1\u5668\uff09\u7684\u884c\u4e3a\u3002 \u4e0d\u8981\u5728\u516c\u7f51\uff08\u5982\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\uff09\u4e0a\u53bb\u5f00\u6e90\u6216\u8005\u5c55\u793a\u4f60\u7684\u722c\u866b\u4ee3\u7801\uff0c\u8fd9\u4e9b\u884c\u4e3a\u901a\u5e38\u4f1a\u7ed9\u81ea\u5df1\u5e26\u6765\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002","title":"\u722c\u866b\u5408\u6cd5\u6027\u63a2\u8ba8"},{"location":"%E7%AC%AC31%E8%AF%BE%EF%BC%9A%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%A6%82%E8%BF%B0/#robots","text":"\u5927\u591a\u6570\u7f51\u7ad9\u90fd\u4f1a\u5b9a\u4e49 robots.txt \u6587\u4ef6\uff0c\u8fd9\u662f\u4e00\u4e2a\u541b\u5b50\u534f\u8bae\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u722c\u866b\u90fd\u5fc5\u987b\u9075\u5b88\u7684\u6e38\u620f\u89c4\u5219\u3002\u4e0b\u9762\u4ee5\u6dd8\u5b9d\u7684 robots.txt \u6587\u4ef6\u4e3a\u4f8b\uff0c\u770b\u770b\u6dd8\u5b9d\u7f51\u5bf9\u722c\u866b\u6709\u54ea\u4e9b\u9650\u5236\u3002 User-agent: Baiduspider Disallow: / User-agent: baiduspider Disallow: / \u901a\u8fc7\u4e0a\u9762\u7684\u6587\u4ef6\u53ef\u4ee5\u770b\u51fa\uff0c\u6dd8\u5b9d\u7981\u6b62\u767e\u5ea6\u722c\u866b\u722c\u53d6\u5b83\u4efb\u4f55\u8d44\u6e90\uff0c\u56e0\u6b64\u5f53\u4f60\u5728\u767e\u5ea6\u641c\u7d22\u201c\u6dd8\u5b9d\u201d\u7684\u65f6\u5019\uff0c\u641c\u7d22\u7ed3\u679c\u4e0b\u65b9\u4f1a\u51fa\u73b0\uff1a\u201c\u7531\u4e8e\u8be5\u7f51\u7ad9\u7684 robots.txt \u6587\u4ef6\u5b58\u5728\u9650\u5236\u6307\u4ee4\uff08\u9650\u5236\u641c\u7d22\u5f15\u64ce\u6293\u53d6\uff09\uff0c\u7cfb\u7edf\u65e0\u6cd5\u63d0\u4f9b\u8be5\u9875\u9762\u7684\u5185\u5bb9\u63cf\u8ff0\u201d\u3002\u767e\u5ea6\u4f5c\u4e3a\u4e00\u4e2a\u641c\u7d22\u5f15\u64ce\uff0c\u81f3\u5c11\u5728\u8868\u9762\u4e0a\u9075\u5b88\u4e86\u6dd8\u5b9d\u7f51\u7684 robots.txt \u534f\u8bae\uff0c\u6240\u4ee5\u7528\u6237\u4e0d\u80fd\u4ece\u767e\u5ea6\u4e0a\u641c\u7d22\u5230\u6dd8\u5b9d\u5185\u90e8\u7684\u4ea7\u54c1\u4fe1\u606f\u3002 \u56fe1. \u767e\u5ea6\u641c\u7d22\u6dd8\u5b9d\u7684\u7ed3\u679c \u4e0b\u9762\u662f\u8c46\u74e3\u7f51\u7684 robots.txt \u6587\u4ef6\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u89e3\u8bfb\uff0c\u770b\u770b\u5b83\u505a\u51fa\u4e86\u4ec0\u4e48\u6837\u7684\u9650\u5236\u3002 User-agent: * Disallow: /subject_search Disallow: /amazon_search Disallow: /search Disallow: /group/search Disallow: /event/search Disallow: /celebrities/search Disallow: /location/drama/search Disallow: /forum/ Disallow: /new_subject Disallow: /service/iframe Disallow: /j/ Disallow: /link2/ Disallow: /recommend/ Disallow: /doubanapp/card Disallow: /update/topic/ Disallow: /share/ Allow: /ads.txt Sitemap: https://www.douban.com/sitemap_index.xml Sitemap: https://www.douban.com/sitemap_updated_index.xml # Crawl-delay: 5 User-agent: Wandoujia Spider Disallow: / User-agent: Mediapartners-Google Disallow: /subject_search Disallow: /amazon_search Disallow: /search Disallow: /group/search Disallow: /event/search Disallow: /celebrities/search Disallow: /location/drama/search Disallow: /j/","title":"Robots\u534f\u8bae"},{"location":"%E7%AC%AC31%E8%AF%BE%EF%BC%9A%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%A6%82%E8%BF%B0/#http","text":"\u5728\u5f00\u59cb\u8bb2\u89e3\u722c\u866b\u4e4b\u524d\uff0c\u6211\u4eec\u7a0d\u5fae\u5bf9\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff08HTTP\uff09\u505a\u4e00\u4e9b\u56de\u987e\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u7f51\u9875\u4e0a\u770b\u5230\u7684\u5185\u5bb9\u901a\u5e38\u662f\u6d4f\u89c8\u5668\u6267\u884c HTML \uff08\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\uff09\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u800c HTTP \u5c31\u662f\u4f20\u8f93 HTML \u6570\u636e\u7684\u534f\u8bae\u3002HTTP \u548c\u5176\u4ed6\u5f88\u591a\u5e94\u7528\u7ea7\u534f\u8bae\u4e00\u6837\u662f\u6784\u5efa\u5728 TCP\uff08\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u4e4b\u4e0a\u7684\uff0c\u5b83\u5229\u7528\u4e86 TCP \u63d0\u4f9b\u7684\u53ef\u9760\u7684\u4f20\u8f93\u670d\u52a1\u5b9e\u73b0\u4e86 Web \u5e94\u7528\u4e2d\u7684\u6570\u636e\u4ea4\u6362\u3002\u6309\u7167\u7ef4\u57fa\u767e\u79d1\u4e0a\u7684\u4ecb\u7ecd\uff0c\u8bbe\u8ba1 HTTP \u6700\u521d\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u4f9b\u4e00\u79cd\u53d1\u5e03\u548c\u63a5\u6536 HTML \u9875\u9762\u7684\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u534f\u8bae\u662f\u6d4f\u89c8\u5668\u548c Web \u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u8f93\u7684\u6570\u636e\u7684\u8f7d\u4f53\u3002\u5173\u4e8e HTTP \u7684\u8be6\u7ec6\u4fe1\u606f\u4ee5\u53ca\u76ee\u524d\u7684\u53d1\u5c55\u72b6\u51b5\uff0c\u5927\u5bb6\u53ef\u4ee5\u9605\u8bfb \u300aHTTP \u534f\u8bae\u5165\u95e8\u300b \u3001 \u300a\u4e92\u8054\u7f51\u534f\u8bae\u5165\u95e8\u300b \u3001 \u300a\u56fe\u89e3 HTTPS \u534f\u8bae\u300b \u7b49\u6587\u7ae0\u8fdb\u884c\u4e86\u89e3\u3002 \u4e0b\u56fe\u662f\u6211\u5728\u56db\u5ddd\u7701\u7f51\u7edc\u901a\u4fe1\u6280\u672f\u91cd\u70b9\u5b9e\u9a8c\u5ba4\u5de5\u4f5c\u671f\u95f4\u7528\u5f00\u6e90\u534f\u8bae\u5206\u6790\u5de5\u5177 Ethereal\uff08WireShark \u7684\u524d\u8eab\uff09\u622a\u53d6\u7684\u8bbf\u95ee\u767e\u5ea6\u9996\u9875\u65f6\u7684 HTTP \u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u62a5\u6587\uff08\u534f\u8bae\u6570\u636e\uff09\uff0c\u7531\u4e8e Ethereal \u622a\u53d6\u7684\u662f\u7ecf\u8fc7\u7f51\u7edc\u9002\u914d\u5668\u7684\u6570\u636e\uff0c\u56e0\u6b64\u53ef\u4ee5\u6e05\u6670\u7684\u770b\u5230\u4ece\u7269\u7406\u94fe\u8def\u5c42\u5230\u5e94\u7528\u5c42\u7684\u534f\u8bae\u6570\u636e\u3002 \u56fe2. HTTP\u8bf7\u6c42 HTTP \u8bf7\u6c42\u901a\u5e38\u662f\u7531\u8bf7\u6c42\u884c\u3001\u8bf7\u6c42\u5934\u3001\u7a7a\u884c\u3001\u6d88\u606f\u4f53\u56db\u4e2a\u90e8\u5206\u6784\u6210\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\u53d1\u7ed9\u670d\u52a1\u5668\uff0c\u6d88\u606f\u4f53\u5c31\u4e0d\u662f\u5fc5\u987b\u7684\u90e8\u5206\u3002\u8bf7\u6c42\u884c\u4e2d\u5305\u542b\u4e86\u8bf7\u6c42\u65b9\u6cd5\uff08GET\u3001POST \u7b49\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff09\u3001\u8d44\u6e90\u8def\u5f84\u548c\u534f\u8bae\u7248\u672c\uff1b\u8bf7\u6c42\u5934\u7531\u82e5\u5e72\u952e\u503c\u5bf9\u6784\u6210\uff0c\u5305\u542b\u4e86\u6d4f\u89c8\u5668\u3001\u7f16\u7801\u65b9\u5f0f\u3001\u9996\u9009\u8bed\u8a00\u3001\u7f13\u5b58\u7b56\u7565\u7b49\u4fe1\u606f\uff1b\u8bf7\u6c42\u5934\u7684\u540e\u9762\u662f\u7a7a\u884c\u548c\u6d88\u606f\u4f53\u3002 \u56fe3. HTTP\u54cd\u5e94 HTTP \u54cd\u5e94\u901a\u5e38\u662f\u7531\u54cd\u5e94\u884c\u3001\u54cd\u5e94\u5934\u3001\u7a7a\u884c\u3001\u6d88\u606f\u4f53\u56db\u4e2a\u90e8\u5206\u6784\u6210\uff0c\u5176\u4e2d\u6d88\u606f\u4f53\u662f\u670d\u52a1\u54cd\u5e94\u7684\u6570\u636e\uff0c\u53ef\u80fd\u662f HTML \u9875\u9762\uff0c\u4e5f\u6709\u53ef\u80fd\u662fJSON\u6216\u4e8c\u8fdb\u5236\u6570\u636e\u7b49\u3002\u54cd\u5e94\u884c\u4e2d\u5305\u542b\u4e86\u534f\u8bae\u7248\u672c\u548c\u54cd\u5e94\u72b6\u6001\u7801\uff0c\u54cd\u5e94\u72b6\u6001\u7801\u6709\u5f88\u591a\u79cd\uff0c\u5e38\u89c1\u7684\u5982\u4e0b\u8868\u6240\u793a\u3002","title":"\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff08HTTP\uff09"},{"location":"%E7%AC%AC31%E8%AF%BE%EF%BC%9A%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%A6%82%E8%BF%B0/#_3","text":"\u4e0b\u9762\u6211\u4eec\u5148\u4ecb\u7ecd\u4e00\u4e9b\u5f00\u53d1\u722c\u866b\u7a0b\u5e8f\u7684\u8f85\u52a9\u5de5\u5177\uff0c\u8fd9\u4e9b\u5de5\u5177\u76f8\u4fe1\u80fd\u5e2e\u52a9\u4f60\u4e8b\u534a\u529f\u500d\u3002 Chrome Developer Tools\uff1a\u8c37\u6b4c\u6d4f\u89c8\u5668\u5185\u7f6e\u7684\u5f00\u53d1\u8005\u5de5\u5177\u3002\u8be5\u5de5\u5177\u6700\u5e38\u7528\u7684\u51e0\u4e2a\u529f\u80fd\u6a21\u5757\u662f\uff1a \u5143\u7d20\uff08ELements\uff09\uff1a\u7528\u4e8e\u67e5\u770b\u6216\u4fee\u6539 HTML \u5143\u7d20\u7684\u5c5e\u6027\u3001CSS \u5c5e\u6027\u3001\u76d1\u542c\u4e8b\u4ef6\u7b49\u3002CSS \u53ef\u4ee5\u5373\u65f6\u4fee\u6539\uff0c\u5373\u65f6\u663e\u793a\uff0c\u5927\u5927\u65b9\u4fbf\u4e86\u5f00\u53d1\u8005\u8c03\u8bd5\u9875\u9762\u3002 \u63a7\u5236\u53f0\uff08Console\uff09\uff1a\u7528\u4e8e\u6267\u884c\u4e00\u6b21\u6027\u4ee3\u7801\uff0c\u67e5\u770b JavaScript \u5bf9\u8c61\uff0c\u67e5\u770b\u8c03\u8bd5\u65e5\u5fd7\u4fe1\u606f\u6216\u5f02\u5e38\u4fe1\u606f\u3002\u63a7\u5236\u53f0\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6267\u884c JavaScript \u4ee3\u7801\u7684\u4ea4\u4e92\u5f0f\u73af\u5883\u3002 \u6e90\u4ee3\u7801\uff08Sources\uff09\uff1a\u7528\u4e8e\u67e5\u770b\u9875\u9762\u7684 HTML \u6587\u4ef6\u6e90\u4ee3\u7801\u3001JavaScript \u6e90\u4ee3\u7801\u3001CSS \u6e90\u4ee3\u7801\uff0c\u6b64\u5916\u6700\u91cd\u8981\u7684\u662f\u53ef\u4ee5\u8c03\u8bd5 JavaScript \u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u7ed9\u4ee3\u7801\u6dfb\u52a0\u65ad\u70b9\u548c\u5355\u6b65\u6267\u884c\u3002 \u7f51\u7edc\uff08Network\uff09\uff1a\u7528\u4e8e HTTP \u8bf7\u6c42\u3001HTTP \u54cd\u5e94\u4ee5\u53ca\u4e0e\u7f51\u7edc\u8fde\u63a5\u76f8\u5173\u7684\u4fe1\u606f\u3002 \u5e94\u7528\uff08Application\uff09\uff1a\u7528\u4e8e\u67e5\u770b\u6d4f\u89c8\u5668\u672c\u5730\u5b58\u50a8\u3001\u540e\u53f0\u4efb\u52a1\u7b49\u5185\u5bb9\uff0c\u672c\u5730\u5b58\u50a8\u4e3b\u8981\u5305\u62ecCookie\u3001Local Storage\u3001Session Storage\u7b49\u3002 Postman\uff1a\u529f\u80fd\u5f3a\u5927\u7684\u7f51\u9875\u8c03\u8bd5\u4e0e RESTful \u8bf7\u6c42\u5de5\u5177\u3002Postman\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u6a21\u62df\u8bf7\u6c42\uff0c\u975e\u5e38\u65b9\u4fbf\u7684\u5b9a\u5236\u6211\u4eec\u7684\u8bf7\u6c42\u4ee5\u53ca\u67e5\u770b\u670d\u52a1\u5668\u7684\u54cd\u5e94\u3002 HTTPie\uff1a\u547d\u4ee4\u884cHTTP\u5ba2\u6237\u7aef\u3002 \u5b89\u88c5\u3002 pip install httpie \u4f7f\u7528\u3002 http --header http --header https://movie.douban.com/ HTTP/1.1 200 OK Connection: keep-alive Content-Encoding: gzip Content-Type: text/html ; charset = utf-8 Date: Tue, 24 Aug 2021 16 :48:00 GMT Keep-Alive: timeout = 30 Server: dae Set-Cookie: bid = 58h4BdKC9lM ; Expires = Wed, 24 -Aug-22 16 :48:00 GMT ; Domain = .douban.com ; Path = / Strict-Transport-Security: max-age = 15552000 Transfer-Encoding: chunked X-Content-Type-Options: nosniff X-DOUBAN-NEWBID: 58h4BdKC9lM builtwith \u5e93\uff1a\u8bc6\u522b\u7f51\u7ad9\u6240\u7528\u6280\u672f\u7684\u5de5\u5177\u3002 \u5b89\u88c5\u3002 pip install builtwith \u4f7f\u7528\u3002 import ssl import builtwith ssl . _create_default_https_context = ssl . _create_unverified_context print ( builtwith . parse ( 'http://www.bootcss.com/' )) python-whois \u5e93\uff1a\u67e5\u8be2\u7f51\u7ad9\u6240\u6709\u8005\u7684\u5de5\u5177\u3002 \u5b89\u88c5\u3002 pip3 install python-whois \u4f7f\u7528\u3002 import whois print ( whois . whois ( 'https://www.bootcss.com' ))","title":"\u76f8\u5173\u5de5\u5177"},{"location":"%E7%AC%AC31%E8%AF%BE%EF%BC%9A%E7%BD%91%E7%BB%9C%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%A6%82%E8%BF%B0/#_4","text":"\u4e00\u4e2a\u57fa\u672c\u7684\u722c\u866b\u901a\u5e38\u5206\u4e3a\u6570\u636e\u91c7\u96c6\uff08\u7f51\u9875\u4e0b\u8f7d\uff09\u3001\u6570\u636e\u5904\u7406\uff08\u7f51\u9875\u89e3\u6790\uff09\u548c\u6570\u636e\u5b58\u50a8\uff08\u5c06\u6709\u7528\u7684\u4fe1\u606f\u6301\u4e45\u5316\uff09\u4e09\u4e2a\u90e8\u5206\u7684\u5185\u5bb9\uff0c\u5f53\u7136\u66f4\u4e3a\u9ad8\u7ea7\u7684\u722c\u866b\u5728\u6570\u636e\u91c7\u96c6\u548c\u5904\u7406\u65f6\u4f1a\u4f7f\u7528\u5e76\u53d1\u7f16\u7a0b\u6216\u5206\u5e03\u5f0f\u6280\u672f\uff0c\u8fd9\u5c31\u9700\u8981\u6709\u8c03\u5ea6\u5668\uff08\u5b89\u6392\u7ebf\u7a0b\u6216\u8fdb\u7a0b\u6267\u884c\u5bf9\u5e94\u7684\u4efb\u52a1\uff09\u3001\u540e\u53f0\u7ba1\u7406\u7a0b\u5e8f\uff08\u76d1\u63a7\u722c\u866b\u7684\u5de5\u4f5c\u72b6\u6001\u4ee5\u53ca\u68c0\u67e5\u6570\u636e\u6293\u53d6\u7684\u7ed3\u679c\uff09\u7b49\u7684\u53c2\u4e0e\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u722c\u866b\u7684\u5de5\u4f5c\u6d41\u7a0b\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a \u8bbe\u5b9a\u6293\u53d6\u76ee\u6807\uff08\u79cd\u5b50\u9875\u9762/\u8d77\u59cb\u9875\u9762\uff09\u5e76\u83b7\u53d6\u7f51\u9875\u3002 \u5f53\u670d\u52a1\u5668\u65e0\u6cd5\u8bbf\u95ee\u65f6\uff0c\u6309\u7167\u6307\u5b9a\u7684\u91cd\u8bd5\u6b21\u6570\u5c1d\u8bd5\u91cd\u65b0\u4e0b\u8f7d\u9875\u9762\u3002 \u5728\u9700\u8981\u7684\u65f6\u5019\u8bbe\u7f6e\u7528\u6237\u4ee3\u7406\u6216\u9690\u85cf\u771f\u5b9eIP\uff0c\u5426\u5219\u53ef\u80fd\u65e0\u6cd5\u8bbf\u95ee\u9875\u9762\u3002 \u5bf9\u83b7\u53d6\u7684\u9875\u9762\u8fdb\u884c\u5fc5\u8981\u7684\u89e3\u7801\u64cd\u4f5c\u7136\u540e\u6293\u53d6\u51fa\u9700\u8981\u7684\u4fe1\u606f\u3002 \u5728\u83b7\u53d6\u7684\u9875\u9762\u4e2d\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\uff08\u5982\u6b63\u5219\u8868\u8fbe\u5f0f\uff09\u62bd\u53d6\u51fa\u9875\u9762\u4e2d\u7684\u94fe\u63a5\u4fe1\u606f\u3002 \u5bf9\u94fe\u63a5\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u5904\u7406\uff08\u83b7\u53d6\u9875\u9762\u5e76\u91cd\u590d\u4e0a\u9762\u7684\u52a8\u4f5c\uff09\u3002 \u5c06\u6709\u7528\u7684\u4fe1\u606f\u8fdb\u884c\u6301\u4e45\u5316\u4ee5\u5907\u540e\u7eed\u7684\u5904\u7406\u3002","title":"\u722c\u866b\u7684\u57fa\u672c\u5de5\u4f5c\u6d41\u7a0b"},{"location":"%E7%AC%AC32%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%8E%B7%E5%8F%96%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90/","text":"\u7b2c32\u8bfe\uff1a\u7528Python\u83b7\u53d6\u7f51\u7edc\u6570\u636e \u7f51\u7edc\u6570\u636e\u91c7\u96c6\u662f Python \u8bed\u8a00\u975e\u5e38\u64c5\u957f\u7684\u9886\u57df\uff0c\u4e0a\u8282\u8bfe\u6211\u4eec\u8bb2\u5230\uff0c\u5b9e\u73b0\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u7684\u7a0b\u5e8f\u901a\u5e38\u79f0\u4e4b\u4e3a\u7f51\u7edc\u722c\u866b\u6216\u8718\u86db\u7a0b\u5e8f\u3002\u5373\u4fbf\u662f\u5728\u5927\u6570\u636e\u65f6\u4ee3\uff0c\u6570\u636e\u5bf9\u4e8e\u4e2d\u5c0f\u4f01\u4e1a\u6765\u8bf4\u4ecd\u7136\u662f\u786c\u4f24\u548c\u77ed\u677f\uff0c\u6709\u4e9b\u6570\u636e\u9700\u8981\u901a\u8fc7\u5f00\u653e\u6216\u4ed8\u8d39\u7684\u6570\u636e\u63a5\u53e3\u6765\u83b7\u5f97\uff0c\u5176\u4ed6\u7684\u884c\u4e1a\u6570\u636e\u548c\u7ade\u5bf9\u6570\u636e\u5219\u5fc5\u987b\u8981\u901a\u8fc7\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u7684\u65b9\u5f0f\u6765\u83b7\u5f97\u3002\u4e0d\u7ba1\u4f7f\u7528\u54ea\u79cd\u65b9\u5f0f\u83b7\u53d6\u7f51\u7edc\u6570\u636e\u8d44\u6e90\uff0cPython \u8bed\u8a00\u90fd\u662f\u975e\u5e38\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a Python \u7684\u6807\u51c6\u5e93\u548c\u4e09\u65b9\u5e93\u90fd\u5bf9\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u63d0\u4f9b\u4e86\u826f\u597d\u7684\u652f\u6301\u3002 requests\u5e93 \u8981\u4f7f\u7528 Python \u83b7\u53d6\u7f51\u7edc\u6570\u636e\uff0c\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u540d\u4e3a requests \u7684\u4e09\u65b9\u5e93\uff0c\u8fd9\u4e2a\u5e93\u6211\u4eec\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\u5176\u5b9e\u5df2\u7ecf\u4f7f\u7528\u8fc7\u4e86\u3002\u6309\u7167\u5b98\u65b9\u7f51\u7ad9\u7684\u89e3\u91ca\uff0c requests \u662f\u57fa\u4e8e Python \u6807\u51c6\u5e93\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u7b80\u5316\u4e86\u901a\u8fc7 HTTP \u6216 HTTPS \u8bbf\u95ee\u7f51\u7edc\u8d44\u6e90\u7684\u64cd\u4f5c\u3002\u4e0a\u8bfe\u6211\u4eec\u63d0\u5230\u8fc7\uff0cHTTP \u662f\u4e00\u4e2a\u8bf7\u6c42\u54cd\u5e94\u5f0f\u7684\u534f\u8bae\uff0c\u5f53\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u6b63\u786e\u7684 URL \uff08\u901a\u5e38\u4e5f\u79f0\u4e3a\u7f51\u5740\uff09\u5e76\u6309\u4e0b Enter \u952e\u65f6\uff0c\u6211\u4eec\u5c31\u5411\u7f51\u7edc\u4e0a\u7684 Web \u670d\u52a1\u5668 \u53d1\u9001\u4e86\u4e00\u4e2a HTTP \u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u5728\u6536\u5230\u8bf7\u6c42\u540e\u4f1a\u7ed9\u6211\u4eec\u4e00\u4e2a HTTP \u54cd\u5e94\u3002\u5728 Chrome \u6d4f\u89c8\u5668\u4e2d\u7684\u83dc\u5355\u4e2d\u6253\u5f00\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\u5207\u6362\u5230\u201cNetwork\u201d\u9009\u9879\u5361\u5c31\u80fd\u591f\u67e5\u770b HTTP \u8bf7\u6c42\u548c\u54cd\u5e94\u5230\u5e95\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u901a\u8fc7 requests \u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9 Python \u7a0b\u5e8f\u5411\u6d4f\u89c8\u5668\u4e00\u6837\u5411 Web \u670d\u52a1\u5668\u53d1\u8d77\u8bf7\u6c42\uff0c\u5e76\u63a5\u6536\u670d\u52a1\u5668\u8fd4\u56de\u7684\u54cd\u5e94\uff0c\u4ece\u54cd\u5e94\u4e2d\u6211\u4eec\u5c31\u53ef\u4ee5\u63d0\u53d6\u51fa\u60f3\u8981\u7684\u6570\u636e\u3002\u6d4f\u89c8\u5668\u5448\u73b0\u7ed9\u6211\u4eec\u7684\u7f51\u9875\u662f\u7528 HTML \u7f16\u5199\u7684\uff0c\u6d4f\u89c8\u5668\u76f8\u5f53\u4e8e\u662f HTML \u7684\u89e3\u91ca\u5668\u73af\u5883\uff0c\u6211\u4eec\u770b\u5230\u7684\u7f51\u9875\u4e2d\u7684\u5185\u5bb9\u90fd\u5305\u542b\u5728 HTML \u7684\u6807\u7b7e\u4e2d\u3002\u5728\u83b7\u53d6\u5230 HTML \u4ee3\u7801\u540e\uff0c\u5c31\u53ef\u4ee5\u4ece\u6807\u7b7e\u7684\u5c5e\u6027\u6216\u6807\u7b7e\u4f53\u4e2d\u63d0\u53d6\u5185\u5bb9\u3002\u4e0b\u9762\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u83b7\u53d6\u7f51\u9875 HTML \u4ee3\u7801\uff0c\u6211\u4eec\u901a\u8fc7 requests \u5e93\u7684 get \u51fd\u6570\uff0c\u83b7\u53d6\u4e86\u641c\u72d0\u9996\u9875\u7684\u4ee3\u7801\u3002 import requests resp = requests . get ( 'https://www.sohu.com/' ) if resp . status_code == 200 : print ( resp . text ) \u8bf4\u660e \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u53d8\u91cf resp \u662f\u4e00\u4e2a Response \u5bf9\u8c61\uff08 requests \u5e93\u5c01\u88c5\u7684\u7c7b\u578b\uff09\uff0c\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684 status_code \u5c5e\u6027\u53ef\u4ee5\u83b7\u53d6\u54cd\u5e94\u72b6\u6001\u7801\uff0c\u800c\u8be5\u5bf9\u8c61\u7684 text \u5c5e\u6027\u53ef\u4ee5\u5e2e\u6211\u4eec\u83b7\u53d6\u5230\u9875\u9762\u7684 HTML \u4ee3\u7801\u3002 \u7531\u4e8e Response \u5bf9\u8c61\u7684 text \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e4b\u524d\u8bb2\u8fc7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u77e5\u8bc6\uff0c\u4ece\u9875\u9762\u7684 HTML \u4ee3\u7801\u4e2d\u63d0\u53d6\u65b0\u95fb\u7684\u6807\u9898\u548c\u94fe\u63a5\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import re import requests pattern = re . compile ( r '<a.*?href=\"(.*?)\".*?title=\"(.*?)\".*?>' ) resp = requests . get ( 'https://www.sohu.com/' ) if resp . status_code == 200 : all_matches = pattern . findall ( resp . text ) for href , title in all_matches : print ( href ) print ( title ) \u9664\u4e86\u6587\u672c\u5185\u5bb9\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 requests \u5e93\u901a\u8fc7 URL \u83b7\u53d6\u4e8c\u8fdb\u5236\u8d44\u6e90\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u83b7\u53d6\u767e\u5ea6 Logo \u5e76\u4fdd\u5b58\u5230\u540d\u4e3a baidu.png \u7684\u672c\u5730\u6587\u4ef6\u4e2d\u3002\u53ef\u4ee5\u5728\u767e\u5ea6\u7684\u9996\u9875\u4e0a\u53f3\u952e\u70b9\u51fb\u767e\u5ea6Logo\uff0c\u5e76\u901a\u8fc7\u201c\u590d\u5236\u56fe\u7247\u5730\u5740\u201d\u83dc\u5355\u9879\u83b7\u53d6\u56fe\u7247\u7684 URL\u3002 import requests resp = requests . get ( 'https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png' ) with open ( 'baidu.png' , 'wb' ) as file : file . write ( resp . content ) \u8bf4\u660e \uff1a Response \u5bf9\u8c61\u7684 content \u5c5e\u6027\u53ef\u4ee5\u83b7\u5f97\u670d\u52a1\u5668\u54cd\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u3002 requests \u5e93\u975e\u5e38\u597d\u7528\u800c\u4e14\u529f\u80fd\u4e0a\u4e5f\u6bd4\u8f83\u5f3a\u5927\u548c\u5b8c\u6574\uff0c\u5177\u4f53\u7684\u5185\u5bb9\u6211\u4eec\u5728\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\u4e3a\u5927\u5bb6\u4e00\u70b9\u70b9\u5256\u6790\u3002\u60f3\u89e3\u9501\u5173\u4e8e requests \u5e93\u66f4\u591a\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u9605\u8bfb\u5b83\u7684 \u5b98\u65b9\u6587\u6863 \u3002 \u7f16\u5199\u722c\u866b\u4ee3\u7801 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4ee5\u201c\u8c46\u74e3\u7535\u5f71\u201d\u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u8bb2\u89e3\u5982\u4f55\u7f16\u5199\u722c\u866b\u4ee3\u7801\u3002\u6309\u7167\u4e0a\u9762\u63d0\u4f9b\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5148\u4f7f\u7528 requests \u83b7\u53d6\u5230\u7f51\u9875\u7684HTML\u4ee3\u7801\uff0c\u7136\u540e\u5c06\u6574\u4e2a\u4ee3\u7801\u770b\u6210\u4e00\u4e2a\u957f\u5b57\u7b26\u4e32\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6355\u83b7\u7ec4\u4ece\u5b57\u7b26\u4e32\u63d0\u53d6\u6211\u4eec\u9700\u8981\u7684\u5185\u5bb9\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4ece \u8c46\u74e3\u7535\u5f71 \u83b7\u53d6\u6392\u524d250\u540d\u7684\u7535\u5f71\u7684\u540d\u79f0\u3002 \u8c46\u74e3\u7535\u5f71Top250 \u7684\u9875\u9762\u7ed3\u6784\u548c\u5bf9\u5e94\u4ee3\u7801\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u6bcf\u9875\u5171\u5c55\u793a\u4e8625\u90e8\u7535\u5f71\uff0c\u5982\u679c\u8981\u83b7\u53d6\u5230 Top250 \u6570\u636e\uff0c\u6211\u4eec\u5171\u9700\u8981\u8bbf\u95ee10\u4e2a\u9875\u9762\uff0c\u5bf9\u5e94\u7684\u5730\u5740\u662f https://movie.douban.com/top250?start=xxx \uff0c\u8fd9\u91cc\u7684 xxx \u5982\u679c\u4e3a 0 \u5c31\u662f\u7b2c\u4e00\u9875\uff0c\u5982\u679c xxx \u7684\u503c\u662f 100 \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u5230\u7b2c\u4e94\u9875\u3002\u4e3a\u4e86\u4ee3\u7801\u7b80\u5355\u6613\u8bfb\uff0c\u6211\u4eec\u53ea\u83b7\u53d6\u7535\u5f71\u7684\u6807\u9898\u548c\u8bc4\u5206\u3002 import random import re import time import requests for page in range ( 1 , 11 ): resp = requests . get ( url = f 'https://movie.douban.com/top250?start= { ( page - 1 ) * 25 } ' , # \u5982\u679c\u4e0d\u8bbe\u7f6eHTTP\u8bf7\u6c42\u5934\u4e2d\u7684User-Agent\uff0c\u8c46\u74e3\u4f1a\u68c0\u6d4b\u51fa\u4e0d\u662f\u6d4f\u89c8\u5668\u800c\u963b\u6b62\u6211\u4eec\u7684\u8bf7\u6c42\u3002 # \u901a\u8fc7get\u51fd\u6570\u7684headers\u53c2\u6570\u8bbe\u7f6eUser-Agent\u7684\u503c\uff0c\u5177\u4f53\u7684\u503c\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u7684\u5f00\u53d1\u8005\u5de5\u5177\u67e5\u770b\u5230\u3002 # \u7528\u722c\u866b\u8bbf\u95ee\u5927\u90e8\u5206\u7f51\u7ad9\u65f6\uff0c\u5c06\u722c\u866b\u4f2a\u88c5\u6210\u6765\u81ea\u6d4f\u89c8\u5668\u7684\u8bf7\u6c42\u90fd\u662f\u975e\u5e38\u91cd\u8981\u7684\u4e00\u6b65\u3002 headers = { 'User-Agent' : 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36' } ) # \u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u83b7\u53d6class\u5c5e\u6027\u4e3atitle\u4e14\u6807\u7b7e\u4f53\u4e0d\u4ee5&\u5f00\u5934\u7684span\u6807\u7b7e\u5e76\u7528\u6355\u83b7\u7ec4\u63d0\u53d6\u6807\u7b7e\u5185\u5bb9 pattern1 = re . compile ( r '<span class=\"title\">([^&]*?)</span>' ) titles = pattern1 . findall ( resp . text ) # \u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u83b7\u53d6class\u5c5e\u6027\u4e3arating_num\u7684span\u6807\u7b7e\u5e76\u7528\u6355\u83b7\u7ec4\u63d0\u53d6\u6807\u7b7e\u5185\u5bb9 pattern2 = re . compile ( r '<span class=\"rating_num\".*?>(.*?)</span>' ) ranks = pattern2 . findall ( resp . text ) # \u4f7f\u7528zip\u538b\u7f29\u4e24\u4e2a\u5217\u8868\uff0c\u5faa\u73af\u904d\u5386\u6240\u6709\u7684\u7535\u5f71\u6807\u9898\u548c\u8bc4\u5206 for title , rank in zip ( titles , ranks ): print ( title , rank ) # \u968f\u673a\u4f11\u77201-5\u79d2\uff0c\u907f\u514d\u722c\u53d6\u9875\u9762\u8fc7\u4e8e\u9891\u7e41 time . sleep ( random . random () * 4 + 1 ) \u8bf4\u660e \uff1a\u901a\u8fc7\u5206\u6790\u8c46\u74e3\u7f51\u7684robots\u534f\u8bae\uff0c\u6211\u4eec\u53d1\u73b0\u8c46\u74e3\u7f51\u5e76\u4e0d\u62d2\u7edd\u767e\u5ea6\u722c\u866b\u83b7\u53d6\u5b83\u7684\u6570\u636e\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u722c\u866b\u4f2a\u88c5\u6210\u767e\u5ea6\u7684\u722c\u866b\uff0c\u5c06 get \u51fd\u6570\u7684 headers \u53c2\u6570\u4fee\u6539\u4e3a\uff1a headers={'User-Agent': 'BaiduSpider'} \u3002 \u4f7f\u7528 IP \u4ee3\u7406 \u8ba9\u722c\u866b\u7a0b\u5e8f\u9690\u533f\u81ea\u5df1\u7684\u8eab\u4efd\u5bf9\u7f16\u5199\u722c\u866b\u7a0b\u5e8f\u6765\u8bf4\u662f\u6bd4\u8f83\u91cd\u8981\u7684\uff0c\u5f88\u591a\u7f51\u7ad9\u5bf9\u722c\u866b\u90fd\u6bd4\u8f83\u53cd\u611f\u7684\uff0c\u56e0\u4e3a\u722c\u866b\u4f1a\u8017\u8d39\u6389\u5b83\u4eec\u5f88\u591a\u7684\u7f51\u7edc\u5e26\u5bbd\u5e76\u5236\u9020\u5f88\u591a\u65e0\u6548\u7684\u6d41\u91cf\u3002\u8981\u9690\u533f\u8eab\u4efd\u901a\u5e38\u9700\u8981\u4f7f\u7528 \u5546\u4e1a IP \u4ee3\u7406 \uff08\u5982\u8611\u83c7\u4ee3\u7406\u3001\u829d\u9ebb\u4ee3\u7406\u3001\u5feb\u4ee3\u7406\u7b49\uff09\uff0c\u8ba9\u88ab\u722c\u53d6\u7684\u7f51\u7ad9\u65e0\u6cd5\u83b7\u53d6\u722c\u866b\u7a0b\u5e8f\u6765\u6e90\u7684\u771f\u5b9e IP \u5730\u5740\uff0c\u4e5f\u5c31\u65e0\u6cd5\u7b80\u5355\u7684\u901a\u8fc7 IP \u5730\u5740\u5bf9\u722c\u866b\u7a0b\u5e8f\u8fdb\u884c\u5c01\u7981\u3002 \u4e0b\u9762\u4ee5 \u8611\u83c7\u4ee3\u7406 \u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u8bb2\u89e3\u5546\u4e1a IP \u4ee3\u7406\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u9996\u5148\u9700\u8981\u5728\u8be5\u7f51\u7ad9\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\uff0c\u6ce8\u518c\u8d26\u53f7\u540e\u5c31\u53ef\u4ee5 \u8d2d\u4e70 \u76f8\u5e94\u7684\u5957\u9910\u6765\u83b7\u5f97\u5546\u4e1a IP \u4ee3\u7406\u3002\u4f5c\u4e3a\u5546\u4e1a\u7528\u9014\uff0c\u5efa\u8bae\u5927\u5bb6\u8d2d\u4e70\u4e0d\u9650\u91cf\u5957\u9910\uff0c\u8fd9\u6837\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u8981\u83b7\u53d6\u8db3\u591f\u591a\u7684\u4ee3\u7406 IP \u5730\u5740\uff1b\u4f5c\u4e3a\u5b66\u4e60\u7528\u9014\uff0c\u53ef\u4ee5\u8d2d\u4e70\u5305\u65f6\u5957\u9910\u6216\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u6765\u51b3\u5b9a\u3002\u8611\u83c7\u4ee3\u7406\u63d0\u4f9b\u4e86\u4e24\u79cd\u63a5\u5165\u4ee3\u7406\u7684\u65b9\u5f0f\uff0c\u5206\u522b\u662f API \u79c1\u5bc6\u4ee3\u7406\u548c HTTP \u96a7\u9053\u4ee3\u7406\uff0c\u524d\u8005\u662f\u901a\u8fc7\u8bf7\u6c42\u8611\u83c7\u4ee3\u7406\u7684 API \u63a5\u53e3\u83b7\u53d6\u4ee3\u7406\u670d\u52a1\u5668\u5730\u5740\uff0c\u540e\u8005\u662f\u76f4\u63a5\u4f7f\u7528\u7edf\u4e00\u7684\u5165\u53e3\uff08\u8611\u83c7\u4ee3\u7406\u63d0\u4f9b\u7684\u57df\u540d\uff09\u8fdb\u884c\u63a5\u5165\u3002 \u4e0b\u9762\uff0c\u6211\u4eec\u4ee5HTTP\u96a7\u9053\u4ee3\u7406\u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u8bb2\u89e3\u63a5\u5165 IP \u4ee3\u7406\u7684\u65b9\u5f0f\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u76f4\u63a5\u53c2\u8003\u8611\u83c7\u4ee3\u7406\u5b98\u7f51\u63d0\u4f9b\u7684\u4ee3\u7801\u6765\u4e3a\u722c\u866b\u8bbe\u7f6e\u4ee3\u7406\u3002 import requests APP_KEY = 'Wnp******************************XFx' PROXY_HOST = 'secondtransfer.moguproxy.com:9001' for page in range ( 1 , 11 ): resp = requests . get ( url = f 'https://movie.douban.com/top250?start= { ( page - 1 ) * 25 } ' , # \u9700\u8981\u5728HTTP\u8bf7\u6c42\u5934\u8bbe\u7f6e\u4ee3\u7406\u7684\u8eab\u4efd\u8ba4\u8bc1\u65b9\u5f0f headers = { 'Proxy-Authorization' : f 'Basic { APP_KEY } ' , 'User-Agent' : 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36' , 'Accept-Language' : 'zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4' }, # \u8bbe\u7f6e\u4ee3\u7406\u670d\u52a1\u5668 proxies = { 'http' : f 'http:// { PROXY_HOST } ' , 'https' : f 'https:// { PROXY_HOST } ' }, verify = False ) pattern1 = re . compile ( r '<span class=\"title\">([^&]*?)</span>' ) titles = pattern1 . findall ( resp . text ) pattern2 = re . compile ( r '<span class=\"rating_num\".*?>(.*?)</span>' ) ranks = pattern2 . findall ( resp . text ) for title , rank in zip ( titles , ranks ): print ( title , rank ) \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u9700\u8981\u4fee\u6539 APP_KEY \u4e3a\u81ea\u5df1\u521b\u5efa\u7684\u8ba2\u5355\u5bf9\u5e94\u7684 Appkey \u503c\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u5728\u7528\u6237\u4e2d\u5fc3\u7528\u6237\u8ba2\u5355\u4e2d\u67e5\u770b\u5230\u3002\u8611\u83c7\u4ee3\u7406\u63d0\u4f9b\u4e86\u514d\u8d39\u7684 API \u4ee3\u7406\u548c HTTP \u96a7\u9053\u4ee3\u7406\u8bd5\u7528\uff0c\u4f46\u662f\u8bd5\u7528\u7684\u4ee3\u7406\u63a5\u901a\u7387\u4e0d\u80fd\u4fdd\u8bc1\uff0c\u5efa\u8bae\u5927\u5bb6\u8fd8\u662f\u76f4\u63a5\u8d2d\u4e70\u4e00\u4e2a\u5728\u81ea\u5df1\u652f\u4ed8\u80fd\u529b\u8303\u56f4\u5185\u7684\u4ee3\u7406\u670d\u52a1\u6765\u4f53\u9a8c\u3002 \u53e6\u6ce8 \uff1a\u8611\u83c7\u4ee3\u7406\u76ee\u524d\u5df2\u7ecf\u505c\u6b62\u670d\u52a1\u4e86\uff0c\u5927\u5bb6\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u8bb2\u89e3\u7684\u65b9\u5f0f\u4f7f\u7528\u5176\u4ed6\u5546\u4e1a\u4ee3\u7406\u5373\u53ef\u3002 \u7b80\u5355\u7684\u603b\u7ed3 Python \u8bed\u8a00\u80fd\u505a\u7684\u4e8b\u60c5\u771f\u7684\u5f88\u591a\uff0c\u5c31\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u8fd9\u4e00\u9879\u800c\u8a00\uff0cPython \u51e0\u4e4e\u662f\u4e00\u679d\u72ec\u79c0\u7684\uff0c\u5927\u91cf\u7684\u4f01\u4e1a\u548c\u4e2a\u4eba\u90fd\u5728\u4f7f\u7528 Python \u4ece\u7f51\u7edc\u4e0a\u83b7\u53d6\u81ea\u5df1\u9700\u8981\u7684\u6570\u636e\uff0c\u8fd9\u53ef\u80fd\u4e5f\u662f\u4f60\u5c06\u6765\u65e5\u5e38\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\u3002\u53e6\u5916\uff0c\u7528\u7f16\u5199\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u65b9\u5f0f\u4ece\u7f51\u9875\u4e2d\u63d0\u53d6\u5185\u5bb9\u867d\u7136\u53ef\u884c\uff0c\u4f46\u662f\u5199\u51fa\u4e00\u4e2a\u80fd\u591f\u6ee1\u8db3\u9700\u6c42\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u672c\u8eab\u4e5f\u4e0d\u662f\u4ef6\u5bb9\u6613\u7684\u4e8b\u60c5\uff0c\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\u5c24\u4e3a\u660e\u663e\u3002\u5728\u4e0b\u4e00\u8282\u8bfe\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u53e6\u5916\u4e24\u79cd\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u867d\u7136\u4ece\u6027\u80fd\u4e0a\u6765\u8bb2\uff0c\u5b83\u4eec\u53ef\u80fd\u4e0d\u5982\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u5374\u964d\u4f4e\u4e86\u7f16\u7801\u7684\u590d\u6742\u6027\uff0c\u76f8\u4fe1\u5927\u5bb6\u4f1a\u559c\u6b22\u4e0a\u5b83\u4eec\u7684\u3002","title":"\u7b2c32\u8bfe\uff1a\u7528Python\u83b7\u53d6\u7f51\u7edc\u8d44\u6e90"},{"location":"%E7%AC%AC32%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%8E%B7%E5%8F%96%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90/#32python","text":"\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u662f Python \u8bed\u8a00\u975e\u5e38\u64c5\u957f\u7684\u9886\u57df\uff0c\u4e0a\u8282\u8bfe\u6211\u4eec\u8bb2\u5230\uff0c\u5b9e\u73b0\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u7684\u7a0b\u5e8f\u901a\u5e38\u79f0\u4e4b\u4e3a\u7f51\u7edc\u722c\u866b\u6216\u8718\u86db\u7a0b\u5e8f\u3002\u5373\u4fbf\u662f\u5728\u5927\u6570\u636e\u65f6\u4ee3\uff0c\u6570\u636e\u5bf9\u4e8e\u4e2d\u5c0f\u4f01\u4e1a\u6765\u8bf4\u4ecd\u7136\u662f\u786c\u4f24\u548c\u77ed\u677f\uff0c\u6709\u4e9b\u6570\u636e\u9700\u8981\u901a\u8fc7\u5f00\u653e\u6216\u4ed8\u8d39\u7684\u6570\u636e\u63a5\u53e3\u6765\u83b7\u5f97\uff0c\u5176\u4ed6\u7684\u884c\u4e1a\u6570\u636e\u548c\u7ade\u5bf9\u6570\u636e\u5219\u5fc5\u987b\u8981\u901a\u8fc7\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u7684\u65b9\u5f0f\u6765\u83b7\u5f97\u3002\u4e0d\u7ba1\u4f7f\u7528\u54ea\u79cd\u65b9\u5f0f\u83b7\u53d6\u7f51\u7edc\u6570\u636e\u8d44\u6e90\uff0cPython \u8bed\u8a00\u90fd\u662f\u975e\u5e38\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a Python \u7684\u6807\u51c6\u5e93\u548c\u4e09\u65b9\u5e93\u90fd\u5bf9\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u63d0\u4f9b\u4e86\u826f\u597d\u7684\u652f\u6301\u3002","title":"\u7b2c32\u8bfe\uff1a\u7528Python\u83b7\u53d6\u7f51\u7edc\u6570\u636e"},{"location":"%E7%AC%AC32%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%8E%B7%E5%8F%96%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90/#requests","text":"\u8981\u4f7f\u7528 Python \u83b7\u53d6\u7f51\u7edc\u6570\u636e\uff0c\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u540d\u4e3a requests \u7684\u4e09\u65b9\u5e93\uff0c\u8fd9\u4e2a\u5e93\u6211\u4eec\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\u5176\u5b9e\u5df2\u7ecf\u4f7f\u7528\u8fc7\u4e86\u3002\u6309\u7167\u5b98\u65b9\u7f51\u7ad9\u7684\u89e3\u91ca\uff0c requests \u662f\u57fa\u4e8e Python \u6807\u51c6\u5e93\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u7b80\u5316\u4e86\u901a\u8fc7 HTTP \u6216 HTTPS \u8bbf\u95ee\u7f51\u7edc\u8d44\u6e90\u7684\u64cd\u4f5c\u3002\u4e0a\u8bfe\u6211\u4eec\u63d0\u5230\u8fc7\uff0cHTTP \u662f\u4e00\u4e2a\u8bf7\u6c42\u54cd\u5e94\u5f0f\u7684\u534f\u8bae\uff0c\u5f53\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u6b63\u786e\u7684 URL \uff08\u901a\u5e38\u4e5f\u79f0\u4e3a\u7f51\u5740\uff09\u5e76\u6309\u4e0b Enter \u952e\u65f6\uff0c\u6211\u4eec\u5c31\u5411\u7f51\u7edc\u4e0a\u7684 Web \u670d\u52a1\u5668 \u53d1\u9001\u4e86\u4e00\u4e2a HTTP \u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u5728\u6536\u5230\u8bf7\u6c42\u540e\u4f1a\u7ed9\u6211\u4eec\u4e00\u4e2a HTTP \u54cd\u5e94\u3002\u5728 Chrome \u6d4f\u89c8\u5668\u4e2d\u7684\u83dc\u5355\u4e2d\u6253\u5f00\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\u5207\u6362\u5230\u201cNetwork\u201d\u9009\u9879\u5361\u5c31\u80fd\u591f\u67e5\u770b HTTP \u8bf7\u6c42\u548c\u54cd\u5e94\u5230\u5e95\u662f\u4ec0\u4e48\u6837\u5b50\u7684\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u901a\u8fc7 requests \u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9 Python \u7a0b\u5e8f\u5411\u6d4f\u89c8\u5668\u4e00\u6837\u5411 Web \u670d\u52a1\u5668\u53d1\u8d77\u8bf7\u6c42\uff0c\u5e76\u63a5\u6536\u670d\u52a1\u5668\u8fd4\u56de\u7684\u54cd\u5e94\uff0c\u4ece\u54cd\u5e94\u4e2d\u6211\u4eec\u5c31\u53ef\u4ee5\u63d0\u53d6\u51fa\u60f3\u8981\u7684\u6570\u636e\u3002\u6d4f\u89c8\u5668\u5448\u73b0\u7ed9\u6211\u4eec\u7684\u7f51\u9875\u662f\u7528 HTML \u7f16\u5199\u7684\uff0c\u6d4f\u89c8\u5668\u76f8\u5f53\u4e8e\u662f HTML \u7684\u89e3\u91ca\u5668\u73af\u5883\uff0c\u6211\u4eec\u770b\u5230\u7684\u7f51\u9875\u4e2d\u7684\u5185\u5bb9\u90fd\u5305\u542b\u5728 HTML \u7684\u6807\u7b7e\u4e2d\u3002\u5728\u83b7\u53d6\u5230 HTML \u4ee3\u7801\u540e\uff0c\u5c31\u53ef\u4ee5\u4ece\u6807\u7b7e\u7684\u5c5e\u6027\u6216\u6807\u7b7e\u4f53\u4e2d\u63d0\u53d6\u5185\u5bb9\u3002\u4e0b\u9762\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u83b7\u53d6\u7f51\u9875 HTML \u4ee3\u7801\uff0c\u6211\u4eec\u901a\u8fc7 requests \u5e93\u7684 get \u51fd\u6570\uff0c\u83b7\u53d6\u4e86\u641c\u72d0\u9996\u9875\u7684\u4ee3\u7801\u3002 import requests resp = requests . get ( 'https://www.sohu.com/' ) if resp . status_code == 200 : print ( resp . text ) \u8bf4\u660e \uff1a\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u53d8\u91cf resp \u662f\u4e00\u4e2a Response \u5bf9\u8c61\uff08 requests \u5e93\u5c01\u88c5\u7684\u7c7b\u578b\uff09\uff0c\u901a\u8fc7\u8be5\u5bf9\u8c61\u7684 status_code \u5c5e\u6027\u53ef\u4ee5\u83b7\u53d6\u54cd\u5e94\u72b6\u6001\u7801\uff0c\u800c\u8be5\u5bf9\u8c61\u7684 text \u5c5e\u6027\u53ef\u4ee5\u5e2e\u6211\u4eec\u83b7\u53d6\u5230\u9875\u9762\u7684 HTML \u4ee3\u7801\u3002 \u7531\u4e8e Response \u5bf9\u8c61\u7684 text \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e4b\u524d\u8bb2\u8fc7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u77e5\u8bc6\uff0c\u4ece\u9875\u9762\u7684 HTML \u4ee3\u7801\u4e2d\u63d0\u53d6\u65b0\u95fb\u7684\u6807\u9898\u548c\u94fe\u63a5\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import re import requests pattern = re . compile ( r '<a.*?href=\"(.*?)\".*?title=\"(.*?)\".*?>' ) resp = requests . get ( 'https://www.sohu.com/' ) if resp . status_code == 200 : all_matches = pattern . findall ( resp . text ) for href , title in all_matches : print ( href ) print ( title ) \u9664\u4e86\u6587\u672c\u5185\u5bb9\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 requests \u5e93\u901a\u8fc7 URL \u83b7\u53d6\u4e8c\u8fdb\u5236\u8d44\u6e90\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u83b7\u53d6\u767e\u5ea6 Logo \u5e76\u4fdd\u5b58\u5230\u540d\u4e3a baidu.png \u7684\u672c\u5730\u6587\u4ef6\u4e2d\u3002\u53ef\u4ee5\u5728\u767e\u5ea6\u7684\u9996\u9875\u4e0a\u53f3\u952e\u70b9\u51fb\u767e\u5ea6Logo\uff0c\u5e76\u901a\u8fc7\u201c\u590d\u5236\u56fe\u7247\u5730\u5740\u201d\u83dc\u5355\u9879\u83b7\u53d6\u56fe\u7247\u7684 URL\u3002 import requests resp = requests . get ( 'https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png' ) with open ( 'baidu.png' , 'wb' ) as file : file . write ( resp . content ) \u8bf4\u660e \uff1a Response \u5bf9\u8c61\u7684 content \u5c5e\u6027\u53ef\u4ee5\u83b7\u5f97\u670d\u52a1\u5668\u54cd\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u3002 requests \u5e93\u975e\u5e38\u597d\u7528\u800c\u4e14\u529f\u80fd\u4e0a\u4e5f\u6bd4\u8f83\u5f3a\u5927\u548c\u5b8c\u6574\uff0c\u5177\u4f53\u7684\u5185\u5bb9\u6211\u4eec\u5728\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\u4e3a\u5927\u5bb6\u4e00\u70b9\u70b9\u5256\u6790\u3002\u60f3\u89e3\u9501\u5173\u4e8e requests \u5e93\u66f4\u591a\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u9605\u8bfb\u5b83\u7684 \u5b98\u65b9\u6587\u6863 \u3002","title":"requests\u5e93"},{"location":"%E7%AC%AC32%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%8E%B7%E5%8F%96%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90/#_1","text":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4ee5\u201c\u8c46\u74e3\u7535\u5f71\u201d\u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u8bb2\u89e3\u5982\u4f55\u7f16\u5199\u722c\u866b\u4ee3\u7801\u3002\u6309\u7167\u4e0a\u9762\u63d0\u4f9b\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5148\u4f7f\u7528 requests \u83b7\u53d6\u5230\u7f51\u9875\u7684HTML\u4ee3\u7801\uff0c\u7136\u540e\u5c06\u6574\u4e2a\u4ee3\u7801\u770b\u6210\u4e00\u4e2a\u957f\u5b57\u7b26\u4e32\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6355\u83b7\u7ec4\u4ece\u5b57\u7b26\u4e32\u63d0\u53d6\u6211\u4eec\u9700\u8981\u7684\u5185\u5bb9\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4ece \u8c46\u74e3\u7535\u5f71 \u83b7\u53d6\u6392\u524d250\u540d\u7684\u7535\u5f71\u7684\u540d\u79f0\u3002 \u8c46\u74e3\u7535\u5f71Top250 \u7684\u9875\u9762\u7ed3\u6784\u548c\u5bf9\u5e94\u4ee3\u7801\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u6bcf\u9875\u5171\u5c55\u793a\u4e8625\u90e8\u7535\u5f71\uff0c\u5982\u679c\u8981\u83b7\u53d6\u5230 Top250 \u6570\u636e\uff0c\u6211\u4eec\u5171\u9700\u8981\u8bbf\u95ee10\u4e2a\u9875\u9762\uff0c\u5bf9\u5e94\u7684\u5730\u5740\u662f https://movie.douban.com/top250?start=xxx \uff0c\u8fd9\u91cc\u7684 xxx \u5982\u679c\u4e3a 0 \u5c31\u662f\u7b2c\u4e00\u9875\uff0c\u5982\u679c xxx \u7684\u503c\u662f 100 \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee\u5230\u7b2c\u4e94\u9875\u3002\u4e3a\u4e86\u4ee3\u7801\u7b80\u5355\u6613\u8bfb\uff0c\u6211\u4eec\u53ea\u83b7\u53d6\u7535\u5f71\u7684\u6807\u9898\u548c\u8bc4\u5206\u3002 import random import re import time import requests for page in range ( 1 , 11 ): resp = requests . get ( url = f 'https://movie.douban.com/top250?start= { ( page - 1 ) * 25 } ' , # \u5982\u679c\u4e0d\u8bbe\u7f6eHTTP\u8bf7\u6c42\u5934\u4e2d\u7684User-Agent\uff0c\u8c46\u74e3\u4f1a\u68c0\u6d4b\u51fa\u4e0d\u662f\u6d4f\u89c8\u5668\u800c\u963b\u6b62\u6211\u4eec\u7684\u8bf7\u6c42\u3002 # \u901a\u8fc7get\u51fd\u6570\u7684headers\u53c2\u6570\u8bbe\u7f6eUser-Agent\u7684\u503c\uff0c\u5177\u4f53\u7684\u503c\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u7684\u5f00\u53d1\u8005\u5de5\u5177\u67e5\u770b\u5230\u3002 # \u7528\u722c\u866b\u8bbf\u95ee\u5927\u90e8\u5206\u7f51\u7ad9\u65f6\uff0c\u5c06\u722c\u866b\u4f2a\u88c5\u6210\u6765\u81ea\u6d4f\u89c8\u5668\u7684\u8bf7\u6c42\u90fd\u662f\u975e\u5e38\u91cd\u8981\u7684\u4e00\u6b65\u3002 headers = { 'User-Agent' : 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36' } ) # \u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u83b7\u53d6class\u5c5e\u6027\u4e3atitle\u4e14\u6807\u7b7e\u4f53\u4e0d\u4ee5&\u5f00\u5934\u7684span\u6807\u7b7e\u5e76\u7528\u6355\u83b7\u7ec4\u63d0\u53d6\u6807\u7b7e\u5185\u5bb9 pattern1 = re . compile ( r '<span class=\"title\">([^&]*?)</span>' ) titles = pattern1 . findall ( resp . text ) # \u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u83b7\u53d6class\u5c5e\u6027\u4e3arating_num\u7684span\u6807\u7b7e\u5e76\u7528\u6355\u83b7\u7ec4\u63d0\u53d6\u6807\u7b7e\u5185\u5bb9 pattern2 = re . compile ( r '<span class=\"rating_num\".*?>(.*?)</span>' ) ranks = pattern2 . findall ( resp . text ) # \u4f7f\u7528zip\u538b\u7f29\u4e24\u4e2a\u5217\u8868\uff0c\u5faa\u73af\u904d\u5386\u6240\u6709\u7684\u7535\u5f71\u6807\u9898\u548c\u8bc4\u5206 for title , rank in zip ( titles , ranks ): print ( title , rank ) # \u968f\u673a\u4f11\u77201-5\u79d2\uff0c\u907f\u514d\u722c\u53d6\u9875\u9762\u8fc7\u4e8e\u9891\u7e41 time . sleep ( random . random () * 4 + 1 ) \u8bf4\u660e \uff1a\u901a\u8fc7\u5206\u6790\u8c46\u74e3\u7f51\u7684robots\u534f\u8bae\uff0c\u6211\u4eec\u53d1\u73b0\u8c46\u74e3\u7f51\u5e76\u4e0d\u62d2\u7edd\u767e\u5ea6\u722c\u866b\u83b7\u53d6\u5b83\u7684\u6570\u636e\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06\u722c\u866b\u4f2a\u88c5\u6210\u767e\u5ea6\u7684\u722c\u866b\uff0c\u5c06 get \u51fd\u6570\u7684 headers \u53c2\u6570\u4fee\u6539\u4e3a\uff1a headers={'User-Agent': 'BaiduSpider'} \u3002","title":"\u7f16\u5199\u722c\u866b\u4ee3\u7801"},{"location":"%E7%AC%AC32%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%8E%B7%E5%8F%96%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90/#ip","text":"\u8ba9\u722c\u866b\u7a0b\u5e8f\u9690\u533f\u81ea\u5df1\u7684\u8eab\u4efd\u5bf9\u7f16\u5199\u722c\u866b\u7a0b\u5e8f\u6765\u8bf4\u662f\u6bd4\u8f83\u91cd\u8981\u7684\uff0c\u5f88\u591a\u7f51\u7ad9\u5bf9\u722c\u866b\u90fd\u6bd4\u8f83\u53cd\u611f\u7684\uff0c\u56e0\u4e3a\u722c\u866b\u4f1a\u8017\u8d39\u6389\u5b83\u4eec\u5f88\u591a\u7684\u7f51\u7edc\u5e26\u5bbd\u5e76\u5236\u9020\u5f88\u591a\u65e0\u6548\u7684\u6d41\u91cf\u3002\u8981\u9690\u533f\u8eab\u4efd\u901a\u5e38\u9700\u8981\u4f7f\u7528 \u5546\u4e1a IP \u4ee3\u7406 \uff08\u5982\u8611\u83c7\u4ee3\u7406\u3001\u829d\u9ebb\u4ee3\u7406\u3001\u5feb\u4ee3\u7406\u7b49\uff09\uff0c\u8ba9\u88ab\u722c\u53d6\u7684\u7f51\u7ad9\u65e0\u6cd5\u83b7\u53d6\u722c\u866b\u7a0b\u5e8f\u6765\u6e90\u7684\u771f\u5b9e IP \u5730\u5740\uff0c\u4e5f\u5c31\u65e0\u6cd5\u7b80\u5355\u7684\u901a\u8fc7 IP \u5730\u5740\u5bf9\u722c\u866b\u7a0b\u5e8f\u8fdb\u884c\u5c01\u7981\u3002 \u4e0b\u9762\u4ee5 \u8611\u83c7\u4ee3\u7406 \u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u8bb2\u89e3\u5546\u4e1a IP \u4ee3\u7406\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u9996\u5148\u9700\u8981\u5728\u8be5\u7f51\u7ad9\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\uff0c\u6ce8\u518c\u8d26\u53f7\u540e\u5c31\u53ef\u4ee5 \u8d2d\u4e70 \u76f8\u5e94\u7684\u5957\u9910\u6765\u83b7\u5f97\u5546\u4e1a IP \u4ee3\u7406\u3002\u4f5c\u4e3a\u5546\u4e1a\u7528\u9014\uff0c\u5efa\u8bae\u5927\u5bb6\u8d2d\u4e70\u4e0d\u9650\u91cf\u5957\u9910\uff0c\u8fd9\u6837\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u8981\u83b7\u53d6\u8db3\u591f\u591a\u7684\u4ee3\u7406 IP \u5730\u5740\uff1b\u4f5c\u4e3a\u5b66\u4e60\u7528\u9014\uff0c\u53ef\u4ee5\u8d2d\u4e70\u5305\u65f6\u5957\u9910\u6216\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u6765\u51b3\u5b9a\u3002\u8611\u83c7\u4ee3\u7406\u63d0\u4f9b\u4e86\u4e24\u79cd\u63a5\u5165\u4ee3\u7406\u7684\u65b9\u5f0f\uff0c\u5206\u522b\u662f API \u79c1\u5bc6\u4ee3\u7406\u548c HTTP \u96a7\u9053\u4ee3\u7406\uff0c\u524d\u8005\u662f\u901a\u8fc7\u8bf7\u6c42\u8611\u83c7\u4ee3\u7406\u7684 API \u63a5\u53e3\u83b7\u53d6\u4ee3\u7406\u670d\u52a1\u5668\u5730\u5740\uff0c\u540e\u8005\u662f\u76f4\u63a5\u4f7f\u7528\u7edf\u4e00\u7684\u5165\u53e3\uff08\u8611\u83c7\u4ee3\u7406\u63d0\u4f9b\u7684\u57df\u540d\uff09\u8fdb\u884c\u63a5\u5165\u3002 \u4e0b\u9762\uff0c\u6211\u4eec\u4ee5HTTP\u96a7\u9053\u4ee3\u7406\u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u8bb2\u89e3\u63a5\u5165 IP \u4ee3\u7406\u7684\u65b9\u5f0f\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u76f4\u63a5\u53c2\u8003\u8611\u83c7\u4ee3\u7406\u5b98\u7f51\u63d0\u4f9b\u7684\u4ee3\u7801\u6765\u4e3a\u722c\u866b\u8bbe\u7f6e\u4ee3\u7406\u3002 import requests APP_KEY = 'Wnp******************************XFx' PROXY_HOST = 'secondtransfer.moguproxy.com:9001' for page in range ( 1 , 11 ): resp = requests . get ( url = f 'https://movie.douban.com/top250?start= { ( page - 1 ) * 25 } ' , # \u9700\u8981\u5728HTTP\u8bf7\u6c42\u5934\u8bbe\u7f6e\u4ee3\u7406\u7684\u8eab\u4efd\u8ba4\u8bc1\u65b9\u5f0f headers = { 'Proxy-Authorization' : f 'Basic { APP_KEY } ' , 'User-Agent' : 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36' , 'Accept-Language' : 'zh-CN,zh;q=0.8,en-US;q=0.6,en;q=0.4' }, # \u8bbe\u7f6e\u4ee3\u7406\u670d\u52a1\u5668 proxies = { 'http' : f 'http:// { PROXY_HOST } ' , 'https' : f 'https:// { PROXY_HOST } ' }, verify = False ) pattern1 = re . compile ( r '<span class=\"title\">([^&]*?)</span>' ) titles = pattern1 . findall ( resp . text ) pattern2 = re . compile ( r '<span class=\"rating_num\".*?>(.*?)</span>' ) ranks = pattern2 . findall ( resp . text ) for title , rank in zip ( titles , ranks ): print ( title , rank ) \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u9700\u8981\u4fee\u6539 APP_KEY \u4e3a\u81ea\u5df1\u521b\u5efa\u7684\u8ba2\u5355\u5bf9\u5e94\u7684 Appkey \u503c\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u5728\u7528\u6237\u4e2d\u5fc3\u7528\u6237\u8ba2\u5355\u4e2d\u67e5\u770b\u5230\u3002\u8611\u83c7\u4ee3\u7406\u63d0\u4f9b\u4e86\u514d\u8d39\u7684 API \u4ee3\u7406\u548c HTTP \u96a7\u9053\u4ee3\u7406\u8bd5\u7528\uff0c\u4f46\u662f\u8bd5\u7528\u7684\u4ee3\u7406\u63a5\u901a\u7387\u4e0d\u80fd\u4fdd\u8bc1\uff0c\u5efa\u8bae\u5927\u5bb6\u8fd8\u662f\u76f4\u63a5\u8d2d\u4e70\u4e00\u4e2a\u5728\u81ea\u5df1\u652f\u4ed8\u80fd\u529b\u8303\u56f4\u5185\u7684\u4ee3\u7406\u670d\u52a1\u6765\u4f53\u9a8c\u3002 \u53e6\u6ce8 \uff1a\u8611\u83c7\u4ee3\u7406\u76ee\u524d\u5df2\u7ecf\u505c\u6b62\u670d\u52a1\u4e86\uff0c\u5927\u5bb6\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u8bb2\u89e3\u7684\u65b9\u5f0f\u4f7f\u7528\u5176\u4ed6\u5546\u4e1a\u4ee3\u7406\u5373\u53ef\u3002","title":"\u4f7f\u7528 IP \u4ee3\u7406"},{"location":"%E7%AC%AC32%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%8E%B7%E5%8F%96%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90/#_2","text":"Python \u8bed\u8a00\u80fd\u505a\u7684\u4e8b\u60c5\u771f\u7684\u5f88\u591a\uff0c\u5c31\u7f51\u7edc\u6570\u636e\u91c7\u96c6\u8fd9\u4e00\u9879\u800c\u8a00\uff0cPython \u51e0\u4e4e\u662f\u4e00\u679d\u72ec\u79c0\u7684\uff0c\u5927\u91cf\u7684\u4f01\u4e1a\u548c\u4e2a\u4eba\u90fd\u5728\u4f7f\u7528 Python \u4ece\u7f51\u7edc\u4e0a\u83b7\u53d6\u81ea\u5df1\u9700\u8981\u7684\u6570\u636e\uff0c\u8fd9\u53ef\u80fd\u4e5f\u662f\u4f60\u5c06\u6765\u65e5\u5e38\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\u3002\u53e6\u5916\uff0c\u7528\u7f16\u5199\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u65b9\u5f0f\u4ece\u7f51\u9875\u4e2d\u63d0\u53d6\u5185\u5bb9\u867d\u7136\u53ef\u884c\uff0c\u4f46\u662f\u5199\u51fa\u4e00\u4e2a\u80fd\u591f\u6ee1\u8db3\u9700\u6c42\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u672c\u8eab\u4e5f\u4e0d\u662f\u4ef6\u5bb9\u6613\u7684\u4e8b\u60c5\uff0c\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\u5c24\u4e3a\u660e\u663e\u3002\u5728\u4e0b\u4e00\u8282\u8bfe\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u53e6\u5916\u4e24\u79cd\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u867d\u7136\u4ece\u6027\u80fd\u4e0a\u6765\u8bb2\uff0c\u5b83\u4eec\u53ef\u80fd\u4e0d\u5982\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u5374\u964d\u4f4e\u4e86\u7f16\u7801\u7684\u590d\u6742\u6027\uff0c\u76f8\u4fe1\u5927\u5bb6\u4f1a\u559c\u6b22\u4e0a\u5b83\u4eec\u7684\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC33%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%A7%A3%E6%9E%90HTML%E9%A1%B5%E9%9D%A2/","text":"\u7b2c33\u8bfe\uff1a\u7528Python\u89e3\u6790HTML\u9875\u9762 \u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u8bb2\u5230\u4e86\u4f7f\u7528 request \u4e09\u65b9\u5e93\u83b7\u53d6\u7f51\u7edc\u8d44\u6e90\uff0c\u8fd8\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u524d\u7aef\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7ee7\u7eed\u63a2\u7d22\u5982\u4f55\u89e3\u6790 HTML \u4ee3\u7801\uff0c\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u51fa\u6709\u7528\u7684\u4fe1\u606f\u3002\u4e4b\u524d\uff0c\u6211\u4eec\u5c1d\u8bd5\u8fc7\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6355\u83b7\u7ec4\u64cd\u4f5c\u63d0\u53d6\u9875\u9762\u5185\u5bb9\uff0c\u4f46\u662f\u5199\u51fa\u4e00\u4e2a\u6b63\u786e\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e5f\u662f\u4e00\u4ef6\u8ba9\u4eba\u5934\u75bc\u7684\u4e8b\u60c5\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5f97\u5148\u6df1\u5165\u7684\u4e86\u89e3\u4e00\u4e0b HTML \u9875\u9762\u7684\u7ed3\u6784\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u7814\u7a76\u53e6\u5916\u7684\u89e3\u6790\u9875\u9762\u7684\u65b9\u6cd5\u3002 HTML \u9875\u9762\u7684\u7ed3\u6784 \u6211\u4eec\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u4efb\u610f\u4e00\u4e2a\u7f51\u7ad9\uff0c\u7136\u540e\u901a\u8fc7\u9f20\u6807\u53f3\u952e\u83dc\u5355\uff0c\u9009\u62e9\u201c\u663e\u793a\u7f51\u9875\u6e90\u4ee3\u7801\u201d\u83dc\u5355\u9879\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u7f51\u9875\u5bf9\u5e94\u7684 HTML \u4ee3\u7801\u3002 \u4ee3\u7801\u7684\u7b2c 1 \u884c\u662f\u6587\u6863\u7c7b\u578b\u58f0\u660e\uff0c\u7b2c 2 \u884c\u7684 <html> \u6807\u7b7e\u662f\u6574\u4e2a\u9875\u9762\u6839\u6807\u7b7e\u7684\u5f00\u59cb\u6807\u7b7e\uff0c\u6700\u540e\u4e00\u884c\u662f\u6839\u6807\u7b7e\u7684\u7ed3\u675f\u6807\u7b7e </html> \u3002 <html> \u6807\u7b7e\u4e0b\u9762\u6709\u4e24\u4e2a\u5b50\u6807\u7b7e <head> \u548c <body> \uff0c\u653e\u5728 <body> \u6807\u7b7e\u4e0b\u7684\u5185\u5bb9\u4f1a\u663e\u793a\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u662f\u7f51\u9875\u7684\u4e3b\u4f53\uff1b\u653e\u5728 <head> \u6807\u7b7e\u4e0b\u7684\u5185\u5bb9\u4e0d\u4f1a\u663e\u793a\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\uff0c\u4f46\u662f\u5374\u5305\u542b\u4e86\u9875\u9762\u91cd\u8981\u7684\u5143\u4fe1\u606f\uff0c\u901a\u5e38\u79f0\u4e4b\u4e3a\u7f51\u9875\u7684\u5934\u90e8\u3002HTML \u9875\u9762\u5927\u81f4\u7684\u4ee3\u7801\u7ed3\u6784\u5982\u4e0b\u6240\u793a\u3002 <!doctype html> < html > < head > <!-- \u9875\u9762\u7684\u5143\u4fe1\u606f\uff0c\u5982\u5b57\u7b26\u7f16\u7801\u3001\u6807\u9898\u3001\u5173\u952e\u5b57\u3001\u5a92\u4f53\u67e5\u8be2\u7b49 --> </ head > < body > <!-- \u9875\u9762\u7684\u4e3b\u4f53\uff0c\u663e\u793a\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u7684\u5185\u5bb9 --> </ body > </ html > \u6807\u7b7e\u3001\u5c42\u53e0\u6837\u5f0f\u8868\uff08CSS\uff09\u3001JavaScript \u662f\u6784\u6210 HTML \u9875\u9762\u7684\u4e09\u8981\u7d20\uff0c\u5176\u4e2d\u6807\u7b7e\u7528\u6765\u627f\u8f7d\u9875\u9762\u8981\u663e\u793a\u7684\u5185\u5bb9\uff0cCSS \u8d1f\u8d23\u5bf9\u9875\u9762\u7684\u6e32\u67d3\uff0c\u800c JavaScript \u7528\u6765\u63a7\u5236\u9875\u9762\u7684\u4ea4\u4e92\u5f0f\u884c\u4e3a\u3002\u8981\u5b9e\u73b0 HTML \u9875\u9762\u7684\u89e3\u6790\uff0c\u53ef\u4ee5\u4f7f\u7528 XPath \u7684\u8bed\u6cd5\uff0c\u5b83\u539f\u672c\u662f XML \u7684\u4e00\u79cd\u67e5\u8be2\u8bed\u6cd5\uff0c\u53ef\u4ee5\u6839\u636e HTML \u6807\u7b7e\u7684\u5c42\u6b21\u7ed3\u6784\u63d0\u53d6\u6807\u7b7e\u4e2d\u7684\u5185\u5bb9\u6216\u6807\u7b7e\u5c5e\u6027\uff1b\u6b64\u5916\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 CSS \u9009\u62e9\u5668\u6765\u5b9a\u4f4d\u9875\u9762\u5143\u7d20\uff0c\u5c31\u8ddf\u7528 CSS \u6e32\u67d3\u9875\u9762\u5143\u7d20\u662f\u540c\u6837\u7684\u9053\u7406\u3002 XPath \u89e3\u6790 XPath \u662f\u5728 XML\uff08eXtensible Markup Language\uff09\u6587\u6863\u4e2d\u67e5\u627e\u4fe1\u606f\u7684\u4e00\u79cd\u8bed\u6cd5\uff0cXML \u8ddf HTML \u7c7b\u4f3c\u4e5f\u662f\u4e00\u79cd\u7528\u6807\u7b7e\u627f\u8f7d\u6570\u636e\u7684\u6807\u7b7e\u8bed\u8a00\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e XML \u7684\u6807\u7b7e\u662f\u53ef\u6269\u5c55\u7684\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\uff0c\u800c\u4e14 XML \u5bf9\u8bed\u6cd5\u6709\u66f4\u4e25\u683c\u7684\u8981\u6c42\u3002XPath \u4f7f\u7528\u8def\u5f84\u8868\u8fbe\u5f0f\u6765\u9009\u53d6 XML \u6587\u6863\u4e2d\u7684\u8282\u70b9\u6216\u8005\u8282\u70b9\u96c6\uff0c\u8fd9\u91cc\u6240\u8bf4\u7684\u8282\u70b9\u5305\u62ec\u5143\u7d20\u3001\u5c5e\u6027\u3001\u6587\u672c\u3001\u547d\u540d\u7a7a\u95f4\u3001\u5904\u7406\u6307\u4ee4\u3001\u6ce8\u91ca\u3001\u6839\u8282\u70b9\u7b49\u3002\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u5982\u4f55\u4f7f\u7528 XPath \u5bf9\u9875\u9762\u8fdb\u884c\u89e3\u6790\u3002 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <bookstore> <book> <title lang= \"eng\" > Harry Potter </title> <price> 29.99 </price> </book> <book> <title lang= \"zh\" > Learning XML </title> <price> 39.95 </price> </book> </bookstore> \u5bf9\u4e8e\u4e0a\u9762\u7684 XML \u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5982\u4e0b\u6240\u793a\u7684 XPath \u8bed\u6cd5\u83b7\u53d6\u6587\u6863\u4e2d\u7684\u8282\u70b9\u3002 \u8def\u5f84\u8868\u8fbe\u5f0f \u7ed3\u679c /bookstore \u9009\u53d6\u6839\u5143\u7d20 bookstore\u3002 \u6ce8\u610f \uff1a\u5047\u5982\u8def\u5f84\u8d77\u59cb\u4e8e\u6b63\u659c\u6760( / )\uff0c\u5219\u6b64\u8def\u5f84\u59cb\u7ec8\u4ee3\u8868\u5230\u67d0\u5143\u7d20\u7684\u7edd\u5bf9\u8def\u5f84\uff01 //book \u9009\u53d6\u6240\u6709 book \u5b50\u5143\u7d20\uff0c\u800c\u4e0d\u7ba1\u5b83\u4eec\u5728\u6587\u6863\u4e2d\u7684\u4f4d\u7f6e\u3002 //@lang \u9009\u53d6\u540d\u4e3a lang \u7684\u6240\u6709\u5c5e\u6027\u3002 /bookstore/book[1] \u9009\u53d6\u5c5e\u4e8e bookstore \u5b50\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a book \u5143\u7d20\u3002 /bookstore/book[last()] \u9009\u53d6\u5c5e\u4e8e bookstore \u5b50\u5143\u7d20\u7684\u6700\u540e\u4e00\u4e2a book \u5143\u7d20\u3002 /bookstore/book[last()-1] \u9009\u53d6\u5c5e\u4e8e bookstore \u5b50\u5143\u7d20\u7684\u5012\u6570\u7b2c\u4e8c\u4e2a book \u5143\u7d20\u3002 /bookstore/book[position()<3] \u9009\u53d6\u6700\u524d\u9762\u7684\u4e24\u4e2a\u5c5e\u4e8e bookstore \u5143\u7d20\u7684\u5b50\u5143\u7d20\u7684 book \u5143\u7d20\u3002 //title[@lang] \u9009\u53d6\u6240\u6709\u62e5\u6709\u540d\u4e3a lang \u7684\u5c5e\u6027\u7684 title \u5143\u7d20\u3002 //title[@lang='eng'] \u9009\u53d6\u6240\u6709 title \u5143\u7d20\uff0c\u4e14\u8fd9\u4e9b\u5143\u7d20\u62e5\u6709\u503c\u4e3a eng \u7684 lang \u5c5e\u6027\u3002 /bookstore/book[price>35.00] \u9009\u53d6 bookstore \u5143\u7d20\u7684\u6240\u6709 book \u5143\u7d20\uff0c\u4e14\u5176\u4e2d\u7684 price \u5143\u7d20\u7684\u503c\u987b\u5927\u4e8e 35.00\u3002 /bookstore/book[price>35.00]/title \u9009\u53d6 bookstore \u5143\u7d20\u4e2d\u7684 book \u5143\u7d20\u7684\u6240\u6709 title \u5143\u7d20\uff0c\u4e14\u5176\u4e2d\u7684 price \u5143\u7d20\u7684\u503c\u987b\u5927\u4e8e 35.00\u3002 XPath\u8fd8\u652f\u6301\u901a\u914d\u7b26\u7528\u6cd5\uff0c\u5982\u4e0b\u6240\u793a\u3002 \u8def\u5f84\u8868\u8fbe\u5f0f \u7ed3\u679c /bookstore/* \u9009\u53d6 bookstore \u5143\u7d20\u7684\u6240\u6709\u5b50\u5143\u7d20\u3002 //* \u9009\u53d6\u6587\u6863\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002 //title[@*] \u9009\u53d6\u6240\u6709\u5e26\u6709\u5c5e\u6027\u7684 title \u5143\u7d20\u3002 \u5982\u679c\u8981\u9009\u53d6\u591a\u4e2a\u8282\u70b9\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684\u65b9\u6cd5\u3002 \u8def\u5f84\u8868\u8fbe\u5f0f \u7ed3\u679c //book/title \\| //book/price \u9009\u53d6 book \u5143\u7d20\u7684\u6240\u6709 title \u548c price \u5143\u7d20\u3002 //title \\| //price \u9009\u53d6\u6587\u6863\u4e2d\u7684\u6240\u6709 title \u548c price \u5143\u7d20\u3002 /bookstore/book/title \\| //price \u9009\u53d6\u5c5e\u4e8e bookstore \u5143\u7d20\u7684 book \u5143\u7d20\u7684\u6240\u6709 title \u5143\u7d20\uff0c\u4ee5\u53ca\u6587\u6863\u4e2d\u6240\u6709\u7684 price \u5143\u7d20\u3002 \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4f8b\u5b50\u6765\u81ea\u4e8e\u201c\u83dc\u9e1f\u6559\u7a0b\u201d\u7f51\u7ad9\u4e0a\u7684 XPath \u6559\u7a0b \uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u539f\u6587\u3002 \u5f53\u7136\uff0c\u5982\u679c\u4e0d\u7406\u89e3\u6216\u4e0d\u719f\u6089 XPath \u8bed\u6cd5\uff0c\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u7684\u5f00\u53d1\u8005\u5de5\u5177\u4e2d\u6309\u7167\u5982\u4e0b\u6240\u793a\u7684\u65b9\u6cd5\u67e5\u770b\u5143\u7d20\u7684 XPath \u8bed\u6cd5\uff0c\u4e0b\u56fe\u662f\u5728 Chrome \u6d4f\u89c8\u5668\u7684\u5f00\u53d1\u8005\u5de5\u5177\u4e2d\u67e5\u770b\u8c46\u74e3\u7f51\u7535\u5f71\u8be6\u60c5\u4fe1\u606f\u4e2d\u5f71\u7247\u6807\u9898\u7684 XPath \u8bed\u6cd5\u3002 \u5b9e\u73b0 XPath \u89e3\u6790\u9700\u8981\u4e09\u65b9\u5e93 lxml \u7684\u652f\u6301\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5b89\u88c5 lxml \u3002 pip install lxml \u4e0b\u9762\u6211\u4eec\u7528 XPath \u89e3\u6790\u65b9\u5f0f\u6539\u5199\u4e4b\u524d\u83b7\u53d6\u8c46\u74e3\u7535\u5f71 Top250\u7684\u4ee3\u7801\uff0c\u5982\u4e0b\u6240\u793a\u3002 from lxml import etree import requests for page in range ( 1 , 11 ): resp = requests . get ( url = f 'https://movie.douban.com/top250?start= { ( page - 1 ) * 25 } ' , headers = { 'User-Agent' : 'BaiduSpider' } ) tree = etree . HTML ( resp . text ) # \u901a\u8fc7XPath\u8bed\u6cd5\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u7535\u5f71\u6807\u9898 title_spans = tree . xpath ( '//*[@id=\"content\"]/div/div[1]/ol/li/div/div[2]/div[1]/a/span[1]' ) # \u901a\u8fc7XPath\u8bed\u6cd5\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u7535\u5f71\u8bc4\u5206 rank_spans = tree . xpath ( '//*[@id=\"content\"]/div/div[1]/ol/li[1]/div/div[2]/div[2]/div/span[2]' ) for title_span , rank_span in zip ( title_spans , rank_spans ): print ( title_span . text , rank_span . text ) CSS \u9009\u62e9\u5668\u89e3\u6790 \u5bf9\u4e8e\u719f\u6089 CSS \u9009\u62e9\u5668\u548c JavaScript \u7684\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u901a\u8fc7 CSS \u9009\u62e9\u5668\u83b7\u53d6\u9875\u9762\u5143\u7d20\u53ef\u80fd\u662f\u66f4\u4e3a\u7b80\u5355\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u7684 JavaScript \u672c\u8eab\u5c31\u53ef\u4ee5 document \u5bf9\u8c61\u7684 querySelector() \u548c querySelectorAll() \u65b9\u6cd5\u57fa\u4e8e CSS \u9009\u62e9\u5668\u83b7\u53d6\u9875\u9762\u5143\u7d20\u3002\u5728 Python \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e09\u65b9\u5e93 beautifulsoup4 \u6216 pyquery \u6765\u505a\u540c\u6837\u7684\u4e8b\u60c5\u3002Beautiful Soup \u53ef\u4ee5\u7528\u6765\u89e3\u6790 HTML \u548c XML \u6587\u6863\uff0c\u4fee\u590d\u542b\u6709\u672a\u95ed\u5408\u6807\u7b7e\u7b49\u9519\u8bef\u7684\u6587\u6863\uff0c\u901a\u8fc7\u4e3a\u5f85\u89e3\u6790\u7684\u9875\u9762\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u4e00\u68f5\u6811\u7ed3\u6784\uff0c\u5b9e\u73b0\u5bf9\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u6570\u636e\u64cd\u4f5c\u7684\u5c01\u88c5\u3002\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5 Beautiful Soup\u3002 pip install beautifulsoup4 \u4e0b\u9762\u662f\u4f7f\u7528 bs4 \u6539\u5199\u7684\u83b7\u53d6\u8c46\u74e3\u7535\u5f71Top250\u7535\u5f71\u540d\u79f0\u7684\u4ee3\u7801\u3002 import bs4 import requests for page in range ( 1 , 11 ): resp = requests . get ( url = f 'https://movie.douban.com/top250?start= { ( page - 1 ) * 25 } ' , headers = { 'User-Agent' : 'BaiduSpider' } ) # \u521b\u5efaBeautifulSoup\u5bf9\u8c61 soup = bs4 . BeautifulSoup ( resp . text , 'lxml' ) # \u901a\u8fc7CSS\u9009\u62e9\u5668\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u5305\u542b\u7535\u5f71\u6807\u9898\u7684span\u6807\u7b7e title_spans = soup . select ( 'div.info > div.hd > a > span:nth-child(1)' ) # \u901a\u8fc7CSS\u9009\u62e9\u5668\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u5305\u542b\u7535\u5f71\u8bc4\u5206\u7684span\u6807\u7b7e rank_spans = soup . select ( 'div.info > div.bd > div > span.rating_num' ) for title_span , rank_span in zip ( title_spans , rank_spans ): print ( title_span . text , rank_span . text ) \u5173\u4e8e BeautifulSoup \u66f4\u591a\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u53c2\u8003\u5b83\u7684 \u5b98\u65b9\u6587\u6863 \u3002 \u7b80\u5355\u7684\u603b\u7ed3 \u4e0b\u9762\u6211\u4eec\u5bf9\u4e09\u79cd\u89e3\u6790\u65b9\u5f0f\u505a\u4e00\u4e2a\u7b80\u5355\u6bd4\u8f83\u3002 \u89e3\u6790\u65b9\u5f0f \u5bf9\u5e94\u7684\u6a21\u5757 \u901f\u5ea6 \u4f7f\u7528\u96be\u5ea6 \u6b63\u5219\u8868\u8fbe\u5f0f\u89e3\u6790 re \u5feb \u56f0\u96be XPath \u89e3\u6790 lxml \u5feb \u4e00\u822c CSS \u9009\u62e9\u5668\u89e3\u6790 bs4 \u6216 pyquery \u4e0d\u786e\u5b9a \u7b80\u5355","title":"\u7b2c33\u8bfe\uff1a\u7528Python\u89e3\u6790HTML\u9875\u9762"},{"location":"%E7%AC%AC33%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%A7%A3%E6%9E%90HTML%E9%A1%B5%E9%9D%A2/#33pythonhtml","text":"\u5728\u524d\u9762\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u8bb2\u5230\u4e86\u4f7f\u7528 request \u4e09\u65b9\u5e93\u83b7\u53d6\u7f51\u7edc\u8d44\u6e90\uff0c\u8fd8\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u524d\u7aef\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7ee7\u7eed\u63a2\u7d22\u5982\u4f55\u89e3\u6790 HTML \u4ee3\u7801\uff0c\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u51fa\u6709\u7528\u7684\u4fe1\u606f\u3002\u4e4b\u524d\uff0c\u6211\u4eec\u5c1d\u8bd5\u8fc7\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6355\u83b7\u7ec4\u64cd\u4f5c\u63d0\u53d6\u9875\u9762\u5185\u5bb9\uff0c\u4f46\u662f\u5199\u51fa\u4e00\u4e2a\u6b63\u786e\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e5f\u662f\u4e00\u4ef6\u8ba9\u4eba\u5934\u75bc\u7684\u4e8b\u60c5\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5f97\u5148\u6df1\u5165\u7684\u4e86\u89e3\u4e00\u4e0b HTML \u9875\u9762\u7684\u7ed3\u6784\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u7814\u7a76\u53e6\u5916\u7684\u89e3\u6790\u9875\u9762\u7684\u65b9\u6cd5\u3002","title":"\u7b2c33\u8bfe\uff1a\u7528Python\u89e3\u6790HTML\u9875\u9762"},{"location":"%E7%AC%AC33%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%A7%A3%E6%9E%90HTML%E9%A1%B5%E9%9D%A2/#html","text":"\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u4efb\u610f\u4e00\u4e2a\u7f51\u7ad9\uff0c\u7136\u540e\u901a\u8fc7\u9f20\u6807\u53f3\u952e\u83dc\u5355\uff0c\u9009\u62e9\u201c\u663e\u793a\u7f51\u9875\u6e90\u4ee3\u7801\u201d\u83dc\u5355\u9879\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u7f51\u9875\u5bf9\u5e94\u7684 HTML \u4ee3\u7801\u3002 \u4ee3\u7801\u7684\u7b2c 1 \u884c\u662f\u6587\u6863\u7c7b\u578b\u58f0\u660e\uff0c\u7b2c 2 \u884c\u7684 <html> \u6807\u7b7e\u662f\u6574\u4e2a\u9875\u9762\u6839\u6807\u7b7e\u7684\u5f00\u59cb\u6807\u7b7e\uff0c\u6700\u540e\u4e00\u884c\u662f\u6839\u6807\u7b7e\u7684\u7ed3\u675f\u6807\u7b7e </html> \u3002 <html> \u6807\u7b7e\u4e0b\u9762\u6709\u4e24\u4e2a\u5b50\u6807\u7b7e <head> \u548c <body> \uff0c\u653e\u5728 <body> \u6807\u7b7e\u4e0b\u7684\u5185\u5bb9\u4f1a\u663e\u793a\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u662f\u7f51\u9875\u7684\u4e3b\u4f53\uff1b\u653e\u5728 <head> \u6807\u7b7e\u4e0b\u7684\u5185\u5bb9\u4e0d\u4f1a\u663e\u793a\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\uff0c\u4f46\u662f\u5374\u5305\u542b\u4e86\u9875\u9762\u91cd\u8981\u7684\u5143\u4fe1\u606f\uff0c\u901a\u5e38\u79f0\u4e4b\u4e3a\u7f51\u9875\u7684\u5934\u90e8\u3002HTML \u9875\u9762\u5927\u81f4\u7684\u4ee3\u7801\u7ed3\u6784\u5982\u4e0b\u6240\u793a\u3002 <!doctype html> < html > < head > <!-- \u9875\u9762\u7684\u5143\u4fe1\u606f\uff0c\u5982\u5b57\u7b26\u7f16\u7801\u3001\u6807\u9898\u3001\u5173\u952e\u5b57\u3001\u5a92\u4f53\u67e5\u8be2\u7b49 --> </ head > < body > <!-- \u9875\u9762\u7684\u4e3b\u4f53\uff0c\u663e\u793a\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u7684\u5185\u5bb9 --> </ body > </ html > \u6807\u7b7e\u3001\u5c42\u53e0\u6837\u5f0f\u8868\uff08CSS\uff09\u3001JavaScript \u662f\u6784\u6210 HTML \u9875\u9762\u7684\u4e09\u8981\u7d20\uff0c\u5176\u4e2d\u6807\u7b7e\u7528\u6765\u627f\u8f7d\u9875\u9762\u8981\u663e\u793a\u7684\u5185\u5bb9\uff0cCSS \u8d1f\u8d23\u5bf9\u9875\u9762\u7684\u6e32\u67d3\uff0c\u800c JavaScript \u7528\u6765\u63a7\u5236\u9875\u9762\u7684\u4ea4\u4e92\u5f0f\u884c\u4e3a\u3002\u8981\u5b9e\u73b0 HTML \u9875\u9762\u7684\u89e3\u6790\uff0c\u53ef\u4ee5\u4f7f\u7528 XPath \u7684\u8bed\u6cd5\uff0c\u5b83\u539f\u672c\u662f XML \u7684\u4e00\u79cd\u67e5\u8be2\u8bed\u6cd5\uff0c\u53ef\u4ee5\u6839\u636e HTML \u6807\u7b7e\u7684\u5c42\u6b21\u7ed3\u6784\u63d0\u53d6\u6807\u7b7e\u4e2d\u7684\u5185\u5bb9\u6216\u6807\u7b7e\u5c5e\u6027\uff1b\u6b64\u5916\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 CSS \u9009\u62e9\u5668\u6765\u5b9a\u4f4d\u9875\u9762\u5143\u7d20\uff0c\u5c31\u8ddf\u7528 CSS \u6e32\u67d3\u9875\u9762\u5143\u7d20\u662f\u540c\u6837\u7684\u9053\u7406\u3002","title":"HTML \u9875\u9762\u7684\u7ed3\u6784"},{"location":"%E7%AC%AC33%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%A7%A3%E6%9E%90HTML%E9%A1%B5%E9%9D%A2/#xpath","text":"XPath \u662f\u5728 XML\uff08eXtensible Markup Language\uff09\u6587\u6863\u4e2d\u67e5\u627e\u4fe1\u606f\u7684\u4e00\u79cd\u8bed\u6cd5\uff0cXML \u8ddf HTML \u7c7b\u4f3c\u4e5f\u662f\u4e00\u79cd\u7528\u6807\u7b7e\u627f\u8f7d\u6570\u636e\u7684\u6807\u7b7e\u8bed\u8a00\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e XML \u7684\u6807\u7b7e\u662f\u53ef\u6269\u5c55\u7684\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\uff0c\u800c\u4e14 XML \u5bf9\u8bed\u6cd5\u6709\u66f4\u4e25\u683c\u7684\u8981\u6c42\u3002XPath \u4f7f\u7528\u8def\u5f84\u8868\u8fbe\u5f0f\u6765\u9009\u53d6 XML \u6587\u6863\u4e2d\u7684\u8282\u70b9\u6216\u8005\u8282\u70b9\u96c6\uff0c\u8fd9\u91cc\u6240\u8bf4\u7684\u8282\u70b9\u5305\u62ec\u5143\u7d20\u3001\u5c5e\u6027\u3001\u6587\u672c\u3001\u547d\u540d\u7a7a\u95f4\u3001\u5904\u7406\u6307\u4ee4\u3001\u6ce8\u91ca\u3001\u6839\u8282\u70b9\u7b49\u3002\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bf4\u660e\u5982\u4f55\u4f7f\u7528 XPath \u5bf9\u9875\u9762\u8fdb\u884c\u89e3\u6790\u3002 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <bookstore> <book> <title lang= \"eng\" > Harry Potter </title> <price> 29.99 </price> </book> <book> <title lang= \"zh\" > Learning XML </title> <price> 39.95 </price> </book> </bookstore> \u5bf9\u4e8e\u4e0a\u9762\u7684 XML \u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5982\u4e0b\u6240\u793a\u7684 XPath \u8bed\u6cd5\u83b7\u53d6\u6587\u6863\u4e2d\u7684\u8282\u70b9\u3002 \u8def\u5f84\u8868\u8fbe\u5f0f \u7ed3\u679c /bookstore \u9009\u53d6\u6839\u5143\u7d20 bookstore\u3002 \u6ce8\u610f \uff1a\u5047\u5982\u8def\u5f84\u8d77\u59cb\u4e8e\u6b63\u659c\u6760( / )\uff0c\u5219\u6b64\u8def\u5f84\u59cb\u7ec8\u4ee3\u8868\u5230\u67d0\u5143\u7d20\u7684\u7edd\u5bf9\u8def\u5f84\uff01 //book \u9009\u53d6\u6240\u6709 book \u5b50\u5143\u7d20\uff0c\u800c\u4e0d\u7ba1\u5b83\u4eec\u5728\u6587\u6863\u4e2d\u7684\u4f4d\u7f6e\u3002 //@lang \u9009\u53d6\u540d\u4e3a lang \u7684\u6240\u6709\u5c5e\u6027\u3002 /bookstore/book[1] \u9009\u53d6\u5c5e\u4e8e bookstore \u5b50\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a book \u5143\u7d20\u3002 /bookstore/book[last()] \u9009\u53d6\u5c5e\u4e8e bookstore \u5b50\u5143\u7d20\u7684\u6700\u540e\u4e00\u4e2a book \u5143\u7d20\u3002 /bookstore/book[last()-1] \u9009\u53d6\u5c5e\u4e8e bookstore \u5b50\u5143\u7d20\u7684\u5012\u6570\u7b2c\u4e8c\u4e2a book \u5143\u7d20\u3002 /bookstore/book[position()<3] \u9009\u53d6\u6700\u524d\u9762\u7684\u4e24\u4e2a\u5c5e\u4e8e bookstore \u5143\u7d20\u7684\u5b50\u5143\u7d20\u7684 book \u5143\u7d20\u3002 //title[@lang] \u9009\u53d6\u6240\u6709\u62e5\u6709\u540d\u4e3a lang \u7684\u5c5e\u6027\u7684 title \u5143\u7d20\u3002 //title[@lang='eng'] \u9009\u53d6\u6240\u6709 title \u5143\u7d20\uff0c\u4e14\u8fd9\u4e9b\u5143\u7d20\u62e5\u6709\u503c\u4e3a eng \u7684 lang \u5c5e\u6027\u3002 /bookstore/book[price>35.00] \u9009\u53d6 bookstore \u5143\u7d20\u7684\u6240\u6709 book \u5143\u7d20\uff0c\u4e14\u5176\u4e2d\u7684 price \u5143\u7d20\u7684\u503c\u987b\u5927\u4e8e 35.00\u3002 /bookstore/book[price>35.00]/title \u9009\u53d6 bookstore \u5143\u7d20\u4e2d\u7684 book \u5143\u7d20\u7684\u6240\u6709 title \u5143\u7d20\uff0c\u4e14\u5176\u4e2d\u7684 price \u5143\u7d20\u7684\u503c\u987b\u5927\u4e8e 35.00\u3002 XPath\u8fd8\u652f\u6301\u901a\u914d\u7b26\u7528\u6cd5\uff0c\u5982\u4e0b\u6240\u793a\u3002 \u8def\u5f84\u8868\u8fbe\u5f0f \u7ed3\u679c /bookstore/* \u9009\u53d6 bookstore \u5143\u7d20\u7684\u6240\u6709\u5b50\u5143\u7d20\u3002 //* \u9009\u53d6\u6587\u6863\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002 //title[@*] \u9009\u53d6\u6240\u6709\u5e26\u6709\u5c5e\u6027\u7684 title \u5143\u7d20\u3002 \u5982\u679c\u8981\u9009\u53d6\u591a\u4e2a\u8282\u70b9\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684\u65b9\u6cd5\u3002 \u8def\u5f84\u8868\u8fbe\u5f0f \u7ed3\u679c //book/title \\| //book/price \u9009\u53d6 book \u5143\u7d20\u7684\u6240\u6709 title \u548c price \u5143\u7d20\u3002 //title \\| //price \u9009\u53d6\u6587\u6863\u4e2d\u7684\u6240\u6709 title \u548c price \u5143\u7d20\u3002 /bookstore/book/title \\| //price \u9009\u53d6\u5c5e\u4e8e bookstore \u5143\u7d20\u7684 book \u5143\u7d20\u7684\u6240\u6709 title \u5143\u7d20\uff0c\u4ee5\u53ca\u6587\u6863\u4e2d\u6240\u6709\u7684 price \u5143\u7d20\u3002 \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4f8b\u5b50\u6765\u81ea\u4e8e\u201c\u83dc\u9e1f\u6559\u7a0b\u201d\u7f51\u7ad9\u4e0a\u7684 XPath \u6559\u7a0b \uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u539f\u6587\u3002 \u5f53\u7136\uff0c\u5982\u679c\u4e0d\u7406\u89e3\u6216\u4e0d\u719f\u6089 XPath \u8bed\u6cd5\uff0c\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u7684\u5f00\u53d1\u8005\u5de5\u5177\u4e2d\u6309\u7167\u5982\u4e0b\u6240\u793a\u7684\u65b9\u6cd5\u67e5\u770b\u5143\u7d20\u7684 XPath \u8bed\u6cd5\uff0c\u4e0b\u56fe\u662f\u5728 Chrome \u6d4f\u89c8\u5668\u7684\u5f00\u53d1\u8005\u5de5\u5177\u4e2d\u67e5\u770b\u8c46\u74e3\u7f51\u7535\u5f71\u8be6\u60c5\u4fe1\u606f\u4e2d\u5f71\u7247\u6807\u9898\u7684 XPath \u8bed\u6cd5\u3002 \u5b9e\u73b0 XPath \u89e3\u6790\u9700\u8981\u4e09\u65b9\u5e93 lxml \u7684\u652f\u6301\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5b89\u88c5 lxml \u3002 pip install lxml \u4e0b\u9762\u6211\u4eec\u7528 XPath \u89e3\u6790\u65b9\u5f0f\u6539\u5199\u4e4b\u524d\u83b7\u53d6\u8c46\u74e3\u7535\u5f71 Top250\u7684\u4ee3\u7801\uff0c\u5982\u4e0b\u6240\u793a\u3002 from lxml import etree import requests for page in range ( 1 , 11 ): resp = requests . get ( url = f 'https://movie.douban.com/top250?start= { ( page - 1 ) * 25 } ' , headers = { 'User-Agent' : 'BaiduSpider' } ) tree = etree . HTML ( resp . text ) # \u901a\u8fc7XPath\u8bed\u6cd5\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u7535\u5f71\u6807\u9898 title_spans = tree . xpath ( '//*[@id=\"content\"]/div/div[1]/ol/li/div/div[2]/div[1]/a/span[1]' ) # \u901a\u8fc7XPath\u8bed\u6cd5\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u7535\u5f71\u8bc4\u5206 rank_spans = tree . xpath ( '//*[@id=\"content\"]/div/div[1]/ol/li[1]/div/div[2]/div[2]/div/span[2]' ) for title_span , rank_span in zip ( title_spans , rank_spans ): print ( title_span . text , rank_span . text )","title":"XPath \u89e3\u6790"},{"location":"%E7%AC%AC33%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%A7%A3%E6%9E%90HTML%E9%A1%B5%E9%9D%A2/#css","text":"\u5bf9\u4e8e\u719f\u6089 CSS \u9009\u62e9\u5668\u548c JavaScript \u7684\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u901a\u8fc7 CSS \u9009\u62e9\u5668\u83b7\u53d6\u9875\u9762\u5143\u7d20\u53ef\u80fd\u662f\u66f4\u4e3a\u7b80\u5355\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u7684 JavaScript \u672c\u8eab\u5c31\u53ef\u4ee5 document \u5bf9\u8c61\u7684 querySelector() \u548c querySelectorAll() \u65b9\u6cd5\u57fa\u4e8e CSS \u9009\u62e9\u5668\u83b7\u53d6\u9875\u9762\u5143\u7d20\u3002\u5728 Python \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e09\u65b9\u5e93 beautifulsoup4 \u6216 pyquery \u6765\u505a\u540c\u6837\u7684\u4e8b\u60c5\u3002Beautiful Soup \u53ef\u4ee5\u7528\u6765\u89e3\u6790 HTML \u548c XML \u6587\u6863\uff0c\u4fee\u590d\u542b\u6709\u672a\u95ed\u5408\u6807\u7b7e\u7b49\u9519\u8bef\u7684\u6587\u6863\uff0c\u901a\u8fc7\u4e3a\u5f85\u89e3\u6790\u7684\u9875\u9762\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u4e00\u68f5\u6811\u7ed3\u6784\uff0c\u5b9e\u73b0\u5bf9\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u6570\u636e\u64cd\u4f5c\u7684\u5c01\u88c5\u3002\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5 Beautiful Soup\u3002 pip install beautifulsoup4 \u4e0b\u9762\u662f\u4f7f\u7528 bs4 \u6539\u5199\u7684\u83b7\u53d6\u8c46\u74e3\u7535\u5f71Top250\u7535\u5f71\u540d\u79f0\u7684\u4ee3\u7801\u3002 import bs4 import requests for page in range ( 1 , 11 ): resp = requests . get ( url = f 'https://movie.douban.com/top250?start= { ( page - 1 ) * 25 } ' , headers = { 'User-Agent' : 'BaiduSpider' } ) # \u521b\u5efaBeautifulSoup\u5bf9\u8c61 soup = bs4 . BeautifulSoup ( resp . text , 'lxml' ) # \u901a\u8fc7CSS\u9009\u62e9\u5668\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u5305\u542b\u7535\u5f71\u6807\u9898\u7684span\u6807\u7b7e title_spans = soup . select ( 'div.info > div.hd > a > span:nth-child(1)' ) # \u901a\u8fc7CSS\u9009\u62e9\u5668\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u5305\u542b\u7535\u5f71\u8bc4\u5206\u7684span\u6807\u7b7e rank_spans = soup . select ( 'div.info > div.bd > div > span.rating_num' ) for title_span , rank_span in zip ( title_spans , rank_spans ): print ( title_span . text , rank_span . text ) \u5173\u4e8e BeautifulSoup \u66f4\u591a\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u53c2\u8003\u5b83\u7684 \u5b98\u65b9\u6587\u6863 \u3002","title":"CSS \u9009\u62e9\u5668\u89e3\u6790"},{"location":"%E7%AC%AC33%E8%AF%BE%EF%BC%9A%E7%94%A8Python%E8%A7%A3%E6%9E%90HTML%E9%A1%B5%E9%9D%A2/#_1","text":"\u4e0b\u9762\u6211\u4eec\u5bf9\u4e09\u79cd\u89e3\u6790\u65b9\u5f0f\u505a\u4e00\u4e2a\u7b80\u5355\u6bd4\u8f83\u3002 \u89e3\u6790\u65b9\u5f0f \u5bf9\u5e94\u7684\u6a21\u5757 \u901f\u5ea6 \u4f7f\u7528\u96be\u5ea6 \u6b63\u5219\u8868\u8fbe\u5f0f\u89e3\u6790 re \u5feb \u56f0\u96be XPath \u89e3\u6790 lxml \u5feb \u4e00\u822c CSS \u9009\u62e9\u5668\u89e3\u6790 bs4 \u6216 pyquery \u4e0d\u786e\u5b9a \u7b80\u5355","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC34%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-1/","text":"\u7b2c34\u8bfe\uff1aPython\u4e2d\u7684\u5e76\u53d1\u7f16\u7a0b-1 \u73b0\u5982\u4eca\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u65e9\u5df2\u662f\u591a CPU \u6216\u591a\u6838\u7684\u8ba1\u7b97\u673a\uff0c\u800c\u6211\u4eec\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u57fa\u672c\u90fd\u652f\u6301\u201c\u591a\u4efb\u52a1\u201d\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e2a\u7a0b\u5e8f\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u5b50\u4efb\u52a1\uff0c\u8ba9\u591a\u4e2a\u5b50\u4efb\u52a1\u201c\u5e76\u884c\u201d\u6216\u201c\u5e76\u53d1\u201d\u7684\u6267\u884c\uff0c\u4ece\u800c\u7f29\u77ed\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\uff0c\u540c\u65f6\u4e5f\u8ba9\u7528\u6237\u83b7\u5f97\u66f4\u597d\u7684\u4f53\u9a8c\u3002\u56e0\u6b64\u5f53\u4e0b\uff0c\u4e0d\u7ba1\u7528\u4ec0\u4e48\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u5f00\u53d1\uff0c\u5b9e\u73b0\u201c\u5e76\u884c\u201d\u6216\u201c\u5e76\u53d1\u201d\u7f16\u7a0b\u5df2\u7ecf\u6210\u4e3a\u4e86\u7a0b\u5e8f\u5458\u7684\u6807\u914d\u6280\u80fd\u3002\u4e3a\u4e86\u8bb2\u8ff0\u5982\u4f55\u5728 Python \u7a0b\u5e8f\u4e2d\u5b9e\u73b0\u201c\u5e76\u884c\u201d\u6216\u201c\u5e76\u53d1\u201d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e24\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff1a\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u3002 \u7ebf\u7a0b\u548c\u8fdb\u7a0b \u6211\u4eec\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u4e00\u4e2a\u7a0b\u5e8f\u4f1a\u521b\u5efa\u51fa\u4e00\u4e2a\u6216\u591a\u4e2a\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u662f\u5177\u6709\u4e00\u5b9a\u72ec\u7acb\u529f\u80fd\u7684\u7a0b\u5e8f\u5173\u4e8e\u67d0\u4e2a\u6570\u636e\u96c6\u5408\u4e0a\u7684\u4e00\u6b21\u8fd0\u884c\u6d3b\u52a8\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u5730\u5740\u7a7a\u95f4\u3001\u6570\u636e\u6808\u4ee5\u53ca\u5176\u4ed6\u7528\u4e8e\u8ddf\u8e2a\u8fdb\u7a0b\u6267\u884c\u7684\u8f85\u52a9\u6570\u636e\uff1b\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u6240\u6709\u8fdb\u7a0b\u7684\u6267\u884c\uff0c\u4e3a\u5b83\u4eec\u5408\u7406\u7684\u5206\u914d\u8d44\u6e90\u3002\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7 fork \u6216 spawn \u7684\u65b9\u5f0f\u521b\u5efa\u65b0\u7684\u8fdb\u7a0b\u6765\u6267\u884c\u5176\u4ed6\u7684\u4efb\u52a1\uff0c\u4e0d\u8fc7\u65b0\u7684\u8fdb\u7a0b\u4e5f\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\u4e24\u4e2a\u8fdb\u7a0b\u5982\u679c\u8981\u5171\u4eab\u6570\u636e\uff0c\u5fc5\u987b\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\u6765\u5b9e\u73b0\uff0c\u5177\u4f53\u7684\u65b9\u5f0f\u5305\u62ec\u7ba1\u9053\u3001\u4fe1\u53f7\u3001\u5957\u63a5\u5b57\u7b49\u3002 \u4e00\u4e2a\u8fdb\u7a0b\u8fd8\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u6267\u884c\u7ebf\u7d22\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u62e5\u6709\u591a\u4e2a\u53ef\u4ee5\u83b7\u5f97 CPU \u8c03\u5ea6\u7684\u6267\u884c\u5355\u5143\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u7ebf\u7a0b\u3002\u7531\u4e8e\u7ebf\u7a0b\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e0b\uff0c\u5b83\u4eec\u53ef\u4ee5\u5171\u4eab\u76f8\u540c\u7684\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u76f8\u5bf9\u4e8e\u8fdb\u7a0b\u800c\u8a00\uff0c\u7ebf\u7a0b\u95f4\u7684\u4fe1\u606f\u5171\u4eab\u548c\u901a\u4fe1\u66f4\u52a0\u5bb9\u6613\u3002\u5f53\u7136\u5728\u5355\u6838 CPU \u7cfb\u7edf\u4e2d\uff0c\u591a\u4e2a\u7ebf\u7a0b\u4e0d\u53ef\u80fd\u540c\u65f6\u6267\u884c\uff0c\u56e0\u4e3a\u5728\u67d0\u4e2a\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u591f\u83b7\u5f97 CPU\uff0c\u591a\u4e2a\u7ebf\u7a0b\u901a\u8fc7\u5171\u4eab CPU \u6267\u884c\u65f6\u95f4\u7684\u65b9\u5f0f\u6765\u8fbe\u5230\u5e76\u53d1\u7684\u6548\u679c\u3002 \u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u591a\u7ebf\u7a0b\u6280\u672f\u901a\u5e38\u90fd\u4f1a\u5e26\u6765\u4e0d\u8a00\u800c\u55bb\u7684\u597d\u5904\uff0c\u6700\u4e3b\u8981\u7684\u4f53\u73b0\u5728\u63d0\u5347\u7a0b\u5e8f\u7684\u6027\u80fd\u548c\u6539\u5584\u7528\u6237\u4f53\u9a8c\uff0c\u4eca\u5929\u6211\u4eec\u4f7f\u7528\u7684\u8f6f\u4ef6\u51e0\u4e4e\u90fd\u7528\u5230\u4e86\u591a\u7ebf\u7a0b\u6280\u672f\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u5229\u7528\u7cfb\u7edf\u81ea\u5e26\u7684\u8fdb\u7a0b\u76d1\u63a7\u5de5\u5177\uff08\u5982 macOS \u4e2d\u7684\u201c\u6d3b\u52a8\u76d1\u89c6\u5668\u201d\u3001Windows \u4e2d\u7684\u201c\u4efb\u52a1\u7ba1\u7406\u5668\u201d\uff09\u6765\u8bc1\u5b9e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u8fd9\u91cc\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8ddf\u5927\u5bb6\u518d\u6b21\u5f3a\u8c03\u4e24\u4e2a\u6982\u5ff5\uff1a \u5e76\u53d1 \uff08concurrency\uff09\u548c \u5e76\u884c \uff08parallel\uff09\u3002 \u5e76\u53d1 \u901a\u5e38\u662f\u6307\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u6761\u6307\u4ee4\u6267\u884c\uff0c\u4f46\u662f\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u5e94\u7684\u6307\u4ee4\u88ab\u5feb\u901f\u8f6e\u6362\u5730\u6267\u884c\u3002\u6bd4\u5982\u4e00\u4e2a\u5904\u7406\u5668\uff0c\u5b83\u5148\u6267\u884c\u7ebf\u7a0b A \u7684\u6307\u4ee4\u4e00\u6bb5\u65f6\u95f4\uff0c\u518d\u6267\u884c\u7ebf\u7a0b B \u7684\u6307\u4ee4\u4e00\u6bb5\u65f6\u95f4\uff0c\u518d\u5207\u56de\u5230\u7ebf\u7a0b A \u6267\u884c\u4e00\u6bb5\u65f6\u95f4\u3002\u7531\u4e8e\u5904\u7406\u5668\u6267\u884c\u6307\u4ee4\u7684\u901f\u5ea6\u548c\u5207\u6362\u7684\u901f\u5ea6\u6781\u5feb\uff0c\u4eba\u4eec\u5b8c\u5168\u611f\u77e5\u4e0d\u5230\u8ba1\u7b97\u673a\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6709\u591a\u4e2a\u7ebf\u7a0b\u5207\u6362\u4e0a\u4e0b\u6587\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u8fd9\u5c31\u4f7f\u5f97\u5b8f\u89c2\u4e0a\u770b\u8d77\u6765\u591a\u4e2a\u7ebf\u7a0b\u5728\u540c\u65f6\u8fd0\u884c\uff0c\u4f46\u5fae\u89c2\u4e0a\u5176\u5b9e\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u3002 \u5e76\u884c \u662f\u6307\u540c\u4e00\u65f6\u523b\uff0c\u6709\u591a\u6761\u6307\u4ee4\u5728\u591a\u4e2a\u5904\u7406\u5668\u4e0a\u540c\u65f6\u6267\u884c\uff0c\u5e76\u884c\u5fc5\u987b\u8981\u4f9d\u8d56\u4e8e\u591a\u4e2a\u5904\u7406\u5668\uff0c\u4e0d\u8bba\u662f\u4ece\u5b8f\u89c2\u4e0a\u8fd8\u662f\u5fae\u89c2\u4e0a\uff0c\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5728\u540c\u4e00\u65f6\u523b\u4e00\u8d77\u6267\u884c\u7684\u3002\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u5e76\u4e0d\u7528\u4e25\u683c\u533a\u5206\u5e76\u53d1\u548c\u5e76\u884c\u4e24\u4e2a\u8bcd\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u65f6\u5019\u4e5f\u628a Python \u4e2d\u7684\u591a\u7ebf\u7a0b\u3001\u591a\u8fdb\u7a0b\u4ee5\u53ca\u5f02\u6b65 I/O \u90fd\u89c6\u4e3a\u5b9e\u73b0\u5e76\u53d1\u7f16\u7a0b\u7684\u624b\u6bb5\uff0c\u4f46\u5b9e\u9645\u4e0a\u524d\u9762\u4e24\u8005\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5e76\u884c\u7f16\u7a0b\uff0c\u5f53\u7136\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u5168\u5c40\u89e3\u91ca\u5668\u9501\uff08GIL\uff09\u7684\u95ee\u9898\uff0c\u6211\u4eec\u7a0d\u540e\u8ba8\u8bba\u3002 \u591a\u7ebf\u7a0b\u7f16\u7a0b Python \u6807\u51c6\u5e93\u4e2d threading \u6a21\u5757\u7684 Thread \u7c7b\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u975e\u5e38\u8f7b\u677e\u7684\u5b9e\u73b0\u591a\u7ebf\u7a0b\u7f16\u7a0b\u3002\u6211\u4eec\u7528\u4e00\u4e2a\u8054\u7f51\u4e0b\u8f7d\u6587\u4ef6\u7684\u4f8b\u5b50\u6765\u5bf9\u6bd4\u4f7f\u7528\u591a\u7ebf\u7a0b\u548c\u4e0d\u4f7f\u7528\u591a\u7ebf\u7a0b\u5230\u5e95\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \u4e0d\u4f7f\u7528\u591a\u7ebf\u7a0b\u7684\u4e0b\u8f7d\u3002 import random import time def download ( * , filename ): start = time . time () print ( f '\u5f00\u59cb\u4e0b\u8f7d { filename } .' ) time . sleep ( random . randint ( 3 , 6 )) print ( f ' { filename } \u4e0b\u8f7d\u5b8c\u6210.' ) end = time . time () print ( f '\u4e0b\u8f7d\u8017\u65f6: { end - start : .3f } \u79d2.' ) def main (): start = time . time () download ( filename = 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ) download ( filename = 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ) download ( filename = 'Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4' ) end = time . time () print ( f '\u603b\u8017\u65f6: { end - start : .3f } \u79d2.' ) if __name__ == '__main__' : main () \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u5e76\u6ca1\u6709\u771f\u6b63\u5b9e\u73b0\u8054\u7f51\u4e0b\u8f7d\u7684\u529f\u80fd\uff0c\u800c\u662f\u901a\u8fc7 time.sleep() \u4f11\u7720\u4e00\u6bb5\u65f6\u95f4\u6765\u6a21\u62df\u4e0b\u8f7d\u6587\u4ef6\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u4e0a\u7684\u5f00\u9500\uff0c\u8ddf\u5b9e\u9645\u4e0b\u8f7d\u7684\u72b6\u51b5\u6bd4\u8f83\u7c7b\u4f3c\u3002 \u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u8fd0\u884c\u7ed3\u679c\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u6211\u4eec\u7684\u7a0b\u5e8f\u53ea\u6709\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u65f6\uff0c\u6bcf\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u90fd\u9700\u8981\u7b49\u5f85\u4e0a\u4e00\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u6267\u884c\u7ed3\u675f\u624d\u80fd\u5f00\u59cb\uff0c\u6240\u4ee5\u7a0b\u5e8f\u6267\u884c\u7684\u603b\u8017\u65f6\u662f\u4e09\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u5404\u81ea\u6267\u884c\u65f6\u95f4\u7684\u603b\u548c\u3002 \u5f00\u59cb\u4e0b\u8f7dPython\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf. Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf\u4e0b\u8f7d\u5b8c\u6210. \u4e0b\u8f7d\u8017\u65f6: 3.005\u79d2. \u5f00\u59cb\u4e0b\u8f7dMySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi. MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi\u4e0b\u8f7d\u5b8c\u6210. \u4e0b\u8f7d\u8017\u65f6: 5.006\u79d2. \u5f00\u59cb\u4e0b\u8f7dLinux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4. Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp3\u4e0b\u8f7d\u5b8c\u6210. \u4e0b\u8f7d\u8017\u65f6: 6.007\u79d2. \u603b\u8017\u65f6: 14.018\u79d2. \u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u9762\u7684\u4e09\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u4e4b\u95f4\u5e76\u6ca1\u6709\u903b\u8f91\u4e0a\u7684\u56e0\u679c\u5173\u7cfb\uff0c\u4e09\u8005\u662f\u53ef\u4ee5\u201c\u5e76\u53d1\u201d\u7684\uff0c\u4e0b\u4e00\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u6ca1\u6709\u5fc5\u8981\u7b49\u5f85\u4e0a\u4e00\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u7ed3\u675f\uff0c\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u591a\u7ebf\u7a0b\u7f16\u7a0b\u6765\u6539\u5199\u4e0a\u9762\u7684\u4ee3\u7801\u3002 import random import time from threading import Thread def download ( * , filename ): start = time . time () print ( f '\u5f00\u59cb\u4e0b\u8f7d { filename } .' ) time . sleep ( random . randint ( 3 , 6 )) print ( f ' { filename } \u4e0b\u8f7d\u5b8c\u6210.' ) end = time . time () print ( f '\u4e0b\u8f7d\u8017\u65f6: { end - start : .3f } \u79d2.' ) def main (): threads = [ Thread ( target = download , kwargs = { 'filename' : 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' }), Thread ( target = download , kwargs = { 'filename' : 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' }), Thread ( target = download , kwargs = { 'filename' : 'Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4' }) ] start = time . time () # \u542f\u52a8\u4e09\u4e2a\u7ebf\u7a0b for thread in threads : thread . start () # \u7b49\u5f85\u7ebf\u7a0b\u7ed3\u675f for thread in threads : thread . join () end = time . time () print ( f '\u603b\u8017\u65f6: { end - start : .3f } \u79d2.' ) if __name__ == '__main__' : main () \u67d0\u6b21\u7684\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\u3002 \u5f00\u59cb\u4e0b\u8f7d Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf. \u5f00\u59cb\u4e0b\u8f7d MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi. \u5f00\u59cb\u4e0b\u8f7d Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4. MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi \u4e0b\u8f7d\u5b8c\u6210. \u4e0b\u8f7d\u8017\u65f6: 3.005\u79d2. Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf \u4e0b\u8f7d\u5b8c\u6210. \u4e0b\u8f7d\u8017\u65f6: 5.006\u79d2. Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4 \u4e0b\u8f7d\u5b8c\u6210. \u4e0b\u8f7d\u8017\u65f6: 6.003\u79d2. \u603b\u8017\u65f6: 6.004\u79d2. \u901a\u8fc7\u4e0a\u9762\u7684\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6574\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\u51e0\u4e4e\u7b49\u4e8e\u8017\u65f6\u6700\u957f\u7684\u4e00\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u7684\u6267\u884c\u65f6\u95f4\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u4e09\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u662f\u5e76\u53d1\u6267\u884c\u7684\uff0c\u4e0d\u5b58\u5728\u4e00\u4e2a\u7b49\u5f85\u53e6\u4e00\u4e2a\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u505a\u5f88\u663e\u7136\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5982\u679c\u7a0b\u5e8f\u4e2d\u6709\u975e\u5e38\u8017\u65f6\u7684\u6267\u884c\u5355\u5143\uff0c\u800c\u8fd9\u4e9b\u8017\u65f6\u7684\u6267\u884c\u5355\u5143\u4e4b\u95f4\u53c8\u6ca1\u6709\u903b\u8f91\u4e0a\u7684\u56e0\u679c\u5173\u7cfb\uff0c\u5373 B \u5355\u5143\u7684\u6267\u884c\u4e0d\u4f9d\u8d56\u4e8e A \u5355\u5143\u7684\u6267\u884c\u7ed3\u679c\uff0c\u90a3\u4e48 A \u548c B \u4e24\u4e2a\u5355\u5143\u5c31\u53ef\u4ee5\u653e\u5230\u4e24\u4e2a\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e2d\uff0c\u8ba9\u4ed6\u4eec\u5e76\u53d1\u7684\u6267\u884c\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u9664\u4e86\u51cf\u5c11\u7a0b\u5e8f\u6267\u884c\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u8fd8\u53ef\u4ee5\u5e26\u6765\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5355\u5143\u7684\u963b\u585e\u4e0d\u4f1a\u9020\u6210\u7a0b\u5e8f\u7684\u201c\u5047\u6b7b\u201d\uff0c\u56e0\u4e3a\u7a0b\u5e8f\u4e2d\u8fd8\u6709\u5176\u4ed6\u7684\u5355\u5143\u662f\u53ef\u4ee5\u8fd0\u8f6c\u7684\u3002 \u4f7f\u7528 Thread \u7c7b\u521b\u5efa\u7ebf\u7a0b\u5bf9\u8c61 \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u76f4\u63a5\u4f7f\u7528 Thread \u7c7b\u7684\u6784\u9020\u5668\u5c31\u53ef\u4ee5\u521b\u5efa\u7ebf\u7a0b\u5bf9\u8c61\uff0c\u800c\u7ebf\u7a0b\u5bf9\u8c61\u7684 start() \u65b9\u6cd5\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u3002\u7ebf\u7a0b\u542f\u52a8\u540e\u4f1a\u6267\u884c target \u53c2\u6570\u6307\u5b9a\u7684\u51fd\u6570\uff0c\u5f53\u7136\u524d\u63d0\u662f\u83b7\u5f97 CPU \u7684\u8c03\u5ea6\uff1b\u5982\u679c target \u6307\u5b9a\u7684\u7ebf\u7a0b\u8981\u6267\u884c\u7684\u76ee\u6807\u51fd\u6570\u6709\u53c2\u6570\uff0c\u9700\u8981\u901a\u8fc7 args \u53c2\u6570\u4e3a\u5176\u8fdb\u884c\u6307\u5b9a\uff0c\u5bf9\u4e8e\u5173\u952e\u5b57\u53c2\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7 kwargs \u53c2\u6570\u8fdb\u884c\u4f20\u5165\u3002 Thread \u7c7b\u7684\u6784\u9020\u5668\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u53c2\u6570\uff0c\u6211\u4eec\u9047\u5230\u7684\u65f6\u5019\u518d\u4e3a\u5927\u5bb6\u8fdb\u884c\u8bb2\u89e3\uff0c\u76ee\u524d\u9700\u8981\u5927\u5bb6\u638c\u63e1\u7684\uff0c\u5c31\u662f target \u3001 args \u548c kwargs \u3002 \u7ee7\u627f Thread \u7c7b\u81ea\u5b9a\u4e49\u7ebf\u7a0b \u9664\u4e86\u4e0a\u9762\u7684\u4ee3\u7801\u5c55\u793a\u7684\u521b\u5efa\u7ebf\u7a0b\u7684\u65b9\u5f0f\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f Thread \u7c7b\u5e76\u91cd\u5199 run() \u65b9\u6cd5\u7684\u65b9\u5f0f\u6765\u81ea\u5b9a\u4e49\u7ebf\u7a0b\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import random import time from threading import Thread class DownloadThread ( Thread ): def __init__ ( self , filename ): self . filename = filename super () . __init__ () def run ( self ): start = time . time () print ( f '\u5f00\u59cb\u4e0b\u8f7d { self . filename } .' ) time . sleep ( random . randint ( 3 , 6 )) print ( f ' { self . filename } \u4e0b\u8f7d\u5b8c\u6210.' ) end = time . time () print ( f '\u4e0b\u8f7d\u8017\u65f6: { end - start : .3f } \u79d2.' ) def main (): threads = [ DownloadThread ( 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ), DownloadThread ( 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ), DownloadThread ( 'Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4' ) ] start = time . time () # \u542f\u52a8\u4e09\u4e2a\u7ebf\u7a0b for thread in threads : thread . start () # \u7b49\u5f85\u7ebf\u7a0b\u7ed3\u675f for thread in threads : thread . join () end = time . time () print ( f '\u603b\u8017\u65f6: { end - start : .3f } \u79d2.' ) if __name__ == '__main__' : main () \u4f7f\u7528\u7ebf\u7a0b\u6c60 \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7ebf\u7a0b\u6c60\u7684\u65b9\u5f0f\u5c06\u4efb\u52a1\u653e\u5230\u591a\u4e2a\u7ebf\u7a0b\u4e2d\u53bb\u6267\u884c\uff0c\u901a\u8fc7\u7ebf\u7a0b\u6c60\u6765\u4f7f\u7528\u7ebf\u7a0b\u5e94\u8be5\u662f\u591a\u7ebf\u7a0b\u7f16\u7a0b\u6700\u7406\u60f3\u7684\u9009\u62e9\u3002\u4e8b\u5b9e\u4e0a\uff0c\u7ebf\u7a0b\u7684\u521b\u5efa\u548c\u91ca\u653e\u90fd\u4f1a\u5e26\u6765\u8f83\u5927\u7684\u5f00\u9500\uff0c\u9891\u7e41\u7684\u521b\u5efa\u548c\u91ca\u653e\u7ebf\u7a0b\u901a\u5e38\u90fd\u4e0d\u662f\u5f88\u597d\u7684\u9009\u62e9\u3002\u5229\u7528\u7ebf\u7a0b\u6c60\uff0c\u53ef\u4ee5\u63d0\u524d\u51c6\u5907\u597d\u82e5\u5e72\u4e2a\u7ebf\u7a0b\uff0c\u5728\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u9700\u8981\u518d\u901a\u8fc7\u81ea\u5b9a\u4e49\u7684\u4ee3\u7801\u521b\u5efa\u548c\u91ca\u653e\u7ebf\u7a0b\uff0c\u800c\u662f\u76f4\u63a5\u590d\u7528\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u3002Python \u5185\u7f6e\u7684 concurrent.futures \u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9\u7ebf\u7a0b\u6c60\u7684\u652f\u6301\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import random import time from concurrent.futures import ThreadPoolExecutor from threading import Thread def download ( * , filename ): start = time . time () print ( f '\u5f00\u59cb\u4e0b\u8f7d { filename } .' ) time . sleep ( random . randint ( 3 , 6 )) print ( f ' { filename } \u4e0b\u8f7d\u5b8c\u6210.' ) end = time . time () print ( f '\u4e0b\u8f7d\u8017\u65f6: { end - start : .3f } \u79d2.' ) def main (): with ThreadPoolExecutor ( max_workers = 4 ) as pool : filenames = [ 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' , 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' , 'Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4' ] start = time . time () for filename in filenames : pool . submit ( download , filename = filename ) end = time . time () print ( f '\u603b\u8017\u65f6: { end - start : .3f } \u79d2.' ) if __name__ == '__main__' : main () \u5b88\u62a4\u7ebf\u7a0b \u6240\u8c13\u201c\u5b88\u62a4\u7ebf\u7a0b\u201d\u5c31\u662f\u5728\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u4e0d\u503c\u5f97\u518d\u4fdd\u7559\u7684\u6267\u884c\u7ebf\u7a0b\u3002\u8fd9\u91cc\u7684\u4e0d\u503c\u5f97\u4fdd\u7559\u6307\u7684\u662f\u5b88\u62a4\u7ebf\u7a0b\u4f1a\u5728\u5176\u4ed6\u975e\u5b88\u62a4\u7ebf\u7a0b\u5168\u90e8\u8fd0\u884c\u7ed3\u675f\u4e4b\u540e\u88ab\u9500\u6bc1\uff0c\u5b83\u5b88\u62a4\u7684\u662f\u5f53\u524d\u8fdb\u7a0b\u5185\u6240\u6709\u7684\u975e\u5b88\u62a4\u7ebf\u7a0b\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5b88\u62a4\u7ebf\u7a0b\u4f1a\u8ddf\u968f\u4e3b\u7ebf\u7a0b\u4e00\u8d77\u6302\u6389\uff0c\u800c\u4e3b\u7ebf\u7a0b\u7684\u751f\u547d\u5468\u671f\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\u7684\u751f\u547d\u5468\u671f\u3002\u5982\u679c\u4e0d\u7406\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u6bb5\u7b80\u5355\u7684\u4ee3\u7801\u3002 import time from threading import Thread def display ( content ): while True : print ( content , end = '' , flush = True ) time . sleep ( 0.1 ) def main (): Thread ( target = display , args = ( 'Ping' , )) . start () Thread ( target = display , args = ( 'Pong' , )) . start () if __name__ == '__main__' : main () \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06 print \u51fd\u6570\u7684\u53c2\u6570 flush \u8bbe\u7f6e\u4e3a True \uff0c\u8fd9\u662f\u56e0\u4e3a flush \u53c2\u6570\u7684\u503c\u5982\u679c\u4e3a False \uff0c\u800c print \u53c8\u6ca1\u6709\u505a\u6362\u884c\u5904\u7406\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6bcf\u6b21 print \u8f93\u51fa\u7684\u5185\u5bb9\u88ab\u653e\u5230\u64cd\u4f5c\u7cfb\u7edf\u7684\u8f93\u51fa\u7f13\u51b2\u533a\uff0c\u76f4\u5230\u7f13\u51b2\u533a\u88ab\u8f93\u51fa\u7684\u5185\u5bb9\u585e\u6ee1\uff0c\u624d\u4f1a\u6e05\u7a7a\u7f13\u51b2\u533a\u4ea7\u751f\u4e00\u6b21\u8f93\u51fa\u3002\u4e0a\u8ff0\u73b0\u8c61\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4e86\u51cf\u5c11 I/O \u4e2d\u65ad\uff0c\u63d0\u5347 CPU \u5229\u7528\u7387\u505a\u51fa\u7684\u8bbe\u5b9a\uff0c\u4e3a\u4e86\u8ba9\u4ee3\u7801\u4ea7\u751f\u76f4\u89c2\u4ea4\u4e92\uff0c\u6211\u4eec\u624d\u5c06 flush \u53c2\u6570\u8bbe\u7f6e\u4e3a True \uff0c\u5f3a\u5236\u6bcf\u6b21\u8f93\u51fa\u90fd\u6e05\u7a7a\u8f93\u51fa\u7f13\u51b2\u533a\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u8fd0\u884c\u8d77\u6765\u4e4b\u540e\u662f\u4e0d\u4f1a\u505c\u6b62\u7684\uff0c\u56e0\u4e3a\u4e24\u4e2a\u5b50\u7ebf\u7a0b\u4e2d\u90fd\u6709\u6b7b\u5faa\u73af\uff0c\u9664\u975e\u4f60\u624b\u52a8\u4e2d\u65ad\u4ee3\u7801\u7684\u6267\u884c\u3002\u4f46\u662f\uff0c\u5982\u679c\u5728\u521b\u5efa\u7ebf\u7a0b\u5bf9\u8c61\u65f6\uff0c\u5c06\u540d\u4e3a daemon \u7684\u53c2\u6570\u8bbe\u7f6e\u4e3a True \uff0c\u8fd9\u4e24\u4e2a\u7ebf\u7a0b\u5c31\u4f1a\u53d8\u6210\u5b88\u62a4\u7ebf\u7a0b\uff0c\u90a3\u4e48\u5728\u5176\u4ed6\u7ebf\u7a0b\u7ed3\u675f\u65f6\uff0c\u5373\u4fbf\u6709\u6b7b\u5faa\u73af\uff0c\u4e24\u4e2a\u5b88\u62a4\u7ebf\u7a0b\u4e5f\u4f1a\u6302\u6389\uff0c\u4e0d\u4f1a\u518d\u7ee7\u7eed\u6267\u884c\u4e0b\u53bb\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time from threading import Thread def display ( content ): while True : print ( content , end = '' , flush = True ) time . sleep ( 0.1 ) def main (): Thread ( target = display , args = ( 'Ping' , ), daemon = True ) . start () Thread ( target = display , args = ( 'Pong' , ), daemon = True ) . start () time . sleep ( 5 ) if __name__ == '__main__' : main () \u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u884c time.sleep(5) \u8ba9\u4e3b\u7ebf\u7a0b\u4f11\u77205\u79d2\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u8f93\u51fa Ping \u548c Pong \u7684\u5b88\u62a4\u7ebf\u7a0b\u4f1a\u6301\u7eed\u8fd0\u8f6c\uff0c\u76f4\u5230\u4e3b\u7ebf\u7a0b\u57285\u79d2\u540e\u7ed3\u675f\uff0c\u8fd9\u4e24\u4e2a\u5b88\u62a4\u7ebf\u7a0b\u4e5f\u88ab\u9500\u6bc1\uff0c\u4e0d\u518d\u7ee7\u7eed\u8fd0\u884c\u3002 \u601d\u8003 \uff1a\u5982\u679c\u5c06\u4e0a\u9762\u4ee3\u7801\u7b2c12\u884c\u7684 daemon=True \u53bb\u6389\uff0c\u4ee3\u7801\u4f1a\u600e\u6837\u6267\u884c\uff1f\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u5e76\u770b\u770b\u5b9e\u9645\u6267\u884c\u7684\u7ed3\u679c\u8ddf\u4f60\u60f3\u8c61\u7684\u662f\u5426\u4e00\u81f4\u3002 \u8d44\u6e90\u7ade\u4e89 \u5728\u7f16\u5199\u591a\u7ebf\u7a0b\u4ee3\u7801\u65f6\uff0c\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u9047\u5230\u591a\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u540c\u4e00\u4e2a\u8d44\u6e90\uff08\u5bf9\u8c61\uff09\u7684\u60c5\u51b5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6ca1\u6709\u5408\u7406\u7684\u673a\u5236\u6765\u4fdd\u62a4\u88ab\u7ade\u4e89\u7684\u8d44\u6e90\uff0c\u90a3\u4e48\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u975e\u9884\u671f\u7684\u72b6\u51b5\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e86 100 \u4e2a\u7ebf\u7a0b\u5411\u540c\u4e00\u4e2a\u94f6\u884c\u8d26\u6237\uff08\u521d\u59cb\u4f59\u989d\u4e3a 0 \u5143\uff09\u8f6c\u8d26\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u8f6c\u8d26\u91d1\u989d\u4e3a 1 \u5143\u3002\u5728\u6b63\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u94f6\u884c\u8d26\u6237\u6700\u7ec8\u7684\u4f59\u989d\u5e94\u8be5\u662f 100 \u5143\uff0c\u4f46\u662f\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u6211\u4eec\u5e76\u4e0d\u80fd\u5f97\u5230 100 \u5143\u8fd9\u4e2a\u7ed3\u679c\u3002 import time from concurrent.futures import ThreadPoolExecutor class Account ( object ): \"\"\"\u94f6\u884c\u8d26\u6237\"\"\" def __init__ ( self ): self . balance = 0.0 def deposit ( self , money ): \"\"\"\u5b58\u94b1\"\"\" new_balance = self . balance + money time . sleep ( 0.01 ) self . balance = new_balance def main (): \"\"\"\u4e3b\u51fd\u6570\"\"\" account = Account () with ThreadPoolExecutor ( max_workers = 16 ) as pool : for _ in range ( 100 ): pool . submit ( account . deposit , 1 ) print ( account . balance ) if __name__ == '__main__' : main () \u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 Account \u7c7b\u4ee3\u8868\u4e86\u94f6\u884c\u8d26\u6237\uff0c\u5b83\u7684 deposit \u65b9\u6cd5\u4ee3\u8868\u5b58\u6b3e\u884c\u4e3a\uff0c\u53c2\u6570 money \u4ee3\u8868\u5b58\u5165\u7684\u91d1\u989d\uff0c\u8be5\u65b9\u6cd5\u901a\u8fc7 time.sleep \u51fd\u6570\u6a21\u62df\u53d7\u7406\u5b58\u6b3e\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u3002\u6211\u4eec\u901a\u8fc7\u7ebf\u7a0b\u6c60\u7684\u65b9\u5f0f\u542f\u52a8\u4e86 100 \u4e2a\u7ebf\u7a0b\u5411\u4e00\u4e2a\u8d26\u6237\u8f6c\u8d26\uff0c\u4f46\u662f\u4e0a\u9762\u7684\u4ee3\u7801\u5e76\u4e0d\u80fd\u8fd0\u884c\u51fa 100 \u8fd9\u4e2a\u6211\u4eec\u671f\u671b\u7684\u7ed3\u679c\uff0c\u8fd9\u5c31\u662f\u5728\u591a\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u4e00\u4e2a\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\u6ce8\u610f\u4e0a\u9762\u4ee3\u7801\u7684\u7b2c 14 \u884c\uff0c\u5f53\u591a\u4e2a\u7ebf\u7a0b\u90fd\u6267\u884c\u5230\u8fd9\u884c\u4ee3\u7801\u65f6\uff0c\u5b83\u4eec\u4f1a\u5728\u76f8\u540c\u7684\u4f59\u989d\u4e0a\u6267\u884c\u52a0\u4e0a\u5b58\u5165\u91d1\u989d\u7684\u64cd\u4f5c\uff0c\u8fd9\u5c31\u4f1a\u9020\u6210\u201c\u4e22\u5931\u66f4\u65b0\u201d\u73b0\u8c61\uff0c\u5373\u4e4b\u524d\u4fee\u6539\u6570\u636e\u7684\u6210\u679c\u88ab\u540e\u7eed\u7684\u4fee\u6539\u7ed9\u8986\u76d6\u6389\u4e86\uff0c\u6240\u4ee5\u624d\u5f97\u4e0d\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002 \u8981\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u9501\u673a\u5236\uff0c\u901a\u8fc7\u9501\u5bf9\u64cd\u4f5c\u6570\u636e\u7684\u5173\u952e\u4ee3\u7801\u52a0\u4ee5\u4fdd\u62a4\u3002Python \u6807\u51c6\u5e93\u7684 threading \u6a21\u5757\u63d0\u4f9b\u4e86 Lock \u548c RLock \u7c7b\u6765\u652f\u6301\u9501\u673a\u5236\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u53bb\u6df1\u7a76\u4e8c\u8005\u7684\u533a\u522b\uff0c\u5efa\u8bae\u5927\u5bb6\u76f4\u63a5\u4f7f\u7528 RLock \u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7ed9\u94f6\u884c\u8d26\u6237\u6dfb\u52a0\u4e00\u4e2a\u9501\u5bf9\u8c61\uff0c\u901a\u8fc7\u9501\u5bf9\u8c61\u6765\u89e3\u51b3\u521a\u624d\u5b58\u6b3e\u65f6\u53d1\u751f\u201c\u4e22\u5931\u66f4\u65b0\u201d\u7684\u95ee\u9898\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time from concurrent.futures import ThreadPoolExecutor from threading import RLock class Account ( object ): \"\"\"\u94f6\u884c\u8d26\u6237\"\"\" def __init__ ( self ): self . balance = 0.0 self . lock = RLock () def deposit ( self , money ): # \u83b7\u5f97\u9501 self . lock . acquire () try : new_balance = self . balance + money time . sleep ( 0.01 ) self . balance = new_balance finally : # \u91ca\u653e\u9501 self . lock . release () def main (): \"\"\"\u4e3b\u51fd\u6570\"\"\" account = Account () with ThreadPoolExecutor ( max_workers = 16 ) as pool : for _ in range ( 100 ): pool . submit ( account . deposit , 1 ) print ( account . balance ) if __name__ == '__main__' : main () \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u83b7\u5f97\u9501\u548c\u91ca\u653e\u9501\u7684\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0a\u4e0b\u6587\u8bed\u6cd5\u6765\u5b9e\u73b0\uff0c\u4f7f\u7528\u4e0a\u4e0b\u6587\u8bed\u6cd5\u4f1a\u8ba9\u4ee3\u7801\u66f4\u52a0\u7b80\u5355\u4f18\u96c5\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u7684\u65b9\u5f0f\u3002 import time from concurrent.futures import ThreadPoolExecutor from threading import RLock class Account ( object ): \"\"\"\u94f6\u884c\u8d26\u6237\"\"\" def __init__ ( self ): self . balance = 0.0 self . lock = RLock () def deposit ( self , money ): # \u901a\u8fc7\u4e0a\u4e0b\u6587\u8bed\u6cd5\u83b7\u5f97\u9501\u548c\u91ca\u653e\u9501 with self . lock : new_balance = self . balance + money time . sleep ( 0.01 ) self . balance = new_balance def main (): \"\"\"\u4e3b\u51fd\u6570\"\"\" account = Account () with ThreadPoolExecutor ( max_workers = 16 ) as pool : for _ in range ( 100 ): pool . submit ( account . deposit , 1 ) print ( account . balance ) if __name__ == '__main__' : main () \u601d\u8003 \uff1a\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u4fee\u6539\u4e3a5\u4e2a\u7ebf\u7a0b\u5411\u94f6\u884c\u8d26\u6237\u5b58\u94b1\uff0c5\u4e2a\u7ebf\u7a0b\u4ece\u94f6\u884c\u8d26\u6237\u53d6\u94b1\uff0c\u53d6\u94b1\u7684\u7ebf\u7a0b\u5728\u94f6\u884c\u8d26\u6237\u4f59\u989d\u4e0d\u8db3\u65f6\uff0c\u9700\u8981\u505c\u4e0b\u6765\u7b49\u5f85\u5b58\u94b1\u7684\u7ebf\u7a0b\u5c06\u94b1\u5b58\u5165\u540e\u518d\u5c1d\u8bd5\u53d6\u94b1\u3002\u8fd9\u91cc\u9700\u8981\u7528\u5230\u7ebf\u7a0b\u8c03\u5ea6\u7684\u77e5\u8bc6\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u4e0b threading \u6a21\u5757\u4e2d\u7684 Condition \u7c7b\uff0c\u770b\u770b\u662f\u5426\u80fd\u591f\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u3002 GIL\u95ee\u9898 \u5982\u679c\u4f7f\u7528\u5b98\u65b9\u7684 Python \u89e3\u91ca\u5668\uff08\u901a\u5e38\u79f0\u4e4b\u4e3a CPython\uff09\u8fd0\u884c Python \u7a0b\u5e8f\uff0c\u6211\u4eec\u5e76\u4e0d\u80fd\u901a\u8fc7\u4f7f\u7528\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u5c06 CPU \u7684\u5229\u7528\u7387\u63d0\u5347\u5230\u903c\u8fd1400%\uff08\u5bf9\u4e8e4\u6838 CPU\uff09\u6216\u903c\u8fd1800%\uff08\u5bf9\u4e8e8\u6838 CPU\uff09\u8fd9\u6837\u7684\u6c34\u5e73\uff0c\u56e0\u4e3a CPython \u5728\u6267\u884c\u4ee3\u7801\u65f6\uff0c\u4f1a\u53d7\u5230 GIL\uff08\u5168\u5c40\u89e3\u91ca\u5668\u9501\uff09\u7684\u9650\u5236\u3002\u5177\u4f53\u7684\u8bf4\uff0cCPython \u5728\u6267\u884c\u4efb\u4f55\u4ee3\u7801\u65f6\uff0c\u90fd\u9700\u8981\u5bf9\u5e94\u7684\u7ebf\u7a0b\u5148\u83b7\u5f97 GIL\uff0c\u7136\u540e\u6bcf\u6267\u884c100\u6761\uff08\u5b57\u8282\u7801\uff09\u6307\u4ee4\uff0cCPython \u5c31\u4f1a\u8ba9\u83b7\u5f97 GIL \u7684\u7ebf\u7a0b\u4e3b\u52a8\u91ca\u653e GIL\uff0c\u8fd9\u6837\u522b\u7684\u7ebf\u7a0b\u624d\u6709\u673a\u4f1a\u6267\u884c\u3002\u56e0\u4e3a GIL \u7684\u5b58\u5728\uff0c\u65e0\u8bba\u4f60\u7684 CPU \u6709\u591a\u5c11\u4e2a\u6838\uff0c\u6211\u4eec\u7f16\u5199\u7684 Python \u4ee3\u7801\u4e5f\u6ca1\u6709\u673a\u4f1a\u771f\u6b63\u5e76\u884c\u7684\u6267\u884c\u3002 GIL \u662f\u5b98\u65b9 Python \u89e3\u91ca\u5668\u5728\u8bbe\u8ba1\u4e0a\u7684\u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8ba9\u591a\u7ebf\u7a0b\u80fd\u591f\u53d1\u6325 CPU \u7684\u591a\u6838\u4f18\u52bf\uff0c\u9700\u8981\u91cd\u65b0\u5b9e\u73b0\u4e00\u4e2a\u4e0d\u5e26 GIL \u7684 Python \u89e3\u91ca\u5668\u3002\u8fd9\u4e2a\u95ee\u9898\u6309\u7167\u5b98\u65b9\u7684\u8bf4\u6cd5\uff0c\u5728 Python \u53d1\u5e034.0\u7248\u672c\u65f6\u4f1a\u5f97\u5230\u89e3\u51b3\uff0c\u5c31\u8ba9\u6211\u4eec\u62ed\u76ee\u4ee5\u5f85\u5427\u3002\u5f53\u4e0b\uff0c\u5bf9\u4e8e CPython \u800c\u8a00\uff0c\u5982\u679c\u5e0c\u671b\u5145\u5206\u53d1\u6325 CPU \u7684\u591a\u6838\u4f18\u52bf\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u591a\u8fdb\u7a0b\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u5bf9\u5e94\u4e00\u4e2a Python \u89e3\u91ca\u5668\uff0c\u56e0\u6b64\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684 GIL\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7a81\u7834 GIL \u7684\u9650\u5236\u3002\u5728\u4e0b\u4e00\u4e2a\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u4f1a\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5173\u4e8e\u591a\u8fdb\u7a0b\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5e76\u5bf9\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\u7684\u4ee3\u7801\u53ca\u5176\u6267\u884c\u6548\u679c\u8fdb\u884c\u6bd4\u8f83\u3002","title":"\u7b2c34\u8bfe\uff1aPython\u4e2d\u7684\u5e76\u53d1\u7f16\u7a0b 1"},{"location":"%E7%AC%AC34%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-1/#34python-1","text":"\u73b0\u5982\u4eca\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u65e9\u5df2\u662f\u591a CPU \u6216\u591a\u6838\u7684\u8ba1\u7b97\u673a\uff0c\u800c\u6211\u4eec\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u57fa\u672c\u90fd\u652f\u6301\u201c\u591a\u4efb\u52a1\u201d\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4e00\u4e2a\u7a0b\u5e8f\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u5b50\u4efb\u52a1\uff0c\u8ba9\u591a\u4e2a\u5b50\u4efb\u52a1\u201c\u5e76\u884c\u201d\u6216\u201c\u5e76\u53d1\u201d\u7684\u6267\u884c\uff0c\u4ece\u800c\u7f29\u77ed\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\uff0c\u540c\u65f6\u4e5f\u8ba9\u7528\u6237\u83b7\u5f97\u66f4\u597d\u7684\u4f53\u9a8c\u3002\u56e0\u6b64\u5f53\u4e0b\uff0c\u4e0d\u7ba1\u7528\u4ec0\u4e48\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884c\u5f00\u53d1\uff0c\u5b9e\u73b0\u201c\u5e76\u884c\u201d\u6216\u201c\u5e76\u53d1\u201d\u7f16\u7a0b\u5df2\u7ecf\u6210\u4e3a\u4e86\u7a0b\u5e8f\u5458\u7684\u6807\u914d\u6280\u80fd\u3002\u4e3a\u4e86\u8bb2\u8ff0\u5982\u4f55\u5728 Python \u7a0b\u5e8f\u4e2d\u5b9e\u73b0\u201c\u5e76\u884c\u201d\u6216\u201c\u5e76\u53d1\u201d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e24\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff1a\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u3002","title":"\u7b2c34\u8bfe\uff1aPython\u4e2d\u7684\u5e76\u53d1\u7f16\u7a0b-1"},{"location":"%E7%AC%AC34%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-1/#_1","text":"\u6211\u4eec\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u4e00\u4e2a\u7a0b\u5e8f\u4f1a\u521b\u5efa\u51fa\u4e00\u4e2a\u6216\u591a\u4e2a\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u662f\u5177\u6709\u4e00\u5b9a\u72ec\u7acb\u529f\u80fd\u7684\u7a0b\u5e8f\u5173\u4e8e\u67d0\u4e2a\u6570\u636e\u96c6\u5408\u4e0a\u7684\u4e00\u6b21\u8fd0\u884c\u6d3b\u52a8\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u5730\u5740\u7a7a\u95f4\u3001\u6570\u636e\u6808\u4ee5\u53ca\u5176\u4ed6\u7528\u4e8e\u8ddf\u8e2a\u8fdb\u7a0b\u6267\u884c\u7684\u8f85\u52a9\u6570\u636e\uff1b\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u6240\u6709\u8fdb\u7a0b\u7684\u6267\u884c\uff0c\u4e3a\u5b83\u4eec\u5408\u7406\u7684\u5206\u914d\u8d44\u6e90\u3002\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7 fork \u6216 spawn \u7684\u65b9\u5f0f\u521b\u5efa\u65b0\u7684\u8fdb\u7a0b\u6765\u6267\u884c\u5176\u4ed6\u7684\u4efb\u52a1\uff0c\u4e0d\u8fc7\u65b0\u7684\u8fdb\u7a0b\u4e5f\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\u4e24\u4e2a\u8fdb\u7a0b\u5982\u679c\u8981\u5171\u4eab\u6570\u636e\uff0c\u5fc5\u987b\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\u6765\u5b9e\u73b0\uff0c\u5177\u4f53\u7684\u65b9\u5f0f\u5305\u62ec\u7ba1\u9053\u3001\u4fe1\u53f7\u3001\u5957\u63a5\u5b57\u7b49\u3002 \u4e00\u4e2a\u8fdb\u7a0b\u8fd8\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u6267\u884c\u7ebf\u7d22\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u62e5\u6709\u591a\u4e2a\u53ef\u4ee5\u83b7\u5f97 CPU \u8c03\u5ea6\u7684\u6267\u884c\u5355\u5143\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u7ebf\u7a0b\u3002\u7531\u4e8e\u7ebf\u7a0b\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e0b\uff0c\u5b83\u4eec\u53ef\u4ee5\u5171\u4eab\u76f8\u540c\u7684\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u76f8\u5bf9\u4e8e\u8fdb\u7a0b\u800c\u8a00\uff0c\u7ebf\u7a0b\u95f4\u7684\u4fe1\u606f\u5171\u4eab\u548c\u901a\u4fe1\u66f4\u52a0\u5bb9\u6613\u3002\u5f53\u7136\u5728\u5355\u6838 CPU \u7cfb\u7edf\u4e2d\uff0c\u591a\u4e2a\u7ebf\u7a0b\u4e0d\u53ef\u80fd\u540c\u65f6\u6267\u884c\uff0c\u56e0\u4e3a\u5728\u67d0\u4e2a\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u591f\u83b7\u5f97 CPU\uff0c\u591a\u4e2a\u7ebf\u7a0b\u901a\u8fc7\u5171\u4eab CPU \u6267\u884c\u65f6\u95f4\u7684\u65b9\u5f0f\u6765\u8fbe\u5230\u5e76\u53d1\u7684\u6548\u679c\u3002 \u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u591a\u7ebf\u7a0b\u6280\u672f\u901a\u5e38\u90fd\u4f1a\u5e26\u6765\u4e0d\u8a00\u800c\u55bb\u7684\u597d\u5904\uff0c\u6700\u4e3b\u8981\u7684\u4f53\u73b0\u5728\u63d0\u5347\u7a0b\u5e8f\u7684\u6027\u80fd\u548c\u6539\u5584\u7528\u6237\u4f53\u9a8c\uff0c\u4eca\u5929\u6211\u4eec\u4f7f\u7528\u7684\u8f6f\u4ef6\u51e0\u4e4e\u90fd\u7528\u5230\u4e86\u591a\u7ebf\u7a0b\u6280\u672f\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u5229\u7528\u7cfb\u7edf\u81ea\u5e26\u7684\u8fdb\u7a0b\u76d1\u63a7\u5de5\u5177\uff08\u5982 macOS \u4e2d\u7684\u201c\u6d3b\u52a8\u76d1\u89c6\u5668\u201d\u3001Windows \u4e2d\u7684\u201c\u4efb\u52a1\u7ba1\u7406\u5668\u201d\uff09\u6765\u8bc1\u5b9e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u8fd9\u91cc\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8ddf\u5927\u5bb6\u518d\u6b21\u5f3a\u8c03\u4e24\u4e2a\u6982\u5ff5\uff1a \u5e76\u53d1 \uff08concurrency\uff09\u548c \u5e76\u884c \uff08parallel\uff09\u3002 \u5e76\u53d1 \u901a\u5e38\u662f\u6307\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u6761\u6307\u4ee4\u6267\u884c\uff0c\u4f46\u662f\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u5e94\u7684\u6307\u4ee4\u88ab\u5feb\u901f\u8f6e\u6362\u5730\u6267\u884c\u3002\u6bd4\u5982\u4e00\u4e2a\u5904\u7406\u5668\uff0c\u5b83\u5148\u6267\u884c\u7ebf\u7a0b A \u7684\u6307\u4ee4\u4e00\u6bb5\u65f6\u95f4\uff0c\u518d\u6267\u884c\u7ebf\u7a0b B \u7684\u6307\u4ee4\u4e00\u6bb5\u65f6\u95f4\uff0c\u518d\u5207\u56de\u5230\u7ebf\u7a0b A \u6267\u884c\u4e00\u6bb5\u65f6\u95f4\u3002\u7531\u4e8e\u5904\u7406\u5668\u6267\u884c\u6307\u4ee4\u7684\u901f\u5ea6\u548c\u5207\u6362\u7684\u901f\u5ea6\u6781\u5feb\uff0c\u4eba\u4eec\u5b8c\u5168\u611f\u77e5\u4e0d\u5230\u8ba1\u7b97\u673a\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6709\u591a\u4e2a\u7ebf\u7a0b\u5207\u6362\u4e0a\u4e0b\u6587\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u8fd9\u5c31\u4f7f\u5f97\u5b8f\u89c2\u4e0a\u770b\u8d77\u6765\u591a\u4e2a\u7ebf\u7a0b\u5728\u540c\u65f6\u8fd0\u884c\uff0c\u4f46\u5fae\u89c2\u4e0a\u5176\u5b9e\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u3002 \u5e76\u884c \u662f\u6307\u540c\u4e00\u65f6\u523b\uff0c\u6709\u591a\u6761\u6307\u4ee4\u5728\u591a\u4e2a\u5904\u7406\u5668\u4e0a\u540c\u65f6\u6267\u884c\uff0c\u5e76\u884c\u5fc5\u987b\u8981\u4f9d\u8d56\u4e8e\u591a\u4e2a\u5904\u7406\u5668\uff0c\u4e0d\u8bba\u662f\u4ece\u5b8f\u89c2\u4e0a\u8fd8\u662f\u5fae\u89c2\u4e0a\uff0c\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5728\u540c\u4e00\u65f6\u523b\u4e00\u8d77\u6267\u884c\u7684\u3002\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u5e76\u4e0d\u7528\u4e25\u683c\u533a\u5206\u5e76\u53d1\u548c\u5e76\u884c\u4e24\u4e2a\u8bcd\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u65f6\u5019\u4e5f\u628a Python \u4e2d\u7684\u591a\u7ebf\u7a0b\u3001\u591a\u8fdb\u7a0b\u4ee5\u53ca\u5f02\u6b65 I/O \u90fd\u89c6\u4e3a\u5b9e\u73b0\u5e76\u53d1\u7f16\u7a0b\u7684\u624b\u6bb5\uff0c\u4f46\u5b9e\u9645\u4e0a\u524d\u9762\u4e24\u8005\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5e76\u884c\u7f16\u7a0b\uff0c\u5f53\u7136\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u5168\u5c40\u89e3\u91ca\u5668\u9501\uff08GIL\uff09\u7684\u95ee\u9898\uff0c\u6211\u4eec\u7a0d\u540e\u8ba8\u8bba\u3002","title":"\u7ebf\u7a0b\u548c\u8fdb\u7a0b"},{"location":"%E7%AC%AC34%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-1/#_2","text":"Python \u6807\u51c6\u5e93\u4e2d threading \u6a21\u5757\u7684 Thread \u7c7b\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u975e\u5e38\u8f7b\u677e\u7684\u5b9e\u73b0\u591a\u7ebf\u7a0b\u7f16\u7a0b\u3002\u6211\u4eec\u7528\u4e00\u4e2a\u8054\u7f51\u4e0b\u8f7d\u6587\u4ef6\u7684\u4f8b\u5b50\u6765\u5bf9\u6bd4\u4f7f\u7528\u591a\u7ebf\u7a0b\u548c\u4e0d\u4f7f\u7528\u591a\u7ebf\u7a0b\u5230\u5e95\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \u4e0d\u4f7f\u7528\u591a\u7ebf\u7a0b\u7684\u4e0b\u8f7d\u3002 import random import time def download ( * , filename ): start = time . time () print ( f '\u5f00\u59cb\u4e0b\u8f7d { filename } .' ) time . sleep ( random . randint ( 3 , 6 )) print ( f ' { filename } \u4e0b\u8f7d\u5b8c\u6210.' ) end = time . time () print ( f '\u4e0b\u8f7d\u8017\u65f6: { end - start : .3f } \u79d2.' ) def main (): start = time . time () download ( filename = 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ) download ( filename = 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ) download ( filename = 'Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4' ) end = time . time () print ( f '\u603b\u8017\u65f6: { end - start : .3f } \u79d2.' ) if __name__ == '__main__' : main () \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u5e76\u6ca1\u6709\u771f\u6b63\u5b9e\u73b0\u8054\u7f51\u4e0b\u8f7d\u7684\u529f\u80fd\uff0c\u800c\u662f\u901a\u8fc7 time.sleep() \u4f11\u7720\u4e00\u6bb5\u65f6\u95f4\u6765\u6a21\u62df\u4e0b\u8f7d\u6587\u4ef6\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u4e0a\u7684\u5f00\u9500\uff0c\u8ddf\u5b9e\u9645\u4e0b\u8f7d\u7684\u72b6\u51b5\u6bd4\u8f83\u7c7b\u4f3c\u3002 \u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u6240\u793a\u7684\u8fd0\u884c\u7ed3\u679c\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u6211\u4eec\u7684\u7a0b\u5e8f\u53ea\u6709\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u65f6\uff0c\u6bcf\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u90fd\u9700\u8981\u7b49\u5f85\u4e0a\u4e00\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u6267\u884c\u7ed3\u675f\u624d\u80fd\u5f00\u59cb\uff0c\u6240\u4ee5\u7a0b\u5e8f\u6267\u884c\u7684\u603b\u8017\u65f6\u662f\u4e09\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u5404\u81ea\u6267\u884c\u65f6\u95f4\u7684\u603b\u548c\u3002 \u5f00\u59cb\u4e0b\u8f7dPython\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf. Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf\u4e0b\u8f7d\u5b8c\u6210. \u4e0b\u8f7d\u8017\u65f6: 3.005\u79d2. \u5f00\u59cb\u4e0b\u8f7dMySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi. MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi\u4e0b\u8f7d\u5b8c\u6210. \u4e0b\u8f7d\u8017\u65f6: 5.006\u79d2. \u5f00\u59cb\u4e0b\u8f7dLinux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4. Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp3\u4e0b\u8f7d\u5b8c\u6210. \u4e0b\u8f7d\u8017\u65f6: 6.007\u79d2. \u603b\u8017\u65f6: 14.018\u79d2. \u4e8b\u5b9e\u4e0a\uff0c\u4e0a\u9762\u7684\u4e09\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u4e4b\u95f4\u5e76\u6ca1\u6709\u903b\u8f91\u4e0a\u7684\u56e0\u679c\u5173\u7cfb\uff0c\u4e09\u8005\u662f\u53ef\u4ee5\u201c\u5e76\u53d1\u201d\u7684\uff0c\u4e0b\u4e00\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u6ca1\u6709\u5fc5\u8981\u7b49\u5f85\u4e0a\u4e00\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u7ed3\u675f\uff0c\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u591a\u7ebf\u7a0b\u7f16\u7a0b\u6765\u6539\u5199\u4e0a\u9762\u7684\u4ee3\u7801\u3002 import random import time from threading import Thread def download ( * , filename ): start = time . time () print ( f '\u5f00\u59cb\u4e0b\u8f7d { filename } .' ) time . sleep ( random . randint ( 3 , 6 )) print ( f ' { filename } \u4e0b\u8f7d\u5b8c\u6210.' ) end = time . time () print ( f '\u4e0b\u8f7d\u8017\u65f6: { end - start : .3f } \u79d2.' ) def main (): threads = [ Thread ( target = download , kwargs = { 'filename' : 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' }), Thread ( target = download , kwargs = { 'filename' : 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' }), Thread ( target = download , kwargs = { 'filename' : 'Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4' }) ] start = time . time () # \u542f\u52a8\u4e09\u4e2a\u7ebf\u7a0b for thread in threads : thread . start () # \u7b49\u5f85\u7ebf\u7a0b\u7ed3\u675f for thread in threads : thread . join () end = time . time () print ( f '\u603b\u8017\u65f6: { end - start : .3f } \u79d2.' ) if __name__ == '__main__' : main () \u67d0\u6b21\u7684\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\u3002 \u5f00\u59cb\u4e0b\u8f7d Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf. \u5f00\u59cb\u4e0b\u8f7d MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi. \u5f00\u59cb\u4e0b\u8f7d Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4. MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi \u4e0b\u8f7d\u5b8c\u6210. \u4e0b\u8f7d\u8017\u65f6: 3.005\u79d2. Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf \u4e0b\u8f7d\u5b8c\u6210. \u4e0b\u8f7d\u8017\u65f6: 5.006\u79d2. Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4 \u4e0b\u8f7d\u5b8c\u6210. \u4e0b\u8f7d\u8017\u65f6: 6.003\u79d2. \u603b\u8017\u65f6: 6.004\u79d2. \u901a\u8fc7\u4e0a\u9762\u7684\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6574\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\u51e0\u4e4e\u7b49\u4e8e\u8017\u65f6\u6700\u957f\u7684\u4e00\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u7684\u6267\u884c\u65f6\u95f4\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u4e09\u4e2a\u4e0b\u8f7d\u4efb\u52a1\u662f\u5e76\u53d1\u6267\u884c\u7684\uff0c\u4e0d\u5b58\u5728\u4e00\u4e2a\u7b49\u5f85\u53e6\u4e00\u4e2a\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u505a\u5f88\u663e\u7136\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5982\u679c\u7a0b\u5e8f\u4e2d\u6709\u975e\u5e38\u8017\u65f6\u7684\u6267\u884c\u5355\u5143\uff0c\u800c\u8fd9\u4e9b\u8017\u65f6\u7684\u6267\u884c\u5355\u5143\u4e4b\u95f4\u53c8\u6ca1\u6709\u903b\u8f91\u4e0a\u7684\u56e0\u679c\u5173\u7cfb\uff0c\u5373 B \u5355\u5143\u7684\u6267\u884c\u4e0d\u4f9d\u8d56\u4e8e A \u5355\u5143\u7684\u6267\u884c\u7ed3\u679c\uff0c\u90a3\u4e48 A \u548c B \u4e24\u4e2a\u5355\u5143\u5c31\u53ef\u4ee5\u653e\u5230\u4e24\u4e2a\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e2d\uff0c\u8ba9\u4ed6\u4eec\u5e76\u53d1\u7684\u6267\u884c\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u9664\u4e86\u51cf\u5c11\u7a0b\u5e8f\u6267\u884c\u7684\u7b49\u5f85\u65f6\u95f4\uff0c\u8fd8\u53ef\u4ee5\u5e26\u6765\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5355\u5143\u7684\u963b\u585e\u4e0d\u4f1a\u9020\u6210\u7a0b\u5e8f\u7684\u201c\u5047\u6b7b\u201d\uff0c\u56e0\u4e3a\u7a0b\u5e8f\u4e2d\u8fd8\u6709\u5176\u4ed6\u7684\u5355\u5143\u662f\u53ef\u4ee5\u8fd0\u8f6c\u7684\u3002","title":"\u591a\u7ebf\u7a0b\u7f16\u7a0b"},{"location":"%E7%AC%AC34%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-1/#thread","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u76f4\u63a5\u4f7f\u7528 Thread \u7c7b\u7684\u6784\u9020\u5668\u5c31\u53ef\u4ee5\u521b\u5efa\u7ebf\u7a0b\u5bf9\u8c61\uff0c\u800c\u7ebf\u7a0b\u5bf9\u8c61\u7684 start() \u65b9\u6cd5\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u3002\u7ebf\u7a0b\u542f\u52a8\u540e\u4f1a\u6267\u884c target \u53c2\u6570\u6307\u5b9a\u7684\u51fd\u6570\uff0c\u5f53\u7136\u524d\u63d0\u662f\u83b7\u5f97 CPU \u7684\u8c03\u5ea6\uff1b\u5982\u679c target \u6307\u5b9a\u7684\u7ebf\u7a0b\u8981\u6267\u884c\u7684\u76ee\u6807\u51fd\u6570\u6709\u53c2\u6570\uff0c\u9700\u8981\u901a\u8fc7 args \u53c2\u6570\u4e3a\u5176\u8fdb\u884c\u6307\u5b9a\uff0c\u5bf9\u4e8e\u5173\u952e\u5b57\u53c2\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7 kwargs \u53c2\u6570\u8fdb\u884c\u4f20\u5165\u3002 Thread \u7c7b\u7684\u6784\u9020\u5668\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u53c2\u6570\uff0c\u6211\u4eec\u9047\u5230\u7684\u65f6\u5019\u518d\u4e3a\u5927\u5bb6\u8fdb\u884c\u8bb2\u89e3\uff0c\u76ee\u524d\u9700\u8981\u5927\u5bb6\u638c\u63e1\u7684\uff0c\u5c31\u662f target \u3001 args \u548c kwargs \u3002","title":"\u4f7f\u7528 Thread \u7c7b\u521b\u5efa\u7ebf\u7a0b\u5bf9\u8c61"},{"location":"%E7%AC%AC34%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-1/#thread_1","text":"\u9664\u4e86\u4e0a\u9762\u7684\u4ee3\u7801\u5c55\u793a\u7684\u521b\u5efa\u7ebf\u7a0b\u7684\u65b9\u5f0f\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f Thread \u7c7b\u5e76\u91cd\u5199 run() \u65b9\u6cd5\u7684\u65b9\u5f0f\u6765\u81ea\u5b9a\u4e49\u7ebf\u7a0b\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import random import time from threading import Thread class DownloadThread ( Thread ): def __init__ ( self , filename ): self . filename = filename super () . __init__ () def run ( self ): start = time . time () print ( f '\u5f00\u59cb\u4e0b\u8f7d { self . filename } .' ) time . sleep ( random . randint ( 3 , 6 )) print ( f ' { self . filename } \u4e0b\u8f7d\u5b8c\u6210.' ) end = time . time () print ( f '\u4e0b\u8f7d\u8017\u65f6: { end - start : .3f } \u79d2.' ) def main (): threads = [ DownloadThread ( 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' ), DownloadThread ( 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' ), DownloadThread ( 'Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4' ) ] start = time . time () # \u542f\u52a8\u4e09\u4e2a\u7ebf\u7a0b for thread in threads : thread . start () # \u7b49\u5f85\u7ebf\u7a0b\u7ed3\u675f for thread in threads : thread . join () end = time . time () print ( f '\u603b\u8017\u65f6: { end - start : .3f } \u79d2.' ) if __name__ == '__main__' : main ()","title":"\u7ee7\u627f Thread \u7c7b\u81ea\u5b9a\u4e49\u7ebf\u7a0b"},{"location":"%E7%AC%AC34%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-1/#_3","text":"\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7ebf\u7a0b\u6c60\u7684\u65b9\u5f0f\u5c06\u4efb\u52a1\u653e\u5230\u591a\u4e2a\u7ebf\u7a0b\u4e2d\u53bb\u6267\u884c\uff0c\u901a\u8fc7\u7ebf\u7a0b\u6c60\u6765\u4f7f\u7528\u7ebf\u7a0b\u5e94\u8be5\u662f\u591a\u7ebf\u7a0b\u7f16\u7a0b\u6700\u7406\u60f3\u7684\u9009\u62e9\u3002\u4e8b\u5b9e\u4e0a\uff0c\u7ebf\u7a0b\u7684\u521b\u5efa\u548c\u91ca\u653e\u90fd\u4f1a\u5e26\u6765\u8f83\u5927\u7684\u5f00\u9500\uff0c\u9891\u7e41\u7684\u521b\u5efa\u548c\u91ca\u653e\u7ebf\u7a0b\u901a\u5e38\u90fd\u4e0d\u662f\u5f88\u597d\u7684\u9009\u62e9\u3002\u5229\u7528\u7ebf\u7a0b\u6c60\uff0c\u53ef\u4ee5\u63d0\u524d\u51c6\u5907\u597d\u82e5\u5e72\u4e2a\u7ebf\u7a0b\uff0c\u5728\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u9700\u8981\u518d\u901a\u8fc7\u81ea\u5b9a\u4e49\u7684\u4ee3\u7801\u521b\u5efa\u548c\u91ca\u653e\u7ebf\u7a0b\uff0c\u800c\u662f\u76f4\u63a5\u590d\u7528\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u3002Python \u5185\u7f6e\u7684 concurrent.futures \u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9\u7ebf\u7a0b\u6c60\u7684\u652f\u6301\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import random import time from concurrent.futures import ThreadPoolExecutor from threading import Thread def download ( * , filename ): start = time . time () print ( f '\u5f00\u59cb\u4e0b\u8f7d { filename } .' ) time . sleep ( random . randint ( 3 , 6 )) print ( f ' { filename } \u4e0b\u8f7d\u5b8c\u6210.' ) end = time . time () print ( f '\u4e0b\u8f7d\u8017\u65f6: { end - start : .3f } \u79d2.' ) def main (): with ThreadPoolExecutor ( max_workers = 4 ) as pool : filenames = [ 'Python\u4ece\u5165\u95e8\u5230\u4f4f\u9662.pdf' , 'MySQL\u4ece\u5220\u5e93\u5230\u8dd1\u8def.avi' , 'Linux\u4ece\u7cbe\u901a\u5230\u653e\u5f03.mp4' ] start = time . time () for filename in filenames : pool . submit ( download , filename = filename ) end = time . time () print ( f '\u603b\u8017\u65f6: { end - start : .3f } \u79d2.' ) if __name__ == '__main__' : main ()","title":"\u4f7f\u7528\u7ebf\u7a0b\u6c60"},{"location":"%E7%AC%AC34%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-1/#_4","text":"\u6240\u8c13\u201c\u5b88\u62a4\u7ebf\u7a0b\u201d\u5c31\u662f\u5728\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u4e0d\u503c\u5f97\u518d\u4fdd\u7559\u7684\u6267\u884c\u7ebf\u7a0b\u3002\u8fd9\u91cc\u7684\u4e0d\u503c\u5f97\u4fdd\u7559\u6307\u7684\u662f\u5b88\u62a4\u7ebf\u7a0b\u4f1a\u5728\u5176\u4ed6\u975e\u5b88\u62a4\u7ebf\u7a0b\u5168\u90e8\u8fd0\u884c\u7ed3\u675f\u4e4b\u540e\u88ab\u9500\u6bc1\uff0c\u5b83\u5b88\u62a4\u7684\u662f\u5f53\u524d\u8fdb\u7a0b\u5185\u6240\u6709\u7684\u975e\u5b88\u62a4\u7ebf\u7a0b\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5b88\u62a4\u7ebf\u7a0b\u4f1a\u8ddf\u968f\u4e3b\u7ebf\u7a0b\u4e00\u8d77\u6302\u6389\uff0c\u800c\u4e3b\u7ebf\u7a0b\u7684\u751f\u547d\u5468\u671f\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\u7684\u751f\u547d\u5468\u671f\u3002\u5982\u679c\u4e0d\u7406\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u6bb5\u7b80\u5355\u7684\u4ee3\u7801\u3002 import time from threading import Thread def display ( content ): while True : print ( content , end = '' , flush = True ) time . sleep ( 0.1 ) def main (): Thread ( target = display , args = ( 'Ping' , )) . start () Thread ( target = display , args = ( 'Pong' , )) . start () if __name__ == '__main__' : main () \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06 print \u51fd\u6570\u7684\u53c2\u6570 flush \u8bbe\u7f6e\u4e3a True \uff0c\u8fd9\u662f\u56e0\u4e3a flush \u53c2\u6570\u7684\u503c\u5982\u679c\u4e3a False \uff0c\u800c print \u53c8\u6ca1\u6709\u505a\u6362\u884c\u5904\u7406\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6bcf\u6b21 print \u8f93\u51fa\u7684\u5185\u5bb9\u88ab\u653e\u5230\u64cd\u4f5c\u7cfb\u7edf\u7684\u8f93\u51fa\u7f13\u51b2\u533a\uff0c\u76f4\u5230\u7f13\u51b2\u533a\u88ab\u8f93\u51fa\u7684\u5185\u5bb9\u585e\u6ee1\uff0c\u624d\u4f1a\u6e05\u7a7a\u7f13\u51b2\u533a\u4ea7\u751f\u4e00\u6b21\u8f93\u51fa\u3002\u4e0a\u8ff0\u73b0\u8c61\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4e86\u51cf\u5c11 I/O \u4e2d\u65ad\uff0c\u63d0\u5347 CPU \u5229\u7528\u7387\u505a\u51fa\u7684\u8bbe\u5b9a\uff0c\u4e3a\u4e86\u8ba9\u4ee3\u7801\u4ea7\u751f\u76f4\u89c2\u4ea4\u4e92\uff0c\u6211\u4eec\u624d\u5c06 flush \u53c2\u6570\u8bbe\u7f6e\u4e3a True \uff0c\u5f3a\u5236\u6bcf\u6b21\u8f93\u51fa\u90fd\u6e05\u7a7a\u8f93\u51fa\u7f13\u51b2\u533a\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u8fd0\u884c\u8d77\u6765\u4e4b\u540e\u662f\u4e0d\u4f1a\u505c\u6b62\u7684\uff0c\u56e0\u4e3a\u4e24\u4e2a\u5b50\u7ebf\u7a0b\u4e2d\u90fd\u6709\u6b7b\u5faa\u73af\uff0c\u9664\u975e\u4f60\u624b\u52a8\u4e2d\u65ad\u4ee3\u7801\u7684\u6267\u884c\u3002\u4f46\u662f\uff0c\u5982\u679c\u5728\u521b\u5efa\u7ebf\u7a0b\u5bf9\u8c61\u65f6\uff0c\u5c06\u540d\u4e3a daemon \u7684\u53c2\u6570\u8bbe\u7f6e\u4e3a True \uff0c\u8fd9\u4e24\u4e2a\u7ebf\u7a0b\u5c31\u4f1a\u53d8\u6210\u5b88\u62a4\u7ebf\u7a0b\uff0c\u90a3\u4e48\u5728\u5176\u4ed6\u7ebf\u7a0b\u7ed3\u675f\u65f6\uff0c\u5373\u4fbf\u6709\u6b7b\u5faa\u73af\uff0c\u4e24\u4e2a\u5b88\u62a4\u7ebf\u7a0b\u4e5f\u4f1a\u6302\u6389\uff0c\u4e0d\u4f1a\u518d\u7ee7\u7eed\u6267\u884c\u4e0b\u53bb\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time from threading import Thread def display ( content ): while True : print ( content , end = '' , flush = True ) time . sleep ( 0.1 ) def main (): Thread ( target = display , args = ( 'Ping' , ), daemon = True ) . start () Thread ( target = display , args = ( 'Pong' , ), daemon = True ) . start () time . sleep ( 5 ) if __name__ == '__main__' : main () \u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6dfb\u52a0\u4e86\u4e00\u884c time.sleep(5) \u8ba9\u4e3b\u7ebf\u7a0b\u4f11\u77205\u79d2\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u8f93\u51fa Ping \u548c Pong \u7684\u5b88\u62a4\u7ebf\u7a0b\u4f1a\u6301\u7eed\u8fd0\u8f6c\uff0c\u76f4\u5230\u4e3b\u7ebf\u7a0b\u57285\u79d2\u540e\u7ed3\u675f\uff0c\u8fd9\u4e24\u4e2a\u5b88\u62a4\u7ebf\u7a0b\u4e5f\u88ab\u9500\u6bc1\uff0c\u4e0d\u518d\u7ee7\u7eed\u8fd0\u884c\u3002 \u601d\u8003 \uff1a\u5982\u679c\u5c06\u4e0a\u9762\u4ee3\u7801\u7b2c12\u884c\u7684 daemon=True \u53bb\u6389\uff0c\u4ee3\u7801\u4f1a\u600e\u6837\u6267\u884c\uff1f\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u5e76\u770b\u770b\u5b9e\u9645\u6267\u884c\u7684\u7ed3\u679c\u8ddf\u4f60\u60f3\u8c61\u7684\u662f\u5426\u4e00\u81f4\u3002","title":"\u5b88\u62a4\u7ebf\u7a0b"},{"location":"%E7%AC%AC34%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-1/#_5","text":"\u5728\u7f16\u5199\u591a\u7ebf\u7a0b\u4ee3\u7801\u65f6\uff0c\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u9047\u5230\u591a\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u540c\u4e00\u4e2a\u8d44\u6e90\uff08\u5bf9\u8c61\uff09\u7684\u60c5\u51b5\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6ca1\u6709\u5408\u7406\u7684\u673a\u5236\u6765\u4fdd\u62a4\u88ab\u7ade\u4e89\u7684\u8d44\u6e90\uff0c\u90a3\u4e48\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u975e\u9884\u671f\u7684\u72b6\u51b5\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e86 100 \u4e2a\u7ebf\u7a0b\u5411\u540c\u4e00\u4e2a\u94f6\u884c\u8d26\u6237\uff08\u521d\u59cb\u4f59\u989d\u4e3a 0 \u5143\uff09\u8f6c\u8d26\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u8f6c\u8d26\u91d1\u989d\u4e3a 1 \u5143\u3002\u5728\u6b63\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u94f6\u884c\u8d26\u6237\u6700\u7ec8\u7684\u4f59\u989d\u5e94\u8be5\u662f 100 \u5143\uff0c\u4f46\u662f\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u6211\u4eec\u5e76\u4e0d\u80fd\u5f97\u5230 100 \u5143\u8fd9\u4e2a\u7ed3\u679c\u3002 import time from concurrent.futures import ThreadPoolExecutor class Account ( object ): \"\"\"\u94f6\u884c\u8d26\u6237\"\"\" def __init__ ( self ): self . balance = 0.0 def deposit ( self , money ): \"\"\"\u5b58\u94b1\"\"\" new_balance = self . balance + money time . sleep ( 0.01 ) self . balance = new_balance def main (): \"\"\"\u4e3b\u51fd\u6570\"\"\" account = Account () with ThreadPoolExecutor ( max_workers = 16 ) as pool : for _ in range ( 100 ): pool . submit ( account . deposit , 1 ) print ( account . balance ) if __name__ == '__main__' : main () \u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 Account \u7c7b\u4ee3\u8868\u4e86\u94f6\u884c\u8d26\u6237\uff0c\u5b83\u7684 deposit \u65b9\u6cd5\u4ee3\u8868\u5b58\u6b3e\u884c\u4e3a\uff0c\u53c2\u6570 money \u4ee3\u8868\u5b58\u5165\u7684\u91d1\u989d\uff0c\u8be5\u65b9\u6cd5\u901a\u8fc7 time.sleep \u51fd\u6570\u6a21\u62df\u53d7\u7406\u5b58\u6b3e\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u3002\u6211\u4eec\u901a\u8fc7\u7ebf\u7a0b\u6c60\u7684\u65b9\u5f0f\u542f\u52a8\u4e86 100 \u4e2a\u7ebf\u7a0b\u5411\u4e00\u4e2a\u8d26\u6237\u8f6c\u8d26\uff0c\u4f46\u662f\u4e0a\u9762\u7684\u4ee3\u7801\u5e76\u4e0d\u80fd\u8fd0\u884c\u51fa 100 \u8fd9\u4e2a\u6211\u4eec\u671f\u671b\u7684\u7ed3\u679c\uff0c\u8fd9\u5c31\u662f\u5728\u591a\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u4e00\u4e2a\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\u6ce8\u610f\u4e0a\u9762\u4ee3\u7801\u7684\u7b2c 14 \u884c\uff0c\u5f53\u591a\u4e2a\u7ebf\u7a0b\u90fd\u6267\u884c\u5230\u8fd9\u884c\u4ee3\u7801\u65f6\uff0c\u5b83\u4eec\u4f1a\u5728\u76f8\u540c\u7684\u4f59\u989d\u4e0a\u6267\u884c\u52a0\u4e0a\u5b58\u5165\u91d1\u989d\u7684\u64cd\u4f5c\uff0c\u8fd9\u5c31\u4f1a\u9020\u6210\u201c\u4e22\u5931\u66f4\u65b0\u201d\u73b0\u8c61\uff0c\u5373\u4e4b\u524d\u4fee\u6539\u6570\u636e\u7684\u6210\u679c\u88ab\u540e\u7eed\u7684\u4fee\u6539\u7ed9\u8986\u76d6\u6389\u4e86\uff0c\u6240\u4ee5\u624d\u5f97\u4e0d\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002 \u8981\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u9501\u673a\u5236\uff0c\u901a\u8fc7\u9501\u5bf9\u64cd\u4f5c\u6570\u636e\u7684\u5173\u952e\u4ee3\u7801\u52a0\u4ee5\u4fdd\u62a4\u3002Python \u6807\u51c6\u5e93\u7684 threading \u6a21\u5757\u63d0\u4f9b\u4e86 Lock \u548c RLock \u7c7b\u6765\u652f\u6301\u9501\u673a\u5236\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u53bb\u6df1\u7a76\u4e8c\u8005\u7684\u533a\u522b\uff0c\u5efa\u8bae\u5927\u5bb6\u76f4\u63a5\u4f7f\u7528 RLock \u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7ed9\u94f6\u884c\u8d26\u6237\u6dfb\u52a0\u4e00\u4e2a\u9501\u5bf9\u8c61\uff0c\u901a\u8fc7\u9501\u5bf9\u8c61\u6765\u89e3\u51b3\u521a\u624d\u5b58\u6b3e\u65f6\u53d1\u751f\u201c\u4e22\u5931\u66f4\u65b0\u201d\u7684\u95ee\u9898\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time from concurrent.futures import ThreadPoolExecutor from threading import RLock class Account ( object ): \"\"\"\u94f6\u884c\u8d26\u6237\"\"\" def __init__ ( self ): self . balance = 0.0 self . lock = RLock () def deposit ( self , money ): # \u83b7\u5f97\u9501 self . lock . acquire () try : new_balance = self . balance + money time . sleep ( 0.01 ) self . balance = new_balance finally : # \u91ca\u653e\u9501 self . lock . release () def main (): \"\"\"\u4e3b\u51fd\u6570\"\"\" account = Account () with ThreadPoolExecutor ( max_workers = 16 ) as pool : for _ in range ( 100 ): pool . submit ( account . deposit , 1 ) print ( account . balance ) if __name__ == '__main__' : main () \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u83b7\u5f97\u9501\u548c\u91ca\u653e\u9501\u7684\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0a\u4e0b\u6587\u8bed\u6cd5\u6765\u5b9e\u73b0\uff0c\u4f7f\u7528\u4e0a\u4e0b\u6587\u8bed\u6cd5\u4f1a\u8ba9\u4ee3\u7801\u66f4\u52a0\u7b80\u5355\u4f18\u96c5\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u7684\u65b9\u5f0f\u3002 import time from concurrent.futures import ThreadPoolExecutor from threading import RLock class Account ( object ): \"\"\"\u94f6\u884c\u8d26\u6237\"\"\" def __init__ ( self ): self . balance = 0.0 self . lock = RLock () def deposit ( self , money ): # \u901a\u8fc7\u4e0a\u4e0b\u6587\u8bed\u6cd5\u83b7\u5f97\u9501\u548c\u91ca\u653e\u9501 with self . lock : new_balance = self . balance + money time . sleep ( 0.01 ) self . balance = new_balance def main (): \"\"\"\u4e3b\u51fd\u6570\"\"\" account = Account () with ThreadPoolExecutor ( max_workers = 16 ) as pool : for _ in range ( 100 ): pool . submit ( account . deposit , 1 ) print ( account . balance ) if __name__ == '__main__' : main () \u601d\u8003 \uff1a\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u4fee\u6539\u4e3a5\u4e2a\u7ebf\u7a0b\u5411\u94f6\u884c\u8d26\u6237\u5b58\u94b1\uff0c5\u4e2a\u7ebf\u7a0b\u4ece\u94f6\u884c\u8d26\u6237\u53d6\u94b1\uff0c\u53d6\u94b1\u7684\u7ebf\u7a0b\u5728\u94f6\u884c\u8d26\u6237\u4f59\u989d\u4e0d\u8db3\u65f6\uff0c\u9700\u8981\u505c\u4e0b\u6765\u7b49\u5f85\u5b58\u94b1\u7684\u7ebf\u7a0b\u5c06\u94b1\u5b58\u5165\u540e\u518d\u5c1d\u8bd5\u53d6\u94b1\u3002\u8fd9\u91cc\u9700\u8981\u7528\u5230\u7ebf\u7a0b\u8c03\u5ea6\u7684\u77e5\u8bc6\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u4e0b threading \u6a21\u5757\u4e2d\u7684 Condition \u7c7b\uff0c\u770b\u770b\u662f\u5426\u80fd\u591f\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u3002","title":"\u8d44\u6e90\u7ade\u4e89"},{"location":"%E7%AC%AC34%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-1/#gil","text":"\u5982\u679c\u4f7f\u7528\u5b98\u65b9\u7684 Python \u89e3\u91ca\u5668\uff08\u901a\u5e38\u79f0\u4e4b\u4e3a CPython\uff09\u8fd0\u884c Python \u7a0b\u5e8f\uff0c\u6211\u4eec\u5e76\u4e0d\u80fd\u901a\u8fc7\u4f7f\u7528\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u5c06 CPU \u7684\u5229\u7528\u7387\u63d0\u5347\u5230\u903c\u8fd1400%\uff08\u5bf9\u4e8e4\u6838 CPU\uff09\u6216\u903c\u8fd1800%\uff08\u5bf9\u4e8e8\u6838 CPU\uff09\u8fd9\u6837\u7684\u6c34\u5e73\uff0c\u56e0\u4e3a CPython \u5728\u6267\u884c\u4ee3\u7801\u65f6\uff0c\u4f1a\u53d7\u5230 GIL\uff08\u5168\u5c40\u89e3\u91ca\u5668\u9501\uff09\u7684\u9650\u5236\u3002\u5177\u4f53\u7684\u8bf4\uff0cCPython \u5728\u6267\u884c\u4efb\u4f55\u4ee3\u7801\u65f6\uff0c\u90fd\u9700\u8981\u5bf9\u5e94\u7684\u7ebf\u7a0b\u5148\u83b7\u5f97 GIL\uff0c\u7136\u540e\u6bcf\u6267\u884c100\u6761\uff08\u5b57\u8282\u7801\uff09\u6307\u4ee4\uff0cCPython \u5c31\u4f1a\u8ba9\u83b7\u5f97 GIL \u7684\u7ebf\u7a0b\u4e3b\u52a8\u91ca\u653e GIL\uff0c\u8fd9\u6837\u522b\u7684\u7ebf\u7a0b\u624d\u6709\u673a\u4f1a\u6267\u884c\u3002\u56e0\u4e3a GIL \u7684\u5b58\u5728\uff0c\u65e0\u8bba\u4f60\u7684 CPU \u6709\u591a\u5c11\u4e2a\u6838\uff0c\u6211\u4eec\u7f16\u5199\u7684 Python \u4ee3\u7801\u4e5f\u6ca1\u6709\u673a\u4f1a\u771f\u6b63\u5e76\u884c\u7684\u6267\u884c\u3002 GIL \u662f\u5b98\u65b9 Python \u89e3\u91ca\u5668\u5728\u8bbe\u8ba1\u4e0a\u7684\u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8ba9\u591a\u7ebf\u7a0b\u80fd\u591f\u53d1\u6325 CPU \u7684\u591a\u6838\u4f18\u52bf\uff0c\u9700\u8981\u91cd\u65b0\u5b9e\u73b0\u4e00\u4e2a\u4e0d\u5e26 GIL \u7684 Python \u89e3\u91ca\u5668\u3002\u8fd9\u4e2a\u95ee\u9898\u6309\u7167\u5b98\u65b9\u7684\u8bf4\u6cd5\uff0c\u5728 Python \u53d1\u5e034.0\u7248\u672c\u65f6\u4f1a\u5f97\u5230\u89e3\u51b3\uff0c\u5c31\u8ba9\u6211\u4eec\u62ed\u76ee\u4ee5\u5f85\u5427\u3002\u5f53\u4e0b\uff0c\u5bf9\u4e8e CPython \u800c\u8a00\uff0c\u5982\u679c\u5e0c\u671b\u5145\u5206\u53d1\u6325 CPU \u7684\u591a\u6838\u4f18\u52bf\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u591a\u8fdb\u7a0b\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u5bf9\u5e94\u4e00\u4e2a Python \u89e3\u91ca\u5668\uff0c\u56e0\u6b64\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684 GIL\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7a81\u7834 GIL \u7684\u9650\u5236\u3002\u5728\u4e0b\u4e00\u4e2a\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u4f1a\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5173\u4e8e\u591a\u8fdb\u7a0b\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5e76\u5bf9\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\u7684\u4ee3\u7801\u53ca\u5176\u6267\u884c\u6548\u679c\u8fdb\u884c\u6bd4\u8f83\u3002","title":"GIL\u95ee\u9898"},{"location":"%E7%AC%AC35%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-2/","text":"\u7b2c35\u8bfe\uff1aPython\u4e2d\u7684\u5e76\u53d1\u7f16\u7a0b-2 \u5728\u4e0a\u4e00\u8bfe\u4e2d\u6211\u4eec\u8bf4\u8fc7\uff0c\u7531\u4e8e GIL \u7684\u5b58\u5728\uff0cCPython \u4e2d\u7684\u591a\u7ebf\u7a0b\u5e76\u4e0d\u80fd\u53d1\u6325 CPU \u7684\u591a\u6838\u4f18\u52bf\uff0c\u5982\u679c\u5e0c\u671b\u7a81\u7834 GIL \u7684\u9650\u5236\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u591a\u8fdb\u7a0b\u3002\u5bf9\u4e8e\u591a\u8fdb\u7a0b\u7684\u7a0b\u5e8f\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u5c5e\u4e8e\u81ea\u5df1\u7684 GIL\uff0c\u6240\u4ee5\u591a\u8fdb\u7a0b\u4e0d\u4f1a\u53d7\u5230 GIL \u7684\u5f71\u54cd\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u5728 Python \u7a0b\u5e8f\u4e2d\u521b\u5efa\u548c\u4f7f\u7528\u591a\u8fdb\u7a0b\u5462\uff1f \u521b\u5efa\u8fdb\u7a0b \u5728 Python \u4e2d\u53ef\u4ee5\u57fa\u4e8e Process \u7c7b\u6765\u521b\u5efa\u8fdb\u7a0b\uff0c\u867d\u7136\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u6709\u7740\u672c\u8d28\u7684\u5dee\u522b\uff0c\u4f46\u662f Process \u7c7b\u548c Thread \u7c7b\u7684\u7528\u6cd5\u5374\u975e\u5e38\u7c7b\u4f3c\u3002\u5728\u4f7f\u7528 Process \u7c7b\u7684\u6784\u9020\u5668\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u4e5f\u662f\u901a\u8fc7 target \u53c2\u6570\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\u6765\u6307\u5b9a\u8fdb\u7a0b\u8981\u6267\u884c\u7684\u4ee3\u7801\uff0c\u800c args \u548c kwargs \u53c2\u6570\u53ef\u4ee5\u6307\u5b9a\u8be5\u51fd\u6570\u4f7f\u7528\u7684\u53c2\u6570\u503c\u3002 from multiprocessing import Process , current_process from time import sleep def sub_task ( content , nums ): # \u901a\u8fc7current_process\u51fd\u6570\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u5bf9\u8c61 # \u901a\u8fc7\u8fdb\u7a0b\u5bf9\u8c61\u7684pid\u548cname\u5c5e\u6027\u83b7\u53d6\u8fdb\u7a0b\u7684ID\u53f7\u548c\u540d\u5b57 print ( f 'PID: { current_process () . pid } ' ) print ( f 'Name: { current_process () . name } ' ) # \u901a\u8fc7\u4e0b\u9762\u7684\u8f93\u51fa\u4e0d\u96be\u53d1\u73b0\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684nums\u5217\u8868\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u672c\u5c31\u4e0d\u5171\u4eab\u5185\u5b58 # \u5728\u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\u590d\u5236\u4e86\u7236\u8fdb\u7a0b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e09\u4e2a\u8fdb\u7a0b\u4ece\u5217\u8868\u4e2dpop(0)\u5f97\u5230\u7684\u503c\u90fd\u662f20 counter , total = 0 , nums . pop ( 0 ) print ( f 'Loop count: { total } ' ) sleep ( 0.5 ) while counter < total : counter += 1 print ( f ' { counter } : { content } ' ) sleep ( 0.01 ) def main (): nums = [ 20 , 30 , 40 ] # \u521b\u5efa\u5e76\u542f\u52a8\u8fdb\u7a0b\u6765\u6267\u884c\u6307\u5b9a\u7684\u51fd\u6570 Process ( target = sub_task , args = ( 'Ping' , nums )) . start () Process ( target = sub_task , args = ( 'Pong' , nums )) . start () # \u5728\u4e3b\u8fdb\u7a0b\u4e2d\u6267\u884csub_task\u51fd\u6570 sub_task ( 'Good' , nums ) if __name__ == '__main__' : main () \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u901a\u8fc7 current_process \u51fd\u6570\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u5bf9\u8c61\uff0c\u518d\u901a\u8fc7\u8fdb\u7a0b\u5bf9\u8c61\u7684 pid \u5c5e\u6027\u83b7\u53d6\u8fdb\u7a0bID\u3002\u5728 Python \u4e2d\uff0c\u4f7f\u7528 os \u6a21\u5757\u7684 getpid \u51fd\u6570\u4e5f\u53ef\u4ee5\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002 \u5982\u679c\u613f\u610f\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 os \u6a21\u5757\u7684 fork \u51fd\u6570\u6765\u521b\u5efa\u8fdb\u7a0b\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u628a\u5f53\u524d\u8fdb\u7a0b\uff08\u7236\u8fdb\u7a0b\uff09\u590d\u5236\u4e00\u4efd\uff08\u5b50\u8fdb\u7a0b\uff09\uff0c\u7236\u8fdb\u7a0b\u7684 fork \u51fd\u6570\u4f1a\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684ID\uff0c\u800c\u5b50\u8fdb\u7a0b\u4e2d\u7684 fork \u51fd\u6570\u4f1a\u8fd4\u56de 0 \uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u51fd\u6570\u8c03\u7528\u4e00\u6b21\u4f1a\u5728\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u4e2d\u5f97\u5230\u4e24\u4e2a\u4e0d\u540c\u7684\u8fd4\u56de\u503c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cWindows \u7cfb\u7edf\u5e76\u4e0d\u652f\u6301 fork \u51fd\u6570\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f Linux \u6216 macOS \u7cfb\u7edf\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u4e0b\u9762\u7684\u4ee3\u7801\u3002 import os print ( f 'PID: { os . getpid () } ' ) pid = os . fork () if pid == 0 : print ( f '\u5b50\u8fdb\u7a0b - PID: { os . getpid () } ' ) print ( 'Todo: \u5728\u5b50\u8fdb\u7a0b\u4e2d\u6267\u884c\u7684\u4ee3\u7801' ) else : print ( f '\u7236\u8fdb\u7a0b - PID: { os . getpid () } ' ) print ( 'Todo: \u5728\u7236\u8fdb\u7a0b\u4e2d\u6267\u884c\u7684\u4ee3\u7801' ) \u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u8fd8\u662f\u63a8\u8350\u5927\u5bb6\u901a\u8fc7\u76f4\u63a5\u4f7f\u7528 Process \u7c7b\u3001\u7ee7\u627f Process \u7c7b\u548c\u4f7f\u7528\u8fdb\u7a0b\u6c60\uff08 ProcessPoolExecutor \uff09\u8fd9\u4e09\u79cd\u65b9\u5f0f\u6765\u521b\u5efa\u548c\u4f7f\u7528\u591a\u8fdb\u7a0b\uff0c\u8fd9\u4e09\u79cd\u65b9\u5f0f\u4e0d\u540c\u4e8e\u4e0a\u9762\u7684 fork \u51fd\u6570\uff0c\u80fd\u591f\u4fdd\u8bc1\u4ee3\u7801\u7684\u517c\u5bb9\u6027\u548c\u53ef\u79fb\u690d\u6027\u3002\u5177\u4f53\u7684\u505a\u6cd5\u8ddf\u4e4b\u524d\u8bb2\u8fc7\u7684\u521b\u5efa\u548c\u4f7f\u7528\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u6bd4\u8f83\u63a5\u8fd1\uff0c\u6b64\u5904\u4e0d\u518d\u8fdb\u884c\u8d58\u8ff0\u3002 \u591a\u8fdb\u7a0b\u548c\u591a\u7ebf\u7a0b\u7684\u6bd4\u8f83 \u5bf9\u4e8e\u722c\u866b\u8fd9\u7c7b I/O \u5bc6\u96c6\u578b\u4efb\u52a1\u6765\u8bf4\uff0c\u4f7f\u7528\u591a\u8fdb\u7a0b\u5e76\u6ca1\u6709\u4ec0\u4e48\u4f18\u52bf\uff1b\u4f46\u662f\u5bf9\u4e8e\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u6765\u8bf4\uff0c\u591a\u8fdb\u7a0b\u76f8\u6bd4\u591a\u7ebf\u7a0b\uff0c\u5728\u6548\u7387\u4e0a\u4f1a\u6709\u663e\u8457\u7684\u63d0\u5347\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u52a0\u4ee5\u8bc1\u660e\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u901a\u8fc7\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\u4e24\u79cd\u65b9\u5f0f\u6765\u5224\u65ad\u4e00\u7ec4\u5927\u6574\u6570\u662f\u4e0d\u662f\u8d28\u6570\uff0c\u5f88\u663e\u7136\u8fd9\u662f\u4e00\u4e2a\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u6211\u4eec\u5c06\u4efb\u52a1\u5206\u522b\u653e\u5230\u591a\u4e2a\u7ebf\u7a0b\u548c\u591a\u4e2a\u8fdb\u7a0b\u4e2d\u6765\u52a0\u901f\u4ee3\u7801\u7684\u6267\u884c\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\u7684\u4ee3\u7801\u5177\u4f53\u8868\u73b0\u6709\u4f55\u4e0d\u540c\u3002 \u6211\u4eec\u5148\u5b9e\u73b0\u4e00\u4e2a\u591a\u7ebf\u7a0b\u7684\u7248\u672c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import concurrent.futures PRIMES = [ 1116281 , 1297337 , 104395303 , 472882027 , 533000389 , 817504243 , 982451653 , 112272535095293 , 112582705942171 , 112272535095293 , 115280095190773 , 115797848077099 , 1099726899285419 ] * 5 def is_prime ( n ): \"\"\"\u5224\u65ad\u7d20\u6570\"\"\" for i in range ( 2 , int ( n ** 0.5 ) + 1 ): if n % i == 0 : return False return n != 1 def main (): \"\"\"\u4e3b\u51fd\u6570\"\"\" with concurrent . futures . ThreadPoolExecutor ( max_workers = 16 ) as executor : for number , prime in zip ( PRIMES , executor . map ( is_prime , PRIMES )): print ( ' %d is prime: %s ' % ( number , prime )) if __name__ == '__main__' : main () \u5047\u8bbe\u4e0a\u9762\u7684\u4ee3\u7801\u4fdd\u5b58\u5728\u540d\u4e3a example.py \u7684\u6587\u4ef6\u4e2d\uff0c\u5728 Linux \u6216 macOS \u7cfb\u7edf\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528 time python example.py \u547d\u4ee4\u6267\u884c\u7a0b\u5e8f\u5e76\u83b7\u5f97\u64cd\u4f5c\u7cfb\u7edf\u5173\u4e8e\u6267\u884c\u65f6\u95f4\u7684\u7edf\u8ba1\uff0c\u5728\u6211\u7684 macOS \u4e0a\uff0c\u67d0\u6b21\u7684\u8fd0\u884c\u7ed3\u679c\u7684\u6700\u540e\u4e00\u884c\u8f93\u51fa\u5982\u4e0b\u6240\u793a\u3002 python example09.py 38.69s user 1.01s system 101% cpu 39.213 total \u4ece\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\uff0c\u591a\u7ebf\u7a0b\u7684\u4ee3\u7801\u53ea\u80fd\u8ba9 CPU \u5229\u7528\u7387\u8fbe\u5230100%\uff0c\u8fd9\u5176\u5b9e\u5df2\u7ecf\u8bc1\u660e\u4e86\u591a\u7ebf\u7a0b\u7684\u4ee3\u7801\u65e0\u6cd5\u5229\u7528 CPU \u591a\u6838\u7279\u6027\u6765\u52a0\u901f\u4ee3\u7801\u7684\u6267\u884c\uff0c\u6211\u4eec\u518d\u770b\u770b\u591a\u8fdb\u7a0b\u7684\u7248\u672c\uff0c\u6211\u4eec\u5c06\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u7ebf\u7a0b\u6c60\uff08 ThreadPoolExecutor \uff09\u66f4\u6362\u4e3a\u8fdb\u7a0b\u6c60\uff08 ProcessPoolExecutor \uff09\u3002 \u591a\u8fdb\u7a0b\u7684\u7248\u672c\u3002 import concurrent.futures PRIMES = [ 1116281 , 1297337 , 104395303 , 472882027 , 533000389 , 817504243 , 982451653 , 112272535095293 , 112582705942171 , 112272535095293 , 115280095190773 , 115797848077099 , 1099726899285419 ] * 5 def is_prime ( n ): \"\"\"\u5224\u65ad\u7d20\u6570\"\"\" for i in range ( 2 , int ( n ** 0.5 ) + 1 ): if n % i == 0 : return False return n != 1 def main (): \"\"\"\u4e3b\u51fd\u6570\"\"\" with concurrent . futures . ProcessPoolExecutor ( max_workers = 16 ) as executor : for number , prime in zip ( PRIMES , executor . map ( is_prime , PRIMES )): print ( ' %d is prime: %s ' % ( number , prime )) if __name__ == '__main__' : main () \u63d0\u793a \uff1a\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684\u4efb\u52a1\u7ba1\u7406\u5668\uff08\u8d44\u6e90\u76d1\u89c6\u5668\uff09\u6765\u67e5\u770b\u662f\u5426\u542f\u52a8\u4e86\u591a\u4e2a Python \u89e3\u91ca\u5668\u8fdb\u7a0b\u3002 \u6211\u4eec\u4ecd\u7136\u901a\u8fc7 time python example.py \u7684\u65b9\u5f0f\u6765\u6267\u884c\u4e0a\u8ff0\u4ee3\u7801\uff0c\u8fd0\u884c\u7ed3\u679c\u7684\u6700\u540e\u4e00\u884c\u5982\u4e0b\u6240\u793a\u3002 python example09.py 106.63s user 0.57s system 389% cpu 27.497 total \u53ef\u4ee5\u770b\u51fa\uff0c\u591a\u8fdb\u7a0b\u7684\u7248\u672c\u5728\u6211\u4f7f\u7528\u7684\u8fd9\u53f0\u7535\u8111\u4e0a\uff0c\u8ba9 CPU \u7684\u5229\u7528\u7387\u8fbe\u5230\u4e86\u5c06\u8fd1400%\uff0c\u800c\u8fd0\u884c\u4ee3\u7801\u65f6\u7528\u6237\u6001\u8017\u8d39\u7684 CPU \u7684\u65f6\u95f4\uff08106.63\u79d2\uff09\u51e0\u4e4e\u662f\u4ee3\u7801\u8fd0\u884c\u603b\u65f6\u95f4\uff0827.497\u79d2\uff09\u76844\u500d\uff0c\u4ece\u8fd9\u4e24\u70b9\u90fd\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u7684\u7535\u8111\u4f7f\u7528\u4e86\u4e00\u6b3e4\u6838\u7684 CPU\u3002\u5f53\u7136\uff0c\u8981\u77e5\u9053\u81ea\u5df1\u7684\u7535\u8111\u6709\u51e0\u4e2a CPU \u6216\u51e0\u4e2a\u6838\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u3002 import os print ( os . cpu_count ()) \u7efc\u4e0a\u6240\u8ff0\uff0c\u591a\u8fdb\u7a0b\u53ef\u4ee5\u7a81\u7834 GIL \u7684\u9650\u5236\uff0c\u5145\u5206\u5229\u7528 CPU \u591a\u6838\u7279\u6027\uff0c\u5bf9\u4e8e\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u4e00\u70b9\u662f\u76f8\u5f53\u91cd\u8981\u7684\u3002\u5e38\u89c1\u7684\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u5305\u62ec\u79d1\u5b66\u8ba1\u7b97\u3001\u56fe\u50cf\u5904\u7406\u3001\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u7b49\uff0c\u5982\u679c\u8fd9\u4e9b\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u672c\u8eab\u662f\u53ef\u4ee5\u5e76\u884c\u7684\uff0c\u90a3\u4e48\u4f7f\u7528\u591a\u8fdb\u7a0b\u5e94\u8be5\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002 \u8fdb\u7a0b\u95f4\u901a\u4fe1 \u5728\u8bb2\u89e3\u8fdb\u7a0b\u95f4\u901a\u4fe1\u4e4b\u524d\uff0c\u5148\u7ed9\u5927\u5bb6\u4e00\u4e2a\u4efb\u52a1\uff1a\u542f\u52a8\u4e24\u4e2a\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u8f93\u51fa\u201cPing\u201d\uff0c\u4e00\u4e2a\u8f93\u51fa\u201cPong\u201d\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u8f93\u51fa\u7684\u201cPing\u201d\u548c\u201cPong\u201d\u52a0\u8d77\u6765\u4e00\u5171\u670950\u4e2a\u65f6\uff0c\u5c31\u7ed3\u675f\u7a0b\u5e8f\u3002\u542c\u8d77\u6765\u662f\u4e0d\u662f\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u5b9e\u9645\u7f16\u5199\u4ee3\u7801\u65f6\uff0c\u7531\u4e8e\u591a\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u4e0d\u80fd\u591f\u50cf\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u76f4\u63a5\u901a\u8fc7\u5171\u4eab\u5185\u5b58\u7684\u65b9\u5f0f\u4ea4\u6362\u6570\u636e\uff0c\u6240\u4ee5\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u8fbe\u4e0d\u5230\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u7684\u3002 from multiprocessing import Process from time import sleep counter = 0 def sub_task ( string ): global counter while counter < 50 : print ( string , end = '' , flush = True ) counter += 1 sleep ( 0.01 ) def main (): Process ( target = sub_task , args = ( 'Ping' , )) . start () Process ( target = sub_task , args = ( 'Pong' , )) . start () if __name__ == '__main__' : main () \u4e0a\u9762\u7684\u4ee3\u7801\u770b\u8d77\u6765\u6ca1\u6bdb\u75c5\uff0c\u4f46\u662f\u6700\u540e\u7684\u7ed3\u679c\u662f\u201cPing\u201d\u548c\u201cPong\u201d\u5404\u8f93\u51fa\u4e8650\u4e2a\u3002\u518d\u6b21\u63d0\u9192\u5927\u5bb6\uff0c\u5f53\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u521b\u5efa\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u5b50\u8fdb\u7a0b\u4f1a\u590d\u5236\u7236\u8fdb\u7a0b\u53ca\u5176\u6240\u6709\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u4e24\u4e2a\u5b50\u8fdb\u7a0b\u4e2d\u5404\u6709\u4e00\u4e2a counter \u53d8\u91cf\uff0c\u5b83\u4eec\u90fd\u4f1a\u4ece 0 \u52a0\u5230 50 \uff0c\u6240\u4ee5\u7ed3\u679c\u5c31\u53ef\u60f3\u800c\u77e5\u4e86\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u7b80\u5355\u7684\u529e\u6cd5\u662f\u4f7f\u7528 multiprocessing \u6a21\u5757\u4e2d\u7684 Queue \u7c7b\uff0c\u5b83\u662f\u53ef\u4ee5\u88ab\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u7684\u961f\u5217\uff0c\u5e95\u5c42\u662f\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u5e95\u5c42\u7684\u7ba1\u9053\u548c\u4fe1\u53f7\u91cf\uff08semaphore\uff09\u673a\u5236\u6765\u5b9e\u73b0\u7684\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time from multiprocessing import Process , Queue def sub_task ( content , queue ): counter = queue . get () while counter < 50 : print ( content , end = '' , flush = True ) counter += 1 queue . put ( counter ) time . sleep ( 0.01 ) counter = queue . get () def main (): queue = Queue () queue . put ( 0 ) p1 = Process ( target = sub_task , args = ( 'Ping' , queue )) p1 . start () p2 = Process ( target = sub_task , args = ( 'Pong' , queue )) p2 . start () while p1 . is_alive () and p2 . is_alive (): pass queue . put ( 50 ) if __name__ == '__main__' : main () \u63d0\u793a \uff1a multiprocessing.Queue \u5bf9\u8c61\u7684 get \u65b9\u6cd5\u9ed8\u8ba4\u5728\u961f\u5217\u4e3a\u7a7a\u65f6\u662f\u4f1a\u963b\u585e\u7684\uff0c\u76f4\u5230\u83b7\u53d6\u5230\u6570\u636e\u624d\u4f1a\u8fd4\u56de\u3002\u5982\u679c\u4e0d\u5e0c\u671b\u8be5\u65b9\u6cd5\u963b\u585e\u4ee5\u53ca\u9700\u8981\u6307\u5b9a\u963b\u585e\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a block \u548c timeout \u53c2\u6570\u8fdb\u884c\u8bbe\u5b9a\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u901a\u8fc7 Queue \u7c7b\u7684 get \u548c put \u65b9\u6cd5\u8ba9\u4e09\u4e2a\u8fdb\u7a0b\uff08 p1 \u3001 p2 \u548c\u4e3b\u8fdb\u7a0b\uff09\u5b9e\u73b0\u4e86\u6570\u636e\u7684\u5171\u4eab\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5f53 Queue \u4e2d\u53d6\u51fa\u7684\u503c\u5df2\u7ecf\u5927\u4e8e\u7b49\u4e8e 50 \u65f6\uff0c p1 \u548c p2 \u5c31\u4f1a\u8df3\u51fa while \u5faa\u73af\uff0c\u4ece\u800c\u7ec8\u6b62\u8fdb\u7a0b\u7684\u6267\u884c\u3002\u4ee3\u7801\u7b2c22\u884c\u7684\u5faa\u73af\u662f\u4e3a\u4e86\u7b49\u5f85 p1 \u548c p2 \u4e24\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u4e00\u4e2a\u7ed3\u675f\uff0c\u8fd9\u65f6\u5019\u4e3b\u8fdb\u7a0b\u8fd8\u9700\u8981\u5411 Queue \u4e2d\u653e\u7f6e\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e 50 \u7684\u503c\uff0c\u8fd9\u6837\u53e6\u4e00\u4e2a\u5c1a\u672a\u7ed3\u675f\u7684\u8fdb\u7a0b\u4e5f\u4f1a\u56e0\u4e3a\u8bfb\u5230\u8fd9\u4e2a\u5927\u4e8e\u7b49\u4e8e 50 \u7684\u503c\u800c\u7ec8\u6b62\u3002 \u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u65b9\u5f0f\u8fd8\u6709\u5f88\u591a\uff0c\u6bd4\u5982\u4f7f\u7528\u5957\u63a5\u5b57\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u4e24\u4e2a\u8fdb\u7a0b\u7684\u901a\u4fe1\uff0c\u751a\u81f3\u4e8e\u8fd9\u4e24\u4e2a\u8fdb\u7a0b\u5e76\u4e0d\u5728\u540c\u4e00\u53f0\u4e3b\u673a\u4e0a\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u3002 \u7b80\u5355\u7684\u603b\u7ed3 \u5728 Python \u4e2d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7 subprocess \u6a21\u5757\u7684 call \u51fd\u6570\u6267\u884c\u5176\u4ed6\u7684\u547d\u4ee4\u6765\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u76f8\u5f53\u4e8e\u5c31\u662f\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u8c03\u7528\u5176\u4ed6\u7a0b\u5e8f\uff0c\u8fd9\u91cc\u6211\u4eec\u6682\u4e0d\u63a2\u8ba8\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002 \u5bf9\u4e8ePython\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u4ee5\u4e0b\u60c5\u51b5\u9700\u8981\u8003\u8651\u4f7f\u7528\u591a\u7ebf\u7a0b\uff1a \u7a0b\u5e8f\u9700\u8981\u7ef4\u62a4\u8bb8\u591a\u5171\u4eab\u7684\u72b6\u6001\uff08\u5c24\u5176\u662f\u53ef\u53d8\u72b6\u6001\uff09\uff0cPython \u4e2d\u7684\u5217\u8868\u3001\u5b57\u5178\u3001\u96c6\u5408\u90fd\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff08\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u64cd\u4f5c\u540c\u4e00\u4e2a\u5217\u8868\u3001\u5b57\u5178\u6216\u96c6\u5408\uff0c\u4e0d\u4f1a\u5f15\u53d1\u9519\u8bef\u548c\u6570\u636e\u95ee\u9898\uff09\uff0c\u6240\u4ee5\u4f7f\u7528\u7ebf\u7a0b\u800c\u4e0d\u662f\u8fdb\u7a0b\u7ef4\u62a4\u5171\u4eab\u72b6\u6001\u7684\u4ee3\u4ef7\u76f8\u5bf9\u8f83\u5c0f\u3002 \u7a0b\u5e8f\u4f1a\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u5728 I/O \u64cd\u4f5c\u4e0a\uff0c\u6ca1\u6709\u592a\u591a\u5e76\u884c\u8ba1\u7b97\u7684\u9700\u6c42\u4e14\u4e0d\u9700\u5360\u7528\u592a\u591a\u7684\u5185\u5b58\u3002 \u90a3\u4e48\u5728\u9047\u5230\u4e0b\u5217\u60c5\u51b5\u65f6\uff0c\u5e94\u8be5\u8003\u8651\u4f7f\u7528\u591a\u8fdb\u7a0b\uff1a \u7a0b\u5e8f\u6267\u884c\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff08\u5982\uff1a\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u3001\u6570\u636e\u538b\u7f29\u3001\u79d1\u5b66\u8ba1\u7b97\u7b49\uff09\u3002 \u7a0b\u5e8f\u7684\u8f93\u5165\u53ef\u4ee5\u5e76\u884c\u7684\u5206\u6210\u5757\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u8fd0\u7b97\u7ed3\u679c\u5408\u5e76\u3002 \u7a0b\u5e8f\u5728\u5185\u5b58\u4f7f\u7528\u65b9\u9762\u6ca1\u6709\u4efb\u4f55\u9650\u5236\u4e14\u4e0d\u5f3a\u4f9d\u8d56\u4e8e I/O \u64cd\u4f5c\uff08\u5982\u8bfb\u5199\u6587\u4ef6\u3001\u5957\u63a5\u5b57\u7b49\uff09\u3002","title":"\u7b2c35\u8bfe\uff1aPython\u4e2d\u7684\u5e76\u53d1\u7f16\u7a0b 2"},{"location":"%E7%AC%AC35%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-2/#35python-2","text":"\u5728\u4e0a\u4e00\u8bfe\u4e2d\u6211\u4eec\u8bf4\u8fc7\uff0c\u7531\u4e8e GIL \u7684\u5b58\u5728\uff0cCPython \u4e2d\u7684\u591a\u7ebf\u7a0b\u5e76\u4e0d\u80fd\u53d1\u6325 CPU \u7684\u591a\u6838\u4f18\u52bf\uff0c\u5982\u679c\u5e0c\u671b\u7a81\u7834 GIL \u7684\u9650\u5236\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u591a\u8fdb\u7a0b\u3002\u5bf9\u4e8e\u591a\u8fdb\u7a0b\u7684\u7a0b\u5e8f\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u5c5e\u4e8e\u81ea\u5df1\u7684 GIL\uff0c\u6240\u4ee5\u591a\u8fdb\u7a0b\u4e0d\u4f1a\u53d7\u5230 GIL \u7684\u5f71\u54cd\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u5728 Python \u7a0b\u5e8f\u4e2d\u521b\u5efa\u548c\u4f7f\u7528\u591a\u8fdb\u7a0b\u5462\uff1f","title":"\u7b2c35\u8bfe\uff1aPython\u4e2d\u7684\u5e76\u53d1\u7f16\u7a0b-2"},{"location":"%E7%AC%AC35%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-2/#_1","text":"\u5728 Python \u4e2d\u53ef\u4ee5\u57fa\u4e8e Process \u7c7b\u6765\u521b\u5efa\u8fdb\u7a0b\uff0c\u867d\u7136\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u6709\u7740\u672c\u8d28\u7684\u5dee\u522b\uff0c\u4f46\u662f Process \u7c7b\u548c Thread \u7c7b\u7684\u7528\u6cd5\u5374\u975e\u5e38\u7c7b\u4f3c\u3002\u5728\u4f7f\u7528 Process \u7c7b\u7684\u6784\u9020\u5668\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u4e5f\u662f\u901a\u8fc7 target \u53c2\u6570\u4f20\u5165\u4e00\u4e2a\u51fd\u6570\u6765\u6307\u5b9a\u8fdb\u7a0b\u8981\u6267\u884c\u7684\u4ee3\u7801\uff0c\u800c args \u548c kwargs \u53c2\u6570\u53ef\u4ee5\u6307\u5b9a\u8be5\u51fd\u6570\u4f7f\u7528\u7684\u53c2\u6570\u503c\u3002 from multiprocessing import Process , current_process from time import sleep def sub_task ( content , nums ): # \u901a\u8fc7current_process\u51fd\u6570\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u5bf9\u8c61 # \u901a\u8fc7\u8fdb\u7a0b\u5bf9\u8c61\u7684pid\u548cname\u5c5e\u6027\u83b7\u53d6\u8fdb\u7a0b\u7684ID\u53f7\u548c\u540d\u5b57 print ( f 'PID: { current_process () . pid } ' ) print ( f 'Name: { current_process () . name } ' ) # \u901a\u8fc7\u4e0b\u9762\u7684\u8f93\u51fa\u4e0d\u96be\u53d1\u73b0\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684nums\u5217\u8868\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u672c\u5c31\u4e0d\u5171\u4eab\u5185\u5b58 # \u5728\u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\u590d\u5236\u4e86\u7236\u8fdb\u7a0b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e09\u4e2a\u8fdb\u7a0b\u4ece\u5217\u8868\u4e2dpop(0)\u5f97\u5230\u7684\u503c\u90fd\u662f20 counter , total = 0 , nums . pop ( 0 ) print ( f 'Loop count: { total } ' ) sleep ( 0.5 ) while counter < total : counter += 1 print ( f ' { counter } : { content } ' ) sleep ( 0.01 ) def main (): nums = [ 20 , 30 , 40 ] # \u521b\u5efa\u5e76\u542f\u52a8\u8fdb\u7a0b\u6765\u6267\u884c\u6307\u5b9a\u7684\u51fd\u6570 Process ( target = sub_task , args = ( 'Ping' , nums )) . start () Process ( target = sub_task , args = ( 'Pong' , nums )) . start () # \u5728\u4e3b\u8fdb\u7a0b\u4e2d\u6267\u884csub_task\u51fd\u6570 sub_task ( 'Good' , nums ) if __name__ == '__main__' : main () \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u901a\u8fc7 current_process \u51fd\u6570\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u5bf9\u8c61\uff0c\u518d\u901a\u8fc7\u8fdb\u7a0b\u5bf9\u8c61\u7684 pid \u5c5e\u6027\u83b7\u53d6\u8fdb\u7a0bID\u3002\u5728 Python \u4e2d\uff0c\u4f7f\u7528 os \u6a21\u5757\u7684 getpid \u51fd\u6570\u4e5f\u53ef\u4ee5\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002 \u5982\u679c\u613f\u610f\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 os \u6a21\u5757\u7684 fork \u51fd\u6570\u6765\u521b\u5efa\u8fdb\u7a0b\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u628a\u5f53\u524d\u8fdb\u7a0b\uff08\u7236\u8fdb\u7a0b\uff09\u590d\u5236\u4e00\u4efd\uff08\u5b50\u8fdb\u7a0b\uff09\uff0c\u7236\u8fdb\u7a0b\u7684 fork \u51fd\u6570\u4f1a\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684ID\uff0c\u800c\u5b50\u8fdb\u7a0b\u4e2d\u7684 fork \u51fd\u6570\u4f1a\u8fd4\u56de 0 \uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u51fd\u6570\u8c03\u7528\u4e00\u6b21\u4f1a\u5728\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u4e2d\u5f97\u5230\u4e24\u4e2a\u4e0d\u540c\u7684\u8fd4\u56de\u503c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cWindows \u7cfb\u7edf\u5e76\u4e0d\u652f\u6301 fork \u51fd\u6570\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f Linux \u6216 macOS \u7cfb\u7edf\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u4e0b\u9762\u7684\u4ee3\u7801\u3002 import os print ( f 'PID: { os . getpid () } ' ) pid = os . fork () if pid == 0 : print ( f '\u5b50\u8fdb\u7a0b - PID: { os . getpid () } ' ) print ( 'Todo: \u5728\u5b50\u8fdb\u7a0b\u4e2d\u6267\u884c\u7684\u4ee3\u7801' ) else : print ( f '\u7236\u8fdb\u7a0b - PID: { os . getpid () } ' ) print ( 'Todo: \u5728\u7236\u8fdb\u7a0b\u4e2d\u6267\u884c\u7684\u4ee3\u7801' ) \u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u8fd8\u662f\u63a8\u8350\u5927\u5bb6\u901a\u8fc7\u76f4\u63a5\u4f7f\u7528 Process \u7c7b\u3001\u7ee7\u627f Process \u7c7b\u548c\u4f7f\u7528\u8fdb\u7a0b\u6c60\uff08 ProcessPoolExecutor \uff09\u8fd9\u4e09\u79cd\u65b9\u5f0f\u6765\u521b\u5efa\u548c\u4f7f\u7528\u591a\u8fdb\u7a0b\uff0c\u8fd9\u4e09\u79cd\u65b9\u5f0f\u4e0d\u540c\u4e8e\u4e0a\u9762\u7684 fork \u51fd\u6570\uff0c\u80fd\u591f\u4fdd\u8bc1\u4ee3\u7801\u7684\u517c\u5bb9\u6027\u548c\u53ef\u79fb\u690d\u6027\u3002\u5177\u4f53\u7684\u505a\u6cd5\u8ddf\u4e4b\u524d\u8bb2\u8fc7\u7684\u521b\u5efa\u548c\u4f7f\u7528\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u6bd4\u8f83\u63a5\u8fd1\uff0c\u6b64\u5904\u4e0d\u518d\u8fdb\u884c\u8d58\u8ff0\u3002","title":"\u521b\u5efa\u8fdb\u7a0b"},{"location":"%E7%AC%AC35%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-2/#_2","text":"\u5bf9\u4e8e\u722c\u866b\u8fd9\u7c7b I/O \u5bc6\u96c6\u578b\u4efb\u52a1\u6765\u8bf4\uff0c\u4f7f\u7528\u591a\u8fdb\u7a0b\u5e76\u6ca1\u6709\u4ec0\u4e48\u4f18\u52bf\uff1b\u4f46\u662f\u5bf9\u4e8e\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u6765\u8bf4\uff0c\u591a\u8fdb\u7a0b\u76f8\u6bd4\u591a\u7ebf\u7a0b\uff0c\u5728\u6548\u7387\u4e0a\u4f1a\u6709\u663e\u8457\u7684\u63d0\u5347\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u52a0\u4ee5\u8bc1\u660e\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u901a\u8fc7\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\u4e24\u79cd\u65b9\u5f0f\u6765\u5224\u65ad\u4e00\u7ec4\u5927\u6574\u6570\u662f\u4e0d\u662f\u8d28\u6570\uff0c\u5f88\u663e\u7136\u8fd9\u662f\u4e00\u4e2a\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u6211\u4eec\u5c06\u4efb\u52a1\u5206\u522b\u653e\u5230\u591a\u4e2a\u7ebf\u7a0b\u548c\u591a\u4e2a\u8fdb\u7a0b\u4e2d\u6765\u52a0\u901f\u4ee3\u7801\u7684\u6267\u884c\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\u7684\u4ee3\u7801\u5177\u4f53\u8868\u73b0\u6709\u4f55\u4e0d\u540c\u3002 \u6211\u4eec\u5148\u5b9e\u73b0\u4e00\u4e2a\u591a\u7ebf\u7a0b\u7684\u7248\u672c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import concurrent.futures PRIMES = [ 1116281 , 1297337 , 104395303 , 472882027 , 533000389 , 817504243 , 982451653 , 112272535095293 , 112582705942171 , 112272535095293 , 115280095190773 , 115797848077099 , 1099726899285419 ] * 5 def is_prime ( n ): \"\"\"\u5224\u65ad\u7d20\u6570\"\"\" for i in range ( 2 , int ( n ** 0.5 ) + 1 ): if n % i == 0 : return False return n != 1 def main (): \"\"\"\u4e3b\u51fd\u6570\"\"\" with concurrent . futures . ThreadPoolExecutor ( max_workers = 16 ) as executor : for number , prime in zip ( PRIMES , executor . map ( is_prime , PRIMES )): print ( ' %d is prime: %s ' % ( number , prime )) if __name__ == '__main__' : main () \u5047\u8bbe\u4e0a\u9762\u7684\u4ee3\u7801\u4fdd\u5b58\u5728\u540d\u4e3a example.py \u7684\u6587\u4ef6\u4e2d\uff0c\u5728 Linux \u6216 macOS \u7cfb\u7edf\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528 time python example.py \u547d\u4ee4\u6267\u884c\u7a0b\u5e8f\u5e76\u83b7\u5f97\u64cd\u4f5c\u7cfb\u7edf\u5173\u4e8e\u6267\u884c\u65f6\u95f4\u7684\u7edf\u8ba1\uff0c\u5728\u6211\u7684 macOS \u4e0a\uff0c\u67d0\u6b21\u7684\u8fd0\u884c\u7ed3\u679c\u7684\u6700\u540e\u4e00\u884c\u8f93\u51fa\u5982\u4e0b\u6240\u793a\u3002 python example09.py 38.69s user 1.01s system 101% cpu 39.213 total \u4ece\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\uff0c\u591a\u7ebf\u7a0b\u7684\u4ee3\u7801\u53ea\u80fd\u8ba9 CPU \u5229\u7528\u7387\u8fbe\u5230100%\uff0c\u8fd9\u5176\u5b9e\u5df2\u7ecf\u8bc1\u660e\u4e86\u591a\u7ebf\u7a0b\u7684\u4ee3\u7801\u65e0\u6cd5\u5229\u7528 CPU \u591a\u6838\u7279\u6027\u6765\u52a0\u901f\u4ee3\u7801\u7684\u6267\u884c\uff0c\u6211\u4eec\u518d\u770b\u770b\u591a\u8fdb\u7a0b\u7684\u7248\u672c\uff0c\u6211\u4eec\u5c06\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684\u7ebf\u7a0b\u6c60\uff08 ThreadPoolExecutor \uff09\u66f4\u6362\u4e3a\u8fdb\u7a0b\u6c60\uff08 ProcessPoolExecutor \uff09\u3002 \u591a\u8fdb\u7a0b\u7684\u7248\u672c\u3002 import concurrent.futures PRIMES = [ 1116281 , 1297337 , 104395303 , 472882027 , 533000389 , 817504243 , 982451653 , 112272535095293 , 112582705942171 , 112272535095293 , 115280095190773 , 115797848077099 , 1099726899285419 ] * 5 def is_prime ( n ): \"\"\"\u5224\u65ad\u7d20\u6570\"\"\" for i in range ( 2 , int ( n ** 0.5 ) + 1 ): if n % i == 0 : return False return n != 1 def main (): \"\"\"\u4e3b\u51fd\u6570\"\"\" with concurrent . futures . ProcessPoolExecutor ( max_workers = 16 ) as executor : for number , prime in zip ( PRIMES , executor . map ( is_prime , PRIMES )): print ( ' %d is prime: %s ' % ( number , prime )) if __name__ == '__main__' : main () \u63d0\u793a \uff1a\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684\u4efb\u52a1\u7ba1\u7406\u5668\uff08\u8d44\u6e90\u76d1\u89c6\u5668\uff09\u6765\u67e5\u770b\u662f\u5426\u542f\u52a8\u4e86\u591a\u4e2a Python \u89e3\u91ca\u5668\u8fdb\u7a0b\u3002 \u6211\u4eec\u4ecd\u7136\u901a\u8fc7 time python example.py \u7684\u65b9\u5f0f\u6765\u6267\u884c\u4e0a\u8ff0\u4ee3\u7801\uff0c\u8fd0\u884c\u7ed3\u679c\u7684\u6700\u540e\u4e00\u884c\u5982\u4e0b\u6240\u793a\u3002 python example09.py 106.63s user 0.57s system 389% cpu 27.497 total \u53ef\u4ee5\u770b\u51fa\uff0c\u591a\u8fdb\u7a0b\u7684\u7248\u672c\u5728\u6211\u4f7f\u7528\u7684\u8fd9\u53f0\u7535\u8111\u4e0a\uff0c\u8ba9 CPU \u7684\u5229\u7528\u7387\u8fbe\u5230\u4e86\u5c06\u8fd1400%\uff0c\u800c\u8fd0\u884c\u4ee3\u7801\u65f6\u7528\u6237\u6001\u8017\u8d39\u7684 CPU \u7684\u65f6\u95f4\uff08106.63\u79d2\uff09\u51e0\u4e4e\u662f\u4ee3\u7801\u8fd0\u884c\u603b\u65f6\u95f4\uff0827.497\u79d2\uff09\u76844\u500d\uff0c\u4ece\u8fd9\u4e24\u70b9\u90fd\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u7684\u7535\u8111\u4f7f\u7528\u4e86\u4e00\u6b3e4\u6838\u7684 CPU\u3002\u5f53\u7136\uff0c\u8981\u77e5\u9053\u81ea\u5df1\u7684\u7535\u8111\u6709\u51e0\u4e2a CPU \u6216\u51e0\u4e2a\u6838\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u3002 import os print ( os . cpu_count ()) \u7efc\u4e0a\u6240\u8ff0\uff0c\u591a\u8fdb\u7a0b\u53ef\u4ee5\u7a81\u7834 GIL \u7684\u9650\u5236\uff0c\u5145\u5206\u5229\u7528 CPU \u591a\u6838\u7279\u6027\uff0c\u5bf9\u4e8e\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u4e00\u70b9\u662f\u76f8\u5f53\u91cd\u8981\u7684\u3002\u5e38\u89c1\u7684\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u5305\u62ec\u79d1\u5b66\u8ba1\u7b97\u3001\u56fe\u50cf\u5904\u7406\u3001\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u7b49\uff0c\u5982\u679c\u8fd9\u4e9b\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u672c\u8eab\u662f\u53ef\u4ee5\u5e76\u884c\u7684\uff0c\u90a3\u4e48\u4f7f\u7528\u591a\u8fdb\u7a0b\u5e94\u8be5\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002","title":"\u591a\u8fdb\u7a0b\u548c\u591a\u7ebf\u7a0b\u7684\u6bd4\u8f83"},{"location":"%E7%AC%AC35%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-2/#_3","text":"\u5728\u8bb2\u89e3\u8fdb\u7a0b\u95f4\u901a\u4fe1\u4e4b\u524d\uff0c\u5148\u7ed9\u5927\u5bb6\u4e00\u4e2a\u4efb\u52a1\uff1a\u542f\u52a8\u4e24\u4e2a\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u8f93\u51fa\u201cPing\u201d\uff0c\u4e00\u4e2a\u8f93\u51fa\u201cPong\u201d\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u8f93\u51fa\u7684\u201cPing\u201d\u548c\u201cPong\u201d\u52a0\u8d77\u6765\u4e00\u5171\u670950\u4e2a\u65f6\uff0c\u5c31\u7ed3\u675f\u7a0b\u5e8f\u3002\u542c\u8d77\u6765\u662f\u4e0d\u662f\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u662f\u5b9e\u9645\u7f16\u5199\u4ee3\u7801\u65f6\uff0c\u7531\u4e8e\u591a\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u4e0d\u80fd\u591f\u50cf\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u76f4\u63a5\u901a\u8fc7\u5171\u4eab\u5185\u5b58\u7684\u65b9\u5f0f\u4ea4\u6362\u6570\u636e\uff0c\u6240\u4ee5\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u8fbe\u4e0d\u5230\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u7684\u3002 from multiprocessing import Process from time import sleep counter = 0 def sub_task ( string ): global counter while counter < 50 : print ( string , end = '' , flush = True ) counter += 1 sleep ( 0.01 ) def main (): Process ( target = sub_task , args = ( 'Ping' , )) . start () Process ( target = sub_task , args = ( 'Pong' , )) . start () if __name__ == '__main__' : main () \u4e0a\u9762\u7684\u4ee3\u7801\u770b\u8d77\u6765\u6ca1\u6bdb\u75c5\uff0c\u4f46\u662f\u6700\u540e\u7684\u7ed3\u679c\u662f\u201cPing\u201d\u548c\u201cPong\u201d\u5404\u8f93\u51fa\u4e8650\u4e2a\u3002\u518d\u6b21\u63d0\u9192\u5927\u5bb6\uff0c\u5f53\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u521b\u5efa\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u5b50\u8fdb\u7a0b\u4f1a\u590d\u5236\u7236\u8fdb\u7a0b\u53ca\u5176\u6240\u6709\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u4e24\u4e2a\u5b50\u8fdb\u7a0b\u4e2d\u5404\u6709\u4e00\u4e2a counter \u53d8\u91cf\uff0c\u5b83\u4eec\u90fd\u4f1a\u4ece 0 \u52a0\u5230 50 \uff0c\u6240\u4ee5\u7ed3\u679c\u5c31\u53ef\u60f3\u800c\u77e5\u4e86\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u7b80\u5355\u7684\u529e\u6cd5\u662f\u4f7f\u7528 multiprocessing \u6a21\u5757\u4e2d\u7684 Queue \u7c7b\uff0c\u5b83\u662f\u53ef\u4ee5\u88ab\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u7684\u961f\u5217\uff0c\u5e95\u5c42\u662f\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u5e95\u5c42\u7684\u7ba1\u9053\u548c\u4fe1\u53f7\u91cf\uff08semaphore\uff09\u673a\u5236\u6765\u5b9e\u73b0\u7684\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import time from multiprocessing import Process , Queue def sub_task ( content , queue ): counter = queue . get () while counter < 50 : print ( content , end = '' , flush = True ) counter += 1 queue . put ( counter ) time . sleep ( 0.01 ) counter = queue . get () def main (): queue = Queue () queue . put ( 0 ) p1 = Process ( target = sub_task , args = ( 'Ping' , queue )) p1 . start () p2 = Process ( target = sub_task , args = ( 'Pong' , queue )) p2 . start () while p1 . is_alive () and p2 . is_alive (): pass queue . put ( 50 ) if __name__ == '__main__' : main () \u63d0\u793a \uff1a multiprocessing.Queue \u5bf9\u8c61\u7684 get \u65b9\u6cd5\u9ed8\u8ba4\u5728\u961f\u5217\u4e3a\u7a7a\u65f6\u662f\u4f1a\u963b\u585e\u7684\uff0c\u76f4\u5230\u83b7\u53d6\u5230\u6570\u636e\u624d\u4f1a\u8fd4\u56de\u3002\u5982\u679c\u4e0d\u5e0c\u671b\u8be5\u65b9\u6cd5\u963b\u585e\u4ee5\u53ca\u9700\u8981\u6307\u5b9a\u963b\u585e\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a block \u548c timeout \u53c2\u6570\u8fdb\u884c\u8bbe\u5b9a\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u901a\u8fc7 Queue \u7c7b\u7684 get \u548c put \u65b9\u6cd5\u8ba9\u4e09\u4e2a\u8fdb\u7a0b\uff08 p1 \u3001 p2 \u548c\u4e3b\u8fdb\u7a0b\uff09\u5b9e\u73b0\u4e86\u6570\u636e\u7684\u5171\u4eab\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5f53 Queue \u4e2d\u53d6\u51fa\u7684\u503c\u5df2\u7ecf\u5927\u4e8e\u7b49\u4e8e 50 \u65f6\uff0c p1 \u548c p2 \u5c31\u4f1a\u8df3\u51fa while \u5faa\u73af\uff0c\u4ece\u800c\u7ec8\u6b62\u8fdb\u7a0b\u7684\u6267\u884c\u3002\u4ee3\u7801\u7b2c22\u884c\u7684\u5faa\u73af\u662f\u4e3a\u4e86\u7b49\u5f85 p1 \u548c p2 \u4e24\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u4e00\u4e2a\u7ed3\u675f\uff0c\u8fd9\u65f6\u5019\u4e3b\u8fdb\u7a0b\u8fd8\u9700\u8981\u5411 Queue \u4e2d\u653e\u7f6e\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e 50 \u7684\u503c\uff0c\u8fd9\u6837\u53e6\u4e00\u4e2a\u5c1a\u672a\u7ed3\u675f\u7684\u8fdb\u7a0b\u4e5f\u4f1a\u56e0\u4e3a\u8bfb\u5230\u8fd9\u4e2a\u5927\u4e8e\u7b49\u4e8e 50 \u7684\u503c\u800c\u7ec8\u6b62\u3002 \u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u65b9\u5f0f\u8fd8\u6709\u5f88\u591a\uff0c\u6bd4\u5982\u4f7f\u7528\u5957\u63a5\u5b57\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u4e24\u4e2a\u8fdb\u7a0b\u7684\u901a\u4fe1\uff0c\u751a\u81f3\u4e8e\u8fd9\u4e24\u4e2a\u8fdb\u7a0b\u5e76\u4e0d\u5728\u540c\u4e00\u53f0\u4e3b\u673a\u4e0a\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u3002","title":"\u8fdb\u7a0b\u95f4\u901a\u4fe1"},{"location":"%E7%AC%AC35%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-2/#_4","text":"\u5728 Python \u4e2d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7 subprocess \u6a21\u5757\u7684 call \u51fd\u6570\u6267\u884c\u5176\u4ed6\u7684\u547d\u4ee4\u6765\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u76f8\u5f53\u4e8e\u5c31\u662f\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u8c03\u7528\u5176\u4ed6\u7a0b\u5e8f\uff0c\u8fd9\u91cc\u6211\u4eec\u6682\u4e0d\u63a2\u8ba8\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002 \u5bf9\u4e8ePython\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u4ee5\u4e0b\u60c5\u51b5\u9700\u8981\u8003\u8651\u4f7f\u7528\u591a\u7ebf\u7a0b\uff1a \u7a0b\u5e8f\u9700\u8981\u7ef4\u62a4\u8bb8\u591a\u5171\u4eab\u7684\u72b6\u6001\uff08\u5c24\u5176\u662f\u53ef\u53d8\u72b6\u6001\uff09\uff0cPython \u4e2d\u7684\u5217\u8868\u3001\u5b57\u5178\u3001\u96c6\u5408\u90fd\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff08\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u64cd\u4f5c\u540c\u4e00\u4e2a\u5217\u8868\u3001\u5b57\u5178\u6216\u96c6\u5408\uff0c\u4e0d\u4f1a\u5f15\u53d1\u9519\u8bef\u548c\u6570\u636e\u95ee\u9898\uff09\uff0c\u6240\u4ee5\u4f7f\u7528\u7ebf\u7a0b\u800c\u4e0d\u662f\u8fdb\u7a0b\u7ef4\u62a4\u5171\u4eab\u72b6\u6001\u7684\u4ee3\u4ef7\u76f8\u5bf9\u8f83\u5c0f\u3002 \u7a0b\u5e8f\u4f1a\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u5728 I/O \u64cd\u4f5c\u4e0a\uff0c\u6ca1\u6709\u592a\u591a\u5e76\u884c\u8ba1\u7b97\u7684\u9700\u6c42\u4e14\u4e0d\u9700\u5360\u7528\u592a\u591a\u7684\u5185\u5b58\u3002 \u90a3\u4e48\u5728\u9047\u5230\u4e0b\u5217\u60c5\u51b5\u65f6\uff0c\u5e94\u8be5\u8003\u8651\u4f7f\u7528\u591a\u8fdb\u7a0b\uff1a \u7a0b\u5e8f\u6267\u884c\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff08\u5982\uff1a\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u3001\u6570\u636e\u538b\u7f29\u3001\u79d1\u5b66\u8ba1\u7b97\u7b49\uff09\u3002 \u7a0b\u5e8f\u7684\u8f93\u5165\u53ef\u4ee5\u5e76\u884c\u7684\u5206\u6210\u5757\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u8fd0\u7b97\u7ed3\u679c\u5408\u5e76\u3002 \u7a0b\u5e8f\u5728\u5185\u5b58\u4f7f\u7528\u65b9\u9762\u6ca1\u6709\u4efb\u4f55\u9650\u5236\u4e14\u4e0d\u5f3a\u4f9d\u8d56\u4e8e I/O \u64cd\u4f5c\uff08\u5982\u8bfb\u5199\u6587\u4ef6\u3001\u5957\u63a5\u5b57\u7b49\uff09\u3002","title":"\u7b80\u5355\u7684\u603b\u7ed3"},{"location":"%E7%AC%AC36%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-3/","text":"\u7b2c36\u8bfe\uff1aPython\u4e2d\u7684\u5e76\u53d1\u7f16\u7a0b-3 \u722c\u866b\u662f\u5178\u578b\u7684 I/O \u5bc6\u96c6\u578b\u4efb\u52a1\uff0cI/O \u5bc6\u96c6\u578b\u4efb\u52a1\u7684\u7279\u70b9\u5c31\u662f\u7a0b\u5e8f\u4f1a\u7ecf\u5e38\u6027\u7684\u56e0\u4e3a I/O \u64cd\u4f5c\u800c\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u6bd4\u5982\u6211\u4eec\u4e4b\u524d\u4f7f\u7528 requests \u83b7\u53d6\u9875\u9762\u4ee3\u7801\u6216\u4e8c\u8fdb\u5236\u5185\u5bb9\uff0c\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\u4e4b\u540e\uff0c\u7a0b\u5e8f\u5fc5\u987b\u8981\u7b49\u5f85\u7f51\u7ad9\u8fd4\u56de\u54cd\u5e94\u4e4b\u540e\u624d\u80fd\u7ee7\u7eed\u8fd0\u884c\uff0c\u5982\u679c\u76ee\u6807\u7f51\u7ad9\u4e0d\u662f\u5f88\u7ed9\u529b\u6216\u8005\u7f51\u7edc\u72b6\u51b5\u4e0d\u662f\u5f88\u7406\u60f3\uff0c\u90a3\u4e48\u7b49\u5f85\u54cd\u5e94\u7684\u65f6\u95f4\u53ef\u80fd\u4f1a\u5f88\u4e45\uff0c\u800c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6574\u4e2a\u7a0b\u5e8f\u662f\u4e00\u76f4\u963b\u585e\u5728\u90a3\u91cc\uff0c\u6ca1\u6709\u505a\u4efb\u4f55\u7684\u4e8b\u60c5\u3002\u901a\u8fc7\u524d\u9762\u7684\u8bfe\u7a0b\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u53ef\u4ee5\u901a\u8fc7\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u4e3a\u722c\u866b\u63d0\u901f\uff0c\u4f7f\u7528\u591a\u7ebf\u7a0b\u7684\u672c\u8d28\u5c31\u662f\uff0c\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u963b\u585e\u7684\u65f6\u5019\uff0c\u7a0b\u5e8f\u8fd8\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u53ef\u4ee5\u7ee7\u7eed\u8fd0\u8f6c\uff0c\u56e0\u6b64\u6574\u4e2a\u7a0b\u5e8f\u5c31\u4e0d\u4f1a\u5728\u963b\u585e\u548c\u7b49\u5f85\u4e2d\u6d6a\u8d39\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u8fd8\u6709\u4e00\u79cd\u975e\u5e38\u9002\u5408 I/O \u5bc6\u96c6\u578b\u4efb\u52a1\u7684\u5e76\u53d1\u7f16\u7a0b\u65b9\u5f0f\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5f02\u6b65\u7f16\u7a0b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c06\u5b83\u79f0\u4e3a\u5f02\u6b65 I/O\u3002\u8fd9\u79cd\u65b9\u5f0f\u5e76\u4e0d\u9700\u8981\u542f\u52a8\u591a\u4e2a\u7ebf\u7a0b\u6216\u591a\u4e2a\u8fdb\u7a0b\u6765\u5b9e\u73b0\u5e76\u53d1\uff0c\u5b83\u662f\u901a\u8fc7\u591a\u4e2a\u5b50\u7a0b\u5e8f\u76f8\u4e92\u534f\u4f5c\u7684\u65b9\u5f0f\u6765\u63d0\u5347 CPU \u7684\u5229\u7528\u7387\uff0c\u89e3\u51b3\u4e86 I/O \u5bc6\u96c6\u578b\u4efb\u52a1 CPU \u5229\u7528\u7387\u5f88\u4f4e\u7684\u95ee\u9898\uff0c\u6211\u4e00\u822c\u5c06\u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3a\u201c\u534f\u4f5c\u5f0f\u5e76\u53d1\u201d\u3002\u8fd9\u91cc\uff0c\u6211\u4e0d\u6253\u7b97\u63a2\u8ba8\u64cd\u4f5c\u7cfb\u7edf\u7684\u5404\u79cd I/O \u6a21\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u5bf9\u5f88\u591a\u8bfb\u8005\u6765\u8bf4\u90fd\u592a\u8fc7\u62bd\u8c61\uff1b\u4f46\u662f\u6211\u4eec\u5f97\u5148\u629b\u51fa\u4e24\u7ec4\u6982\u5ff5\u7ed9\u5927\u5bb6\uff0c\u4e00\u7ec4\u53eb\u505a\u201c\u963b\u585e\u201d\u548c\u201c\u975e\u963b\u585e\u201d\uff0c\u4e00\u7ec4\u53eb\u505a\u201c\u540c\u6b65\u201d\u548c\u201c\u5f02\u6b65\u201d\u3002 \u57fa\u672c\u6982\u5ff5 \u963b\u585e \u963b\u585e\u72b6\u6001\u6307\u7a0b\u5e8f\u672a\u5f97\u5230\u6240\u9700\u8ba1\u7b97\u8d44\u6e90\u65f6\u88ab\u6302\u8d77\u7684\u72b6\u6001\u3002\u7a0b\u5e8f\u5728\u7b49\u5f85\u67d0\u4e2a\u64cd\u4f5c\u5b8c\u6210\u671f\u95f4\uff0c\u81ea\u8eab\u65e0\u6cd5\u7ee7\u7eed\u5904\u7406\u5176\u4ed6\u7684\u4e8b\u60c5\uff0c\u5219\u79f0\u8be5\u7a0b\u5e8f\u5728\u8be5\u64cd\u4f5c\u4e0a\u662f\u963b\u585e\u7684\u3002\u963b\u585e\u968f\u65f6\u90fd\u53ef\u80fd\u53d1\u751f\uff0c\u6700\u5178\u578b\u7684\u5c31\u662f I/O \u4e2d\u65ad\uff08\u5305\u62ec\u7f51\u7edc I/O \u3001\u78c1\u76d8 I/O \u3001\u7528\u6237\u8f93\u5165\u7b49\uff09\u3001\u4f11\u7720\u64cd\u4f5c\u3001\u7b49\u5f85\u67d0\u4e2a\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f\uff0c\u751a\u81f3\u5305\u62ec\u5728 CPU \u5207\u6362\u4e0a\u4e0b\u6587\u65f6\uff0c\u7a0b\u5e8f\u90fd\u65e0\u6cd5\u771f\u6b63\u7684\u6267\u884c\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u963b\u585e\u3002 \u975e\u963b\u585e \u7a0b\u5e8f\u5728\u7b49\u5f85\u67d0\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u81ea\u8eab\u4e0d\u88ab\u963b\u585e\uff0c\u53ef\u4ee5\u7ee7\u7eed\u5904\u7406\u5176\u4ed6\u7684\u4e8b\u60c5\uff0c\u5219\u79f0\u8be5\u7a0b\u5e8f\u5728\u8be5\u64cd\u4f5c\u4e0a\u662f\u975e\u963b\u585e\u7684\u3002\u975e\u963b\u585e\u5e76\u4e0d\u662f\u5728\u4efb\u4f55\u7a0b\u5e8f\u7ea7\u522b\u3001\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u5b58\u5728\u7684\u3002\u4ec5\u5f53\u7a0b\u5e8f\u5c01\u88c5\u7684\u7ea7\u522b\u53ef\u4ee5\u56ca\u62ec\u72ec\u7acb\u7684\u5b50\u7a0b\u5e8f\u5355\u5143\u65f6\uff0c\u5b83\u624d\u53ef\u80fd\u5b58\u5728\u975e\u963b\u585e\u72b6\u6001\u3002\u663e\u7136\uff0c\u67d0\u4e2a\u64cd\u4f5c\u7684\u963b\u585e\u53ef\u80fd\u4f1a\u5bfc\u7a0b\u5e8f\u8017\u65f6\u4ee5\u53ca\u6548\u7387\u4f4e\u4e0b\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u5e0c\u671b\u628a\u5b83\u53d8\u6210\u975e\u963b\u585e\u7684\u3002 \u540c\u6b65 \u4e0d\u540c\u7a0b\u5e8f\u5355\u5143\u4e3a\u4e86\u5b8c\u6210\u67d0\u4e2a\u4efb\u52a1\uff0c\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u9700\u9760\u67d0\u79cd\u901a\u4fe1\u65b9\u5f0f\u4ee5\u534f\u8c03\u4e00\u81f4\uff0c\u6211\u4eec\u79f0\u8fd9\u4e9b\u7a0b\u5e8f\u5355\u5143\u662f\u540c\u6b65\u6267\u884c\u7684\u3002\u4f8b\u5982\u524d\u9762\u8bb2\u8fc7\u7684\u7ed9\u94f6\u884c\u8d26\u6237\u5b58\u94b1\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u201c\u9501\u201d\u4f5c\u4e3a\u901a\u4fe1\u4fe1\u53f7\uff0c\u8ba9\u591a\u4e2a\u5b58\u94b1\u64cd\u4f5c\u5f3a\u5236\u6392\u961f\u987a\u5e8f\u6267\u884c\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u540c\u6b65\u3002 \u5f02\u6b65 \u4e0d\u540c\u7a0b\u5e8f\u5355\u5143\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u65e0\u9700\u901a\u4fe1\u534f\u8c03\uff0c\u4e5f\u80fd\u591f\u5b8c\u6210\u4e00\u4e2a\u4efb\u52a1\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6211\u4eec\u5c31\u79f0\u4e4b\u4e3a\u5f02\u6b65\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u722c\u866b\u4e0b\u8f7d\u9875\u9762\u65f6\uff0c\u8c03\u5ea6\u7a0b\u5e8f\u8c03\u7528\u4e0b\u8f7d\u7a0b\u5e8f\u540e\uff0c\u5373\u53ef\u8c03\u5ea6\u5176\u4ed6\u4efb\u52a1\uff0c\u800c\u65e0\u9700\u4e0e\u8be5\u4e0b\u8f7d\u4efb\u52a1\u4fdd\u6301\u901a\u4fe1\u4ee5\u534f\u8c03\u884c\u4e3a\u3002\u4e0d\u540c\u7f51\u9875\u7684\u4e0b\u8f7d\u3001\u4fdd\u5b58\u7b49\u64cd\u4f5c\u90fd\u662f\u4e0d\u76f8\u5173\u7684\uff0c\u4e5f\u65e0\u9700\u76f8\u4e92\u901a\u77e5\u534f\u8c03\u3002\u5f88\u663e\u7136\uff0c\u5f02\u6b65\u64cd\u4f5c\u7684\u5b8c\u6210\u65f6\u523b\u548c\u5148\u540e\u987a\u5e8f\u5e76\u4e0d\u80fd\u786e\u5b9a\u3002 \u5f88\u591a\u4eba\u90fd\u4e0d\u592a\u80fd\u51c6\u786e\u7684\u628a\u63e1\u8fd9\u51e0\u4e2a\u6982\u5ff5\uff0c\u8fd9\u91cc\u6211\u4eec\u7b80\u5355\u7684\u603b\u7ed3\u4e00\u4e0b\uff0c\u540c\u6b65\u4e0e\u5f02\u6b65\u7684\u5173\u6ce8\u70b9\u662f \u6d88\u606f\u901a\u4fe1\u673a\u5236 \uff0c\u6700\u7ec8\u8868\u73b0\u51fa\u6765\u7684\u662f\u201c\u6709\u5e8f\u201d\u548c\u201c\u65e0\u5e8f\u201d\u7684\u533a\u522b\uff1b\u963b\u585e\u548c\u975e\u963b\u585e\u7684\u5173\u6ce8\u70b9\u662f \u7a0b\u5e8f\u5728\u7b49\u5f85\u6d88\u606f\u65f6\u72b6\u6001 \uff0c\u6700\u7ec8\u8868\u73b0\u51fa\u6765\u7684\u662f\u7a0b\u5e8f\u5728\u7b49\u5f85\u65f6\u80fd\u4e0d\u80fd\u505a\u70b9\u522b\u7684\u3002\u5982\u679c\u60f3\u6df1\u5165\u7406\u89e3\u8fd9\u4e9b\u5185\u5bb9\uff0c\u63a8\u8350\u5927\u5bb6\u9605\u8bfb\u7ecf\u5178\u8457\u4f5c \u300aUNIX\u7f51\u7edc\u7f16\u7a0b\u300b \uff0c\u8fd9\u672c\u4e66\u975e\u5e38\u7684\u8d5e\u3002 \u751f\u6210\u5668\u548c\u534f\u7a0b \u524d\u9762\u6211\u4eec\u8bf4\u8fc7\uff0c\u5f02\u6b65\u7f16\u7a0b\u662f\u4e00\u79cd\u201c\u534f\u4f5c\u5f0f\u5e76\u53d1\u201d\uff0c\u5373\u901a\u8fc7\u591a\u4e2a\u5b50\u7a0b\u5e8f\u76f8\u4e92\u534f\u4f5c\u7684\u65b9\u5f0f\u63d0\u5347 CPU \u7684\u5229\u7528\u7387\uff0c\u4ece\u800c\u51cf\u5c11\u7a0b\u5e8f\u5728\u963b\u585e\u548c\u7b49\u5f85\u4e2d\u6d6a\u8d39\u7684\u65f6\u95f4\uff0c\u6700\u7ec8\u8fbe\u5230\u5e76\u53d1\u7684\u6548\u679c\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u591a\u4e2a\u76f8\u4e92\u534f\u4f5c\u7684\u5b50\u7a0b\u5e8f\u79f0\u4e3a\u201c\u534f\u7a0b\u201d\uff0c\u5b83\u662f\u5b9e\u73b0\u5f02\u6b65\u7f16\u7a0b\u7684\u5173\u952e\u3002\u5728\u4ecb\u7ecd\u534f\u7a0b\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u4ec0\u4e48\u662f\u751f\u6210\u5668\u3002 def fib ( max_count ): a , b = 0 , 1 for _ in range ( max_count ): a , b = b , a + b yield a \u4e0a\u9762\u6211\u4eec\u7f16\u5199\u4e86\u4e00\u4e2a\u751f\u6210\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u751f\u6210\u5668\uff0c\u8c03\u7528\u4e0a\u9762\u7684 fib \u51fd\u6570\u5e76\u4e0d\u662f\u6267\u884c\u8be5\u51fd\u6570\u83b7\u5f97\u8fd4\u56de\u503c\uff0c\u56e0\u4e3a fib \u51fd\u6570\u4e2d\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u5173\u952e\u5b57 yield \u3002\u8fd9\u4e2a\u5173\u952e\u5b57\u4f7f\u5f97 fib \u51fd\u6570\u8ddf\u666e\u901a\u7684\u51fd\u6570\u6709\u4e9b\u533a\u522b\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u4f1a\u5f97\u5230\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002 gen_obj = fib ( 20 ) print ( gen_obj ) \u8f93\u51fa\uff1a <generator object fib at 0x106daee40> \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570 next \u4ece\u751f\u6210\u5668\u5bf9\u8c61\u4e2d\u83b7\u53d6\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u503c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 for-in \u5faa\u73af\u5bf9\u751f\u6210\u5668\u80fd\u591f\u63d0\u4f9b\u7684\u503c\u8fdb\u884c\u904d\u5386\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 for value in gen_obj : print ( value ) \u751f\u6210\u5668\u7ecf\u8fc7\u9884\u6fc0\u6d3b\uff0c\u5c31\u662f\u4e00\u4e2a\u534f\u7a0b\uff0c\u5b83\u53ef\u4ee5\u8ddf\u5176\u4ed6\u5b50\u7a0b\u5e8f\u534f\u4f5c\u3002 def calc_average (): total , counter = 0 , 0 avg_value = None while True : curr_value = yield avg_value total += curr_value counter += 1 avg_value = total / counter def main (): obj = calc_average () # \u751f\u6210\u5668\u9884\u6fc0\u6d3b obj . send ( None ) for _ in range ( 5 ): print ( obj . send ( float ( input ()))) if __name__ == '__main__' : main () \u4e0a\u9762\u7684 main \u51fd\u6570\u9996\u5148\u901a\u8fc7\u751f\u6210\u5668\u5bf9\u8c61\u7684 send \u65b9\u6cd5\u53d1\u9001\u4e00\u4e2a None \u503c\u6765\u5c06\u5176\u6fc0\u6d3b\u4e3a\u534f\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 next(obj) \u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002\u63a5\u4e0b\u6765\uff0c\u534f\u7a0b\u5bf9\u8c61\u4f1a\u63a5\u6536 main \u51fd\u6570\u53d1\u9001\u7684\u6570\u636e\u5e76\u4ea7\u51fa\uff08 yield \uff09\u6570\u636e\u7684\u5e73\u5747\u503c\u3002\u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u770b\u51fa\u4e24\u6bb5\u5b50\u7a0b\u5e8f\u662f\u600e\u4e48\u201c\u534f\u4f5c\u201d\u7684\u3002 \u5f02\u6b65\u51fd\u6570 Python 3.5\u7248\u672c\u4e2d\uff0c\u5f15\u5165\u4e86\u4e24\u4e2a\u975e\u5e38\u6709\u610f\u601d\u7684\u5143\u7d20\uff0c\u4e00\u4e2a\u53eb async \uff0c\u4e00\u4e2a\u53eb await \uff0c\u5b83\u4eec\u5728Python 3.7\u7248\u672c\u4e2d\u6210\u4e3a\u4e86\u6b63\u5f0f\u7684\u5173\u952e\u5b57\u3002\u901a\u8fc7\u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u7b80\u5316\u534f\u7a0b\u4ee3\u7801\u7684\u7f16\u5199\uff0c\u53ef\u4ee5\u7528\u66f4\u4e3a\u7b80\u5355\u7684\u65b9\u5f0f\u8ba9\u591a\u4e2a\u5b50\u7a0b\u5e8f\u5f88\u597d\u7684\u534f\u4f5c\u8d77\u6765\u3002\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u52a0\u4ee5\u8bf4\u660e\uff0c\u8bf7\u5927\u5bb6\u5148\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u3002 import time def display ( num ): time . sleep ( 1 ) print ( num ) def main (): start = time . time () for i in range ( 1 , 10 ): display ( i ) end = time . time () print ( f ' { end - start : .3f } \u79d2' ) if __name__ == '__main__' : main () \u4e0a\u9762\u7684\u4ee3\u7801\u6bcf\u6b21\u6267\u884c\u90fd\u4f1a\u4f9d\u6b21\u8f93\u51fa 1 \u5230 9 \u7684\u6570\u5b57\uff0c\u6bcf\u4e2a\u95f4\u9694 1 \u79d2\u949f\uff0c\u6574\u4e2a\u4ee3\u7801\u9700\u8981\u6267\u884c\u5927\u6982\u9700\u8981 9 \u79d2\u591a\u7684\u65f6\u95f4\uff0c\u8fd9\u4e00\u70b9\u6211\u76f8\u4fe1\u5927\u5bb6\u90fd\u80fd\u770b\u61c2\u3002\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u610f\u8bc6\u5230\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5c31\u662f\u4ee5\u540c\u6b65\u548c\u963b\u585e\u7684\u65b9\u5f0f\u6267\u884c\u7684\uff0c\u540c\u6b65\u53ef\u4ee5\u4ece\u4ee3\u7801\u7684\u8f93\u51fa\u770b\u51fa\u6765\uff0c\u800c\u963b\u585e\u662f\u6307\u5728\u8c03\u7528 display \u51fd\u6570\u53d1\u751f\u4f11\u7720\u65f6\uff0c\u6574\u4e2a\u4ee3\u7801\u7684\u5176\u4ed6\u90e8\u5206\u90fd\u4e0d\u80fd\u7ee7\u7eed\u6267\u884c\uff0c\u5fc5\u987b\u7b49\u5f85\u4f11\u7720\u7ed3\u675f\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c1d\u8bd5\u7528\u5f02\u6b65\u7684\u65b9\u5f0f\u6539\u5199\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u8ba9 display \u51fd\u6570\u4ee5\u5f02\u6b65\u7684\u65b9\u5f0f\u8fd0\u8f6c\u3002 import asyncio import time async def display ( num ): await asyncio . sleep ( 1 ) print ( num ) def main (): start = time . time () objs = [ display ( i ) for i in range ( 1 , 10 )] loop = asyncio . get_event_loop () loop . run_until_complete ( asyncio . wait ( objs )) loop . close () end = time . time () print ( f ' { end - start : .3f } \u79d2' ) if __name__ == '__main__' : main () Python \u4e2d\u7684 asyncio \u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9\u5f02\u6b65 I/O \u7684\u652f\u6301\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5728 display \u51fd\u6570\u524d\u9762\u52a0\u4e0a\u4e86 async \u5173\u952e\u5b57\u4f7f\u5176\u53d8\u6210\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\uff0c\u8c03\u7528\u5f02\u6b65\u51fd\u6570\u4e0d\u4f1a\u6267\u884c\u51fd\u6570\u4f53\u800c\u662f\u83b7\u5f97\u4e00\u4e2a\u534f\u7a0b\u5bf9\u8c61\u3002\u6211\u4eec\u5c06 display \u51fd\u6570\u4e2d\u7684 time.sleep(1) \u4fee\u6539\u4e3a await asyncio.sleep(1) \uff0c\u4e8c\u8005\u7684\u533a\u522b\u5728\u4e8e\uff0c\u540e\u8005\u4e0d\u4f1a\u8ba9\u6574\u4e2a\u4ee3\u7801\u9677\u5165\u963b\u585e\uff0c\u56e0\u4e3a await \u64cd\u4f5c\u4f1a\u8ba9\u5176\u4ed6\u534f\u4f5c\u7684\u5b50\u7a0b\u5e8f\u6709\u83b7\u5f97 CPU \u8d44\u6e90\u800c\u5f97\u4ee5\u8fd0\u8f6c\u7684\u673a\u4f1a\u3002\u4e3a\u4e86\u8ba9\u8fd9\u4e9b\u5b50\u7a0b\u5e8f\u53ef\u4ee5\u534f\u4f5c\u8d77\u6765\uff0c\u6211\u4eec\u9700\u8981\u5c06\u4ed6\u4eec\u653e\u5230\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\uff08\u5b9e\u73b0\u6d88\u606f\u5206\u6d3e\u4f20\u9012\u7684\u7cfb\u7edf\uff09\u4e0a\uff0c\u56e0\u4e3a \u5f53\u534f\u7a0b\u906d\u9047 I/O \u64cd\u4f5c\u963b\u585e\u65f6\uff0c\u5c31\u4f1a\u5230\u4e8b\u4ef6\u5faa\u73af\u4e2d\u76d1\u542c I/O \u64cd\u4f5c\u662f\u5426\u5b8c\u6210\uff0c\u5e76\u6ce8\u518c\u81ea\u8eab\u7684\u4e0a\u4e0b\u6587\u4ee5\u53ca\u81ea\u8eab\u7684\u5524\u9192\u51fd\u6570\uff08\u4ee5\u4fbf\u6062\u590d\u6267\u884c\uff09\uff0c\u4e4b\u540e\u8be5\u534f\u7a0b\u5c31\u53d8\u4e3a\u963b\u585e\u72b6\u6001 \u3002\u4e0a\u9762\u7684\u7b2c12\u884c\u4ee3\u7801\u521b\u5efa\u4e86 9 \u4e2a\u534f\u7a0b\u5bf9\u8c61\u5e76\u653e\u5230\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u7b2c13\u884c\u4ee3\u7801\u901a\u8fc7 asyncio \u6a21\u5757\u7684 get_event_loop \u51fd\u6570\u83b7\u5f97\u4e86\u7cfb\u7edf\u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u7b2c14\u884c\u901a\u8fc7 asyncio \u6a21\u5757\u7684 run_until_complete \u51fd\u6570\u5c06\u534f\u7a0b\u5bf9\u8c61\u6302\u8f7d\u5230\u4e8b\u4ef6\u5faa\u73af\u4e0a\u3002\u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u53d1\u73b0\uff0c 9 \u4e2a\u5206\u522b\u4f1a\u963b\u585e 1 \u79d2\u949f\u7684\u534f\u7a0b\u603b\u5171\u53ea\u963b\u585e\u4e86\u7ea6 1 \u79d2\u79cd\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a \u963b\u585e\u7684\u534f\u7a0b\u5bf9\u8c61\u4f1a\u653e\u5f03\u5bf9 CPU \u7684\u5360\u6709\u800c\u4e0d\u662f\u8ba9 CPU \u5904\u4e8e\u95f2\u7f6e\u72b6\u6001\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5927\u5927\u7684\u63d0\u5347\u4e86 CPU \u7684\u5229\u7528\u7387 \u3002\u800c\u4e14\u6211\u4eec\u8fd8\u4f1a\u6ce8\u610f\u5230\uff0c\u6570\u5b57\u5e76\u4e0d\u662f\u6309\u7167\u4ece 1 \u5230 9 \u7684\u987a\u5e8f\u6253\u5370\u8f93\u51fa\u7684\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\uff0c\u8bf4\u660e\u5b83\u4eec\u662f \u5f02\u6b65\u6267\u884c \u7684\u3002\u5bf9\u4e8e\u722c\u866b\u8fd9\u6837\u7684 I/O \u5bc6\u96c6\u578b\u4efb\u52a1\u6765\u8bf4\uff0c\u8fd9\u79cd\u534f\u4f5c\u5f0f\u5e76\u53d1\u5728\u5f88\u591a\u573a\u666f\u4e0b\u662f\u6bd4\u4f7f\u7528\u591a\u7ebf\u7a0b\u66f4\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u8fd9\u79cd\u505a\u6cd5\u51cf\u5c11\u4e86\u7ba1\u7406\u548c\u7ef4\u62a4\u591a\u4e2a\u7ebf\u7a0b\u4ee5\u53ca\u591a\u4e2a\u7ebf\u7a0b\u5207\u6362\u6240\u5e26\u6765\u7684\u5f00\u9500\u3002 aiohttp\u5e93 \u6211\u4eec\u4e4b\u524d\u4f7f\u7528\u7684 requests \u4e09\u65b9\u5e93\u5e76\u4e0d\u652f\u6301\u5f02\u6b65 I/O\uff0c\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u5f02\u6b65 I/O \u7684\u65b9\u5f0f\u6765\u52a0\u901f\u722c\u866b\u4ee3\u7801\u7684\u6267\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u5b89\u88c5\u548c\u4f7f\u7528\u540d\u4e3a aiohttp \u7684\u4e09\u65b9\u5e93\u3002 \u5b89\u88c5 aiohttp \u3002 pip install aiohttp \u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528 aiohttp \u6293\u53d6\u4e86 10 \u4e2a\u7f51\u7ad9\u7684\u9996\u9875\u5e76\u89e3\u6790\u51fa\u5b83\u4eec\u7684\u6807\u9898\u3002 import asyncio import re import aiohttp from aiohttp import ClientSession TITLE_PATTERN = re . compile ( r '<title.*?>(.*?)</title>' , re . DOTALL ) async def fetch_page_title ( url ): async with aiohttp . ClientSession ( headers = { 'User-Agent' : 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36' , }) as session : # type: ClientSession async with session . get ( url , ssl = False ) as resp : if resp . status == 200 : html_code = await resp . text () matcher = TITLE_PATTERN . search ( html_code ) title = matcher . group ( 1 ) . strip () print ( title ) def main (): urls = [ 'https://www.python.org/' , 'https://www.jd.com/' , 'https://www.baidu.com/' , 'https://www.taobao.com/' , 'https://git-scm.com/' , 'https://www.sohu.com/' , 'https://gitee.com/' , 'https://www.amazon.com/' , 'https://www.usa.gov/' , 'https://www.nasa.gov/' ] objs = [ fetch_page_title ( url ) for url in urls ] loop = asyncio . get_event_loop () loop . run_until_complete ( asyncio . wait ( objs )) loop . close () if __name__ == '__main__' : main () \u8f93\u51fa\uff1a \u4eac\u4e1c(JD.COM)-\u6b63\u54c1\u4f4e\u4ef7\u3001\u54c1\u8d28\u4fdd\u969c\u3001\u914d\u9001\u53ca\u65f6\u3001\u8f7b\u677e\u8d2d\u7269\uff01 \u641c\u72d0 \u6dd8\u5b9d\u7f51 - \u6dd8\uff01\u6211\u559c\u6b22 \u767e\u5ea6\u4e00\u4e0b\uff0c\u4f60\u5c31\u77e5\u9053 Gitee - \u57fa\u4e8e Git \u7684\u4ee3\u7801\u6258\u7ba1\u548c\u7814\u53d1\u534f\u4f5c\u5e73\u53f0 Git NASA Official Guide to Government Information and Services &#124; USAGov Amazon.com. Spend less. Smile more. Welcome to Python.org \u4ece\u4e0a\u9762\u7684\u8f93\u51fa\u53ef\u4ee5\u770b\u51fa\uff0c\u7f51\u7ad9\u9996\u9875\u6807\u9898\u7684\u8f93\u51fa\u987a\u5e8f\u8ddf\u5b83\u4eec\u7684 URL \u5728\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u6ca1\u6709\u5173\u7cfb\u3002\u4ee3\u7801\u7684\u7b2c11\u884c\u5230\u7b2c13\u884c\u521b\u5efa\u4e86 ClientSession \u5bf9\u8c61\uff0c\u901a\u8fc7\u5b83\u7684 get \u65b9\u6cd5\u53ef\u4ee5\u5411\u6307\u5b9a\u7684 URL \u53d1\u8d77\u8bf7\u6c42\uff0c\u5982\u7b2c14\u884c\u6240\u793a\uff0c\u8ddf requests \u4e2d\u7684 Session \u5bf9\u8c61\u5e76\u6ca1\u6709\u672c\u8d28\u533a\u522b\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u8fd9\u91cc\u4f7f\u7528\u4e86\u5f02\u6b65\u4e0a\u4e0b\u6587\u3002\u4ee3\u7801\u7b2c16\u884c\u7684 await \u4f1a\u8ba9\u56e0\u4e3a I/O \u64cd\u4f5c\u963b\u585e\u7684\u5b50\u7a0b\u5e8f\u653e\u5f03\u5bf9 CPU \u7684\u5360\u7528\uff0c\u8fd9\u4f7f\u5f97\u5176\u4ed6\u7684\u5b50\u7a0b\u5e8f\u53ef\u4ee5\u8fd0\u8f6c\u8d77\u6765\u53bb\u6293\u53d6\u9875\u9762\u3002\u4ee3\u7801\u7684\u7b2c17\u884c\u548c\u7b2c18\u884c\u4f7f\u7528\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u6355\u83b7\u7ec4\u64cd\u4f5c\u89e3\u6790\u7f51\u9875\u6807\u9898\u3002 fetch_page_title \u662f\u4e00\u4e2a\u88ab async \u5173\u952e\u5b57\u4fee\u9970\u7684\u5f02\u6b65\u51fd\u6570\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u4f1a\u83b7\u5f97\u534f\u7a0b\u5bf9\u8c61\uff0c\u5982\u4ee3\u7801\u7b2c35\u884c\u6240\u793a\u3002\u540e\u9762\u7684\u4ee3\u7801\u8ddf\u4e4b\u524d\u7684\u4f8b\u5b50\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u76f8\u4fe1\u5927\u5bb6\u80fd\u591f\u7406\u89e3\u3002 \u5927\u5bb6\u53ef\u4ee5\u5c1d\u8bd5\u5c06 aiohttp \u6362\u56de\u5230 requests \uff0c\u770b\u770b\u4e0d\u4f7f\u7528\u5f02\u6b65 I/O \u4e5f\u4e0d\u4f7f\u7528\u591a\u7ebf\u7a0b\uff0c\u5230\u5e95\u548c\u4e0a\u9762\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u76f8\u4fe1\u901a\u8fc7\u8fd9\u6837\u7684\u5bf9\u6bd4\uff0c\u5927\u5bb6\u80fd\u591f\u66f4\u6df1\u523b\u7684\u7406\u89e3\u6211\u4eec\u4e4b\u524d\u5f3a\u8c03\u7684\u51e0\u4e2a\u6982\u5ff5\uff1a\u540c\u6b65\u548c\u5f02\u6b65\uff0c\u963b\u585e\u548c\u975e\u963b\u585e\u3002","title":"\u7b2c36\u8bfe\uff1aPython\u4e2d\u7684\u5e76\u53d1\u7f16\u7a0b 3"},{"location":"%E7%AC%AC36%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-3/#36python-3","text":"\u722c\u866b\u662f\u5178\u578b\u7684 I/O \u5bc6\u96c6\u578b\u4efb\u52a1\uff0cI/O \u5bc6\u96c6\u578b\u4efb\u52a1\u7684\u7279\u70b9\u5c31\u662f\u7a0b\u5e8f\u4f1a\u7ecf\u5e38\u6027\u7684\u56e0\u4e3a I/O \u64cd\u4f5c\u800c\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u6bd4\u5982\u6211\u4eec\u4e4b\u524d\u4f7f\u7528 requests \u83b7\u53d6\u9875\u9762\u4ee3\u7801\u6216\u4e8c\u8fdb\u5236\u5185\u5bb9\uff0c\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\u4e4b\u540e\uff0c\u7a0b\u5e8f\u5fc5\u987b\u8981\u7b49\u5f85\u7f51\u7ad9\u8fd4\u56de\u54cd\u5e94\u4e4b\u540e\u624d\u80fd\u7ee7\u7eed\u8fd0\u884c\uff0c\u5982\u679c\u76ee\u6807\u7f51\u7ad9\u4e0d\u662f\u5f88\u7ed9\u529b\u6216\u8005\u7f51\u7edc\u72b6\u51b5\u4e0d\u662f\u5f88\u7406\u60f3\uff0c\u90a3\u4e48\u7b49\u5f85\u54cd\u5e94\u7684\u65f6\u95f4\u53ef\u80fd\u4f1a\u5f88\u4e45\uff0c\u800c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6574\u4e2a\u7a0b\u5e8f\u662f\u4e00\u76f4\u963b\u585e\u5728\u90a3\u91cc\uff0c\u6ca1\u6709\u505a\u4efb\u4f55\u7684\u4e8b\u60c5\u3002\u901a\u8fc7\u524d\u9762\u7684\u8bfe\u7a0b\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u53ef\u4ee5\u901a\u8fc7\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\u4e3a\u722c\u866b\u63d0\u901f\uff0c\u4f7f\u7528\u591a\u7ebf\u7a0b\u7684\u672c\u8d28\u5c31\u662f\uff0c\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u963b\u585e\u7684\u65f6\u5019\uff0c\u7a0b\u5e8f\u8fd8\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u53ef\u4ee5\u7ee7\u7eed\u8fd0\u8f6c\uff0c\u56e0\u6b64\u6574\u4e2a\u7a0b\u5e8f\u5c31\u4e0d\u4f1a\u5728\u963b\u585e\u548c\u7b49\u5f85\u4e2d\u6d6a\u8d39\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u8fd8\u6709\u4e00\u79cd\u975e\u5e38\u9002\u5408 I/O \u5bc6\u96c6\u578b\u4efb\u52a1\u7684\u5e76\u53d1\u7f16\u7a0b\u65b9\u5f0f\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5f02\u6b65\u7f16\u7a0b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c06\u5b83\u79f0\u4e3a\u5f02\u6b65 I/O\u3002\u8fd9\u79cd\u65b9\u5f0f\u5e76\u4e0d\u9700\u8981\u542f\u52a8\u591a\u4e2a\u7ebf\u7a0b\u6216\u591a\u4e2a\u8fdb\u7a0b\u6765\u5b9e\u73b0\u5e76\u53d1\uff0c\u5b83\u662f\u901a\u8fc7\u591a\u4e2a\u5b50\u7a0b\u5e8f\u76f8\u4e92\u534f\u4f5c\u7684\u65b9\u5f0f\u6765\u63d0\u5347 CPU \u7684\u5229\u7528\u7387\uff0c\u89e3\u51b3\u4e86 I/O \u5bc6\u96c6\u578b\u4efb\u52a1 CPU \u5229\u7528\u7387\u5f88\u4f4e\u7684\u95ee\u9898\uff0c\u6211\u4e00\u822c\u5c06\u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3a\u201c\u534f\u4f5c\u5f0f\u5e76\u53d1\u201d\u3002\u8fd9\u91cc\uff0c\u6211\u4e0d\u6253\u7b97\u63a2\u8ba8\u64cd\u4f5c\u7cfb\u7edf\u7684\u5404\u79cd I/O \u6a21\u5f0f\uff0c\u56e0\u4e3a\u8fd9\u5bf9\u5f88\u591a\u8bfb\u8005\u6765\u8bf4\u90fd\u592a\u8fc7\u62bd\u8c61\uff1b\u4f46\u662f\u6211\u4eec\u5f97\u5148\u629b\u51fa\u4e24\u7ec4\u6982\u5ff5\u7ed9\u5927\u5bb6\uff0c\u4e00\u7ec4\u53eb\u505a\u201c\u963b\u585e\u201d\u548c\u201c\u975e\u963b\u585e\u201d\uff0c\u4e00\u7ec4\u53eb\u505a\u201c\u540c\u6b65\u201d\u548c\u201c\u5f02\u6b65\u201d\u3002","title":"\u7b2c36\u8bfe\uff1aPython\u4e2d\u7684\u5e76\u53d1\u7f16\u7a0b-3"},{"location":"%E7%AC%AC36%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-3/#_1","text":"","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"%E7%AC%AC36%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-3/#_2","text":"\u963b\u585e\u72b6\u6001\u6307\u7a0b\u5e8f\u672a\u5f97\u5230\u6240\u9700\u8ba1\u7b97\u8d44\u6e90\u65f6\u88ab\u6302\u8d77\u7684\u72b6\u6001\u3002\u7a0b\u5e8f\u5728\u7b49\u5f85\u67d0\u4e2a\u64cd\u4f5c\u5b8c\u6210\u671f\u95f4\uff0c\u81ea\u8eab\u65e0\u6cd5\u7ee7\u7eed\u5904\u7406\u5176\u4ed6\u7684\u4e8b\u60c5\uff0c\u5219\u79f0\u8be5\u7a0b\u5e8f\u5728\u8be5\u64cd\u4f5c\u4e0a\u662f\u963b\u585e\u7684\u3002\u963b\u585e\u968f\u65f6\u90fd\u53ef\u80fd\u53d1\u751f\uff0c\u6700\u5178\u578b\u7684\u5c31\u662f I/O \u4e2d\u65ad\uff08\u5305\u62ec\u7f51\u7edc I/O \u3001\u78c1\u76d8 I/O \u3001\u7528\u6237\u8f93\u5165\u7b49\uff09\u3001\u4f11\u7720\u64cd\u4f5c\u3001\u7b49\u5f85\u67d0\u4e2a\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f\uff0c\u751a\u81f3\u5305\u62ec\u5728 CPU \u5207\u6362\u4e0a\u4e0b\u6587\u65f6\uff0c\u7a0b\u5e8f\u90fd\u65e0\u6cd5\u771f\u6b63\u7684\u6267\u884c\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u963b\u585e\u3002","title":"\u963b\u585e"},{"location":"%E7%AC%AC36%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-3/#_3","text":"\u7a0b\u5e8f\u5728\u7b49\u5f85\u67d0\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u81ea\u8eab\u4e0d\u88ab\u963b\u585e\uff0c\u53ef\u4ee5\u7ee7\u7eed\u5904\u7406\u5176\u4ed6\u7684\u4e8b\u60c5\uff0c\u5219\u79f0\u8be5\u7a0b\u5e8f\u5728\u8be5\u64cd\u4f5c\u4e0a\u662f\u975e\u963b\u585e\u7684\u3002\u975e\u963b\u585e\u5e76\u4e0d\u662f\u5728\u4efb\u4f55\u7a0b\u5e8f\u7ea7\u522b\u3001\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u5b58\u5728\u7684\u3002\u4ec5\u5f53\u7a0b\u5e8f\u5c01\u88c5\u7684\u7ea7\u522b\u53ef\u4ee5\u56ca\u62ec\u72ec\u7acb\u7684\u5b50\u7a0b\u5e8f\u5355\u5143\u65f6\uff0c\u5b83\u624d\u53ef\u80fd\u5b58\u5728\u975e\u963b\u585e\u72b6\u6001\u3002\u663e\u7136\uff0c\u67d0\u4e2a\u64cd\u4f5c\u7684\u963b\u585e\u53ef\u80fd\u4f1a\u5bfc\u7a0b\u5e8f\u8017\u65f6\u4ee5\u53ca\u6548\u7387\u4f4e\u4e0b\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u5e0c\u671b\u628a\u5b83\u53d8\u6210\u975e\u963b\u585e\u7684\u3002","title":"\u975e\u963b\u585e"},{"location":"%E7%AC%AC36%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-3/#_4","text":"\u4e0d\u540c\u7a0b\u5e8f\u5355\u5143\u4e3a\u4e86\u5b8c\u6210\u67d0\u4e2a\u4efb\u52a1\uff0c\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u9700\u9760\u67d0\u79cd\u901a\u4fe1\u65b9\u5f0f\u4ee5\u534f\u8c03\u4e00\u81f4\uff0c\u6211\u4eec\u79f0\u8fd9\u4e9b\u7a0b\u5e8f\u5355\u5143\u662f\u540c\u6b65\u6267\u884c\u7684\u3002\u4f8b\u5982\u524d\u9762\u8bb2\u8fc7\u7684\u7ed9\u94f6\u884c\u8d26\u6237\u5b58\u94b1\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u201c\u9501\u201d\u4f5c\u4e3a\u901a\u4fe1\u4fe1\u53f7\uff0c\u8ba9\u591a\u4e2a\u5b58\u94b1\u64cd\u4f5c\u5f3a\u5236\u6392\u961f\u987a\u5e8f\u6267\u884c\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u540c\u6b65\u3002","title":"\u540c\u6b65"},{"location":"%E7%AC%AC36%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-3/#_5","text":"\u4e0d\u540c\u7a0b\u5e8f\u5355\u5143\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u65e0\u9700\u901a\u4fe1\u534f\u8c03\uff0c\u4e5f\u80fd\u591f\u5b8c\u6210\u4e00\u4e2a\u4efb\u52a1\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6211\u4eec\u5c31\u79f0\u4e4b\u4e3a\u5f02\u6b65\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u722c\u866b\u4e0b\u8f7d\u9875\u9762\u65f6\uff0c\u8c03\u5ea6\u7a0b\u5e8f\u8c03\u7528\u4e0b\u8f7d\u7a0b\u5e8f\u540e\uff0c\u5373\u53ef\u8c03\u5ea6\u5176\u4ed6\u4efb\u52a1\uff0c\u800c\u65e0\u9700\u4e0e\u8be5\u4e0b\u8f7d\u4efb\u52a1\u4fdd\u6301\u901a\u4fe1\u4ee5\u534f\u8c03\u884c\u4e3a\u3002\u4e0d\u540c\u7f51\u9875\u7684\u4e0b\u8f7d\u3001\u4fdd\u5b58\u7b49\u64cd\u4f5c\u90fd\u662f\u4e0d\u76f8\u5173\u7684\uff0c\u4e5f\u65e0\u9700\u76f8\u4e92\u901a\u77e5\u534f\u8c03\u3002\u5f88\u663e\u7136\uff0c\u5f02\u6b65\u64cd\u4f5c\u7684\u5b8c\u6210\u65f6\u523b\u548c\u5148\u540e\u987a\u5e8f\u5e76\u4e0d\u80fd\u786e\u5b9a\u3002 \u5f88\u591a\u4eba\u90fd\u4e0d\u592a\u80fd\u51c6\u786e\u7684\u628a\u63e1\u8fd9\u51e0\u4e2a\u6982\u5ff5\uff0c\u8fd9\u91cc\u6211\u4eec\u7b80\u5355\u7684\u603b\u7ed3\u4e00\u4e0b\uff0c\u540c\u6b65\u4e0e\u5f02\u6b65\u7684\u5173\u6ce8\u70b9\u662f \u6d88\u606f\u901a\u4fe1\u673a\u5236 \uff0c\u6700\u7ec8\u8868\u73b0\u51fa\u6765\u7684\u662f\u201c\u6709\u5e8f\u201d\u548c\u201c\u65e0\u5e8f\u201d\u7684\u533a\u522b\uff1b\u963b\u585e\u548c\u975e\u963b\u585e\u7684\u5173\u6ce8\u70b9\u662f \u7a0b\u5e8f\u5728\u7b49\u5f85\u6d88\u606f\u65f6\u72b6\u6001 \uff0c\u6700\u7ec8\u8868\u73b0\u51fa\u6765\u7684\u662f\u7a0b\u5e8f\u5728\u7b49\u5f85\u65f6\u80fd\u4e0d\u80fd\u505a\u70b9\u522b\u7684\u3002\u5982\u679c\u60f3\u6df1\u5165\u7406\u89e3\u8fd9\u4e9b\u5185\u5bb9\uff0c\u63a8\u8350\u5927\u5bb6\u9605\u8bfb\u7ecf\u5178\u8457\u4f5c \u300aUNIX\u7f51\u7edc\u7f16\u7a0b\u300b \uff0c\u8fd9\u672c\u4e66\u975e\u5e38\u7684\u8d5e\u3002","title":"\u5f02\u6b65"},{"location":"%E7%AC%AC36%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-3/#_6","text":"\u524d\u9762\u6211\u4eec\u8bf4\u8fc7\uff0c\u5f02\u6b65\u7f16\u7a0b\u662f\u4e00\u79cd\u201c\u534f\u4f5c\u5f0f\u5e76\u53d1\u201d\uff0c\u5373\u901a\u8fc7\u591a\u4e2a\u5b50\u7a0b\u5e8f\u76f8\u4e92\u534f\u4f5c\u7684\u65b9\u5f0f\u63d0\u5347 CPU \u7684\u5229\u7528\u7387\uff0c\u4ece\u800c\u51cf\u5c11\u7a0b\u5e8f\u5728\u963b\u585e\u548c\u7b49\u5f85\u4e2d\u6d6a\u8d39\u7684\u65f6\u95f4\uff0c\u6700\u7ec8\u8fbe\u5230\u5e76\u53d1\u7684\u6548\u679c\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u591a\u4e2a\u76f8\u4e92\u534f\u4f5c\u7684\u5b50\u7a0b\u5e8f\u79f0\u4e3a\u201c\u534f\u7a0b\u201d\uff0c\u5b83\u662f\u5b9e\u73b0\u5f02\u6b65\u7f16\u7a0b\u7684\u5173\u952e\u3002\u5728\u4ecb\u7ecd\u534f\u7a0b\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u4ec0\u4e48\u662f\u751f\u6210\u5668\u3002 def fib ( max_count ): a , b = 0 , 1 for _ in range ( max_count ): a , b = b , a + b yield a \u4e0a\u9762\u6211\u4eec\u7f16\u5199\u4e86\u4e00\u4e2a\u751f\u6210\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u751f\u6210\u5668\uff0c\u8c03\u7528\u4e0a\u9762\u7684 fib \u51fd\u6570\u5e76\u4e0d\u662f\u6267\u884c\u8be5\u51fd\u6570\u83b7\u5f97\u8fd4\u56de\u503c\uff0c\u56e0\u4e3a fib \u51fd\u6570\u4e2d\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u5173\u952e\u5b57 yield \u3002\u8fd9\u4e2a\u5173\u952e\u5b57\u4f7f\u5f97 fib \u51fd\u6570\u8ddf\u666e\u901a\u7684\u51fd\u6570\u6709\u4e9b\u533a\u522b\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u4f1a\u5f97\u5230\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u6765\u9a8c\u8bc1\u8fd9\u4e00\u70b9\u3002 gen_obj = fib ( 20 ) print ( gen_obj ) \u8f93\u51fa\uff1a <generator object fib at 0x106daee40> \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570 next \u4ece\u751f\u6210\u5668\u5bf9\u8c61\u4e2d\u83b7\u53d6\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u503c\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 for-in \u5faa\u73af\u5bf9\u751f\u6210\u5668\u80fd\u591f\u63d0\u4f9b\u7684\u503c\u8fdb\u884c\u904d\u5386\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 for value in gen_obj : print ( value ) \u751f\u6210\u5668\u7ecf\u8fc7\u9884\u6fc0\u6d3b\uff0c\u5c31\u662f\u4e00\u4e2a\u534f\u7a0b\uff0c\u5b83\u53ef\u4ee5\u8ddf\u5176\u4ed6\u5b50\u7a0b\u5e8f\u534f\u4f5c\u3002 def calc_average (): total , counter = 0 , 0 avg_value = None while True : curr_value = yield avg_value total += curr_value counter += 1 avg_value = total / counter def main (): obj = calc_average () # \u751f\u6210\u5668\u9884\u6fc0\u6d3b obj . send ( None ) for _ in range ( 5 ): print ( obj . send ( float ( input ()))) if __name__ == '__main__' : main () \u4e0a\u9762\u7684 main \u51fd\u6570\u9996\u5148\u901a\u8fc7\u751f\u6210\u5668\u5bf9\u8c61\u7684 send \u65b9\u6cd5\u53d1\u9001\u4e00\u4e2a None \u503c\u6765\u5c06\u5176\u6fc0\u6d3b\u4e3a\u534f\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 next(obj) \u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002\u63a5\u4e0b\u6765\uff0c\u534f\u7a0b\u5bf9\u8c61\u4f1a\u63a5\u6536 main \u51fd\u6570\u53d1\u9001\u7684\u6570\u636e\u5e76\u4ea7\u51fa\uff08 yield \uff09\u6570\u636e\u7684\u5e73\u5747\u503c\u3002\u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u770b\u51fa\u4e24\u6bb5\u5b50\u7a0b\u5e8f\u662f\u600e\u4e48\u201c\u534f\u4f5c\u201d\u7684\u3002","title":"\u751f\u6210\u5668\u548c\u534f\u7a0b"},{"location":"%E7%AC%AC36%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-3/#_7","text":"Python 3.5\u7248\u672c\u4e2d\uff0c\u5f15\u5165\u4e86\u4e24\u4e2a\u975e\u5e38\u6709\u610f\u601d\u7684\u5143\u7d20\uff0c\u4e00\u4e2a\u53eb async \uff0c\u4e00\u4e2a\u53eb await \uff0c\u5b83\u4eec\u5728Python 3.7\u7248\u672c\u4e2d\u6210\u4e3a\u4e86\u6b63\u5f0f\u7684\u5173\u952e\u5b57\u3002\u901a\u8fc7\u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u7b80\u5316\u534f\u7a0b\u4ee3\u7801\u7684\u7f16\u5199\uff0c\u53ef\u4ee5\u7528\u66f4\u4e3a\u7b80\u5355\u7684\u65b9\u5f0f\u8ba9\u591a\u4e2a\u5b50\u7a0b\u5e8f\u5f88\u597d\u7684\u534f\u4f5c\u8d77\u6765\u3002\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u6765\u52a0\u4ee5\u8bf4\u660e\uff0c\u8bf7\u5927\u5bb6\u5148\u770b\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u3002 import time def display ( num ): time . sleep ( 1 ) print ( num ) def main (): start = time . time () for i in range ( 1 , 10 ): display ( i ) end = time . time () print ( f ' { end - start : .3f } \u79d2' ) if __name__ == '__main__' : main () \u4e0a\u9762\u7684\u4ee3\u7801\u6bcf\u6b21\u6267\u884c\u90fd\u4f1a\u4f9d\u6b21\u8f93\u51fa 1 \u5230 9 \u7684\u6570\u5b57\uff0c\u6bcf\u4e2a\u95f4\u9694 1 \u79d2\u949f\uff0c\u6574\u4e2a\u4ee3\u7801\u9700\u8981\u6267\u884c\u5927\u6982\u9700\u8981 9 \u79d2\u591a\u7684\u65f6\u95f4\uff0c\u8fd9\u4e00\u70b9\u6211\u76f8\u4fe1\u5927\u5bb6\u90fd\u80fd\u770b\u61c2\u3002\u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u610f\u8bc6\u5230\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5c31\u662f\u4ee5\u540c\u6b65\u548c\u963b\u585e\u7684\u65b9\u5f0f\u6267\u884c\u7684\uff0c\u540c\u6b65\u53ef\u4ee5\u4ece\u4ee3\u7801\u7684\u8f93\u51fa\u770b\u51fa\u6765\uff0c\u800c\u963b\u585e\u662f\u6307\u5728\u8c03\u7528 display \u51fd\u6570\u53d1\u751f\u4f11\u7720\u65f6\uff0c\u6574\u4e2a\u4ee3\u7801\u7684\u5176\u4ed6\u90e8\u5206\u90fd\u4e0d\u80fd\u7ee7\u7eed\u6267\u884c\uff0c\u5fc5\u987b\u7b49\u5f85\u4f11\u7720\u7ed3\u675f\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c1d\u8bd5\u7528\u5f02\u6b65\u7684\u65b9\u5f0f\u6539\u5199\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u8ba9 display \u51fd\u6570\u4ee5\u5f02\u6b65\u7684\u65b9\u5f0f\u8fd0\u8f6c\u3002 import asyncio import time async def display ( num ): await asyncio . sleep ( 1 ) print ( num ) def main (): start = time . time () objs = [ display ( i ) for i in range ( 1 , 10 )] loop = asyncio . get_event_loop () loop . run_until_complete ( asyncio . wait ( objs )) loop . close () end = time . time () print ( f ' { end - start : .3f } \u79d2' ) if __name__ == '__main__' : main () Python \u4e2d\u7684 asyncio \u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9\u5f02\u6b65 I/O \u7684\u652f\u6301\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5728 display \u51fd\u6570\u524d\u9762\u52a0\u4e0a\u4e86 async \u5173\u952e\u5b57\u4f7f\u5176\u53d8\u6210\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\uff0c\u8c03\u7528\u5f02\u6b65\u51fd\u6570\u4e0d\u4f1a\u6267\u884c\u51fd\u6570\u4f53\u800c\u662f\u83b7\u5f97\u4e00\u4e2a\u534f\u7a0b\u5bf9\u8c61\u3002\u6211\u4eec\u5c06 display \u51fd\u6570\u4e2d\u7684 time.sleep(1) \u4fee\u6539\u4e3a await asyncio.sleep(1) \uff0c\u4e8c\u8005\u7684\u533a\u522b\u5728\u4e8e\uff0c\u540e\u8005\u4e0d\u4f1a\u8ba9\u6574\u4e2a\u4ee3\u7801\u9677\u5165\u963b\u585e\uff0c\u56e0\u4e3a await \u64cd\u4f5c\u4f1a\u8ba9\u5176\u4ed6\u534f\u4f5c\u7684\u5b50\u7a0b\u5e8f\u6709\u83b7\u5f97 CPU \u8d44\u6e90\u800c\u5f97\u4ee5\u8fd0\u8f6c\u7684\u673a\u4f1a\u3002\u4e3a\u4e86\u8ba9\u8fd9\u4e9b\u5b50\u7a0b\u5e8f\u53ef\u4ee5\u534f\u4f5c\u8d77\u6765\uff0c\u6211\u4eec\u9700\u8981\u5c06\u4ed6\u4eec\u653e\u5230\u4e00\u4e2a\u4e8b\u4ef6\u5faa\u73af\uff08\u5b9e\u73b0\u6d88\u606f\u5206\u6d3e\u4f20\u9012\u7684\u7cfb\u7edf\uff09\u4e0a\uff0c\u56e0\u4e3a \u5f53\u534f\u7a0b\u906d\u9047 I/O \u64cd\u4f5c\u963b\u585e\u65f6\uff0c\u5c31\u4f1a\u5230\u4e8b\u4ef6\u5faa\u73af\u4e2d\u76d1\u542c I/O \u64cd\u4f5c\u662f\u5426\u5b8c\u6210\uff0c\u5e76\u6ce8\u518c\u81ea\u8eab\u7684\u4e0a\u4e0b\u6587\u4ee5\u53ca\u81ea\u8eab\u7684\u5524\u9192\u51fd\u6570\uff08\u4ee5\u4fbf\u6062\u590d\u6267\u884c\uff09\uff0c\u4e4b\u540e\u8be5\u534f\u7a0b\u5c31\u53d8\u4e3a\u963b\u585e\u72b6\u6001 \u3002\u4e0a\u9762\u7684\u7b2c12\u884c\u4ee3\u7801\u521b\u5efa\u4e86 9 \u4e2a\u534f\u7a0b\u5bf9\u8c61\u5e76\u653e\u5230\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u7b2c13\u884c\u4ee3\u7801\u901a\u8fc7 asyncio \u6a21\u5757\u7684 get_event_loop \u51fd\u6570\u83b7\u5f97\u4e86\u7cfb\u7edf\u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u7b2c14\u884c\u901a\u8fc7 asyncio \u6a21\u5757\u7684 run_until_complete \u51fd\u6570\u5c06\u534f\u7a0b\u5bf9\u8c61\u6302\u8f7d\u5230\u4e8b\u4ef6\u5faa\u73af\u4e0a\u3002\u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u53d1\u73b0\uff0c 9 \u4e2a\u5206\u522b\u4f1a\u963b\u585e 1 \u79d2\u949f\u7684\u534f\u7a0b\u603b\u5171\u53ea\u963b\u585e\u4e86\u7ea6 1 \u79d2\u79cd\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a \u963b\u585e\u7684\u534f\u7a0b\u5bf9\u8c61\u4f1a\u653e\u5f03\u5bf9 CPU \u7684\u5360\u6709\u800c\u4e0d\u662f\u8ba9 CPU \u5904\u4e8e\u95f2\u7f6e\u72b6\u6001\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5927\u5927\u7684\u63d0\u5347\u4e86 CPU \u7684\u5229\u7528\u7387 \u3002\u800c\u4e14\u6211\u4eec\u8fd8\u4f1a\u6ce8\u610f\u5230\uff0c\u6570\u5b57\u5e76\u4e0d\u662f\u6309\u7167\u4ece 1 \u5230 9 \u7684\u987a\u5e8f\u6253\u5370\u8f93\u51fa\u7684\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\uff0c\u8bf4\u660e\u5b83\u4eec\u662f \u5f02\u6b65\u6267\u884c \u7684\u3002\u5bf9\u4e8e\u722c\u866b\u8fd9\u6837\u7684 I/O \u5bc6\u96c6\u578b\u4efb\u52a1\u6765\u8bf4\uff0c\u8fd9\u79cd\u534f\u4f5c\u5f0f\u5e76\u53d1\u5728\u5f88\u591a\u573a\u666f\u4e0b\u662f\u6bd4\u4f7f\u7528\u591a\u7ebf\u7a0b\u66f4\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u8fd9\u79cd\u505a\u6cd5\u51cf\u5c11\u4e86\u7ba1\u7406\u548c\u7ef4\u62a4\u591a\u4e2a\u7ebf\u7a0b\u4ee5\u53ca\u591a\u4e2a\u7ebf\u7a0b\u5207\u6362\u6240\u5e26\u6765\u7684\u5f00\u9500\u3002","title":"\u5f02\u6b65\u51fd\u6570"},{"location":"%E7%AC%AC36%E8%AF%BE%EF%BC%9APython%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-3/#aiohttp","text":"\u6211\u4eec\u4e4b\u524d\u4f7f\u7528\u7684 requests \u4e09\u65b9\u5e93\u5e76\u4e0d\u652f\u6301\u5f02\u6b65 I/O\uff0c\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u5f02\u6b65 I/O \u7684\u65b9\u5f0f\u6765\u52a0\u901f\u722c\u866b\u4ee3\u7801\u7684\u6267\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u5b89\u88c5\u548c\u4f7f\u7528\u540d\u4e3a aiohttp \u7684\u4e09\u65b9\u5e93\u3002 \u5b89\u88c5 aiohttp \u3002 pip install aiohttp \u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528 aiohttp \u6293\u53d6\u4e86 10 \u4e2a\u7f51\u7ad9\u7684\u9996\u9875\u5e76\u89e3\u6790\u51fa\u5b83\u4eec\u7684\u6807\u9898\u3002 import asyncio import re import aiohttp from aiohttp import ClientSession TITLE_PATTERN = re . compile ( r '<title.*?>(.*?)</title>' , re . DOTALL ) async def fetch_page_title ( url ): async with aiohttp . ClientSession ( headers = { 'User-Agent' : 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36' , }) as session : # type: ClientSession async with session . get ( url , ssl = False ) as resp : if resp . status == 200 : html_code = await resp . text () matcher = TITLE_PATTERN . search ( html_code ) title = matcher . group ( 1 ) . strip () print ( title ) def main (): urls = [ 'https://www.python.org/' , 'https://www.jd.com/' , 'https://www.baidu.com/' , 'https://www.taobao.com/' , 'https://git-scm.com/' , 'https://www.sohu.com/' , 'https://gitee.com/' , 'https://www.amazon.com/' , 'https://www.usa.gov/' , 'https://www.nasa.gov/' ] objs = [ fetch_page_title ( url ) for url in urls ] loop = asyncio . get_event_loop () loop . run_until_complete ( asyncio . wait ( objs )) loop . close () if __name__ == '__main__' : main () \u8f93\u51fa\uff1a \u4eac\u4e1c(JD.COM)-\u6b63\u54c1\u4f4e\u4ef7\u3001\u54c1\u8d28\u4fdd\u969c\u3001\u914d\u9001\u53ca\u65f6\u3001\u8f7b\u677e\u8d2d\u7269\uff01 \u641c\u72d0 \u6dd8\u5b9d\u7f51 - \u6dd8\uff01\u6211\u559c\u6b22 \u767e\u5ea6\u4e00\u4e0b\uff0c\u4f60\u5c31\u77e5\u9053 Gitee - \u57fa\u4e8e Git \u7684\u4ee3\u7801\u6258\u7ba1\u548c\u7814\u53d1\u534f\u4f5c\u5e73\u53f0 Git NASA Official Guide to Government Information and Services &#124; USAGov Amazon.com. Spend less. Smile more. Welcome to Python.org \u4ece\u4e0a\u9762\u7684\u8f93\u51fa\u53ef\u4ee5\u770b\u51fa\uff0c\u7f51\u7ad9\u9996\u9875\u6807\u9898\u7684\u8f93\u51fa\u987a\u5e8f\u8ddf\u5b83\u4eec\u7684 URL \u5728\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u6ca1\u6709\u5173\u7cfb\u3002\u4ee3\u7801\u7684\u7b2c11\u884c\u5230\u7b2c13\u884c\u521b\u5efa\u4e86 ClientSession \u5bf9\u8c61\uff0c\u901a\u8fc7\u5b83\u7684 get \u65b9\u6cd5\u53ef\u4ee5\u5411\u6307\u5b9a\u7684 URL \u53d1\u8d77\u8bf7\u6c42\uff0c\u5982\u7b2c14\u884c\u6240\u793a\uff0c\u8ddf requests \u4e2d\u7684 Session \u5bf9\u8c61\u5e76\u6ca1\u6709\u672c\u8d28\u533a\u522b\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u8fd9\u91cc\u4f7f\u7528\u4e86\u5f02\u6b65\u4e0a\u4e0b\u6587\u3002\u4ee3\u7801\u7b2c16\u884c\u7684 await \u4f1a\u8ba9\u56e0\u4e3a I/O \u64cd\u4f5c\u963b\u585e\u7684\u5b50\u7a0b\u5e8f\u653e\u5f03\u5bf9 CPU \u7684\u5360\u7528\uff0c\u8fd9\u4f7f\u5f97\u5176\u4ed6\u7684\u5b50\u7a0b\u5e8f\u53ef\u4ee5\u8fd0\u8f6c\u8d77\u6765\u53bb\u6293\u53d6\u9875\u9762\u3002\u4ee3\u7801\u7684\u7b2c17\u884c\u548c\u7b2c18\u884c\u4f7f\u7528\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u6355\u83b7\u7ec4\u64cd\u4f5c\u89e3\u6790\u7f51\u9875\u6807\u9898\u3002 fetch_page_title \u662f\u4e00\u4e2a\u88ab async \u5173\u952e\u5b57\u4fee\u9970\u7684\u5f02\u6b65\u51fd\u6570\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u4f1a\u83b7\u5f97\u534f\u7a0b\u5bf9\u8c61\uff0c\u5982\u4ee3\u7801\u7b2c35\u884c\u6240\u793a\u3002\u540e\u9762\u7684\u4ee3\u7801\u8ddf\u4e4b\u524d\u7684\u4f8b\u5b50\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u76f8\u4fe1\u5927\u5bb6\u80fd\u591f\u7406\u89e3\u3002 \u5927\u5bb6\u53ef\u4ee5\u5c1d\u8bd5\u5c06 aiohttp \u6362\u56de\u5230 requests \uff0c\u770b\u770b\u4e0d\u4f7f\u7528\u5f02\u6b65 I/O \u4e5f\u4e0d\u4f7f\u7528\u591a\u7ebf\u7a0b\uff0c\u5230\u5e95\u548c\u4e0a\u9762\u7684\u4ee3\u7801\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u76f8\u4fe1\u901a\u8fc7\u8fd9\u6837\u7684\u5bf9\u6bd4\uff0c\u5927\u5bb6\u80fd\u591f\u66f4\u6df1\u523b\u7684\u7406\u89e3\u6211\u4eec\u4e4b\u524d\u5f3a\u8c03\u7684\u51e0\u4e2a\u6982\u5ff5\uff1a\u540c\u6b65\u548c\u5f02\u6b65\uff0c\u963b\u585e\u548c\u975e\u963b\u585e\u3002","title":"aiohttp\u5e93"},{"location":"%E7%AC%AC37%E8%AF%BE%EF%BC%9A%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%9C%A8%E7%88%AC%E8%99%AB%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/","text":"\u7b2c37\u8bfe\uff1a\u5e76\u53d1\u7f16\u7a0b\u5728\u722c\u866b\u4e2d\u7684\u5e94\u7528 \u4e4b\u524d\u7684\u8bfe\u7a0b\uff0c\u6211\u4eec\u5df2\u7ecf\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u4e86 Python \u4e2d\u7684\u591a\u7ebf\u7a0b\u3001\u591a\u8fdb\u7a0b\u548c\u5f02\u6b65\u7f16\u7a0b\uff0c\u901a\u8fc7\u8fd9\u4e09\u79cd\u624b\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5e76\u53d1\u6216\u5e76\u884c\u7f16\u7a0b\uff0c\u8fd9\u4e00\u65b9\u9762\u53ef\u4ee5\u52a0\u901f\u4ee3\u7801\u7684\u6267\u884c\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u53ef\u4ee5\u5e26\u6765\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\u3002\u722c\u866b\u7a0b\u5e8f\u662f\u5178\u578b\u7684 I/O \u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u5bf9\u4e8e I/O \u5bc6\u96c6\u578b\u4efb\u52a1\u6765\u8bf4\uff0c\u591a\u7ebf\u7a0b\u548c\u5f02\u6b65 I/O \u90fd\u662f\u5f88\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5f53\u7a0b\u5e8f\u7684\u67d0\u4e2a\u90e8\u5206\u56e0 I/O \u64cd\u4f5c\u963b\u585e\u65f6\uff0c\u7a0b\u5e8f\u7684\u5176\u4ed6\u90e8\u5206\u4ecd\u7136\u53ef\u4ee5\u8fd0\u8f6c\uff0c\u8fd9\u6837\u6211\u4eec\u4e0d\u7528\u5728\u7b49\u5f85\u548c\u963b\u585e\u4e2d\u6d6a\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u3002\u4e0b\u9762\u6211\u4eec\u4ee5\u722c\u53d6\u201c 360\u56fe\u7247 \u201d\u7f51\u7ad9\u7684\u56fe\u7247\u5e76\u4fdd\u5b58\u5230\u672c\u5730\u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u5206\u522b\u5c55\u793a\u4f7f\u7528\u5355\u7ebf\u7a0b\u3001\u591a\u7ebf\u7a0b\u548c\u5f02\u6b65 I/O \u7f16\u7a0b\u7684\u722c\u866b\u7a0b\u5e8f\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u540c\u65f6\u4e5f\u5bf9\u5b83\u4eec\u7684\u6267\u884c\u6548\u7387\u8fdb\u884c\u7b80\u5355\u7684\u5bf9\u6bd4\u3002 \u201c360\u56fe\u7247\u201d\u7f51\u7ad9\u7684\u9875\u9762\u4f7f\u7528\u4e86 Ajax \u6280\u672f\uff0c\u8fd9\u662f\u5f88\u591a\u7f51\u7ad9\u90fd\u4f1a\u4f7f\u7528\u7684\u4e00\u79cd\u5f02\u6b65\u52a0\u8f7d\u6570\u636e\u548c\u5c40\u90e8\u5237\u65b0\u9875\u9762\u7684\u6280\u672f\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u9875\u9762\u4e0a\u7684\u56fe\u7247\u90fd\u662f\u901a\u8fc7 JavaScript \u4ee3\u7801\u5f02\u6b65\u83b7\u53d6 JSON \u6570\u636e\u5e76\u52a8\u6001\u6e32\u67d3\u751f\u6210\u7684\uff0c\u800c\u4e14\u6574\u4e2a\u9875\u9762\u8fd8\u4f7f\u7528\u4e86\u7011\u5e03\u5f0f\u52a0\u8f7d\uff08\u4e00\u8fb9\u5411\u4e0b\u6eda\u52a8\uff0c\u4e00\u8fb9\u52a0\u8f7d\u66f4\u591a\u7684\u56fe\u7247\uff09\u3002\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u7684\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\u4e2d\u53ef\u4ee5\u627e\u5230\u63d0\u4f9b\u52a8\u6001\u5185\u5bb9\u7684\u6570\u636e\u63a5\u53e3\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u9700\u8981\u7684\u56fe\u7247\u4fe1\u606f\u5c31\u5728\u670d\u52a1\u5668\u8fd4\u56de\u7684 JSON \u6570\u636e\u4e2d\u3002 \u4f8b\u5982\uff0c\u8981\u83b7\u53d6\u201c\u7f8e\u5973\u201d\u9891\u9053\u7684\u56fe\u7247\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf7\u6c42\u5982\u4e0b\u6240\u793a\u7684URL\uff0c\u5176\u4e2d\u53c2\u6570 ch \u8868\u793a\u8bf7\u6c42\u7684\u9891\u9053\uff0c = \u540e\u9762\u7684\u53c2\u6570\u503c beauty \u5c31\u4ee3\u8868\u4e86\u201c\u7f8e\u5973\u201d\u9891\u9053\uff0c\u53c2\u6570 sn \u76f8\u5f53\u4e8e\u662f\u9875\u7801\uff0c 0 \u8868\u793a\u7b2c\u4e00\u9875\uff08\u5171 30 \u5f20\u56fe\u7247\uff09\uff0c 30 \u8868\u793a\u7b2c\u4e8c\u9875\uff0c 60 \u8868\u793a\u7b2c\u4e09\u9875\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 https://image.so.com/zjl?ch=beauty&sn=0 \u5355\u7ebf\u7a0b\u7248\u672c \u901a\u8fc7\u4e0a\u9762\u7684 URL \u4e0b\u8f7d\u201c\u7f8e\u5973\u201d\u9891\u9053\u5171 90 \u5f20\u56fe\u7247\u3002 \"\"\" example04.py - \u5355\u7ebf\u7a0b\u7248\u672c\u722c\u866b \"\"\" import os import requests def download_picture ( url ): filename = url [ url . rfind ( '/' ) + 1 :] resp = requests . get ( url ) if resp . status_code == 200 : with open ( f 'images/beauty/ { filename } ' , 'wb' ) as file : file . write ( resp . content ) def main (): if not os . path . exists ( 'images/beauty' ): os . makedirs ( 'images/beauty' ) for page in range ( 3 ): resp = requests . get ( f 'https://image.so.com/zjl?ch=beauty&sn= { page * 30 } ' ) if resp . status_code == 200 : pic_dict_list = resp . json ()[ 'list' ] for pic_dict in pic_dict_list : download_picture ( pic_dict [ 'qhimg_url' ]) if __name__ == '__main__' : main () \u5728 macOS \u6216 Linux \u7cfb\u7edf\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 time \u547d\u4ee4\u6765\u4e86\u89e3\u4e0a\u9762\u4ee3\u7801\u7684\u6267\u884c\u65f6\u95f4\u4ee5\u53ca CPU \u7684\u5229\u7528\u7387\uff0c\u5982\u4e0b\u6240\u793a\u3002 time python3 example04.py \u4e0b\u9762\u662f\u5355\u7ebf\u7a0b\u722c\u866b\u4ee3\u7801\u5728\u6211\u7684\u7535\u8111\u4e0a\u6267\u884c\u7684\u7ed3\u679c\u3002 python3 example04.py 2.36s user 0.39s system 12% cpu 21.578 total \u8fd9\u91cc\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u4ee3\u7801\u7684\u603b\u8017\u65f6\u4e3a 21.578 \u79d2\uff0cCPU \u5229\u7528\u7387\u4e3a 12% \u3002 \u591a\u7ebf\u7a0b\u7248\u672c \u6211\u4eec\u4f7f\u7528\u4e4b\u524d\u8bb2\u5230\u8fc7\u7684\u7ebf\u7a0b\u6c60\u6280\u672f\uff0c\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u4fee\u6539\u4e3a\u591a\u7ebf\u7a0b\u7248\u672c\u3002 \"\"\" example05.py - \u591a\u7ebf\u7a0b\u7248\u672c\u722c\u866b \"\"\" import os from concurrent.futures import ThreadPoolExecutor import requests def download_picture ( url ): filename = url [ url . rfind ( '/' ) + 1 :] resp = requests . get ( url ) if resp . status_code == 200 : with open ( f 'images/beauty/ { filename } ' , 'wb' ) as file : file . write ( resp . content ) def main (): if not os . path . exists ( 'images/beauty' ): os . makedirs ( 'images/beauty' ) with ThreadPoolExecutor ( max_workers = 16 ) as pool : for page in range ( 3 ): resp = requests . get ( f 'https://image.so.com/zjl?ch=beauty&sn= { page * 30 } ' ) if resp . status_code == 200 : pic_dict_list = resp . json ()[ 'list' ] for pic_dict in pic_dict_list : pool . submit ( download_picture , pic_dict [ 'qhimg_url' ]) if __name__ == '__main__' : main () \u6267\u884c\u5982\u4e0b\u6240\u793a\u7684\u547d\u4ee4\u3002 time python3 example05.py \u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a python3 example05.py 2.65s user 0.40s system 95% cpu 3.193 total \u5f02\u6b65I/O\u7248\u672c \u6211\u4eec\u4f7f\u7528 aiohttp \u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u4fee\u6539\u4e3a\u5f02\u6b65 I/O \u7684\u7248\u672c\u3002\u4e3a\u4e86\u4ee5\u5f02\u6b65 I/O \u7684\u65b9\u5f0f\u5b9e\u73b0\u7f51\u7edc\u8d44\u6e90\u7684\u83b7\u53d6\u548c\u5199\u6587\u4ef6\u64cd\u4f5c\uff0c\u6211\u4eec\u9996\u5148\u5f97\u5b89\u88c5\u4e09\u65b9\u5e93 aiohttp \u548c aiofile \uff0c\u547d\u4ee4\u5982\u4e0b\u6240\u793a\u3002 pip install aiohttp aiofile aiohttp \u7684\u7528\u6cd5\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\u5df2\u7ecf\u505a\u8fc7\u7b80\u8981\u4ecb\u7ecd\uff0c aiofile \u6a21\u5757\u4e2d\u7684 async_open \u51fd\u6570\u8ddf Python \u5185\u7f6e\u51fd\u6570 open \u7684\u7528\u6cd5\u5927\u81f4\u76f8\u540c\uff0c\u53ea\u4e0d\u8fc7\u5b83\u652f\u6301\u5f02\u6b65\u64cd\u4f5c\u3002\u4e0b\u9762\u662f\u5f02\u6b65 I/O \u7248\u672c\u7684\u722c\u866b\u4ee3\u7801\u3002 \"\"\" example06.py - \u5f02\u6b65I/O\u7248\u672c\u722c\u866b \"\"\" import asyncio import json import os import aiofile import aiohttp async def download_picture ( session , url ): filename = url [ url . rfind ( '/' ) + 1 :] async with session . get ( url , ssl = False ) as resp : if resp . status == 200 : data = await resp . read () async with aiofile . async_open ( f 'images/beauty/ { filename } ' , 'wb' ) as file : await file . write ( data ) async def fetch_json (): async with aiohttp . ClientSession () as session : for page in range ( 3 ): async with session . get ( url = f 'https://image.so.com/zjl?ch=beauty&sn= { page * 30 } ' , ssl = False ) as resp : if resp . status == 200 : json_str = await resp . text () result = json . loads ( json_str ) for pic_dict in result [ 'list' ]: await download_picture ( session , pic_dict [ 'qhimg_url' ]) def main (): if not os . path . exists ( 'images/beauty' ): os . makedirs ( 'images/beauty' ) loop = asyncio . get_event_loop () loop . run_until_complete ( fetch_json ()) loop . close () if __name__ == '__main__' : main () \u6267\u884c\u5982\u4e0b\u6240\u793a\u7684\u547d\u4ee4\u3002 time python3 example06.py \u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a python3 example06.py 0.82s user 0.21s system 27% cpu 3.782 total \u603b\u7ed3 \u901a\u8fc7\u4e0a\u9762\u4e09\u6bb5\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u7684\u6bd4\u8f83\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff0c\u4f7f\u7528\u591a\u7ebf\u7a0b\u548c\u5f02\u6b65 I/O \u90fd\u53ef\u4ee5\u6539\u5584\u722c\u866b\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u7528\u5c06\u65f6\u95f4\u6d6a\u8d39\u5728\u56e0 I/O \u64cd\u4f5c\u9020\u6210\u7684\u7b49\u5f85\u548c\u963b\u585e\u4e0a\uff0c\u800c time \u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c\u4e5f\u544a\u8bc9\u6211\u4eec\uff0c\u5355\u7ebf\u7a0b\u7684\u4ee3\u7801 CPU \u5229\u7528\u7387\u4ec5\u4ec5\u53ea\u6709 12% \uff0c\u800c\u591a\u7ebf\u7a0b\u7248\u672c\u7684 CPU \u5229\u7528\u7387\u5219\u9ad8\u8fbe 95% \uff1b\u5355\u7ebf\u7a0b\u7248\u672c\u7684\u722c\u866b\u6267\u884c\u65f6\u95f4\u7ea6 21 \u79d2\uff0c\u800c\u591a\u7ebf\u7a0b\u548c\u5f02\u6b65 I/O \u7684\u7248\u672c\u4ec5\u6267\u884c\u4e86 3 \u79d2\u949f\u3002\u53e6\u5916\uff0c\u5728\u8fd0\u884c\u65f6\u95f4\u5dee\u522b\u4e0d\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u591a\u7ebf\u7a0b\u7684\u4ee3\u7801\u6bd4\u5f02\u6b65 I/O \u7684\u4ee3\u7801\u8017\u8d39\u4e86\u66f4\u591a\u7684 CPU \u8d44\u6e90\uff0c\u8fd9\u662f\u56e0\u4e3a\u591a\u7ebf\u7a0b\u7684\u8c03\u5ea6\u548c\u5207\u6362\u4e5f\u9700\u8981\u82b1\u8d39 CPU \u65f6\u95f4\u3002\u81f3\u6b64\uff0c\u4e09\u79cd\u65b9\u5f0f\u5728 I/O \u5bc6\u96c6\u578b\u4efb\u52a1\u4e0a\u7684\u4f18\u52a3\u5df2\u7ecf\u4e00\u76ee\u4e86\u7136\uff0c\u5f53\u7136\u8fd9\u53ea\u662f\u5728\u6211\u7684\u7535\u8111\u4e0a\u8dd1\u51fa\u6765\u7684\u7ed3\u679c\u3002\u5982\u679c\u7f51\u7edc\u72b6\u51b5\u4e0d\u662f\u5f88\u7406\u60f3\u6216\u8005\u76ee\u6807\u7f51\u7ad9\u54cd\u5e94\u5f88\u6162\uff0c\u90a3\u4e48\u4f7f\u7528\u591a\u7ebf\u7a0b\u548c\u5f02\u6b65 I/O \u7684\u4f18\u52bf\u5c06\u66f4\u4e3a\u660e\u663e\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u8bd5\u9a8c\u3002","title":"\u7b2c37\u8bfe\uff1a\u5e76\u53d1\u7f16\u7a0b\u5728\u722c\u866b\u4e2d\u7684\u5e94\u7528"},{"location":"%E7%AC%AC37%E8%AF%BE%EF%BC%9A%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%9C%A8%E7%88%AC%E8%99%AB%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/#37","text":"\u4e4b\u524d\u7684\u8bfe\u7a0b\uff0c\u6211\u4eec\u5df2\u7ecf\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u4e86 Python \u4e2d\u7684\u591a\u7ebf\u7a0b\u3001\u591a\u8fdb\u7a0b\u548c\u5f02\u6b65\u7f16\u7a0b\uff0c\u901a\u8fc7\u8fd9\u4e09\u79cd\u624b\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u5e76\u53d1\u6216\u5e76\u884c\u7f16\u7a0b\uff0c\u8fd9\u4e00\u65b9\u9762\u53ef\u4ee5\u52a0\u901f\u4ee3\u7801\u7684\u6267\u884c\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u53ef\u4ee5\u5e26\u6765\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\u3002\u722c\u866b\u7a0b\u5e8f\u662f\u5178\u578b\u7684 I/O \u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u5bf9\u4e8e I/O \u5bc6\u96c6\u578b\u4efb\u52a1\u6765\u8bf4\uff0c\u591a\u7ebf\u7a0b\u548c\u5f02\u6b65 I/O \u90fd\u662f\u5f88\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5f53\u7a0b\u5e8f\u7684\u67d0\u4e2a\u90e8\u5206\u56e0 I/O \u64cd\u4f5c\u963b\u585e\u65f6\uff0c\u7a0b\u5e8f\u7684\u5176\u4ed6\u90e8\u5206\u4ecd\u7136\u53ef\u4ee5\u8fd0\u8f6c\uff0c\u8fd9\u6837\u6211\u4eec\u4e0d\u7528\u5728\u7b49\u5f85\u548c\u963b\u585e\u4e2d\u6d6a\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u3002\u4e0b\u9762\u6211\u4eec\u4ee5\u722c\u53d6\u201c 360\u56fe\u7247 \u201d\u7f51\u7ad9\u7684\u56fe\u7247\u5e76\u4fdd\u5b58\u5230\u672c\u5730\u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u5206\u522b\u5c55\u793a\u4f7f\u7528\u5355\u7ebf\u7a0b\u3001\u591a\u7ebf\u7a0b\u548c\u5f02\u6b65 I/O \u7f16\u7a0b\u7684\u722c\u866b\u7a0b\u5e8f\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u540c\u65f6\u4e5f\u5bf9\u5b83\u4eec\u7684\u6267\u884c\u6548\u7387\u8fdb\u884c\u7b80\u5355\u7684\u5bf9\u6bd4\u3002 \u201c360\u56fe\u7247\u201d\u7f51\u7ad9\u7684\u9875\u9762\u4f7f\u7528\u4e86 Ajax \u6280\u672f\uff0c\u8fd9\u662f\u5f88\u591a\u7f51\u7ad9\u90fd\u4f1a\u4f7f\u7528\u7684\u4e00\u79cd\u5f02\u6b65\u52a0\u8f7d\u6570\u636e\u548c\u5c40\u90e8\u5237\u65b0\u9875\u9762\u7684\u6280\u672f\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u9875\u9762\u4e0a\u7684\u56fe\u7247\u90fd\u662f\u901a\u8fc7 JavaScript \u4ee3\u7801\u5f02\u6b65\u83b7\u53d6 JSON \u6570\u636e\u5e76\u52a8\u6001\u6e32\u67d3\u751f\u6210\u7684\uff0c\u800c\u4e14\u6574\u4e2a\u9875\u9762\u8fd8\u4f7f\u7528\u4e86\u7011\u5e03\u5f0f\u52a0\u8f7d\uff08\u4e00\u8fb9\u5411\u4e0b\u6eda\u52a8\uff0c\u4e00\u8fb9\u52a0\u8f7d\u66f4\u591a\u7684\u56fe\u7247\uff09\u3002\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u7684\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\u4e2d\u53ef\u4ee5\u627e\u5230\u63d0\u4f9b\u52a8\u6001\u5185\u5bb9\u7684\u6570\u636e\u63a5\u53e3\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6211\u4eec\u9700\u8981\u7684\u56fe\u7247\u4fe1\u606f\u5c31\u5728\u670d\u52a1\u5668\u8fd4\u56de\u7684 JSON \u6570\u636e\u4e2d\u3002 \u4f8b\u5982\uff0c\u8981\u83b7\u53d6\u201c\u7f8e\u5973\u201d\u9891\u9053\u7684\u56fe\u7247\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf7\u6c42\u5982\u4e0b\u6240\u793a\u7684URL\uff0c\u5176\u4e2d\u53c2\u6570 ch \u8868\u793a\u8bf7\u6c42\u7684\u9891\u9053\uff0c = \u540e\u9762\u7684\u53c2\u6570\u503c beauty \u5c31\u4ee3\u8868\u4e86\u201c\u7f8e\u5973\u201d\u9891\u9053\uff0c\u53c2\u6570 sn \u76f8\u5f53\u4e8e\u662f\u9875\u7801\uff0c 0 \u8868\u793a\u7b2c\u4e00\u9875\uff08\u5171 30 \u5f20\u56fe\u7247\uff09\uff0c 30 \u8868\u793a\u7b2c\u4e8c\u9875\uff0c 60 \u8868\u793a\u7b2c\u4e09\u9875\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 https://image.so.com/zjl?ch=beauty&sn=0","title":"\u7b2c37\u8bfe\uff1a\u5e76\u53d1\u7f16\u7a0b\u5728\u722c\u866b\u4e2d\u7684\u5e94\u7528"},{"location":"%E7%AC%AC37%E8%AF%BE%EF%BC%9A%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%9C%A8%E7%88%AC%E8%99%AB%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/#_1","text":"\u901a\u8fc7\u4e0a\u9762\u7684 URL \u4e0b\u8f7d\u201c\u7f8e\u5973\u201d\u9891\u9053\u5171 90 \u5f20\u56fe\u7247\u3002 \"\"\" example04.py - \u5355\u7ebf\u7a0b\u7248\u672c\u722c\u866b \"\"\" import os import requests def download_picture ( url ): filename = url [ url . rfind ( '/' ) + 1 :] resp = requests . get ( url ) if resp . status_code == 200 : with open ( f 'images/beauty/ { filename } ' , 'wb' ) as file : file . write ( resp . content ) def main (): if not os . path . exists ( 'images/beauty' ): os . makedirs ( 'images/beauty' ) for page in range ( 3 ): resp = requests . get ( f 'https://image.so.com/zjl?ch=beauty&sn= { page * 30 } ' ) if resp . status_code == 200 : pic_dict_list = resp . json ()[ 'list' ] for pic_dict in pic_dict_list : download_picture ( pic_dict [ 'qhimg_url' ]) if __name__ == '__main__' : main () \u5728 macOS \u6216 Linux \u7cfb\u7edf\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 time \u547d\u4ee4\u6765\u4e86\u89e3\u4e0a\u9762\u4ee3\u7801\u7684\u6267\u884c\u65f6\u95f4\u4ee5\u53ca CPU \u7684\u5229\u7528\u7387\uff0c\u5982\u4e0b\u6240\u793a\u3002 time python3 example04.py \u4e0b\u9762\u662f\u5355\u7ebf\u7a0b\u722c\u866b\u4ee3\u7801\u5728\u6211\u7684\u7535\u8111\u4e0a\u6267\u884c\u7684\u7ed3\u679c\u3002 python3 example04.py 2.36s user 0.39s system 12% cpu 21.578 total \u8fd9\u91cc\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u4ee3\u7801\u7684\u603b\u8017\u65f6\u4e3a 21.578 \u79d2\uff0cCPU \u5229\u7528\u7387\u4e3a 12% \u3002","title":"\u5355\u7ebf\u7a0b\u7248\u672c"},{"location":"%E7%AC%AC37%E8%AF%BE%EF%BC%9A%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%9C%A8%E7%88%AC%E8%99%AB%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/#_2","text":"\u6211\u4eec\u4f7f\u7528\u4e4b\u524d\u8bb2\u5230\u8fc7\u7684\u7ebf\u7a0b\u6c60\u6280\u672f\uff0c\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u4fee\u6539\u4e3a\u591a\u7ebf\u7a0b\u7248\u672c\u3002 \"\"\" example05.py - \u591a\u7ebf\u7a0b\u7248\u672c\u722c\u866b \"\"\" import os from concurrent.futures import ThreadPoolExecutor import requests def download_picture ( url ): filename = url [ url . rfind ( '/' ) + 1 :] resp = requests . get ( url ) if resp . status_code == 200 : with open ( f 'images/beauty/ { filename } ' , 'wb' ) as file : file . write ( resp . content ) def main (): if not os . path . exists ( 'images/beauty' ): os . makedirs ( 'images/beauty' ) with ThreadPoolExecutor ( max_workers = 16 ) as pool : for page in range ( 3 ): resp = requests . get ( f 'https://image.so.com/zjl?ch=beauty&sn= { page * 30 } ' ) if resp . status_code == 200 : pic_dict_list = resp . json ()[ 'list' ] for pic_dict in pic_dict_list : pool . submit ( download_picture , pic_dict [ 'qhimg_url' ]) if __name__ == '__main__' : main () \u6267\u884c\u5982\u4e0b\u6240\u793a\u7684\u547d\u4ee4\u3002 time python3 example05.py \u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a python3 example05.py 2.65s user 0.40s system 95% cpu 3.193 total","title":"\u591a\u7ebf\u7a0b\u7248\u672c"},{"location":"%E7%AC%AC37%E8%AF%BE%EF%BC%9A%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%9C%A8%E7%88%AC%E8%99%AB%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/#io","text":"\u6211\u4eec\u4f7f\u7528 aiohttp \u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u4fee\u6539\u4e3a\u5f02\u6b65 I/O \u7684\u7248\u672c\u3002\u4e3a\u4e86\u4ee5\u5f02\u6b65 I/O \u7684\u65b9\u5f0f\u5b9e\u73b0\u7f51\u7edc\u8d44\u6e90\u7684\u83b7\u53d6\u548c\u5199\u6587\u4ef6\u64cd\u4f5c\uff0c\u6211\u4eec\u9996\u5148\u5f97\u5b89\u88c5\u4e09\u65b9\u5e93 aiohttp \u548c aiofile \uff0c\u547d\u4ee4\u5982\u4e0b\u6240\u793a\u3002 pip install aiohttp aiofile aiohttp \u7684\u7528\u6cd5\u5728\u4e4b\u524d\u7684\u8bfe\u7a0b\u4e2d\u5df2\u7ecf\u505a\u8fc7\u7b80\u8981\u4ecb\u7ecd\uff0c aiofile \u6a21\u5757\u4e2d\u7684 async_open \u51fd\u6570\u8ddf Python \u5185\u7f6e\u51fd\u6570 open \u7684\u7528\u6cd5\u5927\u81f4\u76f8\u540c\uff0c\u53ea\u4e0d\u8fc7\u5b83\u652f\u6301\u5f02\u6b65\u64cd\u4f5c\u3002\u4e0b\u9762\u662f\u5f02\u6b65 I/O \u7248\u672c\u7684\u722c\u866b\u4ee3\u7801\u3002 \"\"\" example06.py - \u5f02\u6b65I/O\u7248\u672c\u722c\u866b \"\"\" import asyncio import json import os import aiofile import aiohttp async def download_picture ( session , url ): filename = url [ url . rfind ( '/' ) + 1 :] async with session . get ( url , ssl = False ) as resp : if resp . status == 200 : data = await resp . read () async with aiofile . async_open ( f 'images/beauty/ { filename } ' , 'wb' ) as file : await file . write ( data ) async def fetch_json (): async with aiohttp . ClientSession () as session : for page in range ( 3 ): async with session . get ( url = f 'https://image.so.com/zjl?ch=beauty&sn= { page * 30 } ' , ssl = False ) as resp : if resp . status == 200 : json_str = await resp . text () result = json . loads ( json_str ) for pic_dict in result [ 'list' ]: await download_picture ( session , pic_dict [ 'qhimg_url' ]) def main (): if not os . path . exists ( 'images/beauty' ): os . makedirs ( 'images/beauty' ) loop = asyncio . get_event_loop () loop . run_until_complete ( fetch_json ()) loop . close () if __name__ == '__main__' : main () \u6267\u884c\u5982\u4e0b\u6240\u793a\u7684\u547d\u4ee4\u3002 time python3 example06.py \u4ee3\u7801\u7684\u6267\u884c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a python3 example06.py 0.82s user 0.21s system 27% cpu 3.782 total","title":"\u5f02\u6b65I/O\u7248\u672c"},{"location":"%E7%AC%AC37%E8%AF%BE%EF%BC%9A%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%9C%A8%E7%88%AC%E8%99%AB%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/#_3","text":"\u901a\u8fc7\u4e0a\u9762\u4e09\u6bb5\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u7684\u6bd4\u8f83\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff0c\u4f7f\u7528\u591a\u7ebf\u7a0b\u548c\u5f02\u6b65 I/O \u90fd\u53ef\u4ee5\u6539\u5584\u722c\u866b\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u7528\u5c06\u65f6\u95f4\u6d6a\u8d39\u5728\u56e0 I/O \u64cd\u4f5c\u9020\u6210\u7684\u7b49\u5f85\u548c\u963b\u585e\u4e0a\uff0c\u800c time \u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c\u4e5f\u544a\u8bc9\u6211\u4eec\uff0c\u5355\u7ebf\u7a0b\u7684\u4ee3\u7801 CPU \u5229\u7528\u7387\u4ec5\u4ec5\u53ea\u6709 12% \uff0c\u800c\u591a\u7ebf\u7a0b\u7248\u672c\u7684 CPU \u5229\u7528\u7387\u5219\u9ad8\u8fbe 95% \uff1b\u5355\u7ebf\u7a0b\u7248\u672c\u7684\u722c\u866b\u6267\u884c\u65f6\u95f4\u7ea6 21 \u79d2\uff0c\u800c\u591a\u7ebf\u7a0b\u548c\u5f02\u6b65 I/O \u7684\u7248\u672c\u4ec5\u6267\u884c\u4e86 3 \u79d2\u949f\u3002\u53e6\u5916\uff0c\u5728\u8fd0\u884c\u65f6\u95f4\u5dee\u522b\u4e0d\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u591a\u7ebf\u7a0b\u7684\u4ee3\u7801\u6bd4\u5f02\u6b65 I/O \u7684\u4ee3\u7801\u8017\u8d39\u4e86\u66f4\u591a\u7684 CPU \u8d44\u6e90\uff0c\u8fd9\u662f\u56e0\u4e3a\u591a\u7ebf\u7a0b\u7684\u8c03\u5ea6\u548c\u5207\u6362\u4e5f\u9700\u8981\u82b1\u8d39 CPU \u65f6\u95f4\u3002\u81f3\u6b64\uff0c\u4e09\u79cd\u65b9\u5f0f\u5728 I/O \u5bc6\u96c6\u578b\u4efb\u52a1\u4e0a\u7684\u4f18\u52a3\u5df2\u7ecf\u4e00\u76ee\u4e86\u7136\uff0c\u5f53\u7136\u8fd9\u53ea\u662f\u5728\u6211\u7684\u7535\u8111\u4e0a\u8dd1\u51fa\u6765\u7684\u7ed3\u679c\u3002\u5982\u679c\u7f51\u7edc\u72b6\u51b5\u4e0d\u662f\u5f88\u7406\u60f3\u6216\u8005\u76ee\u6807\u7f51\u7ad9\u54cd\u5e94\u5f88\u6162\uff0c\u90a3\u4e48\u4f7f\u7528\u591a\u7ebf\u7a0b\u548c\u5f02\u6b65 I/O \u7684\u4f18\u52bf\u5c06\u66f4\u4e3a\u660e\u663e\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u8bd5\u9a8c\u3002","title":"\u603b\u7ed3"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/","text":"\u7b2c38\u8bfe\uff1a\u6293\u53d6\u7f51\u9875\u52a8\u6001\u5185\u5bb9 \u6839\u636e\u6743\u5a01\u673a\u6784\u53d1\u5e03\u7684\u5168\u7403\u4e92\u8054\u7f51\u53ef\u8bbf\u95ee\u6027\u5ba1\u8ba1\u62a5\u544a\uff0c\u5168\u7403\u7ea6\u6709\u56db\u5206\u4e4b\u4e09\u7684\u7f51\u7ad9\u5176\u5185\u5bb9\u6216\u90e8\u5206\u5185\u5bb9\u662f\u901a\u8fc7JavaScript\u52a8\u6001\u751f\u6210\u7684\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u201c\u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801\u201d\u65f6\u65e0\u6cd5\u5728HTML\u4ee3\u7801\u4e2d\u627e\u5230\u8fd9\u4e9b\u5185\u5bb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4e4b\u524d\u7528\u7684\u6293\u53d6\u6570\u636e\u7684\u65b9\u5f0f\u65e0\u6cd5\u6b63\u5e38\u8fd0\u8f6c\u4e86\u3002\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\u57fa\u672c\u4e0a\u6709\u4e24\u79cd\u65b9\u6848\uff0c\u4e00\u662f\u83b7\u53d6\u63d0\u4f9b\u52a8\u6001\u5185\u5bb9\u7684\u6570\u636e\u63a5\u53e3\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e5f\u9002\u7528\u4e8e\u6293\u53d6\u624b\u673a App \u7684\u6570\u636e\uff1b\u53e6\u4e00\u79cd\u662f\u901a\u8fc7\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177 Selenium \u8fd0\u884c\u6d4f\u89c8\u5668\u83b7\u53d6\u6e32\u67d3\u540e\u7684\u52a8\u6001\u5185\u5bb9\u3002\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u65b9\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6d4f\u89c8\u5668\u7684\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\u6216\u8005\u66f4\u4e3a\u4e13\u4e1a\u7684\u6293\u5305\u5de5\u5177\uff08\u5982\uff1aCharles\u3001Fiddler\u3001Wireshark\u7b49\uff09\u6765\u83b7\u53d6\u5230\u6570\u636e\u63a5\u53e3\uff0c\u540e\u7eed\u7684\u64cd\u4f5c\u8ddf\u4e0a\u4e00\u4e2a\u7ae0\u8282\u4e2d\u8bb2\u89e3\u7684\u83b7\u53d6\u201c360\u56fe\u7247\u201d\u7f51\u7ad9\u7684\u6570\u636e\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u518d\u8fdb\u884c\u8d58\u8ff0\u3002\u8fd9\u4e00\u7ae0\u6211\u4eec\u91cd\u70b9\u8bb2\u89e3\u5982\u4f55\u4f7f\u7528\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177 Selenium \u6765\u83b7\u53d6\u7f51\u7ad9\u7684\u52a8\u6001\u5185\u5bb9\u3002 Selenium \u4ecb\u7ecd Selenium \u662f\u4e00\u4e2a\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\uff0c\u5229\u7528\u5b83\u53ef\u4ee5\u9a71\u52a8\u6d4f\u89c8\u5668\u6267\u884c\u7279\u5b9a\u7684\u884c\u4e3a\uff0c\u6700\u7ec8\u5e2e\u52a9\u722c\u866b\u5f00\u53d1\u8005\u83b7\u53d6\u5230\u7f51\u9875\u7684\u52a8\u6001\u5185\u5bb9\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u53ea\u8981\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u80fd\u591f\u770b\u5230\u7684\u5185\u5bb9\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528 Selenium \u83b7\u53d6\u5230\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u4f7f\u7528\u4e86 JavaScript \u52a8\u6001\u6e32\u67d3\u6280\u672f\u7684\u7f51\u7ad9\uff0cSelenium \u4f1a\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u9009\u62e9\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u8fd8\u662f\u4ee5 Chrome \u6d4f\u89c8\u5668\u4e3a\u4f8b\uff0c\u6765\u8bb2\u89e3 Selenium \u7684\u7528\u6cd5\uff0c\u5927\u5bb6\u9700\u8981\u5148\u5b89\u88c5 Chrome \u6d4f\u89c8\u5668\u5e76\u4e0b\u8f7d\u5b83\u7684\u9a71\u52a8\u3002Chrome \u6d4f\u89c8\u5668\u7684\u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u5728 ChromeDriver\u5b98\u7f51 \u8fdb\u884c\u4e0b\u8f7d\uff0c\u9a71\u52a8\u7684\u7248\u672c\u8981\u8ddf\u6d4f\u89c8\u5668\u7684\u7248\u672c\u5bf9\u5e94\uff0c\u5982\u679c\u6ca1\u6709\u5b8c\u5168\u5bf9\u5e94\u7684\u7248\u672c\uff0c\u5c31\u9009\u62e9\u7248\u672c\u4ee3\u53f7\u6700\u4e3a\u63a5\u8fd1\u7684\u7248\u672c\u3002 \u4f7f\u7528Selenium \u6211\u4eec\u53ef\u4ee5\u5148\u901a\u8fc7 pip \u6765\u5b89\u88c5 Selenium\uff0c\u547d\u4ee4\u5982\u4e0b\u6240\u793a\u3002 pip install selenium \u52a0\u8f7d\u9875\u9762 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u9a71\u52a8 Chrome \u6d4f\u89c8\u5668\u6253\u5f00\u767e\u5ea6\u3002 from selenium import webdriver # \u521b\u5efaChrome\u6d4f\u89c8\u5668\u5bf9\u8c61 browser = webdriver . Chrome () # \u52a0\u8f7d\u6307\u5b9a\u7684\u9875\u9762 browser . get ( 'https://www.baidu.com/' ) \u5982\u679c\u4e0d\u613f\u610f\u4f7f\u7528 Chrome \u6d4f\u89c8\u5668\uff0c\u4e5f\u53ef\u4ee5\u4fee\u6539\u4e0a\u9762\u7684\u4ee3\u7801\u64cd\u63a7\u5176\u4ed6\u6d4f\u89c8\u5668\uff0c\u53ea\u9700\u521b\u5efa\u5bf9\u5e94\u7684\u6d4f\u89c8\u5668\u5bf9\u8c61\uff08\u5982 Firefox\u3001Safari \u7b49\uff09\u5373\u53ef\u3002\u8fd0\u884c\u4e0a\u9762\u7684\u7a0b\u5e8f\uff0c\u5982\u679c\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u9519\u8bef\u63d0\u793a\uff0c\u90a3\u662f\u8bf4\u660e\u6211\u4eec\u8fd8\u6ca1\u6709\u5c06 Chrome \u6d4f\u89c8\u5668\u7684\u9a71\u52a8\u6dfb\u52a0\u5230 PATH \u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u4e5f\u6ca1\u6709\u5728\u7a0b\u5e8f\u4e2d\u6307\u5b9a Chrome \u6d4f\u89c8\u5668\u9a71\u52a8\u6240\u5728\u7684\u4f4d\u7f6e\u3002 selenium.common.exceptions.WebDriverException: Message: 'chromedriver' executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u529e\u6cd5\u6709\u4e09\u79cd\uff1a \u5c06\u4e0b\u8f7d\u7684 ChromeDriver \u653e\u5230\u5df2\u6709\u7684 PATH \u73af\u5883\u53d8\u91cf\u4e0b\uff0c\u5efa\u8bae\u76f4\u63a5\u8ddf Python \u89e3\u91ca\u5668\u653e\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\uff0c\u56e0\u4e3a\u4e4b\u524d\u5b89\u88c5 Python \u7684\u65f6\u5019\u6211\u4eec\u5df2\u7ecf\u5c06 Python \u89e3\u91ca\u5668\u7684\u8def\u5f84\u653e\u5230 PATH \u73af\u5883\u53d8\u91cf\u4e2d\u4e86\u3002 \u5c06 ChromeDriver \u653e\u5230\u9879\u76ee\u865a\u62df\u73af\u5883\u4e0b\u7684 bin \u6587\u4ef6\u5939\u4e2d\uff08Windows \u7cfb\u7edf\u5bf9\u5e94\u7684\u76ee\u5f55\u662f Scripts \uff09\uff0c\u8fd9\u6837 ChromeDriver \u5c31\u8ddf\u865a\u62df\u73af\u5883\u4e0b\u7684 Python \u89e3\u91ca\u5668\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u80af\u5b9a\u662f\u80fd\u591f\u627e\u5230\u7684\u3002 \u4fee\u6539\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5728\u521b\u5efa Chrome \u5bf9\u8c61\u65f6\uff0c\u901a\u8fc7 service \u53c2\u6570\u914d\u7f6e Service \u5bf9\u8c61\uff0c\u5e76\u901a\u8fc7\u521b\u5efa Service \u5bf9\u8c61\u7684 executable_path \u53c2\u6570\u6307\u5b9a ChromeDriver \u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\uff1a from selenium import webdriver from selenium.webdriver.chrome.service import Service browser = webdriver . Chrome ( service = Service ( executable_path = 'venv/bin/chromedriver' )) browser . get ( 'https://www.baidu.com/' ) \u67e5\u627e\u5143\u7d20\u548c\u6a21\u62df\u7528\u6237\u884c\u4e3a \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u6a21\u62df\u7528\u6237\u5728\u767e\u5ea6\u9996\u9875\u7684\u6587\u672c\u6846\u8f93\u5165\u641c\u7d22\u5173\u952e\u5b57\u5e76\u70b9\u51fb\u201c\u767e\u5ea6\u4e00\u4e0b\u201d\u6309\u94ae\u3002\u5728\u5b8c\u6210\u9875\u9762\u52a0\u8f7d\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 Chrome \u5bf9\u8c61\u7684 find_element \u548c find_elements \u65b9\u6cd5\u6765\u83b7\u53d6\u9875\u9762\u5143\u7d20\uff0cSelenium \u652f\u6301\u591a\u79cd\u83b7\u53d6\u5143\u7d20\u7684\u65b9\u5f0f\uff0c\u5305\u62ec\uff1aCSS \u9009\u62e9\u5668\u3001XPath\u3001\u5143\u7d20\u540d\u5b57\uff08\u6807\u7b7e\u540d\uff09\u3001\u5143\u7d20 ID\u3001\u7c7b\u540d\u7b49\uff0c\u524d\u8005\u53ef\u4ee5\u83b7\u53d6\u5355\u4e2a\u9875\u9762\u5143\u7d20\uff08 WebElement \u5bf9\u8c61\uff09\uff0c\u540e\u8005\u53ef\u4ee5\u83b7\u53d6\u591a\u4e2a\u9875\u9762\u5143\u7d20\u6784\u6210\u7684\u5217\u8868\u3002\u83b7\u53d6\u5230 WebElement \u5bf9\u8c61\u4ee5\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 send_keys \u6765\u6a21\u62df\u7528\u6237\u8f93\u5165\u884c\u4e3a\uff0c\u53ef\u4ee5\u901a\u8fc7 click \u6765\u6a21\u62df\u7528\u6237\u70b9\u51fb\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from selenium import webdriver from selenium.webdriver.common.by import By browser = webdriver . Chrome () browser . get ( 'https://www.baidu.com/' ) # \u901a\u8fc7\u5143\u7d20ID\u83b7\u53d6\u5143\u7d20 kw_input = browser . find_element ( By . ID , 'kw' ) # \u6a21\u62df\u7528\u6237\u8f93\u5165\u884c\u4e3a kw_input . send_keys ( 'Python' ) # \u901a\u8fc7CSS\u9009\u62e9\u5668\u83b7\u53d6\u5143\u7d20 su_button = browser . find_element ( By . CSS_SELECTOR , '#su' ) # \u6a21\u62df\u7528\u6237\u70b9\u51fb\u884c\u4e3a su_button . click () \u5982\u679c\u8981\u6267\u884c\u4e00\u4e2a\u7cfb\u5217\u52a8\u4f5c\uff0c\u4f8b\u5982\u6a21\u62df\u62d6\u62fd\u64cd\u4f5c\uff0c\u53ef\u4ee5\u521b\u5efa ActionChains \u5bf9\u8c61\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002 \u9690\u5f0f\u7b49\u5f85\u548c\u663e\u5f0f\u7b49\u5f85 \u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\u9700\u8981\u5927\u5bb6\u77e5\u9053\uff0c\u7f51\u9875\u4e0a\u7684\u5143\u7d20\u53ef\u80fd\u662f\u52a8\u6001\u751f\u6210\u7684\uff0c\u5728\u6211\u4eec\u4f7f\u7528 find_element \u6216 find_elements \u65b9\u6cd5\u83b7\u53d6\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u8fd8\u6ca1\u6709\u5b8c\u6210\u6e32\u67d3\uff0c\u8fd9\u65f6\u4f1a\u5f15\u53d1 NoSuchElementException \u9519\u8bef\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9690\u5f0f\u7b49\u5f85\u7684\u65b9\u5f0f\uff0c\u901a\u8fc7\u8bbe\u7f6e\u7b49\u5f85\u65f6\u95f4\u8ba9\u6d4f\u89c8\u5668\u5b8c\u6210\u5bf9\u9875\u9762\u5143\u7d20\u7684\u6e32\u67d3\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u663e\u793a\u7b49\u5f85\uff0c\u901a\u8fc7\u521b\u5efa WebDriverWait \u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u7b49\u5f85\u65f6\u95f4\u548c\u6761\u4ef6\uff0c\u5f53\u6761\u4ef6\u6ca1\u6709\u6ee1\u8db3\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u7b49\u5f85\u518d\u5c1d\u8bd5\u8fdb\u884c\u540e\u7eed\u7684\u64cd\u4f5c\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions from selenium.webdriver.support.wait import WebDriverWait browser = webdriver . Chrome () # \u8bbe\u7f6e\u6d4f\u89c8\u5668\u7a97\u53e3\u5927\u5c0f browser . set_window_size ( 1200 , 800 ) browser . get ( 'https://www.baidu.com/' ) # \u8bbe\u7f6e\u9690\u5f0f\u7b49\u5f85\u65f6\u95f4\u4e3a10\u79d2 browser . implicitly_wait ( 10 ) kw_input = browser . find_element ( By . ID , 'kw' ) kw_input . send_keys ( 'Python' ) su_button = browser . find_element ( By . CSS_SELECTOR , '#su' ) su_button . click () # \u521b\u5efa\u663e\u793a\u7b49\u5f85\u5bf9\u8c61 wait_obj = WebDriverWait ( browser , 10 ) # \u8bbe\u7f6e\u7b49\u5f85\u6761\u4ef6\uff08\u7b49\u641c\u7d22\u7ed3\u679c\u7684div\u51fa\u73b0\uff09 wait_obj . until ( expected_conditions . presence_of_element_located ( ( By . CSS_SELECTOR , '#content_left' ) ) ) # \u622a\u5c4f browser . get_screenshot_as_file ( 'python_result.png' ) \u4e0a\u9762\u8bbe\u7f6e\u7684\u7b49\u5f85\u6761\u4ef6 presence_of_element_located \u8868\u793a\u7b49\u5f85\u6307\u5b9a\u5143\u7d20\u51fa\u73b0\uff0c\u4e0b\u9762\u7684\u8868\u683c\u5217\u51fa\u4e86\u5e38\u7528\u7684\u7b49\u5f85\u6761\u4ef6\u53ca\u5176\u542b\u4e49\u3002 \u7b49\u5f85\u6761\u4ef6 \u5177\u4f53\u542b\u4e49 title_is / title_contains \u6807\u9898\u662f\u6307\u5b9a\u7684\u5185\u5bb9 / \u6807\u9898\u5305\u542b\u6307\u5b9a\u7684\u5185\u5bb9 visibility_of \u5143\u7d20\u53ef\u89c1 presence_of_element_located \u5b9a\u4f4d\u7684\u5143\u7d20\u52a0\u8f7d\u5b8c\u6210 visibility_of_element_located \u5b9a\u4f4d\u7684\u5143\u7d20\u53d8\u5f97\u53ef\u89c1 invisibility_of_element_located \u5b9a\u4f4d\u7684\u5143\u7d20\u53d8\u5f97\u4e0d\u53ef\u89c1 presence_of_all_elements_located \u5b9a\u4f4d\u7684\u6240\u6709\u5143\u7d20\u52a0\u8f7d\u5b8c\u6210 text_to_be_present_in_element \u5143\u7d20\u5305\u542b\u6307\u5b9a\u7684\u5185\u5bb9 text_to_be_present_in_element_value \u5143\u7d20\u7684 value \u5c5e\u6027\u5305\u542b\u6307\u5b9a\u7684\u5185\u5bb9 frame_to_be_available_and_switch_to_it \u8f7d\u5165\u5e76\u5207\u6362\u5230\u6307\u5b9a\u7684\u5185\u90e8\u7a97\u53e3 element_to_be_clickable \u5143\u7d20\u53ef\u70b9\u51fb element_to_be_selected \u5143\u7d20\u88ab\u9009\u4e2d element_located_to_be_selected \u5b9a\u4f4d\u7684\u5143\u7d20\u88ab\u9009\u4e2d alert_is_present \u51fa\u73b0 Alert \u5f39\u7a97 \u6267\u884cJavaScript\u4ee3\u7801 \u5bf9\u4e8e\u4f7f\u7528\u7011\u5e03\u5f0f\u52a0\u8f7d\u7684\u9875\u9762\uff0c\u5982\u679c\u5e0c\u671b\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u52a0\u8f7d\u66f4\u591a\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u901a\u8fc7\u6d4f\u89c8\u5668\u5bf9\u8c61\u7684 execute_scripts \u65b9\u6cd5\u6267\u884c JavaScript \u4ee3\u7801\u6765\u5b9e\u73b0\u3002\u5bf9\u4e8e\u4e00\u4e9b\u9ad8\u7ea7\u7684\u722c\u53d6\u64cd\u4f5c\uff0c\u4e5f\u5f88\u6709\u53ef\u80fd\u4f1a\u7528\u5230\u7c7b\u4f3c\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u4f60\u7684\u722c\u866b\u4ee3\u7801\u9700\u8981 JavaScript \u7684\u652f\u6301\uff0c\u5efa\u8bae\u5148\u5bf9 JavaScript \u8fdb\u884c\u9002\u5f53\u7684\u4e86\u89e3\uff0c\u5c24\u5176\u662f JavaScript \u4e2d\u7684 BOM \u548c DOM \u64cd\u4f5c\u3002\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u622a\u5c4f\u4e4b\u524d\u52a0\u5165\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5229\u7528 JavaScript \u5c06\u7f51\u9875\u6eda\u5230\u6700\u4e0b\u65b9\u3002 # \u6267\u884cJavaScript\u4ee3\u7801 browser . execute_script ( 'document.documentElement.scrollTop = document.documentElement.scrollHeight' ) Selenium\u53cd\u722c\u7684\u7834\u89e3 \u6709\u4e00\u4e9b\u7f51\u7ad9\u4e13\u95e8\u9488\u5bf9 Selenium \u8bbe\u7f6e\u4e86\u53cd\u722c\u63aa\u65bd\uff0c\u56e0\u4e3a\u4f7f\u7528 Selenium \u9a71\u52a8\u7684\u6d4f\u89c8\u5668\uff0c\u5728\u63a7\u5236\u53f0\u4e2d\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684 webdriver \u5c5e\u6027\u503c\u4e3a true \uff0c\u5982\u679c\u8981\u7ed5\u8fc7\u8fd9\u9879\u68c0\u67e5\uff0c\u53ef\u4ee5\u5728\u52a0\u8f7d\u9875\u9762\u4e4b\u524d\uff0c\u5148\u901a\u8fc7\u6267\u884c JavaScript \u4ee3\u7801\u5c06\u5176\u4fee\u6539\u4e3a undefined \u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u6d4f\u89c8\u5668\u7a97\u53e3\u4e0a\u7684\u201cChrome\u6b63\u53d7\u5230\u81ea\u52a8\u6d4b\u8bd5\u8f6f\u4ef6\u7684\u63a7\u5236\u201d\u9690\u85cf\u6389\uff0c\u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 # \u521b\u5efaChrome\u53c2\u6570\u5bf9\u8c61 options = webdriver . ChromeOptions () # \u6dfb\u52a0\u8bd5\u9a8c\u6027\u53c2\u6570 options . add_experimental_option ( 'excludeSwitches' , [ 'enable-automation' ]) options . add_experimental_option ( 'useAutomationExtension' , False ) # \u521b\u5efaChrome\u6d4f\u89c8\u5668\u5bf9\u8c61\u5e76\u4f20\u5165\u53c2\u6570 browser = webdriver . Chrome ( options = options ) # \u6267\u884cChrome\u5f00\u53d1\u8005\u534f\u8bae\u547d\u4ee4\uff08\u5728\u52a0\u8f7d\u9875\u9762\u65f6\u6267\u884c\u6307\u5b9a\u7684JavaScript\u4ee3\u7801\uff09 browser . execute_cdp_cmd ( 'Page.addScriptToEvaluateOnNewDocument' , { 'source' : 'Object.defineProperty(navigator, \"webdriver\", {get: () => undefined})' } ) browser . set_window_size ( 1200 , 800 ) browser . get ( 'https://www.baidu.com/' ) \u65e0\u5934\u6d4f\u89c8\u5668 \u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u5728\u722c\u53d6\u6570\u636e\u65f6\u5e76\u4e0d\u9700\u8981\u770b\u5230\u6d4f\u89c8\u5668\u7a97\u53e3\uff0c\u53ea\u8981\u6709 Chrome \u6d4f\u89c8\u5668\u4ee5\u53ca\u5bf9\u5e94\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6211\u4eec\u7684\u722c\u866b\u5c31\u80fd\u591f\u8fd0\u8f6c\u8d77\u6765\u3002\u5982\u679c\u4e0d\u60f3\u770b\u5230\u6d4f\u89c8\u5668\u7a97\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u8bbe\u7f6e\u4f7f\u7528\u65e0\u5934\u6d4f\u89c8\u5668\u3002 options = webdriver . ChromeOptions () options . add_argument ( '--headless' ) browser = webdriver . Chrome ( options = options ) API\u53c2\u8003 Selenium \u76f8\u5173\u7684\u77e5\u8bc6\u8fd8\u6709\u5f88\u591a\uff0c\u6211\u4eec\u5728\u6b64\u5c31\u4e0d\u4e00\u4e00\u8d58\u8ff0\u4e86\uff0c\u4e0b\u9762\u4e3a\u5927\u5bb6\u7f57\u5217\u4e00\u4e9b\u6d4f\u89c8\u5668\u5bf9\u8c61\u548c WebElement \u5bf9\u8c61\u5e38\u7528\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u5177\u4f53\u7684\u5185\u5bb9\u5927\u5bb6\u8fd8\u53ef\u4ee5\u53c2\u8003 Selenium \u5b98\u65b9\u6587\u6863\u7684\u4e2d\u6587\u7ffb\u8bd1 \u3002 \u6d4f\u89c8\u5668\u5bf9\u8c61 \u88681. \u5e38\u7528\u5c5e\u6027 \u5c5e\u6027\u540d \u63cf\u8ff0 current_url \u5f53\u524d\u9875\u9762\u7684URL current_window_handle \u5f53\u524d\u7a97\u53e3\u7684\u53e5\u67c4\uff08\u5f15\u7528\uff09 name \u6d4f\u89c8\u5668\u7684\u540d\u79f0 orientation \u5f53\u524d\u8bbe\u5907\u7684\u65b9\u5411\uff08\u6a2a\u5c4f\u3001\u7ad6\u5c4f\uff09 page_source \u5f53\u524d\u9875\u9762\u7684\u6e90\u4ee3\u7801\uff08\u5305\u62ec\u52a8\u6001\u5185\u5bb9\uff09 title \u5f53\u524d\u9875\u9762\u7684\u6807\u9898 window_handles \u6d4f\u89c8\u5668\u6253\u5f00\u7684\u6240\u6709\u7a97\u53e3\u7684\u53e5\u67c4 \u88682. \u5e38\u7528\u65b9\u6cd5 \u65b9\u6cd5\u540d \u63cf\u8ff0 back / forward \u5728\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u4e2d\u540e\u9000/\u524d\u8fdb close / quit \u5173\u95ed\u5f53\u524d\u6d4f\u89c8\u5668\u7a97\u53e3 / \u9000\u51fa\u6d4f\u89c8\u5668\u5b9e\u4f8b get \u52a0\u8f7d\u6307\u5b9a URL \u7684\u9875\u9762\u5230\u6d4f\u89c8\u5668\u4e2d maximize_window \u5c06\u6d4f\u89c8\u5668\u7a97\u53e3\u6700\u5927\u5316 refresh \u5237\u65b0\u5f53\u524d\u9875\u9762 set_page_load_timeout \u8bbe\u7f6e\u9875\u9762\u52a0\u8f7d\u8d85\u65f6\u65f6\u95f4 set_script_timeout \u8bbe\u7f6e JavaScript \u6267\u884c\u8d85\u65f6\u65f6\u95f4 implicit_wait \u8bbe\u7f6e\u7b49\u5f85\u5143\u7d20\u88ab\u627e\u5230\u6216\u76ee\u6807\u6307\u4ee4\u5b8c\u6210 get_cookie / get_cookies \u83b7\u53d6\u6307\u5b9a\u7684Cookie / \u83b7\u53d6\u6240\u6709Cookie add_cookie \u6dfb\u52a0 Cookie \u4fe1\u606f delete_cookie / delete_all_cookies \u5220\u9664\u6307\u5b9a\u7684 Cookie / \u5220\u9664\u6240\u6709 Cookie find_element / find_elements \u67e5\u627e\u5355\u4e2a\u5143\u7d20 / \u67e5\u627e\u4e00\u7cfb\u5217\u5143\u7d20 WebElement\u5bf9\u8c61 \u88681. WebElement\u5e38\u7528\u5c5e\u6027 \u5c5e\u6027\u540d \u63cf\u8ff0 location \u5143\u7d20\u7684\u4f4d\u7f6e size \u5143\u7d20\u7684\u5c3a\u5bf8 text \u5143\u7d20\u7684\u6587\u672c\u5185\u5bb9 id \u5143\u7d20\u7684 ID tag_name \u5143\u7d20\u7684\u6807\u7b7e\u540d \u88682. \u5e38\u7528\u65b9\u6cd5 \u65b9\u6cd5\u540d \u63cf\u8ff0 clear \u6e05\u7a7a\u6587\u672c\u6846\u6216\u6587\u672c\u57df\u4e2d\u7684\u5185\u5bb9 click \u70b9\u51fb\u5143\u7d20 get_attribute \u83b7\u53d6\u5143\u7d20\u7684\u5c5e\u6027\u503c is_displayed \u5224\u65ad\u5143\u7d20\u5bf9\u4e8e\u7528\u6237\u662f\u5426\u53ef\u89c1 is_enabled \u5224\u65ad\u5143\u7d20\u662f\u5426\u5904\u4e8e\u53ef\u7528\u72b6\u6001 is_selected \u5224\u65ad\u5143\u7d20\uff08\u5355\u9009\u6846\u548c\u590d\u9009\u6846\uff09\u662f\u5426\u88ab\u9009\u4e2d send_keys \u6a21\u62df\u8f93\u5165\u6587\u672c submit \u63d0\u4ea4\u8868\u5355 value_of_css_property \u83b7\u53d6\u6307\u5b9a\u7684CSS\u5c5e\u6027\u503c find_element / find_elements \u83b7\u53d6\u5355\u4e2a\u5b50\u5143\u7d20 / \u83b7\u53d6\u4e00\u7cfb\u5217\u5b50\u5143\u7d20 screenshot \u4e3a\u5143\u7d20\u751f\u6210\u5feb\u7167 \u7b80\u5355\u6848\u4f8b \u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 Selenium \u4ece\u201c360\u56fe\u7247\u201d\u7f51\u7ad9\u641c\u7d22\u548c\u4e0b\u8f7d\u56fe\u7247\u3002 import os import time from concurrent.futures import ThreadPoolExecutor import requests from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys DOWNLOAD_PATH = 'images/' def download_picture ( picture_url : str ): \"\"\" \u4e0b\u8f7d\u4fdd\u5b58\u56fe\u7247 :param picture_url: \u56fe\u7247\u7684URL \"\"\" filename = picture_url [ picture_url . rfind ( '/' ) + 1 :] resp = requests . get ( picture_url ) with open ( os . path . join ( DOWNLOAD_PATH , filename ), 'wb' ) as file : file . write ( resp . content ) if not os . path . exists ( DOWNLOAD_PATH ): os . makedirs ( DOWNLOAD_PATH ) browser = webdriver . Chrome () browser . get ( 'https://image.so.com/z?ch=beauty' ) browser . implicitly_wait ( 10 ) kw_input = browser . find_element ( By . CSS_SELECTOR , 'input[name=q]' ) kw_input . send_keys ( '\u82cd\u8001\u5e08' ) kw_input . send_keys ( Keys . ENTER ) for _ in range ( 10 ): browser . execute_script ( 'document.documentElement.scrollTop = document.documentElement.scrollHeight' ) time . sleep ( 1 ) imgs = browser . find_elements ( By . CSS_SELECTOR , 'div.waterfall img' ) with ThreadPoolExecutor ( max_workers = 32 ) as pool : for img in imgs : pic_url = img . get_attribute ( 'src' ) pool . submit ( download_picture , pic_url ) \u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u68c0\u67e5\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u662f\u5426\u4e0b\u8f7d\u4e86\u6839\u636e\u5173\u952e\u8bcd\u641c\u7d22\u5230\u7684\u56fe\u7247\u3002","title":"\u7b2c38\u8bfe\uff1a\u6293\u53d6\u7f51\u9875\u52a8\u6001\u5185\u5bb9"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/#38","text":"\u6839\u636e\u6743\u5a01\u673a\u6784\u53d1\u5e03\u7684\u5168\u7403\u4e92\u8054\u7f51\u53ef\u8bbf\u95ee\u6027\u5ba1\u8ba1\u62a5\u544a\uff0c\u5168\u7403\u7ea6\u6709\u56db\u5206\u4e4b\u4e09\u7684\u7f51\u7ad9\u5176\u5185\u5bb9\u6216\u90e8\u5206\u5185\u5bb9\u662f\u901a\u8fc7JavaScript\u52a8\u6001\u751f\u6210\u7684\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u201c\u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801\u201d\u65f6\u65e0\u6cd5\u5728HTML\u4ee3\u7801\u4e2d\u627e\u5230\u8fd9\u4e9b\u5185\u5bb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4e4b\u524d\u7528\u7684\u6293\u53d6\u6570\u636e\u7684\u65b9\u5f0f\u65e0\u6cd5\u6b63\u5e38\u8fd0\u8f6c\u4e86\u3002\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\u57fa\u672c\u4e0a\u6709\u4e24\u79cd\u65b9\u6848\uff0c\u4e00\u662f\u83b7\u53d6\u63d0\u4f9b\u52a8\u6001\u5185\u5bb9\u7684\u6570\u636e\u63a5\u53e3\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e5f\u9002\u7528\u4e8e\u6293\u53d6\u624b\u673a App \u7684\u6570\u636e\uff1b\u53e6\u4e00\u79cd\u662f\u901a\u8fc7\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177 Selenium \u8fd0\u884c\u6d4f\u89c8\u5668\u83b7\u53d6\u6e32\u67d3\u540e\u7684\u52a8\u6001\u5185\u5bb9\u3002\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u65b9\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6d4f\u89c8\u5668\u7684\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\u6216\u8005\u66f4\u4e3a\u4e13\u4e1a\u7684\u6293\u5305\u5de5\u5177\uff08\u5982\uff1aCharles\u3001Fiddler\u3001Wireshark\u7b49\uff09\u6765\u83b7\u53d6\u5230\u6570\u636e\u63a5\u53e3\uff0c\u540e\u7eed\u7684\u64cd\u4f5c\u8ddf\u4e0a\u4e00\u4e2a\u7ae0\u8282\u4e2d\u8bb2\u89e3\u7684\u83b7\u53d6\u201c360\u56fe\u7247\u201d\u7f51\u7ad9\u7684\u6570\u636e\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u518d\u8fdb\u884c\u8d58\u8ff0\u3002\u8fd9\u4e00\u7ae0\u6211\u4eec\u91cd\u70b9\u8bb2\u89e3\u5982\u4f55\u4f7f\u7528\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177 Selenium \u6765\u83b7\u53d6\u7f51\u7ad9\u7684\u52a8\u6001\u5185\u5bb9\u3002","title":"\u7b2c38\u8bfe\uff1a\u6293\u53d6\u7f51\u9875\u52a8\u6001\u5185\u5bb9"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/#selenium","text":"Selenium \u662f\u4e00\u4e2a\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\uff0c\u5229\u7528\u5b83\u53ef\u4ee5\u9a71\u52a8\u6d4f\u89c8\u5668\u6267\u884c\u7279\u5b9a\u7684\u884c\u4e3a\uff0c\u6700\u7ec8\u5e2e\u52a9\u722c\u866b\u5f00\u53d1\u8005\u83b7\u53d6\u5230\u7f51\u9875\u7684\u52a8\u6001\u5185\u5bb9\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u53ea\u8981\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u80fd\u591f\u770b\u5230\u7684\u5185\u5bb9\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528 Selenium \u83b7\u53d6\u5230\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u4f7f\u7528\u4e86 JavaScript \u52a8\u6001\u6e32\u67d3\u6280\u672f\u7684\u7f51\u7ad9\uff0cSelenium \u4f1a\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u9009\u62e9\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u8fd8\u662f\u4ee5 Chrome \u6d4f\u89c8\u5668\u4e3a\u4f8b\uff0c\u6765\u8bb2\u89e3 Selenium \u7684\u7528\u6cd5\uff0c\u5927\u5bb6\u9700\u8981\u5148\u5b89\u88c5 Chrome \u6d4f\u89c8\u5668\u5e76\u4e0b\u8f7d\u5b83\u7684\u9a71\u52a8\u3002Chrome \u6d4f\u89c8\u5668\u7684\u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u5728 ChromeDriver\u5b98\u7f51 \u8fdb\u884c\u4e0b\u8f7d\uff0c\u9a71\u52a8\u7684\u7248\u672c\u8981\u8ddf\u6d4f\u89c8\u5668\u7684\u7248\u672c\u5bf9\u5e94\uff0c\u5982\u679c\u6ca1\u6709\u5b8c\u5168\u5bf9\u5e94\u7684\u7248\u672c\uff0c\u5c31\u9009\u62e9\u7248\u672c\u4ee3\u53f7\u6700\u4e3a\u63a5\u8fd1\u7684\u7248\u672c\u3002","title":"Selenium \u4ecb\u7ecd"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/#selenium_1","text":"\u6211\u4eec\u53ef\u4ee5\u5148\u901a\u8fc7 pip \u6765\u5b89\u88c5 Selenium\uff0c\u547d\u4ee4\u5982\u4e0b\u6240\u793a\u3002 pip install selenium","title":"\u4f7f\u7528Selenium"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/#_1","text":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u9a71\u52a8 Chrome \u6d4f\u89c8\u5668\u6253\u5f00\u767e\u5ea6\u3002 from selenium import webdriver # \u521b\u5efaChrome\u6d4f\u89c8\u5668\u5bf9\u8c61 browser = webdriver . Chrome () # \u52a0\u8f7d\u6307\u5b9a\u7684\u9875\u9762 browser . get ( 'https://www.baidu.com/' ) \u5982\u679c\u4e0d\u613f\u610f\u4f7f\u7528 Chrome \u6d4f\u89c8\u5668\uff0c\u4e5f\u53ef\u4ee5\u4fee\u6539\u4e0a\u9762\u7684\u4ee3\u7801\u64cd\u63a7\u5176\u4ed6\u6d4f\u89c8\u5668\uff0c\u53ea\u9700\u521b\u5efa\u5bf9\u5e94\u7684\u6d4f\u89c8\u5668\u5bf9\u8c61\uff08\u5982 Firefox\u3001Safari \u7b49\uff09\u5373\u53ef\u3002\u8fd0\u884c\u4e0a\u9762\u7684\u7a0b\u5e8f\uff0c\u5982\u679c\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u9519\u8bef\u63d0\u793a\uff0c\u90a3\u662f\u8bf4\u660e\u6211\u4eec\u8fd8\u6ca1\u6709\u5c06 Chrome \u6d4f\u89c8\u5668\u7684\u9a71\u52a8\u6dfb\u52a0\u5230 PATH \u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u4e5f\u6ca1\u6709\u5728\u7a0b\u5e8f\u4e2d\u6307\u5b9a Chrome \u6d4f\u89c8\u5668\u9a71\u52a8\u6240\u5728\u7684\u4f4d\u7f6e\u3002 selenium.common.exceptions.WebDriverException: Message: 'chromedriver' executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home \u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u529e\u6cd5\u6709\u4e09\u79cd\uff1a \u5c06\u4e0b\u8f7d\u7684 ChromeDriver \u653e\u5230\u5df2\u6709\u7684 PATH \u73af\u5883\u53d8\u91cf\u4e0b\uff0c\u5efa\u8bae\u76f4\u63a5\u8ddf Python \u89e3\u91ca\u5668\u653e\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\uff0c\u56e0\u4e3a\u4e4b\u524d\u5b89\u88c5 Python \u7684\u65f6\u5019\u6211\u4eec\u5df2\u7ecf\u5c06 Python \u89e3\u91ca\u5668\u7684\u8def\u5f84\u653e\u5230 PATH \u73af\u5883\u53d8\u91cf\u4e2d\u4e86\u3002 \u5c06 ChromeDriver \u653e\u5230\u9879\u76ee\u865a\u62df\u73af\u5883\u4e0b\u7684 bin \u6587\u4ef6\u5939\u4e2d\uff08Windows \u7cfb\u7edf\u5bf9\u5e94\u7684\u76ee\u5f55\u662f Scripts \uff09\uff0c\u8fd9\u6837 ChromeDriver \u5c31\u8ddf\u865a\u62df\u73af\u5883\u4e0b\u7684 Python \u89e3\u91ca\u5668\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u80af\u5b9a\u662f\u80fd\u591f\u627e\u5230\u7684\u3002 \u4fee\u6539\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5728\u521b\u5efa Chrome \u5bf9\u8c61\u65f6\uff0c\u901a\u8fc7 service \u53c2\u6570\u914d\u7f6e Service \u5bf9\u8c61\uff0c\u5e76\u901a\u8fc7\u521b\u5efa Service \u5bf9\u8c61\u7684 executable_path \u53c2\u6570\u6307\u5b9a ChromeDriver \u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\uff1a from selenium import webdriver from selenium.webdriver.chrome.service import Service browser = webdriver . Chrome ( service = Service ( executable_path = 'venv/bin/chromedriver' )) browser . get ( 'https://www.baidu.com/' )","title":"\u52a0\u8f7d\u9875\u9762"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/#_2","text":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u6a21\u62df\u7528\u6237\u5728\u767e\u5ea6\u9996\u9875\u7684\u6587\u672c\u6846\u8f93\u5165\u641c\u7d22\u5173\u952e\u5b57\u5e76\u70b9\u51fb\u201c\u767e\u5ea6\u4e00\u4e0b\u201d\u6309\u94ae\u3002\u5728\u5b8c\u6210\u9875\u9762\u52a0\u8f7d\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 Chrome \u5bf9\u8c61\u7684 find_element \u548c find_elements \u65b9\u6cd5\u6765\u83b7\u53d6\u9875\u9762\u5143\u7d20\uff0cSelenium \u652f\u6301\u591a\u79cd\u83b7\u53d6\u5143\u7d20\u7684\u65b9\u5f0f\uff0c\u5305\u62ec\uff1aCSS \u9009\u62e9\u5668\u3001XPath\u3001\u5143\u7d20\u540d\u5b57\uff08\u6807\u7b7e\u540d\uff09\u3001\u5143\u7d20 ID\u3001\u7c7b\u540d\u7b49\uff0c\u524d\u8005\u53ef\u4ee5\u83b7\u53d6\u5355\u4e2a\u9875\u9762\u5143\u7d20\uff08 WebElement \u5bf9\u8c61\uff09\uff0c\u540e\u8005\u53ef\u4ee5\u83b7\u53d6\u591a\u4e2a\u9875\u9762\u5143\u7d20\u6784\u6210\u7684\u5217\u8868\u3002\u83b7\u53d6\u5230 WebElement \u5bf9\u8c61\u4ee5\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7 send_keys \u6765\u6a21\u62df\u7528\u6237\u8f93\u5165\u884c\u4e3a\uff0c\u53ef\u4ee5\u901a\u8fc7 click \u6765\u6a21\u62df\u7528\u6237\u70b9\u51fb\u64cd\u4f5c\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from selenium import webdriver from selenium.webdriver.common.by import By browser = webdriver . Chrome () browser . get ( 'https://www.baidu.com/' ) # \u901a\u8fc7\u5143\u7d20ID\u83b7\u53d6\u5143\u7d20 kw_input = browser . find_element ( By . ID , 'kw' ) # \u6a21\u62df\u7528\u6237\u8f93\u5165\u884c\u4e3a kw_input . send_keys ( 'Python' ) # \u901a\u8fc7CSS\u9009\u62e9\u5668\u83b7\u53d6\u5143\u7d20 su_button = browser . find_element ( By . CSS_SELECTOR , '#su' ) # \u6a21\u62df\u7528\u6237\u70b9\u51fb\u884c\u4e3a su_button . click () \u5982\u679c\u8981\u6267\u884c\u4e00\u4e2a\u7cfb\u5217\u52a8\u4f5c\uff0c\u4f8b\u5982\u6a21\u62df\u62d6\u62fd\u64cd\u4f5c\uff0c\u53ef\u4ee5\u521b\u5efa ActionChains \u5bf9\u8c61\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002","title":"\u67e5\u627e\u5143\u7d20\u548c\u6a21\u62df\u7528\u6237\u884c\u4e3a"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/#_3","text":"\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\u9700\u8981\u5927\u5bb6\u77e5\u9053\uff0c\u7f51\u9875\u4e0a\u7684\u5143\u7d20\u53ef\u80fd\u662f\u52a8\u6001\u751f\u6210\u7684\uff0c\u5728\u6211\u4eec\u4f7f\u7528 find_element \u6216 find_elements \u65b9\u6cd5\u83b7\u53d6\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u8fd8\u6ca1\u6709\u5b8c\u6210\u6e32\u67d3\uff0c\u8fd9\u65f6\u4f1a\u5f15\u53d1 NoSuchElementException \u9519\u8bef\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u9690\u5f0f\u7b49\u5f85\u7684\u65b9\u5f0f\uff0c\u901a\u8fc7\u8bbe\u7f6e\u7b49\u5f85\u65f6\u95f4\u8ba9\u6d4f\u89c8\u5668\u5b8c\u6210\u5bf9\u9875\u9762\u5143\u7d20\u7684\u6e32\u67d3\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u663e\u793a\u7b49\u5f85\uff0c\u901a\u8fc7\u521b\u5efa WebDriverWait \u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u7b49\u5f85\u65f6\u95f4\u548c\u6761\u4ef6\uff0c\u5f53\u6761\u4ef6\u6ca1\u6709\u6ee1\u8db3\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u7b49\u5f85\u518d\u5c1d\u8bd5\u8fdb\u884c\u540e\u7eed\u7684\u64cd\u4f5c\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions from selenium.webdriver.support.wait import WebDriverWait browser = webdriver . Chrome () # \u8bbe\u7f6e\u6d4f\u89c8\u5668\u7a97\u53e3\u5927\u5c0f browser . set_window_size ( 1200 , 800 ) browser . get ( 'https://www.baidu.com/' ) # \u8bbe\u7f6e\u9690\u5f0f\u7b49\u5f85\u65f6\u95f4\u4e3a10\u79d2 browser . implicitly_wait ( 10 ) kw_input = browser . find_element ( By . ID , 'kw' ) kw_input . send_keys ( 'Python' ) su_button = browser . find_element ( By . CSS_SELECTOR , '#su' ) su_button . click () # \u521b\u5efa\u663e\u793a\u7b49\u5f85\u5bf9\u8c61 wait_obj = WebDriverWait ( browser , 10 ) # \u8bbe\u7f6e\u7b49\u5f85\u6761\u4ef6\uff08\u7b49\u641c\u7d22\u7ed3\u679c\u7684div\u51fa\u73b0\uff09 wait_obj . until ( expected_conditions . presence_of_element_located ( ( By . CSS_SELECTOR , '#content_left' ) ) ) # \u622a\u5c4f browser . get_screenshot_as_file ( 'python_result.png' ) \u4e0a\u9762\u8bbe\u7f6e\u7684\u7b49\u5f85\u6761\u4ef6 presence_of_element_located \u8868\u793a\u7b49\u5f85\u6307\u5b9a\u5143\u7d20\u51fa\u73b0\uff0c\u4e0b\u9762\u7684\u8868\u683c\u5217\u51fa\u4e86\u5e38\u7528\u7684\u7b49\u5f85\u6761\u4ef6\u53ca\u5176\u542b\u4e49\u3002 \u7b49\u5f85\u6761\u4ef6 \u5177\u4f53\u542b\u4e49 title_is / title_contains \u6807\u9898\u662f\u6307\u5b9a\u7684\u5185\u5bb9 / \u6807\u9898\u5305\u542b\u6307\u5b9a\u7684\u5185\u5bb9 visibility_of \u5143\u7d20\u53ef\u89c1 presence_of_element_located \u5b9a\u4f4d\u7684\u5143\u7d20\u52a0\u8f7d\u5b8c\u6210 visibility_of_element_located \u5b9a\u4f4d\u7684\u5143\u7d20\u53d8\u5f97\u53ef\u89c1 invisibility_of_element_located \u5b9a\u4f4d\u7684\u5143\u7d20\u53d8\u5f97\u4e0d\u53ef\u89c1 presence_of_all_elements_located \u5b9a\u4f4d\u7684\u6240\u6709\u5143\u7d20\u52a0\u8f7d\u5b8c\u6210 text_to_be_present_in_element \u5143\u7d20\u5305\u542b\u6307\u5b9a\u7684\u5185\u5bb9 text_to_be_present_in_element_value \u5143\u7d20\u7684 value \u5c5e\u6027\u5305\u542b\u6307\u5b9a\u7684\u5185\u5bb9 frame_to_be_available_and_switch_to_it \u8f7d\u5165\u5e76\u5207\u6362\u5230\u6307\u5b9a\u7684\u5185\u90e8\u7a97\u53e3 element_to_be_clickable \u5143\u7d20\u53ef\u70b9\u51fb element_to_be_selected \u5143\u7d20\u88ab\u9009\u4e2d element_located_to_be_selected \u5b9a\u4f4d\u7684\u5143\u7d20\u88ab\u9009\u4e2d alert_is_present \u51fa\u73b0 Alert \u5f39\u7a97","title":"\u9690\u5f0f\u7b49\u5f85\u548c\u663e\u5f0f\u7b49\u5f85"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/#javascript","text":"\u5bf9\u4e8e\u4f7f\u7528\u7011\u5e03\u5f0f\u52a0\u8f7d\u7684\u9875\u9762\uff0c\u5982\u679c\u5e0c\u671b\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u52a0\u8f7d\u66f4\u591a\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u901a\u8fc7\u6d4f\u89c8\u5668\u5bf9\u8c61\u7684 execute_scripts \u65b9\u6cd5\u6267\u884c JavaScript \u4ee3\u7801\u6765\u5b9e\u73b0\u3002\u5bf9\u4e8e\u4e00\u4e9b\u9ad8\u7ea7\u7684\u722c\u53d6\u64cd\u4f5c\uff0c\u4e5f\u5f88\u6709\u53ef\u80fd\u4f1a\u7528\u5230\u7c7b\u4f3c\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u4f60\u7684\u722c\u866b\u4ee3\u7801\u9700\u8981 JavaScript \u7684\u652f\u6301\uff0c\u5efa\u8bae\u5148\u5bf9 JavaScript \u8fdb\u884c\u9002\u5f53\u7684\u4e86\u89e3\uff0c\u5c24\u5176\u662f JavaScript \u4e2d\u7684 BOM \u548c DOM \u64cd\u4f5c\u3002\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u622a\u5c4f\u4e4b\u524d\u52a0\u5165\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5229\u7528 JavaScript \u5c06\u7f51\u9875\u6eda\u5230\u6700\u4e0b\u65b9\u3002 # \u6267\u884cJavaScript\u4ee3\u7801 browser . execute_script ( 'document.documentElement.scrollTop = document.documentElement.scrollHeight' )","title":"\u6267\u884cJavaScript\u4ee3\u7801"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/#selenium_2","text":"\u6709\u4e00\u4e9b\u7f51\u7ad9\u4e13\u95e8\u9488\u5bf9 Selenium \u8bbe\u7f6e\u4e86\u53cd\u722c\u63aa\u65bd\uff0c\u56e0\u4e3a\u4f7f\u7528 Selenium \u9a71\u52a8\u7684\u6d4f\u89c8\u5668\uff0c\u5728\u63a7\u5236\u53f0\u4e2d\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684 webdriver \u5c5e\u6027\u503c\u4e3a true \uff0c\u5982\u679c\u8981\u7ed5\u8fc7\u8fd9\u9879\u68c0\u67e5\uff0c\u53ef\u4ee5\u5728\u52a0\u8f7d\u9875\u9762\u4e4b\u524d\uff0c\u5148\u901a\u8fc7\u6267\u884c JavaScript \u4ee3\u7801\u5c06\u5176\u4fee\u6539\u4e3a undefined \u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u6d4f\u89c8\u5668\u7a97\u53e3\u4e0a\u7684\u201cChrome\u6b63\u53d7\u5230\u81ea\u52a8\u6d4b\u8bd5\u8f6f\u4ef6\u7684\u63a7\u5236\u201d\u9690\u85cf\u6389\uff0c\u5b8c\u6574\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 # \u521b\u5efaChrome\u53c2\u6570\u5bf9\u8c61 options = webdriver . ChromeOptions () # \u6dfb\u52a0\u8bd5\u9a8c\u6027\u53c2\u6570 options . add_experimental_option ( 'excludeSwitches' , [ 'enable-automation' ]) options . add_experimental_option ( 'useAutomationExtension' , False ) # \u521b\u5efaChrome\u6d4f\u89c8\u5668\u5bf9\u8c61\u5e76\u4f20\u5165\u53c2\u6570 browser = webdriver . Chrome ( options = options ) # \u6267\u884cChrome\u5f00\u53d1\u8005\u534f\u8bae\u547d\u4ee4\uff08\u5728\u52a0\u8f7d\u9875\u9762\u65f6\u6267\u884c\u6307\u5b9a\u7684JavaScript\u4ee3\u7801\uff09 browser . execute_cdp_cmd ( 'Page.addScriptToEvaluateOnNewDocument' , { 'source' : 'Object.defineProperty(navigator, \"webdriver\", {get: () => undefined})' } ) browser . set_window_size ( 1200 , 800 ) browser . get ( 'https://www.baidu.com/' )","title":"Selenium\u53cd\u722c\u7684\u7834\u89e3"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/#_4","text":"\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u5728\u722c\u53d6\u6570\u636e\u65f6\u5e76\u4e0d\u9700\u8981\u770b\u5230\u6d4f\u89c8\u5668\u7a97\u53e3\uff0c\u53ea\u8981\u6709 Chrome \u6d4f\u89c8\u5668\u4ee5\u53ca\u5bf9\u5e94\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6211\u4eec\u7684\u722c\u866b\u5c31\u80fd\u591f\u8fd0\u8f6c\u8d77\u6765\u3002\u5982\u679c\u4e0d\u60f3\u770b\u5230\u6d4f\u89c8\u5668\u7a97\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u8bbe\u7f6e\u4f7f\u7528\u65e0\u5934\u6d4f\u89c8\u5668\u3002 options = webdriver . ChromeOptions () options . add_argument ( '--headless' ) browser = webdriver . Chrome ( options = options )","title":"\u65e0\u5934\u6d4f\u89c8\u5668"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/#api","text":"Selenium \u76f8\u5173\u7684\u77e5\u8bc6\u8fd8\u6709\u5f88\u591a\uff0c\u6211\u4eec\u5728\u6b64\u5c31\u4e0d\u4e00\u4e00\u8d58\u8ff0\u4e86\uff0c\u4e0b\u9762\u4e3a\u5927\u5bb6\u7f57\u5217\u4e00\u4e9b\u6d4f\u89c8\u5668\u5bf9\u8c61\u548c WebElement \u5bf9\u8c61\u5e38\u7528\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u5177\u4f53\u7684\u5185\u5bb9\u5927\u5bb6\u8fd8\u53ef\u4ee5\u53c2\u8003 Selenium \u5b98\u65b9\u6587\u6863\u7684\u4e2d\u6587\u7ffb\u8bd1 \u3002","title":"API\u53c2\u8003"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/#_5","text":"\u88681. \u5e38\u7528\u5c5e\u6027 \u5c5e\u6027\u540d \u63cf\u8ff0 current_url \u5f53\u524d\u9875\u9762\u7684URL current_window_handle \u5f53\u524d\u7a97\u53e3\u7684\u53e5\u67c4\uff08\u5f15\u7528\uff09 name \u6d4f\u89c8\u5668\u7684\u540d\u79f0 orientation \u5f53\u524d\u8bbe\u5907\u7684\u65b9\u5411\uff08\u6a2a\u5c4f\u3001\u7ad6\u5c4f\uff09 page_source \u5f53\u524d\u9875\u9762\u7684\u6e90\u4ee3\u7801\uff08\u5305\u62ec\u52a8\u6001\u5185\u5bb9\uff09 title \u5f53\u524d\u9875\u9762\u7684\u6807\u9898 window_handles \u6d4f\u89c8\u5668\u6253\u5f00\u7684\u6240\u6709\u7a97\u53e3\u7684\u53e5\u67c4 \u88682. \u5e38\u7528\u65b9\u6cd5 \u65b9\u6cd5\u540d \u63cf\u8ff0 back / forward \u5728\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u4e2d\u540e\u9000/\u524d\u8fdb close / quit \u5173\u95ed\u5f53\u524d\u6d4f\u89c8\u5668\u7a97\u53e3 / \u9000\u51fa\u6d4f\u89c8\u5668\u5b9e\u4f8b get \u52a0\u8f7d\u6307\u5b9a URL \u7684\u9875\u9762\u5230\u6d4f\u89c8\u5668\u4e2d maximize_window \u5c06\u6d4f\u89c8\u5668\u7a97\u53e3\u6700\u5927\u5316 refresh \u5237\u65b0\u5f53\u524d\u9875\u9762 set_page_load_timeout \u8bbe\u7f6e\u9875\u9762\u52a0\u8f7d\u8d85\u65f6\u65f6\u95f4 set_script_timeout \u8bbe\u7f6e JavaScript \u6267\u884c\u8d85\u65f6\u65f6\u95f4 implicit_wait \u8bbe\u7f6e\u7b49\u5f85\u5143\u7d20\u88ab\u627e\u5230\u6216\u76ee\u6807\u6307\u4ee4\u5b8c\u6210 get_cookie / get_cookies \u83b7\u53d6\u6307\u5b9a\u7684Cookie / \u83b7\u53d6\u6240\u6709Cookie add_cookie \u6dfb\u52a0 Cookie \u4fe1\u606f delete_cookie / delete_all_cookies \u5220\u9664\u6307\u5b9a\u7684 Cookie / \u5220\u9664\u6240\u6709 Cookie find_element / find_elements \u67e5\u627e\u5355\u4e2a\u5143\u7d20 / \u67e5\u627e\u4e00\u7cfb\u5217\u5143\u7d20","title":"\u6d4f\u89c8\u5668\u5bf9\u8c61"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/#webelement","text":"\u88681. WebElement\u5e38\u7528\u5c5e\u6027 \u5c5e\u6027\u540d \u63cf\u8ff0 location \u5143\u7d20\u7684\u4f4d\u7f6e size \u5143\u7d20\u7684\u5c3a\u5bf8 text \u5143\u7d20\u7684\u6587\u672c\u5185\u5bb9 id \u5143\u7d20\u7684 ID tag_name \u5143\u7d20\u7684\u6807\u7b7e\u540d \u88682. \u5e38\u7528\u65b9\u6cd5 \u65b9\u6cd5\u540d \u63cf\u8ff0 clear \u6e05\u7a7a\u6587\u672c\u6846\u6216\u6587\u672c\u57df\u4e2d\u7684\u5185\u5bb9 click \u70b9\u51fb\u5143\u7d20 get_attribute \u83b7\u53d6\u5143\u7d20\u7684\u5c5e\u6027\u503c is_displayed \u5224\u65ad\u5143\u7d20\u5bf9\u4e8e\u7528\u6237\u662f\u5426\u53ef\u89c1 is_enabled \u5224\u65ad\u5143\u7d20\u662f\u5426\u5904\u4e8e\u53ef\u7528\u72b6\u6001 is_selected \u5224\u65ad\u5143\u7d20\uff08\u5355\u9009\u6846\u548c\u590d\u9009\u6846\uff09\u662f\u5426\u88ab\u9009\u4e2d send_keys \u6a21\u62df\u8f93\u5165\u6587\u672c submit \u63d0\u4ea4\u8868\u5355 value_of_css_property \u83b7\u53d6\u6307\u5b9a\u7684CSS\u5c5e\u6027\u503c find_element / find_elements \u83b7\u53d6\u5355\u4e2a\u5b50\u5143\u7d20 / \u83b7\u53d6\u4e00\u7cfb\u5217\u5b50\u5143\u7d20 screenshot \u4e3a\u5143\u7d20\u751f\u6210\u5feb\u7167","title":"WebElement\u5bf9\u8c61"},{"location":"%E7%AC%AC38%E8%AF%BE%EF%BC%9A%E6%8A%93%E5%8F%96%E7%BD%91%E9%A1%B5%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/#_6","text":"\u4e0b\u9762\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 Selenium \u4ece\u201c360\u56fe\u7247\u201d\u7f51\u7ad9\u641c\u7d22\u548c\u4e0b\u8f7d\u56fe\u7247\u3002 import os import time from concurrent.futures import ThreadPoolExecutor import requests from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys DOWNLOAD_PATH = 'images/' def download_picture ( picture_url : str ): \"\"\" \u4e0b\u8f7d\u4fdd\u5b58\u56fe\u7247 :param picture_url: \u56fe\u7247\u7684URL \"\"\" filename = picture_url [ picture_url . rfind ( '/' ) + 1 :] resp = requests . get ( picture_url ) with open ( os . path . join ( DOWNLOAD_PATH , filename ), 'wb' ) as file : file . write ( resp . content ) if not os . path . exists ( DOWNLOAD_PATH ): os . makedirs ( DOWNLOAD_PATH ) browser = webdriver . Chrome () browser . get ( 'https://image.so.com/z?ch=beauty' ) browser . implicitly_wait ( 10 ) kw_input = browser . find_element ( By . CSS_SELECTOR , 'input[name=q]' ) kw_input . send_keys ( '\u82cd\u8001\u5e08' ) kw_input . send_keys ( Keys . ENTER ) for _ in range ( 10 ): browser . execute_script ( 'document.documentElement.scrollTop = document.documentElement.scrollHeight' ) time . sleep ( 1 ) imgs = browser . find_elements ( By . CSS_SELECTOR , 'div.waterfall img' ) with ThreadPoolExecutor ( max_workers = 32 ) as pool : for img in imgs : pic_url = img . get_attribute ( 'src' ) pool . submit ( download_picture , pic_url ) \u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u68c0\u67e5\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u662f\u5426\u4e0b\u8f7d\u4e86\u6839\u636e\u5173\u952e\u8bcd\u641c\u7d22\u5230\u7684\u56fe\u7247\u3002","title":"\u7b80\u5355\u6848\u4f8b"},{"location":"%E7%AC%AC39%E8%AF%BE%EF%BC%9A%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6Scrapy%E7%AE%80%E4%BB%8B/","text":"\u7b2c39\u8bfe\uff1a\u722c\u866b\u6846\u67b6Scrapy\u7b80\u4ecb \u5f53\u4f60\u5199\u4e86\u5f88\u591a\u4e2a\u722c\u866b\u7a0b\u5e8f\u4e4b\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u6bcf\u6b21\u5199\u722c\u866b\u7a0b\u5e8f\u65f6\uff0c\u90fd\u9700\u8981\u5c06\u9875\u9762\u83b7\u53d6\u3001\u9875\u9762\u89e3\u6790\u3001\u722c\u866b\u8c03\u5ea6\u3001\u5f02\u5e38\u5904\u7406\u3001\u53cd\u722c\u5e94\u5bf9\u8fd9\u4e9b\u4ee3\u7801\u4ece\u5934\u81f3\u5c3e\u5b9e\u73b0\u4e00\u904d\uff0c\u8fd9\u91cc\u9762\u6709\u5f88\u591a\u5de5\u4f5c\u5176\u5b9e\u90fd\u662f\u7b80\u5355\u4e4f\u5473\u7684\u91cd\u590d\u52b3\u52a8\u3002\u90a3\u4e48\uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u53ef\u4ee5\u63d0\u5347\u6211\u4eec\u7f16\u5199\u722c\u866b\u4ee3\u7801\u7684\u6548\u7387\u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u90a3\u5c31\u662f\u5229\u7528\u722c\u866b\u6846\u67b6\uff0c\u800c\u5728\u6240\u6709\u7684\u722c\u866b\u6846\u67b6\u4e2d\uff0cScrapy \u5e94\u8be5\u662f\u6700\u6d41\u884c\u3001\u6700\u5f3a\u5927\u7684\u6846\u67b6\u3002 Scrapy \u6982\u8ff0 Scrapy \u662f\u57fa\u4e8e Python \u7684\u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684\u7f51\u7edc\u722c\u866b\u6846\u67b6\uff0c\u53ef\u4ee5\u7528\u6765\u6293\u53d6 Web \u7ad9\u70b9\u5e76\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u7ed3\u6784\u5316\u7684\u6570\u636e\u3002\u4e0b\u56fe\u5c55\u793a\u4e86 Scrapy \u7684\u57fa\u672c\u67b6\u6784\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u4e3b\u8981\u7ec4\u4ef6\u548c\u7cfb\u7edf\u7684\u6570\u636e\u5904\u7406\u6d41\u7a0b\uff08\u56fe\u4e2d\u5e26\u6570\u5b57\u7684\u7ea2\u8272\u7bad\u5934\uff09\u3002 Scrapy\u7684\u7ec4\u4ef6 \u6211\u4eec\u5148\u6765\u8bf4\u8bf4 Scrapy \u4e2d\u7684\u7ec4\u4ef6\u3002 Scrapy \u5f15\u64ce\uff08Engine\uff09\uff1a\u7528\u6765\u63a7\u5236\u6574\u4e2a\u7cfb\u7edf\u7684\u6570\u636e\u5904\u7406\u6d41\u7a0b\u3002 \u8c03\u5ea6\u5668\uff08Scheduler\uff09\uff1a\u8c03\u5ea6\u5668\u4ece\u5f15\u64ce\u63a5\u53d7\u8bf7\u6c42\u5e76\u6392\u5e8f\u5217\u5165\u961f\u5217\uff0c\u5e76\u5728\u5f15\u64ce\u53d1\u51fa\u8bf7\u6c42\u540e\u8fd4\u8fd8\u7ed9\u5b83\u4eec\u3002 \u4e0b\u8f7d\u5668\uff08Downloader\uff09\uff1a\u4e0b\u8f7d\u5668\u7684\u4e3b\u8981\u804c\u8d23\u662f\u6293\u53d6\u7f51\u9875\u5e76\u5c06\u7f51\u9875\u5185\u5bb9\u8fd4\u8fd8\u7ed9\u8718\u86db\uff08Spiders\uff09\u3002 \u8718\u86db\u7a0b\u5e8f\uff08Spiders\uff09\uff1a\u8718\u86db\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7528\u6765\u89e3\u6790\u7f51\u9875\u5e76\u6293\u53d6\u7279\u5b9aURL\u7684\u7c7b\uff0c\u6bcf\u4e2a\u8718\u86db\u90fd\u80fd\u5904\u7406\u4e00\u4e2a\u57df\u540d\u6216\u4e00\u7ec4\u57df\u540d\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u7528\u6765\u5b9a\u4e49\u7279\u5b9a\u7f51\u7ad9\u7684\u6293\u53d6\u548c\u89e3\u6790\u89c4\u5219\u7684\u6a21\u5757\u3002 \u6570\u636e\u7ba1\u9053\uff08Item Pipeline\uff09\uff1a\u7ba1\u9053\u7684\u4e3b\u8981\u8d23\u4efb\u662f\u8d1f\u8d23\u5904\u7406\u6709\u8718\u86db\u4ece\u7f51\u9875\u4e2d\u62bd\u53d6\u7684\u6570\u636e\u6761\u76ee\uff0c\u5b83\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u6e05\u7406\u3001\u9a8c\u8bc1\u548c\u5b58\u50a8\u6570\u636e\u3002\u5f53\u9875\u9762\u88ab\u8718\u86db\u89e3\u6790\u540e\uff0c\u5c06\u88ab\u53d1\u9001\u5230\u6570\u636e\u7ba1\u9053\uff0c\u5e76\u7ecf\u8fc7\u51e0\u4e2a\u7279\u5b9a\u7684\u6b21\u5e8f\u5904\u7406\u6570\u636e\u3002\u6bcf\u4e2a\u6570\u636e\u7ba1\u9053\u7ec4\u4ef6\u90fd\u662f\u4e00\u4e2a Python \u7c7b\uff0c\u5b83\u4eec\u83b7\u53d6\u4e86\u6570\u636e\u6761\u76ee\u5e76\u6267\u884c\u5bf9\u6570\u636e\u6761\u76ee\u8fdb\u884c\u5904\u7406\u7684\u65b9\u6cd5\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u786e\u5b9a\u662f\u5426\u9700\u8981\u5728\u6570\u636e\u7ba1\u9053\u4e2d\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u6b65\u6216\u662f\u76f4\u63a5\u4e22\u5f03\u6389\u4e0d\u5904\u7406\u3002\u6570\u636e\u7ba1\u9053\u901a\u5e38\u6267\u884c\u7684\u4efb\u52a1\u6709\uff1a\u6e05\u7406 HTML \u6570\u636e\u3001\u9a8c\u8bc1\u89e3\u6790\u5230\u7684\u6570\u636e\uff08\u68c0\u67e5\u6761\u76ee\u662f\u5426\u5305\u542b\u5fc5\u8981\u7684\u5b57\u6bb5\uff09\u3001\u68c0\u67e5\u662f\u4e0d\u662f\u91cd\u590d\u6570\u636e\uff08\u5982\u679c\u91cd\u590d\u5c31\u4e22\u5f03\uff09\u3001\u5c06\u89e3\u6790\u5230\u7684\u6570\u636e\u5b58\u50a8\u5230\u6570\u636e\u5e93\uff08\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6216 NoSQL \u6570\u636e\u5e93\uff09\u4e2d\u3002 \u4e2d\u95f4\u4ef6\uff08Middlewares\uff09\uff1a\u4e2d\u95f4\u4ef6\u662f\u4ecb\u4e8e\u5f15\u64ce\u548c\u5176\u4ed6\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4e00\u4e2a\u94a9\u5b50\u6846\u67b6\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u63d0\u4f9b\u81ea\u5b9a\u4e49\u7684\u4ee3\u7801\u6765\u62d3\u5c55 Scrapy \u7684\u529f\u80fd\uff0c\u5305\u62ec\u4e0b\u8f7d\u5668\u4e2d\u95f4\u4ef6\u548c\u8718\u86db\u4e2d\u95f4\u4ef6\u3002 \u6570\u636e\u5904\u7406\u6d41\u7a0b Scrapy \u7684\u6574\u4e2a\u6570\u636e\u5904\u7406\u6d41\u7a0b\u7531\u5f15\u64ce\u8fdb\u884c\u63a7\u5236\uff0c\u901a\u5e38\u7684\u8fd0\u8f6c\u6d41\u7a0b\u5305\u62ec\u4ee5\u4e0b\u7684\u6b65\u9aa4\uff1a \u5f15\u64ce\u8be2\u95ee\u8718\u86db\u9700\u8981\u5904\u7406\u54ea\u4e2a\u7f51\u7ad9\uff0c\u5e76\u8ba9\u8718\u86db\u5c06\u7b2c\u4e00\u4e2a\u9700\u8981\u5904\u7406\u7684 URL \u4ea4\u7ed9\u5b83\u3002 \u5f15\u64ce\u8ba9\u8c03\u5ea6\u5668\u5c06\u9700\u8981\u5904\u7406\u7684 URL \u653e\u5728\u961f\u5217\u4e2d\u3002 \u5f15\u64ce\u4ece\u8c03\u5ea6\u90a3\u83b7\u53d6\u63a5\u4e0b\u6765\u8fdb\u884c\u722c\u53d6\u7684\u9875\u9762\u3002 \u8c03\u5ea6\u5c06\u4e0b\u4e00\u4e2a\u722c\u53d6\u7684 URL \u8fd4\u56de\u7ed9\u5f15\u64ce\uff0c\u5f15\u64ce\u5c06\u5b83\u901a\u8fc7\u4e0b\u8f7d\u4e2d\u95f4\u4ef6\u53d1\u9001\u5230\u4e0b\u8f7d\u5668\u3002 \u5f53\u7f51\u9875\u88ab\u4e0b\u8f7d\u5668\u4e0b\u8f7d\u5b8c\u6210\u4ee5\u540e\uff0c\u54cd\u5e94\u5185\u5bb9\u901a\u8fc7\u4e0b\u8f7d\u4e2d\u95f4\u4ef6\u88ab\u53d1\u9001\u5230\u5f15\u64ce\uff1b\u5982\u679c\u4e0b\u8f7d\u5931\u8d25\u4e86\uff0c\u5f15\u64ce\u4f1a\u901a\u77e5\u8c03\u5ea6\u5668\u8bb0\u5f55\u8fd9\u4e2a URL\uff0c\u5f85\u4f1a\u518d\u91cd\u65b0\u4e0b\u8f7d\u3002 \u5f15\u64ce\u6536\u5230\u4e0b\u8f7d\u5668\u7684\u54cd\u5e94\u5e76\u5c06\u5b83\u901a\u8fc7\u8718\u86db\u4e2d\u95f4\u4ef6\u53d1\u9001\u5230\u8718\u86db\u8fdb\u884c\u5904\u7406\u3002 \u8718\u86db\u5904\u7406\u54cd\u5e94\u5e76\u8fd4\u56de\u722c\u53d6\u5230\u7684\u6570\u636e\u6761\u76ee\uff0c\u6b64\u5916\u8fd8\u8981\u5c06\u9700\u8981\u8ddf\u8fdb\u7684\u65b0\u7684 URL \u53d1\u9001\u7ed9\u5f15\u64ce\u3002 \u5f15\u64ce\u5c06\u6293\u53d6\u5230\u7684\u6570\u636e\u6761\u76ee\u9001\u5165\u6570\u636e\u7ba1\u9053\uff0c\u628a\u65b0\u7684 URL \u53d1\u9001\u7ed9\u8c03\u5ea6\u5668\u653e\u5165\u961f\u5217\u4e2d\u3002 \u4e0a\u8ff0\u64cd\u4f5c\u4e2d\u7684\u7b2c2\u6b65\u5230\u7b2c8\u6b65\u4f1a\u4e00\u76f4\u91cd\u590d\u76f4\u5230\u8c03\u5ea6\u5668\u4e2d\u6ca1\u6709\u9700\u8981\u8bf7\u6c42\u7684 URL\uff0c\u722c\u866b\u5c31\u505c\u6b62\u5de5\u4f5c\u3002 \u5b89\u88c5\u548c\u4f7f\u7528Scrapy \u53ef\u4ee5\u4f7f\u7528 Python \u7684\u5305\u7ba1\u7406\u5de5\u5177 pip \u6765\u5b89\u88c5 Scrapy\u3002 pip install scrapy \u5728\u547d\u4ee4\u884c\u4e2d\u4f7f\u7528 scrapy \u547d\u4ee4\u521b\u5efa\u540d\u4e3a demo \u7684\u9879\u76ee\u3002 scrapy startproject demo \u9879\u76ee\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\u3002 demo | ____ demo | ________ spiders | ____________ __init__.py | ________ __init__.py | ________ items.py | ________ middlewares.py | ________ pipelines.py | ________ settings.py | ____ scrapy.cfg \u5207\u6362\u5230 demo \u76ee\u5f55\uff0c\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u521b\u5efa\u540d\u4e3a douban \u7684\u8718\u86db\u7a0b\u5e8f\u3002 scrapy genspider douban movie.douban.com \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5b9e\u73b0\u4e00\u4e2a\u722c\u53d6\u8c46\u74e3\u7535\u5f71 Top250 \u7535\u5f71\u6807\u9898\u3001\u8bc4\u5206\u548c\u91d1\u53e5\u7684\u722c\u866b\u3002 \u5728 items.py \u7684 Item \u7c7b\u4e2d\u5b9a\u4e49\u5b57\u6bb5\uff0c\u8fd9\u4e9b\u5b57\u6bb5\u7528\u6765\u4fdd\u5b58\u6570\u636e\uff0c\u65b9\u4fbf\u540e\u7eed\u7684\u64cd\u4f5c\u3002 import scrapy class DoubanItem ( scrapy . Item ): title = scrapy . Field () score = scrapy . Field () motto = scrapy . Field () \u4fee\u6539 spiders \u6587\u4ef6\u5939\u4e2d\u540d\u4e3a douban.py \u7684\u6587\u4ef6\uff0c\u5b83\u662f\u8718\u86db\u7a0b\u5e8f\u7684\u6838\u5fc3\uff0c\u9700\u8981\u6211\u4eec\u6dfb\u52a0\u89e3\u6790\u9875\u9762\u7684\u4ee3\u7801\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9 Response \u5bf9\u8c61\u7684\u89e3\u6790\uff0c\u83b7\u53d6\u7535\u5f71\u7684\u4fe1\u606f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import scrapy from scrapy import Selector , Request from scrapy.http import HtmlResponse from demo.items import MovieItem class DoubanSpider ( scrapy . Spider ): name = 'douban' allowed_domains = [ 'movie.douban.com' ] start_urls = [ 'https://movie.douban.com/top250?start=0&filter=' ] def parse ( self , response : HtmlResponse ): sel = Selector ( response ) movie_items = sel . css ( '#content > div > div.article > ol > li' ) for movie_sel in movie_items : item = MovieItem () item [ 'title' ] = movie_sel . css ( '.title::text' ) . extract_first () item [ 'score' ] = movie_sel . css ( '.rating_num::text' ) . extract_first () item [ 'motto' ] = movie_sel . css ( '.inq::text' ) . extract_first () yield item \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u4e0d\u96be\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 CSS \u9009\u62e9\u5668\u8fdb\u884c\u9875\u9762\u89e3\u6790\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u613f\u610f\u4e5f\u53ef\u4ee5\u4f7f\u7528 XPath \u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u8fdb\u884c\u9875\u9762\u89e3\u6790\uff0c\u5bf9\u5e94\u7684\u65b9\u6cd5\u5206\u522b\u662f xpath \u548c re \u3002 \u5982\u679c\u8fd8\u8981\u751f\u6210\u540e\u7eed\u722c\u53d6\u7684\u8bf7\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 yield \u4ea7\u51fa Request \u5bf9\u8c61\u3002 Request \u5bf9\u8c61\u6709\u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5c5e\u6027\uff0c\u4e00\u4e2a\u662f url \uff0c\u5b83\u4ee3\u8868\u4e86\u8981\u8bf7\u6c42\u7684\u5730\u5740\uff1b\u4e00\u4e2a\u662f callback \uff0c\u5b83\u4ee3\u8868\u4e86\u83b7\u5f97\u54cd\u5e94\u4e4b\u540e\u8981\u6267\u884c\u7684\u56de\u8c03\u51fd\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\u3002 import scrapy from scrapy import Selector , Request from scrapy.http import HtmlResponse from demo.items import MovieItem class DoubanSpider ( scrapy . Spider ): name = 'douban' allowed_domains = [ 'movie.douban.com' ] start_urls = [ 'https://movie.douban.com/top250?start=0&filter=' ] def parse ( self , response : HtmlResponse ): sel = Selector ( response ) movie_items = sel . css ( '#content > div > div.article > ol > li' ) for movie_sel in movie_items : item = MovieItem () item [ 'title' ] = movie_sel . css ( '.title::text' ) . extract_first () item [ 'score' ] = movie_sel . css ( '.rating_num::text' ) . extract_first () item [ 'motto' ] = movie_sel . css ( '.inq::text' ) . extract_first () yield item hrefs = sel . css ( '#content > div > div.article > div.paginator > a::attr(\"href\")' ) for href in hrefs : full_url = response . urljoin ( href . extract ()) yield Request ( url = full_url ) \u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u8ba9\u722c\u866b\u8fd0\u8f6c\u8d77\u6765\u3002 scrapy crawl movie \u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u770b\u5230\u722c\u53d6\u5230\u7684\u6570\u636e\uff0c\u5982\u679c\u60f3\u5c06\u8fd9\u4e9b\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 -o \u53c2\u6570\u6765\u6307\u5b9a\u6587\u4ef6\u540d\uff0cScrapy \u652f\u6301\u6211\u4eec\u5c06\u722c\u53d6\u5230\u7684\u6570\u636e\u5bfc\u51fa\u6210 JSON\u3001CSV\u3001XML \u7b49\u683c\u5f0f\u3002 scrapy crawl moive -o result.json \u4e0d\u77e5\u5927\u5bb6\u662f\u5426\u6ce8\u610f\u5230\uff0c\u901a\u8fc7\u8fd0\u884c\u722c\u866b\u83b7\u5f97\u7684 JSON \u6587\u4ef6\u4e2d\u6709 275 \u6761\u6570\u636e\uff0c\u90a3\u662f\u56e0\u4e3a\u9996\u9875\u88ab\u91cd\u590d\u722c\u53d6\u4e86\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u7a0d\u4f5c\u8c03\u6574\uff0c\u4e0d\u5728 parse \u65b9\u6cd5\u4e2d\u89e3\u6790\u83b7\u53d6\u65b0\u9875\u9762\u7684 URL\uff0c\u800c\u662f\u901a\u8fc7 start_requests \u65b9\u6cd5\u63d0\u524d\u51c6\u5907\u597d\u5f85\u722c\u53d6\u9875\u9762\u7684 URL\uff0c\u8c03\u6574\u540e\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import scrapy from scrapy import Selector , Request from scrapy.http import HtmlResponse from demo.items import MovieItem class DoubanSpider ( scrapy . Spider ): name = 'douban' allowed_domains = [ 'movie.douban.com' ] def start_requests ( self ): for page in range ( 10 ): yield Request ( url = f 'https://movie.douban.com/top250?start= { page * 25 } ' ) def parse ( self , response : HtmlResponse ): sel = Selector ( response ) movie_items = sel . css ( '#content > div > div.article > ol > li' ) for movie_sel in movie_items : item = MovieItem () item [ 'title' ] = movie_sel . css ( '.title::text' ) . extract_first () item [ 'score' ] = movie_sel . css ( '.rating_num::text' ) . extract_first () item [ 'motto' ] = movie_sel . css ( '.inq::text' ) . extract_first () yield item \u5982\u679c\u5e0c\u671b\u5b8c\u6210\u722c\u866b\u6570\u636e\u7684\u6301\u4e45\u5316\uff0c\u53ef\u4ee5\u5728\u6570\u636e\u7ba1\u9053\u4e2d\u5904\u7406\u8718\u86db\u7a0b\u5e8f\u4ea7\u751f\u7684 Item \u5bf9\u8c61\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u524d\u9762\u8bb2\u5230\u7684 openpyxl \u64cd\u4f5c Excel \u6587\u4ef6\uff0c\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import openpyxl from demo.items import MovieItem class MovieItemPipeline : def __init__ ( self ): self . wb = openpyxl . Workbook () self . sheet = self . wb . active self . sheet . title = 'Top250' self . sheet . append (( '\u540d\u79f0' , '\u8bc4\u5206' , '\u540d\u8a00' )) def process_item ( self , item : MovieItem , spider ): self . sheet . append (( item [ 'title' ], item [ 'score' ], item [ 'motto' ])) return item def close_spider ( self , spider ): self . wb . save ( '\u8c46\u74e3\u7535\u5f71\u6570\u636e.xlsx' ) \u4e0a\u9762\u7684 process_item \u548c close_spider \u90fd\u662f\u56de\u8c03\u65b9\u6cd5\uff08\u94a9\u5b50\u51fd\u6570\uff09\uff0c \u7b80\u5355\u7684\u8bf4\u5c31\u662f Scrapy \u6846\u67b6\u4f1a\u81ea\u52a8\u53bb\u8c03\u7528\u7684\u65b9\u6cd5\u3002\u5f53\u8718\u86db\u7a0b\u5e8f\u4ea7\u751f\u4e00\u4e2a Item \u5bf9\u8c61\u4ea4\u7ed9\u5f15\u64ce\u65f6\uff0c\u5f15\u64ce\u4f1a\u5c06\u8be5 Item \u5bf9\u8c61\u4ea4\u7ed9\u6570\u636e\u7ba1\u9053\uff0c\u8fd9\u65f6\u6211\u4eec\u914d\u7f6e\u597d\u7684\u6570\u636e\u7ba1\u9053\u7684 parse_item \u65b9\u6cd5\u5c31\u4f1a\u88ab\u6267\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u8be5\u65b9\u6cd5\u4e2d\u83b7\u53d6\u6570\u636e\u5e76\u5b8c\u6210\u6570\u636e\u7684\u6301\u4e45\u5316\u64cd\u4f5c\u3002\u53e6\u4e00\u4e2a\u65b9\u6cd5 close_spider \u662f\u5728\u722c\u866b\u7ed3\u675f\u8fd0\u884c\u524d\u4f1a\u81ea\u52a8\u6267\u884c\u7684\u65b9\u6cd5\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u5730\u65b9\u8fdb\u884c\u4e86\u4fdd\u5b58 Excel \u6587\u4ef6\u7684\u64cd\u4f5c\uff0c\u76f8\u4fe1\u8fd9\u6bb5\u4ee3\u7801\u5927\u5bb6\u662f\u5f88\u5bb9\u6613\u8bfb\u61c2\u7684\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u6570\u636e\u7ba1\u9053\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u6e05\u7406 HTML \u6570\u636e\uff0c\u9a8c\u8bc1\u722c\u53d6\u7684\u6570\u636e\u3002 \u4e22\u5f03\u91cd\u590d\u7684\u4e0d\u5fc5\u8981\u7684\u5185\u5bb9\u3002 \u5c06\u722c\u53d6\u7684\u7ed3\u679c\u8fdb\u884c\u6301\u4e45\u5316\u64cd\u4f5c\u3002 \u4fee\u6539 settings.py \u6587\u4ef6\u5bf9\u9879\u76ee\u8fdb\u884c\u914d\u7f6e\uff0c\u4e3b\u8981\u9700\u8981\u4fee\u6539\u4ee5\u4e0b\u51e0\u4e2a\u914d\u7f6e\u3002 # \u7528\u6237\u6d4f\u89c8\u5668 USER_AGENT = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36' # \u5e76\u53d1\u8bf7\u6c42\u6570\u91cf CONCURRENT_REQUESTS = 4 # \u4e0b\u8f7d\u5ef6\u8fdf DOWNLOAD_DELAY = 3 # \u968f\u673a\u5316\u4e0b\u8f7d\u5ef6\u8fdf RANDOMIZE_DOWNLOAD_DELAY = True # \u662f\u5426\u9075\u5b88\u722c\u866b\u534f\u8bae ROBOTSTXT_OBEY = True # \u914d\u7f6e\u6570\u636e\u7ba1\u9053 ITEM_PIPELINES = { 'demo.pipelines.MovieItemPipeline' : 300 , } \u8bf4\u660e \uff1a\u4e0a\u9762\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 ITEM_PIPELINES \u9009\u9879\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\u5904\u7406\u6570\u636e\u7684\u7ba1\u9053\uff0c\u540e\u9762\u7684\u6570\u5b57\u4ee3\u8868\u4e86\u6267\u884c\u7684\u4f18\u5148\u7ea7\uff0c\u6570\u5b57\u5c0f\u7684\u5148\u6267\u884c\u3002","title":"\u7b2c39\u8bfe\uff1a\u722c\u866b\u6846\u67b6Scrapy\u7b80\u4ecb"},{"location":"%E7%AC%AC39%E8%AF%BE%EF%BC%9A%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6Scrapy%E7%AE%80%E4%BB%8B/#39scrapy","text":"\u5f53\u4f60\u5199\u4e86\u5f88\u591a\u4e2a\u722c\u866b\u7a0b\u5e8f\u4e4b\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u6bcf\u6b21\u5199\u722c\u866b\u7a0b\u5e8f\u65f6\uff0c\u90fd\u9700\u8981\u5c06\u9875\u9762\u83b7\u53d6\u3001\u9875\u9762\u89e3\u6790\u3001\u722c\u866b\u8c03\u5ea6\u3001\u5f02\u5e38\u5904\u7406\u3001\u53cd\u722c\u5e94\u5bf9\u8fd9\u4e9b\u4ee3\u7801\u4ece\u5934\u81f3\u5c3e\u5b9e\u73b0\u4e00\u904d\uff0c\u8fd9\u91cc\u9762\u6709\u5f88\u591a\u5de5\u4f5c\u5176\u5b9e\u90fd\u662f\u7b80\u5355\u4e4f\u5473\u7684\u91cd\u590d\u52b3\u52a8\u3002\u90a3\u4e48\uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u53ef\u4ee5\u63d0\u5347\u6211\u4eec\u7f16\u5199\u722c\u866b\u4ee3\u7801\u7684\u6548\u7387\u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u90a3\u5c31\u662f\u5229\u7528\u722c\u866b\u6846\u67b6\uff0c\u800c\u5728\u6240\u6709\u7684\u722c\u866b\u6846\u67b6\u4e2d\uff0cScrapy \u5e94\u8be5\u662f\u6700\u6d41\u884c\u3001\u6700\u5f3a\u5927\u7684\u6846\u67b6\u3002","title":"\u7b2c39\u8bfe\uff1a\u722c\u866b\u6846\u67b6Scrapy\u7b80\u4ecb"},{"location":"%E7%AC%AC39%E8%AF%BE%EF%BC%9A%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6Scrapy%E7%AE%80%E4%BB%8B/#scrapy","text":"Scrapy \u662f\u57fa\u4e8e Python \u7684\u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684\u7f51\u7edc\u722c\u866b\u6846\u67b6\uff0c\u53ef\u4ee5\u7528\u6765\u6293\u53d6 Web \u7ad9\u70b9\u5e76\u4ece\u9875\u9762\u4e2d\u63d0\u53d6\u7ed3\u6784\u5316\u7684\u6570\u636e\u3002\u4e0b\u56fe\u5c55\u793a\u4e86 Scrapy \u7684\u57fa\u672c\u67b6\u6784\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u4e3b\u8981\u7ec4\u4ef6\u548c\u7cfb\u7edf\u7684\u6570\u636e\u5904\u7406\u6d41\u7a0b\uff08\u56fe\u4e2d\u5e26\u6570\u5b57\u7684\u7ea2\u8272\u7bad\u5934\uff09\u3002","title":"Scrapy \u6982\u8ff0"},{"location":"%E7%AC%AC39%E8%AF%BE%EF%BC%9A%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6Scrapy%E7%AE%80%E4%BB%8B/#scrapy_1","text":"\u6211\u4eec\u5148\u6765\u8bf4\u8bf4 Scrapy \u4e2d\u7684\u7ec4\u4ef6\u3002 Scrapy \u5f15\u64ce\uff08Engine\uff09\uff1a\u7528\u6765\u63a7\u5236\u6574\u4e2a\u7cfb\u7edf\u7684\u6570\u636e\u5904\u7406\u6d41\u7a0b\u3002 \u8c03\u5ea6\u5668\uff08Scheduler\uff09\uff1a\u8c03\u5ea6\u5668\u4ece\u5f15\u64ce\u63a5\u53d7\u8bf7\u6c42\u5e76\u6392\u5e8f\u5217\u5165\u961f\u5217\uff0c\u5e76\u5728\u5f15\u64ce\u53d1\u51fa\u8bf7\u6c42\u540e\u8fd4\u8fd8\u7ed9\u5b83\u4eec\u3002 \u4e0b\u8f7d\u5668\uff08Downloader\uff09\uff1a\u4e0b\u8f7d\u5668\u7684\u4e3b\u8981\u804c\u8d23\u662f\u6293\u53d6\u7f51\u9875\u5e76\u5c06\u7f51\u9875\u5185\u5bb9\u8fd4\u8fd8\u7ed9\u8718\u86db\uff08Spiders\uff09\u3002 \u8718\u86db\u7a0b\u5e8f\uff08Spiders\uff09\uff1a\u8718\u86db\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7528\u6765\u89e3\u6790\u7f51\u9875\u5e76\u6293\u53d6\u7279\u5b9aURL\u7684\u7c7b\uff0c\u6bcf\u4e2a\u8718\u86db\u90fd\u80fd\u5904\u7406\u4e00\u4e2a\u57df\u540d\u6216\u4e00\u7ec4\u57df\u540d\uff0c\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u7528\u6765\u5b9a\u4e49\u7279\u5b9a\u7f51\u7ad9\u7684\u6293\u53d6\u548c\u89e3\u6790\u89c4\u5219\u7684\u6a21\u5757\u3002 \u6570\u636e\u7ba1\u9053\uff08Item Pipeline\uff09\uff1a\u7ba1\u9053\u7684\u4e3b\u8981\u8d23\u4efb\u662f\u8d1f\u8d23\u5904\u7406\u6709\u8718\u86db\u4ece\u7f51\u9875\u4e2d\u62bd\u53d6\u7684\u6570\u636e\u6761\u76ee\uff0c\u5b83\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u6e05\u7406\u3001\u9a8c\u8bc1\u548c\u5b58\u50a8\u6570\u636e\u3002\u5f53\u9875\u9762\u88ab\u8718\u86db\u89e3\u6790\u540e\uff0c\u5c06\u88ab\u53d1\u9001\u5230\u6570\u636e\u7ba1\u9053\uff0c\u5e76\u7ecf\u8fc7\u51e0\u4e2a\u7279\u5b9a\u7684\u6b21\u5e8f\u5904\u7406\u6570\u636e\u3002\u6bcf\u4e2a\u6570\u636e\u7ba1\u9053\u7ec4\u4ef6\u90fd\u662f\u4e00\u4e2a Python \u7c7b\uff0c\u5b83\u4eec\u83b7\u53d6\u4e86\u6570\u636e\u6761\u76ee\u5e76\u6267\u884c\u5bf9\u6570\u636e\u6761\u76ee\u8fdb\u884c\u5904\u7406\u7684\u65b9\u6cd5\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u786e\u5b9a\u662f\u5426\u9700\u8981\u5728\u6570\u636e\u7ba1\u9053\u4e2d\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u6b65\u6216\u662f\u76f4\u63a5\u4e22\u5f03\u6389\u4e0d\u5904\u7406\u3002\u6570\u636e\u7ba1\u9053\u901a\u5e38\u6267\u884c\u7684\u4efb\u52a1\u6709\uff1a\u6e05\u7406 HTML \u6570\u636e\u3001\u9a8c\u8bc1\u89e3\u6790\u5230\u7684\u6570\u636e\uff08\u68c0\u67e5\u6761\u76ee\u662f\u5426\u5305\u542b\u5fc5\u8981\u7684\u5b57\u6bb5\uff09\u3001\u68c0\u67e5\u662f\u4e0d\u662f\u91cd\u590d\u6570\u636e\uff08\u5982\u679c\u91cd\u590d\u5c31\u4e22\u5f03\uff09\u3001\u5c06\u89e3\u6790\u5230\u7684\u6570\u636e\u5b58\u50a8\u5230\u6570\u636e\u5e93\uff08\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6216 NoSQL \u6570\u636e\u5e93\uff09\u4e2d\u3002 \u4e2d\u95f4\u4ef6\uff08Middlewares\uff09\uff1a\u4e2d\u95f4\u4ef6\u662f\u4ecb\u4e8e\u5f15\u64ce\u548c\u5176\u4ed6\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4e00\u4e2a\u94a9\u5b50\u6846\u67b6\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u63d0\u4f9b\u81ea\u5b9a\u4e49\u7684\u4ee3\u7801\u6765\u62d3\u5c55 Scrapy \u7684\u529f\u80fd\uff0c\u5305\u62ec\u4e0b\u8f7d\u5668\u4e2d\u95f4\u4ef6\u548c\u8718\u86db\u4e2d\u95f4\u4ef6\u3002","title":"Scrapy\u7684\u7ec4\u4ef6"},{"location":"%E7%AC%AC39%E8%AF%BE%EF%BC%9A%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6Scrapy%E7%AE%80%E4%BB%8B/#_1","text":"Scrapy \u7684\u6574\u4e2a\u6570\u636e\u5904\u7406\u6d41\u7a0b\u7531\u5f15\u64ce\u8fdb\u884c\u63a7\u5236\uff0c\u901a\u5e38\u7684\u8fd0\u8f6c\u6d41\u7a0b\u5305\u62ec\u4ee5\u4e0b\u7684\u6b65\u9aa4\uff1a \u5f15\u64ce\u8be2\u95ee\u8718\u86db\u9700\u8981\u5904\u7406\u54ea\u4e2a\u7f51\u7ad9\uff0c\u5e76\u8ba9\u8718\u86db\u5c06\u7b2c\u4e00\u4e2a\u9700\u8981\u5904\u7406\u7684 URL \u4ea4\u7ed9\u5b83\u3002 \u5f15\u64ce\u8ba9\u8c03\u5ea6\u5668\u5c06\u9700\u8981\u5904\u7406\u7684 URL \u653e\u5728\u961f\u5217\u4e2d\u3002 \u5f15\u64ce\u4ece\u8c03\u5ea6\u90a3\u83b7\u53d6\u63a5\u4e0b\u6765\u8fdb\u884c\u722c\u53d6\u7684\u9875\u9762\u3002 \u8c03\u5ea6\u5c06\u4e0b\u4e00\u4e2a\u722c\u53d6\u7684 URL \u8fd4\u56de\u7ed9\u5f15\u64ce\uff0c\u5f15\u64ce\u5c06\u5b83\u901a\u8fc7\u4e0b\u8f7d\u4e2d\u95f4\u4ef6\u53d1\u9001\u5230\u4e0b\u8f7d\u5668\u3002 \u5f53\u7f51\u9875\u88ab\u4e0b\u8f7d\u5668\u4e0b\u8f7d\u5b8c\u6210\u4ee5\u540e\uff0c\u54cd\u5e94\u5185\u5bb9\u901a\u8fc7\u4e0b\u8f7d\u4e2d\u95f4\u4ef6\u88ab\u53d1\u9001\u5230\u5f15\u64ce\uff1b\u5982\u679c\u4e0b\u8f7d\u5931\u8d25\u4e86\uff0c\u5f15\u64ce\u4f1a\u901a\u77e5\u8c03\u5ea6\u5668\u8bb0\u5f55\u8fd9\u4e2a URL\uff0c\u5f85\u4f1a\u518d\u91cd\u65b0\u4e0b\u8f7d\u3002 \u5f15\u64ce\u6536\u5230\u4e0b\u8f7d\u5668\u7684\u54cd\u5e94\u5e76\u5c06\u5b83\u901a\u8fc7\u8718\u86db\u4e2d\u95f4\u4ef6\u53d1\u9001\u5230\u8718\u86db\u8fdb\u884c\u5904\u7406\u3002 \u8718\u86db\u5904\u7406\u54cd\u5e94\u5e76\u8fd4\u56de\u722c\u53d6\u5230\u7684\u6570\u636e\u6761\u76ee\uff0c\u6b64\u5916\u8fd8\u8981\u5c06\u9700\u8981\u8ddf\u8fdb\u7684\u65b0\u7684 URL \u53d1\u9001\u7ed9\u5f15\u64ce\u3002 \u5f15\u64ce\u5c06\u6293\u53d6\u5230\u7684\u6570\u636e\u6761\u76ee\u9001\u5165\u6570\u636e\u7ba1\u9053\uff0c\u628a\u65b0\u7684 URL \u53d1\u9001\u7ed9\u8c03\u5ea6\u5668\u653e\u5165\u961f\u5217\u4e2d\u3002 \u4e0a\u8ff0\u64cd\u4f5c\u4e2d\u7684\u7b2c2\u6b65\u5230\u7b2c8\u6b65\u4f1a\u4e00\u76f4\u91cd\u590d\u76f4\u5230\u8c03\u5ea6\u5668\u4e2d\u6ca1\u6709\u9700\u8981\u8bf7\u6c42\u7684 URL\uff0c\u722c\u866b\u5c31\u505c\u6b62\u5de5\u4f5c\u3002","title":"\u6570\u636e\u5904\u7406\u6d41\u7a0b"},{"location":"%E7%AC%AC39%E8%AF%BE%EF%BC%9A%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6Scrapy%E7%AE%80%E4%BB%8B/#scrapy_2","text":"\u53ef\u4ee5\u4f7f\u7528 Python \u7684\u5305\u7ba1\u7406\u5de5\u5177 pip \u6765\u5b89\u88c5 Scrapy\u3002 pip install scrapy \u5728\u547d\u4ee4\u884c\u4e2d\u4f7f\u7528 scrapy \u547d\u4ee4\u521b\u5efa\u540d\u4e3a demo \u7684\u9879\u76ee\u3002 scrapy startproject demo \u9879\u76ee\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\u3002 demo | ____ demo | ________ spiders | ____________ __init__.py | ________ __init__.py | ________ items.py | ________ middlewares.py | ________ pipelines.py | ________ settings.py | ____ scrapy.cfg \u5207\u6362\u5230 demo \u76ee\u5f55\uff0c\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u521b\u5efa\u540d\u4e3a douban \u7684\u8718\u86db\u7a0b\u5e8f\u3002 scrapy genspider douban movie.douban.com","title":"\u5b89\u88c5\u548c\u4f7f\u7528Scrapy"},{"location":"%E7%AC%AC39%E8%AF%BE%EF%BC%9A%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6Scrapy%E7%AE%80%E4%BB%8B/#_2","text":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5b9e\u73b0\u4e00\u4e2a\u722c\u53d6\u8c46\u74e3\u7535\u5f71 Top250 \u7535\u5f71\u6807\u9898\u3001\u8bc4\u5206\u548c\u91d1\u53e5\u7684\u722c\u866b\u3002 \u5728 items.py \u7684 Item \u7c7b\u4e2d\u5b9a\u4e49\u5b57\u6bb5\uff0c\u8fd9\u4e9b\u5b57\u6bb5\u7528\u6765\u4fdd\u5b58\u6570\u636e\uff0c\u65b9\u4fbf\u540e\u7eed\u7684\u64cd\u4f5c\u3002 import scrapy class DoubanItem ( scrapy . Item ): title = scrapy . Field () score = scrapy . Field () motto = scrapy . Field () \u4fee\u6539 spiders \u6587\u4ef6\u5939\u4e2d\u540d\u4e3a douban.py \u7684\u6587\u4ef6\uff0c\u5b83\u662f\u8718\u86db\u7a0b\u5e8f\u7684\u6838\u5fc3\uff0c\u9700\u8981\u6211\u4eec\u6dfb\u52a0\u89e3\u6790\u9875\u9762\u7684\u4ee3\u7801\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bf9 Response \u5bf9\u8c61\u7684\u89e3\u6790\uff0c\u83b7\u53d6\u7535\u5f71\u7684\u4fe1\u606f\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import scrapy from scrapy import Selector , Request from scrapy.http import HtmlResponse from demo.items import MovieItem class DoubanSpider ( scrapy . Spider ): name = 'douban' allowed_domains = [ 'movie.douban.com' ] start_urls = [ 'https://movie.douban.com/top250?start=0&filter=' ] def parse ( self , response : HtmlResponse ): sel = Selector ( response ) movie_items = sel . css ( '#content > div > div.article > ol > li' ) for movie_sel in movie_items : item = MovieItem () item [ 'title' ] = movie_sel . css ( '.title::text' ) . extract_first () item [ 'score' ] = movie_sel . css ( '.rating_num::text' ) . extract_first () item [ 'motto' ] = movie_sel . css ( '.inq::text' ) . extract_first () yield item \u901a\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u4e0d\u96be\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 CSS \u9009\u62e9\u5668\u8fdb\u884c\u9875\u9762\u89e3\u6790\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u613f\u610f\u4e5f\u53ef\u4ee5\u4f7f\u7528 XPath \u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u8fdb\u884c\u9875\u9762\u89e3\u6790\uff0c\u5bf9\u5e94\u7684\u65b9\u6cd5\u5206\u522b\u662f xpath \u548c re \u3002 \u5982\u679c\u8fd8\u8981\u751f\u6210\u540e\u7eed\u722c\u53d6\u7684\u8bf7\u6c42\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 yield \u4ea7\u51fa Request \u5bf9\u8c61\u3002 Request \u5bf9\u8c61\u6709\u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5c5e\u6027\uff0c\u4e00\u4e2a\u662f url \uff0c\u5b83\u4ee3\u8868\u4e86\u8981\u8bf7\u6c42\u7684\u5730\u5740\uff1b\u4e00\u4e2a\u662f callback \uff0c\u5b83\u4ee3\u8868\u4e86\u83b7\u5f97\u54cd\u5e94\u4e4b\u540e\u8981\u6267\u884c\u7684\u56de\u8c03\u51fd\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\u3002 import scrapy from scrapy import Selector , Request from scrapy.http import HtmlResponse from demo.items import MovieItem class DoubanSpider ( scrapy . Spider ): name = 'douban' allowed_domains = [ 'movie.douban.com' ] start_urls = [ 'https://movie.douban.com/top250?start=0&filter=' ] def parse ( self , response : HtmlResponse ): sel = Selector ( response ) movie_items = sel . css ( '#content > div > div.article > ol > li' ) for movie_sel in movie_items : item = MovieItem () item [ 'title' ] = movie_sel . css ( '.title::text' ) . extract_first () item [ 'score' ] = movie_sel . css ( '.rating_num::text' ) . extract_first () item [ 'motto' ] = movie_sel . css ( '.inq::text' ) . extract_first () yield item hrefs = sel . css ( '#content > div > div.article > div.paginator > a::attr(\"href\")' ) for href in hrefs : full_url = response . urljoin ( href . extract ()) yield Request ( url = full_url ) \u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u8ba9\u722c\u866b\u8fd0\u8f6c\u8d77\u6765\u3002 scrapy crawl movie \u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u770b\u5230\u722c\u53d6\u5230\u7684\u6570\u636e\uff0c\u5982\u679c\u60f3\u5c06\u8fd9\u4e9b\u6570\u636e\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 -o \u53c2\u6570\u6765\u6307\u5b9a\u6587\u4ef6\u540d\uff0cScrapy \u652f\u6301\u6211\u4eec\u5c06\u722c\u53d6\u5230\u7684\u6570\u636e\u5bfc\u51fa\u6210 JSON\u3001CSV\u3001XML \u7b49\u683c\u5f0f\u3002 scrapy crawl moive -o result.json \u4e0d\u77e5\u5927\u5bb6\u662f\u5426\u6ce8\u610f\u5230\uff0c\u901a\u8fc7\u8fd0\u884c\u722c\u866b\u83b7\u5f97\u7684 JSON \u6587\u4ef6\u4e2d\u6709 275 \u6761\u6570\u636e\uff0c\u90a3\u662f\u56e0\u4e3a\u9996\u9875\u88ab\u91cd\u590d\u722c\u53d6\u4e86\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u7a0d\u4f5c\u8c03\u6574\uff0c\u4e0d\u5728 parse \u65b9\u6cd5\u4e2d\u89e3\u6790\u83b7\u53d6\u65b0\u9875\u9762\u7684 URL\uff0c\u800c\u662f\u901a\u8fc7 start_requests \u65b9\u6cd5\u63d0\u524d\u51c6\u5907\u597d\u5f85\u722c\u53d6\u9875\u9762\u7684 URL\uff0c\u8c03\u6574\u540e\u7684\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import scrapy from scrapy import Selector , Request from scrapy.http import HtmlResponse from demo.items import MovieItem class DoubanSpider ( scrapy . Spider ): name = 'douban' allowed_domains = [ 'movie.douban.com' ] def start_requests ( self ): for page in range ( 10 ): yield Request ( url = f 'https://movie.douban.com/top250?start= { page * 25 } ' ) def parse ( self , response : HtmlResponse ): sel = Selector ( response ) movie_items = sel . css ( '#content > div > div.article > ol > li' ) for movie_sel in movie_items : item = MovieItem () item [ 'title' ] = movie_sel . css ( '.title::text' ) . extract_first () item [ 'score' ] = movie_sel . css ( '.rating_num::text' ) . extract_first () item [ 'motto' ] = movie_sel . css ( '.inq::text' ) . extract_first () yield item \u5982\u679c\u5e0c\u671b\u5b8c\u6210\u722c\u866b\u6570\u636e\u7684\u6301\u4e45\u5316\uff0c\u53ef\u4ee5\u5728\u6570\u636e\u7ba1\u9053\u4e2d\u5904\u7406\u8718\u86db\u7a0b\u5e8f\u4ea7\u751f\u7684 Item \u5bf9\u8c61\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u524d\u9762\u8bb2\u5230\u7684 openpyxl \u64cd\u4f5c Excel \u6587\u4ef6\uff0c\u5c06\u6570\u636e\u5199\u5165 Excel \u6587\u4ef6\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 import openpyxl from demo.items import MovieItem class MovieItemPipeline : def __init__ ( self ): self . wb = openpyxl . Workbook () self . sheet = self . wb . active self . sheet . title = 'Top250' self . sheet . append (( '\u540d\u79f0' , '\u8bc4\u5206' , '\u540d\u8a00' )) def process_item ( self , item : MovieItem , spider ): self . sheet . append (( item [ 'title' ], item [ 'score' ], item [ 'motto' ])) return item def close_spider ( self , spider ): self . wb . save ( '\u8c46\u74e3\u7535\u5f71\u6570\u636e.xlsx' ) \u4e0a\u9762\u7684 process_item \u548c close_spider \u90fd\u662f\u56de\u8c03\u65b9\u6cd5\uff08\u94a9\u5b50\u51fd\u6570\uff09\uff0c \u7b80\u5355\u7684\u8bf4\u5c31\u662f Scrapy \u6846\u67b6\u4f1a\u81ea\u52a8\u53bb\u8c03\u7528\u7684\u65b9\u6cd5\u3002\u5f53\u8718\u86db\u7a0b\u5e8f\u4ea7\u751f\u4e00\u4e2a Item \u5bf9\u8c61\u4ea4\u7ed9\u5f15\u64ce\u65f6\uff0c\u5f15\u64ce\u4f1a\u5c06\u8be5 Item \u5bf9\u8c61\u4ea4\u7ed9\u6570\u636e\u7ba1\u9053\uff0c\u8fd9\u65f6\u6211\u4eec\u914d\u7f6e\u597d\u7684\u6570\u636e\u7ba1\u9053\u7684 parse_item \u65b9\u6cd5\u5c31\u4f1a\u88ab\u6267\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u8be5\u65b9\u6cd5\u4e2d\u83b7\u53d6\u6570\u636e\u5e76\u5b8c\u6210\u6570\u636e\u7684\u6301\u4e45\u5316\u64cd\u4f5c\u3002\u53e6\u4e00\u4e2a\u65b9\u6cd5 close_spider \u662f\u5728\u722c\u866b\u7ed3\u675f\u8fd0\u884c\u524d\u4f1a\u81ea\u52a8\u6267\u884c\u7684\u65b9\u6cd5\uff0c\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u5730\u65b9\u8fdb\u884c\u4e86\u4fdd\u5b58 Excel \u6587\u4ef6\u7684\u64cd\u4f5c\uff0c\u76f8\u4fe1\u8fd9\u6bb5\u4ee3\u7801\u5927\u5bb6\u662f\u5f88\u5bb9\u6613\u8bfb\u61c2\u7684\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u6570\u636e\u7ba1\u9053\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u6e05\u7406 HTML \u6570\u636e\uff0c\u9a8c\u8bc1\u722c\u53d6\u7684\u6570\u636e\u3002 \u4e22\u5f03\u91cd\u590d\u7684\u4e0d\u5fc5\u8981\u7684\u5185\u5bb9\u3002 \u5c06\u722c\u53d6\u7684\u7ed3\u679c\u8fdb\u884c\u6301\u4e45\u5316\u64cd\u4f5c\u3002 \u4fee\u6539 settings.py \u6587\u4ef6\u5bf9\u9879\u76ee\u8fdb\u884c\u914d\u7f6e\uff0c\u4e3b\u8981\u9700\u8981\u4fee\u6539\u4ee5\u4e0b\u51e0\u4e2a\u914d\u7f6e\u3002 # \u7528\u6237\u6d4f\u89c8\u5668 USER_AGENT = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36' # \u5e76\u53d1\u8bf7\u6c42\u6570\u91cf CONCURRENT_REQUESTS = 4 # \u4e0b\u8f7d\u5ef6\u8fdf DOWNLOAD_DELAY = 3 # \u968f\u673a\u5316\u4e0b\u8f7d\u5ef6\u8fdf RANDOMIZE_DOWNLOAD_DELAY = True # \u662f\u5426\u9075\u5b88\u722c\u866b\u534f\u8bae ROBOTSTXT_OBEY = True # \u914d\u7f6e\u6570\u636e\u7ba1\u9053 ITEM_PIPELINES = { 'demo.pipelines.MovieItemPipeline' : 300 , } \u8bf4\u660e \uff1a\u4e0a\u9762\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 ITEM_PIPELINES \u9009\u9879\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\u5904\u7406\u6570\u636e\u7684\u7ba1\u9053\uff0c\u540e\u9762\u7684\u6570\u5b57\u4ee3\u8868\u4e86\u6267\u884c\u7684\u4f18\u5148\u7ea7\uff0c\u6570\u5b57\u5c0f\u7684\u5148\u6267\u884c\u3002","title":"\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50"},{"location":"%E7%AC%AC40%E8%AF%BE%EF%BC%9A%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CMySQL%E6%A6%82%E8%BF%B0/","text":"\u7b2c40\u8bfe\uff1a\u5173\u7cfb\u578b\u6570\u636e\u5e93\u548cMySQL\u6982\u8ff0 \u5173\u7cfb\u578b\u6570\u636e\u5e93\u6982\u8ff0 \u6570\u636e\u6301\u4e45\u5316 - \u5c06\u6570\u636e\u4fdd\u5b58\u5230\u80fd\u591f\u957f\u4e45\u4fdd\u5b58\u6570\u636e\u7684\u5b58\u50a8\u4ecb\u8d28\u4e2d\uff0c\u5728\u6389\u7535\u7684\u60c5\u51b5\u4e0b\u6570\u636e\u4e5f\u4e0d\u4f1a\u4e22\u5931\u3002 \u6570\u636e\u5e93\u53d1\u5c55\u53f2 - \u7f51\u72b6\u6570\u636e\u5e93\u3001\u5c42\u6b21\u6570\u636e\u5e93\u3001\u5173\u7cfb\u6570\u636e\u5e93\u3001NoSQL \u6570\u636e\u5e93\u3001NewSQL \u6570\u636e\u5e93\u3002 1970\u5e74\uff0cIBM\u7684\u7814\u7a76\u5458E.F.Codd\u5728 Communication of the ACM \u4e0a\u53d1\u8868\u4e86\u540d\u4e3a A Relational Model of Data for Large Shared Data Banks \u7684\u8bba\u6587\uff0c\u63d0\u51fa\u4e86 \u5173\u7cfb\u6a21\u578b \u7684\u6982\u5ff5\uff0c\u5960\u5b9a\u4e86\u5173\u7cfb\u6a21\u578b\u7684\u7406\u8bba\u57fa\u7840\u3002\u540e\u6765Codd\u53c8\u9646\u7eed\u53d1\u8868\u591a\u7bc7\u6587\u7ae0\uff0c\u8bba\u8ff0\u4e86\u8303\u5f0f\u7406\u8bba\u548c\u8861\u91cf\u5173\u7cfb\u7cfb\u7edf\u768412\u6761\u6807\u51c6\uff0c\u7528\u6570\u5b66\u7406\u8bba\u5960\u5b9a\u4e86\u5173\u7cfb\u6570\u636e\u5e93\u7684\u57fa\u7840\u3002 \u5173\u7cfb\u6570\u636e\u5e93\u7279\u70b9\u3002 \u7406\u8bba\u57fa\u7840\uff1a \u5173\u7cfb\u4ee3\u6570 \uff08\u5173\u7cfb\u8fd0\u7b97\u3001\u96c6\u5408\u8bba\u3001\u4e00\u9636\u8c13\u8bcd\u903b\u8f91\uff09\u3002 \u5177\u4f53\u8868\u8c61\uff1a\u7528 \u4e8c\u7ef4\u8868 \uff08\u6709\u884c\u548c\u5217\uff09\u7ec4\u7ec7\u6570\u636e\u3002 \u7f16\u7a0b\u8bed\u8a00\uff1a \u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00 \uff08SQL\uff09\u3002 ER\u6a21\u578b\uff08\u5b9e\u4f53\u5173\u7cfb\u6a21\u578b\uff09\u548c\u6982\u5ff5\u6a21\u578b\u56fe\u3002 ER\u6a21\u578b \uff0c\u5168\u79f0\u4e3a \u5b9e\u4f53\u5173\u7cfb\u6a21\u578b \uff08Entity-Relationship Model\uff09\uff0c\u7531\u7f8e\u7c4d\u534e\u88d4\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u9648\u54c1\u5c71\u5148\u751f\u63d0\u51fa\uff0c\u662f\u6982\u5ff5\u6570\u636e\u6a21\u578b\u7684\u9ad8\u5c42\u63cf\u8ff0\u65b9\u5f0f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5b9e\u4f53 - \u77e9\u5f62\u6846 \u5c5e\u6027 - \u692d\u5706\u6846 \u5173\u7cfb - \u83f1\u5f62\u6846 \u91cd\u6570 - 1:1\uff08\u4e00\u5bf9\u4e00\uff09 / 1:N\uff08\u4e00\u5bf9\u591a\uff09 / M:N\uff08\u591a\u5bf9\u591a\uff09 \u5b9e\u9645\u9879\u76ee\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6570\u636e\u5e93\u5efa\u6a21\u5de5\u5177\uff08\u5982\uff1aPowerDesigner\uff09\u6765\u7ed8\u5236\u6982\u5ff5\u6570\u636e\u6a21\u578b\uff08\u5176\u672c\u8d28\u5c31\u662f ER \u6a21\u578b\uff09\uff0c\u7136\u540e\u518d\u8bbe\u7f6e\u597d\u76ee\u6807\u6570\u636e\u5e93\u7cfb\u7edf\uff0c\u5c06\u6982\u5ff5\u6a21\u578b\u8f6c\u6362\u6210\u7269\u7406\u6a21\u578b\uff0c\u6700\u7ec8\u751f\u6210\u521b\u5efa\u4e8c\u7ef4\u8868\u7684 SQL\uff08\u5f88\u591a\u5de5\u5177\u90fd\u53ef\u4ee5\u6839\u636e\u6211\u4eec\u8bbe\u8ba1\u7684\u7269\u7406\u6a21\u578b\u56fe\u4ee5\u53ca\u8bbe\u5b9a\u7684\u76ee\u6807\u6570\u636e\u5e93\u6765\u5bfc\u51fa SQL \u6216\u76f4\u63a5\u751f\u6210\u6570\u636e\u8868\uff09\u3002 \u5173\u7cfb\u6570\u636e\u5e93\u4ea7\u54c1\u3002 Oracle - \u76ee\u524d\u4e16\u754c\u4e0a\u4f7f\u7528\u6700\u4e3a\u5e7f\u6cdb\u7684\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u901a\u7528\u7684\u6570\u636e\u5e93\u7cfb\u7edf\uff0c\u5b83\u5177\u6709\u5b8c\u6574\u7684\u6570\u636e\u7ba1\u7406\u529f\u80fd\uff1b\u4f5c\u4e3a\u4e00\u4e2a\u5173\u7cfb\u6570\u636e\u5e93\uff0c\u5b83\u662f\u4e00\u4e2a\u5b8c\u5907\u5173\u7cfb\u7684\u4ea7\u54c1\uff1b\u4f5c\u4e3a\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u5b83\u5b9e\u73b0\u4e86\u5206\u5e03\u5f0f\u5904\u7406\u7684\u529f\u80fd\u3002\u5728 Oracle \u6700\u65b0\u7684 12c \u7248\u672c\u4e2d\uff0c\u8fd8\u5f15\u5165\u4e86\u591a\u627f\u79df\u65b9\u67b6\u6784\uff0c\u4f7f\u7528\u8be5\u67b6\u6784\u53ef\u8f7b\u677e\u90e8\u7f72\u548c\u7ba1\u7406\u6570\u636e\u5e93\u4e91\u3002 DB2 - IBM \u516c\u53f8\u5f00\u53d1\u7684\u3001\u4e3b\u8981\u8fd0\u884c\u4e8e Unix\uff08\u5305\u62ec IBM \u81ea\u5bb6\u7684 AIX \uff09\u3001Linux\u3001\u4ee5\u53ca Windows \u670d\u52a1\u5668\u7248\u7b49\u7cfb\u7edf\u7684\u5173\u7cfb\u6570\u636e\u5e93\u4ea7\u54c1\u3002DB2 \u5386\u53f2\u60a0\u4e45\u4e14\u88ab\u8ba4\u4e3a\u662f\u6700\u65e9\u4f7f\u7528 SQL \u7684\u6570\u636e\u5e93\u4ea7\u54c1\uff0c\u5b83\u62e5\u6709\u8f83\u4e3a\u5f3a\u5927\u7684\u5546\u4e1a\u667a\u80fd\u529f\u80fd\u3002 SQL Server - \u7531 Microsoft \u5f00\u53d1\u548c\u63a8\u5e7f\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4ea7\u54c1\uff0c\u6700\u521d\u9002\u7528\u4e8e\u4e2d\u5c0f\u4f01\u4e1a\u7684\u6570\u636e\u7ba1\u7406\uff0c\u4f46\u662f\u8fd1\u5e74\u6765\u5b83\u7684\u5e94\u7528\u8303\u56f4\u6709\u6240\u6269\u5c55\uff0c\u90e8\u5206\u5927\u4f01\u4e1a\u751a\u81f3\u662f\u8de8\u56fd\u516c\u53f8\u4e5f\u5f00\u59cb\u57fa\u4e8e\u5b83\u6765\u6784\u5efa\u81ea\u5df1\u7684\u6570\u636e\u7ba1\u7406\u7cfb\u7edf\u3002 MySQL - MySQL \u662f\u5f00\u653e\u6e90\u4ee3\u7801\u7684\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5728 GPL\uff08General Public License\uff09\u7684\u8bb8\u53ef\u4e0b\u4e0b\u8f7d\u5e76\u6839\u636e\u4e2a\u6027\u5316\u7684\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u3002MySQL \u56e0\u4e3a\u5176\u901f\u5ea6\u3001\u53ef\u9760\u6027\u548c\u9002\u5e94\u6027\u800c\u5907\u53d7\u5173\u6ce8\u3002 PostgreSQL - \u5728 BSD \u8bb8\u53ef\u8bc1\u4e0b\u53d1\u884c\u7684\u5f00\u653e\u6e90\u4ee3\u7801\u7684\u5173\u7cfb\u6570\u636e\u5e93\u4ea7\u54c1\u3002 MySQL \u7b80\u4ecb MySQL \u6700\u65e9\u662f\u7531\u745e\u5178\u7684 MySQL AB \u516c\u53f8\u5f00\u53d1\u7684\u4e00\u4e2a\u5f00\u653e\u6e90\u7801\u7684\u5173\u7cfb\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff0c\u8be5\u516c\u53f8\u4e8e2008\u5e74\u88ab\u6607\u9633\u5fae\u7cfb\u7edf\u516c\u53f8\uff08Sun Microsystems\uff09\u6536\u8d2d\u3002\u57282009\u5e74\uff0c\u7532\u9aa8\u6587\u516c\u53f8\uff08Oracle\uff09\u6536\u8d2d\u6607\u9633\u5fae\u7cfb\u7edf\u516c\u53f8\uff0c\u56e0\u6b64 MySQL \u76ee\u524d\u4e5f\u662f Oracle \u65d7\u4e0b\u4ea7\u54c1\u3002 MySQL \u5728\u8fc7\u53bb\u7531\u4e8e\u6027\u80fd\u9ad8\u3001\u6210\u672c\u4f4e\u3001\u53ef\u9760\u6027\u597d\uff0c\u5df2\u7ecf\u6210\u4e3a\u6700\u6d41\u884c\u7684\u5f00\u6e90\u6570\u636e\u5e93\uff0c\u56e0\u6b64\u88ab\u5e7f\u6cdb\u5730\u5e94\u7528\u4e8e\u4e2d\u5c0f\u578b\u7f51\u7ad9\u5f00\u53d1\u3002\u968f\u7740 MySQL \u7684\u4e0d\u65ad\u6210\u719f\uff0c\u5b83\u4e5f\u9010\u6e10\u88ab\u5e94\u7528\u4e8e\u66f4\u591a\u5927\u89c4\u6a21\u7f51\u7ad9\u548c\u5e94\u7528\uff0c\u6bd4\u5982\u7ef4\u57fa\u767e\u79d1\u3001\u8c37\u6b4c\uff08Google\uff09\u3001\u8138\u4e66\uff08Facebook\uff09\u3001\u6dd8\u5b9d\u7f51\u7b49\u7f51\u7ad9\u90fd\u4f7f\u7528\u4e86 MySQL \u6765\u63d0\u4f9b\u6570\u636e\u6301\u4e45\u5316\u670d\u52a1\u3002 \u7532\u9aa8\u6587\u516c\u53f8\u6536\u8d2d\u540e\u6607\u9633\u5fae\u7cfb\u7edf\u516c\u53f8\uff0c\u5927\u5e45\u8c03\u6da8 MySQL \u5546\u4e1a\u7248\u7684\u552e\u4ef7\uff0c\u4e14\u7532\u9aa8\u6587\u516c\u53f8\u4e0d\u518d\u652f\u6301\u53e6\u4e00\u4e2a\u81ea\u7531\u8f6f\u4ef6\u9879\u76ee OpenSolaris \u7684\u53d1\u5c55\uff0c\u56e0\u6b64\u5bfc\u81f4\u81ea\u7531\u8f6f\u4ef6\u793e\u533a\u5bf9\u4e8e Oracle \u662f\u5426\u8fd8\u4f1a\u6301\u7eed\u652f\u6301 MySQL \u793e\u533a\u7248\uff08MySQL \u7684\u5404\u4e2a\u53d1\u884c\u7248\u672c\u4e2d\u552f\u4e00\u514d\u8d39\u7684\u7248\u672c\uff09\u6709\u6240\u62c5\u5fe7\uff0cMySQL \u7684\u521b\u59cb\u4eba\u9ea6\u514b\u5c14\u00b7\u7ef4\u5fb7\u7ebd\u65af\u4ee5 MySQL \u4e3a\u57fa\u7840\uff0c\u521b\u5efa\u4e86 MariaDB \uff08\u4ee5\u4ed6\u5973\u513f\u7684\u540d\u5b57\u547d\u540d\u7684\u6570\u636e\u5e93\uff09\u5206\u652f\u3002\u6709\u8bb8\u591a\u539f\u6765\u4f7f\u7528 MySQL \u6570\u636e\u5e93\u7684\u516c\u53f8\uff08\u4f8b\u5982\uff1a\u7ef4\u57fa\u767e\u79d1\uff09\u5df2\u7ecf\u9646\u7eed\u5b8c\u6210\u4e86\u4ece MySQL \u6570\u636e\u5e93\u5230 MariaDB \u6570\u636e\u5e93\u7684\u8fc1\u79fb\u3002 \u5b89\u88c5 MySQL Windows \u73af\u5883 \u901a\u8fc7 \u5b98\u65b9\u7f51\u7ad9 \u63d0\u4f9b\u7684 \u4e0b\u8f7d\u94fe\u63a5 \u4e0b\u8f7d\u201cMySQL\u793e\u533a\u7248\u670d\u52a1\u5668\u201d\u5b89\u88c5\u7a0b\u5e8f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5efa\u8bae\u5927\u5bb6\u4e0b\u8f7d\u79bb\u7ebf\u5b89\u88c5\u7248\u7684MySQL Installer\u3002 \u8fd0\u884c Installer\uff0c\u6309\u7167\u4e0b\u9762\u7684\u6b65\u9aa4\u8fdb\u884c\u5b89\u88c5\u3002 \u9009\u62e9\u81ea\u5b9a\u4e49\u5b89\u88c5\u3002 \u9009\u62e9\u9700\u8981\u5b89\u88c5\u7684\u7ec4\u4ef6\u3002 \u5982\u679c\u7f3a\u5c11\u4f9d\u8d56\u9879\uff0c\u9700\u8981\u5148\u5b89\u88c5\u4f9d\u8d56\u9879\u3002 \u51c6\u5907\u5f00\u59cb\u5b89\u88c5\u3002 \u5b89\u88c5\u5b8c\u6210\u3002 \u51c6\u5907\u6267\u884c\u914d\u7f6e\u5411\u5bfc\u3002 \u6267\u884c\u5b89\u88c5\u540e\u7684\u914d\u7f6e\u5411\u5bfc\u3002 \u914d\u7f6e\u670d\u52a1\u5668\u7c7b\u578b\u548c\u7f51\u7edc\u3002 \u914d\u7f6e\u8ba4\u8bc1\u65b9\u6cd5\uff08\u4fdd\u62a4\u5bc6\u7801\u7684\u65b9\u5f0f\uff09\u3002 \u914d\u7f6e\u7528\u6237\u548c\u89d2\u8272\u3002 \u914d\u7f6eWindows\u670d\u52a1\u540d\u4ee5\u53ca\u662f\u5426\u5f00\u673a\u81ea\u542f\u3002 \u914d\u7f6e\u65e5\u5fd7\u3002 \u914d\u7f6e\u9ad8\u7ea7\u9009\u9879\u3002 \u5e94\u7528\u914d\u7f6e\u3002 \u53ef\u4ee5\u5728 Windows \u7cfb\u7edf\u7684\u201c\u670d\u52a1\u201d\u7a97\u53e3\u4e2d\u542f\u52a8\u6216\u505c\u6b62 MySQL\u3002 \u914d\u7f6e PATH \u73af\u5883\u53d8\u91cf\uff0c\u4ee5\u4fbf\u5728\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u7a97\u53e3\u4f7f\u7528 MySQL \u5ba2\u6237\u7aef\u5de5\u5177\u3002 \u6253\u5f00 Windows \u7684\u201c\u7cfb\u7edf\u201d\u7a97\u53e3\u5e76\u70b9\u51fb\u201c\u9ad8\u7ea7\u7cfb\u7edf\u8bbe\u7f6e\u201d\u3002 \u5728\u201c\u7cfb\u7edf\u5c5e\u6027\u201d\u7684\u201c\u9ad8\u7ea7\u201d\u7a97\u53e3\uff0c\u70b9\u51fb\u201c\u73af\u5883\u53d8\u91cf\u201d\u6309\u94ae\u3002 \u4fee\u6539PATH\u73af\u5883\u53d8\u91cf\uff0c\u5c06MySQL\u5b89\u88c5\u8def\u5f84\u4e0b\u7684 bin \u6587\u4ef6\u5939\u7684\u8def\u5f84\u914d\u7f6e\u5230PATH\u73af\u5883\u53d8\u91cf\u4e2d\u3002 \u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5728\u201c\u547d\u4ee4\u63d0\u793a\u7b26\u201d\u4e0b\u4f7f\u7528 MySQL \u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002 Linux \u73af\u5883 \u4e0b\u9762\u4ee5 CentOS 7.x \u73af\u5883\u4e3a\u4f8b\uff0c\u6f14\u793a\u5982\u4f55\u5b89\u88c5 MySQL 5.7.x\uff0c\u5982\u679c\u9700\u8981\u5728\u5176\u4ed6 Linux \u7cfb\u7edf\u4e0b\u5b89\u88c5\u5176\u4ed6\u7248\u672c\u7684 MySQL\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u5728\u7f51\u7edc\u4e0a\u67e5\u627e\u5bf9\u5e94\u7684\u5b89\u88c5\u6559\u7a0b\u3002 \u5b89\u88c5 MySQL\u3002 \u53ef\u4ee5\u5728 MySQL \u5b98\u65b9\u7f51\u7ad9 \u4e0b\u8f7d\u5b89\u88c5\u6587\u4ef6\u3002\u9996\u5148\u5728\u4e0b\u8f7d\u9875\u9762\u4e2d\u9009\u62e9\u5e73\u53f0\u548c\u7248\u672c\uff0c\u7136\u540e\u627e\u5230\u5bf9\u5e94\u7684\u4e0b\u8f7d\u94fe\u63a5\uff0c\u76f4\u63a5\u4e0b\u8f7d\u5305\u542b\u6240\u6709\u5b89\u88c5\u6587\u4ef6\u7684\u5f52\u6863\u6587\u4ef6\uff0c\u89e3\u5f52\u6863\u4e4b\u540e\u901a\u8fc7\u5305\u7ba1\u7406\u5de5\u5177\u8fdb\u884c\u5b89\u88c5\u3002 wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar tar -xvf mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar \u5982\u679c\u7cfb\u7edf\u4e0a\u6709 MariaDB \u76f8\u5173\u7684\u6587\u4ef6\uff0c\u9700\u8981\u5148\u79fb\u9664 MariaDB \u76f8\u5173\u7684\u6587\u4ef6\u3002 yum list installed | grep mariadb | awk '{print $1}' | xargs yum erase -y \u66f4\u65b0\u548c\u5b89\u88c5\u53ef\u80fd\u7528\u5230\u7684\u5e95\u5c42\u4f9d\u8d56\u5e93\u3002 yum update yum install -y libaio libaio-devel \u63a5\u4e0b\u6765\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6240\u793a\u7684\u987a\u5e8f\u7528 RPM\uff08Redhat Package Manager\uff09\u5de5\u5177\u5b89\u88c5 MySQL\u3002 rpm -ivh mysql-community-common-5.7.26-1.el7.x86_64.rpm rpm -ivh mysql-community-libs-5.7.26-1.el7.x86_64.rpm rpm -ivh mysql-community-libs-compat-5.7.26-1.el7.x86_64.rpm rpm -ivh mysql-community-devel-5.7.26-1.el7.x86_64.rpm rpm -ivh mysql-community-client-5.7.26-1.el7.x86_64.rpm rpm -ivh mysql-community-server-5.7.26-1.el7.x86_64.rpm \u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u5df2\u7ecf\u5b89\u88c5\u7684 MySQL \u76f8\u5173\u7684\u5305\u3002 rpm -qa | grep mysql \u914d\u7f6e MySQL\u3002 MySQL \u7684\u914d\u7f6e\u6587\u4ef6\u5728 /etc \u76ee\u5f55\u4e0b\uff0c\u540d\u4e3a my.cnf \uff0c\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\u6240\u793a\u3002 cat /etc/my.cnf # For advice on how to change settings please see # http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html [mysqld] # # Remove leading # and set to the amount of RAM for the most important data # cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%. # innodb_buffer_pool_size = 128M # # Remove leading # to turn on a very important data integrity option: logging # changes to the binary log between backups. # log_bin # # Remove leading # to set options mainly useful for reporting servers. # The server defaults are faster for transactions and fast SELECTs. # Adjust sizes as needed, experiment to find the optimal values. # join_buffer_size = 128M # sort_buffer_size = 2M # read_rnd_buffer_size = 2M datadir = /var/lib/mysql socket = /var/lib/mysql/mysql.sock # Disabling symbolic-links is recommended to prevent assorted security risks symbolic-links = 0 log-error = /var/log/mysqld.log pid-file = /var/run/mysqld/mysqld.pid \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539 MySQL \u670d\u52a1\u4f7f\u7528\u7684\u7aef\u53e3\u3001\u5b57\u7b26\u96c6\u3001\u6700\u5927\u8fde\u63a5\u6570\u3001\u5957\u63a5\u5b57\u961f\u5217\u5927\u5c0f\u3001\u6700\u5927\u6570\u636e\u5305\u5927\u5c0f\u3001\u65e5\u5fd7\u6587\u4ef6\u7684\u4f4d\u7f6e\u3001\u65e5\u5fd7\u8fc7\u671f\u65f6\u95f4\u7b49\u914d\u7f6e\u3002\u5f53\u7136\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u6765\u5bf9 MySQL \u670d\u52a1\u5668\u8fdb\u884c\u6027\u80fd\u8c03\u4f18\u548c\u5b89\u5168\u7ba1\u63a7\u3002 \u542f\u52a8 MySQL \u670d\u52a1\u3002 \u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u542f\u52a8 MySQL\u3002 service mysqld start \u5728 CentOS 7 \u4e2d\uff0c\u66f4\u63a8\u8350\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u542f\u52a8 MySQL\u3002 systemctl start mysqld \u542f\u52a8 MySQL \u6210\u529f\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u68c0\u67e5\u7f51\u7edc\u7aef\u53e3\u4f7f\u7528\u60c5\u51b5\uff0cMySQL \u9ed8\u8ba4\u4f7f\u7528 3306 \u7aef\u53e3\u3002 netstat -ntlp | grep mysql \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u627e\u662f\u5426\u6709\u540d\u4e3a mysqld \u7684\u8fdb\u7a0b\u3002 pgrep mysqld \u4f7f\u7528 MySQL \u5ba2\u6237\u7aef\u5de5\u5177\u8fde\u63a5\u670d\u52a1\u5668\u3002 \u547d\u4ee4\u884c\u5de5\u5177\uff1a mysql -u root -p \u8bf4\u660e\uff1a\u542f\u52a8\u5ba2\u6237\u7aef\u65f6\uff0c -u \u53c2\u6570\u7528\u6765\u6307\u5b9a\u7528\u6237\u540d\uff0cMySQL \u9ed8\u8ba4\u7684\u8d85\u7ea7\u7ba1\u7406\u8d26\u53f7\u4e3a root \uff1b -p \u8868\u793a\u8981\u8f93\u5165\u5bc6\u7801\uff08\u7528\u6237\u53e3\u4ee4\uff09\uff1b\u5982\u679c\u8fde\u63a5\u7684\u662f\u5176\u4ed6\u4e3b\u673a\u800c\u975e\u672c\u673a\uff0c\u53ef\u4ee5\u7528 -h \u6765\u6307\u5b9a\u8fde\u63a5\u4e3b\u673a\u7684\u4e3b\u673a\u540d\u6216IP\u5730\u5740\u3002 \u5982\u679c\u662f\u9996\u6b21\u5b89\u88c5 MySQL\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u627e\u5230\u9ed8\u8ba4\u7684\u521d\u59cb\u5bc6\u7801\u3002 cat /var/log/mysqld.log | grep password \u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u67e5\u770b MySQL \u7684\u65e5\u5fd7\u5e26\u6709 password \u7684\u884c\uff0c\u5728\u663e\u793a\u7684\u7ed3\u679c\u4e2d root@localhost: \u540e\u9762\u7684\u90e8\u5206\u5c31\u662f\u9ed8\u8ba4\u8bbe\u7f6e\u7684\u521d\u59cb\u5bc6\u7801\u3002 \u8fdb\u5165\u5ba2\u6237\u7aef\u5de5\u5177\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u6307\u4ee4\u6765\u4fee\u6539\u8d85\u7ea7\u7ba1\u7406\u5458\uff08root\uff09\u7684\u8bbf\u95ee\u53e3\u4ee4\u4e3a 123456 \u3002 set global validate_password_policy = 0 ; set global validate_password_length = 6 ; alter user 'root' @ 'localhost' identified by '123456' ; \u8bf4\u660e \uff1aMySQL \u8f83\u65b0\u7684\u7248\u672c\u9ed8\u8ba4\u4e0d\u5141\u8bb8\u4f7f\u7528\u5f31\u53e3\u4ee4\u4f5c\u4e3a\u7528\u6237\u53e3\u4ee4\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u4ee3\u7801\u4fee\u6539\u4e86\u9a8c\u8bc1\u7528\u6237\u53e3\u4ee4\u7684\u7b56\u7565\u548c\u53e3\u4ee4\u7684\u957f\u5ea6\u3002\u4e8b\u5b9e\u4e0a\u6211\u4eec\u4e0d\u5e94\u8be5\u4f7f\u7528\u5f31\u53e3\u4ee4\uff0c\u56e0\u4e3a\u5b58\u5728\u7528\u6237\u53e3\u4ee4\u88ab\u66b4\u529b\u7834\u89e3\u7684\u98ce\u9669\u3002\u8fd1\u5e74\u6765\uff0c \u653b\u51fb\u6570\u636e\u5e93\u7a83\u53d6\u6570\u636e\u548c\u52ab\u6301\u6570\u636e\u5e93\u52d2\u7d22\u6bd4\u7279\u5e01 \u7684\u4e8b\u4ef6\u5c61\u89c1\u4e0d\u9c9c\uff0c\u8981\u907f\u514d\u8fd9\u4e9b\u6f5c\u5728\u7684\u98ce\u9669\uff0c\u6700\u4e3a\u91cd\u8981\u7684\u4e00\u70b9\u662f \u4e0d\u8981\u8ba9\u6570\u636e\u5e93\u670d\u52a1\u5668\u66b4\u9732\u5728\u516c\u7f51\u4e0a \uff08\u6700\u597d\u7684\u505a\u6cd5\u662f\u5c06\u6570\u636e\u5e93\u7f6e\u4e8e\u5185\u7f51\uff0c\u81f3\u5c11\u8981\u505a\u5230\u4e0d\u5411\u516c\u7f51\u5f00\u653e\u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u8bbf\u95ee\u7aef\u53e3\uff09\uff0c\u53e6\u5916\u8981\u4fdd\u7ba1\u597d root \u8d26\u53f7\u7684\u53e3\u4ee4\uff0c\u5e94\u7528\u7cfb\u7edf\u9700\u8981\u8bbf\u95ee\u6570\u636e\u5e93\u65f6\uff0c\u901a\u5e38\u4e0d\u4f7f\u7528 root \u8d26\u53f7\u8fdb\u884c\u8bbf\u95ee\uff0c\u800c\u662f \u521b\u5efa\u5176\u4ed6\u62e5\u6709\u9002\u5f53\u6743\u9650\u7684\u8d26\u53f7\u6765\u8bbf\u95ee \u3002 \u518d\u6b21\u4f7f\u7528\u5ba2\u6237\u7aef\u5de5\u5177\u8fde\u63a5 MySQL \u670d\u52a1\u5668\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u65b0\u8bbe\u7f6e\u7684\u53e3\u4ee4\u4e86\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u64cd\u4f5c\uff0c\u53ef\u4ee5\u9009\u62e9\u56fe\u5f62\u5316\u7684\u5ba2\u6237\u7aef\u5de5\u5177\u6765\u8fde\u63a5 MySQL \u670d\u52a1\u5668\uff0c\u5305\u62ec\uff1a MySQL Workbench\uff08\u5b98\u65b9\u5de5\u5177\uff09 Navicat for MySQL\uff08\u754c\u9762\u7b80\u5355\u53cb\u597d\uff09 macOS\u73af\u5883 macOS \u7cfb\u7edf\u5b89\u88c5 MySQL \u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u53ea\u9700\u8981\u4ece\u521a\u624d\u8bf4\u5230\u7684\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d DMG \u5b89\u88c5\u6587\u4ef6\u5e76\u8fd0\u884c\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0b\u8f7d\u7684\u65f6\u5019\u9700\u8981\u6839\u636e\u81ea\u5df1\u4f7f\u7528\u7684\u662f Intel \u7684\u82af\u7247\u8fd8\u662f\u82f9\u679c\u7684 M1 \u82af\u7247\u9009\u62e9\u4e0b\u8f7d\u94fe\u63a5\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5b89\u88c5\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u5728\u201c\u7cfb\u7edf\u504f\u597d\u8bbe\u7f6e\u201d\u4e2d\u627e\u5230\u201cMySQL\u201d\uff0c\u5728\u5982\u4e0b\u6240\u793a\u7684\u753b\u9762\u4e2d\uff0c\u53ef\u4ee5\u542f\u52a8\u548c\u505c\u6b62 MySQL \u670d\u52a1\u5668\uff0c\u4e5f\u53ef\u4ee5\u5bf9 MySQL \u6838\u5fc3\u6587\u4ef6\u7684\u8def\u5f84\u8fdb\u884c\u914d\u7f6e\u3002 MySQL \u57fa\u672c\u547d\u4ee4 \u67e5\u770b\u547d\u4ee4 \u67e5\u770b\u6240\u6709\u6570\u636e\u5e93 show databases ; \u67e5\u770b\u6240\u6709\u5b57\u7b26\u96c6 show character set ; \u67e5\u770b\u6240\u6709\u7684\u6392\u5e8f\u89c4\u5219 show collation ; \u67e5\u770b\u6240\u6709\u7684\u5f15\u64ce show engines ; \u67e5\u770b\u6240\u6709\u65e5\u5fd7\u6587\u4ef6 show binary logs ; \u67e5\u770b\u6570\u636e\u5e93\u4e0b\u6240\u6709\u8868 show tables ; \u83b7\u53d6\u5e2e\u52a9 \u5728 MySQL \u547d\u4ee4\u884c\u5de5\u5177\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 help \u547d\u4ee4\u6216 ? \u6765\u83b7\u53d6\u5e2e\u52a9\uff0c\u5982\u4e0b\u6240\u793a\u3002 \u67e5\u770b show \u547d\u4ee4\u7684\u5e2e\u52a9\u3002 ? show \u67e5\u770b\u6709\u54ea\u4e9b\u5e2e\u52a9\u5185\u5bb9\u3002 ? contents \u83b7\u53d6\u51fd\u6570\u7684\u5e2e\u52a9\u3002 ? functions \u83b7\u53d6\u6570\u636e\u7c7b\u578b\u7684\u5e2e\u52a9\u3002 ? data types \u5176\u4ed6\u547d\u4ee4 \u65b0\u5efa/\u91cd\u5efa\u670d\u52a1\u5668\u8fde\u63a5 - connect / resetconnection \u3002 \u6e05\u7a7a\u5f53\u524d\u8f93\u5165 - \\c \u3002\u5728\u8f93\u5165\u9519\u8bef\u65f6\uff0c\u53ef\u4ee5\u53ca\u65f6\u4f7f\u7528 \\c \u6e05\u7a7a\u5f53\u524d\u8f93\u5165\u5e76\u91cd\u65b0\u5f00\u59cb\u3002 \u4fee\u6539\u7ec8\u6b62\u7b26\uff08\u5b9a\u754c\u7b26\uff09- delimiter \u3002\u9ed8\u8ba4\u7684\u7ec8\u6b62\u7b26\u662f ; \uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u547d\u4ee4\u4fee\u6539\u6210\u5176\u4ed6\u7684\u5b57\u7b26\uff0c\u4f8b\u5982\u4fee\u6539\u4e3a $ \u7b26\u53f7\uff0c\u53ef\u4ee5\u7528 delimiter $ \u547d\u4ee4\u3002 \u6253\u5f00\u7cfb\u7edf\u9ed8\u8ba4\u7f16\u8f91\u5668 - edit \u3002\u7f16\u8f91\u5b8c\u6210\u4fdd\u5b58\u5173\u95ed\u4e4b\u540e\uff0c\u547d\u4ee4\u884c\u4f1a\u81ea\u52a8\u6267\u884c\u7f16\u8f91\u7684\u5185\u5bb9\u3002 \u67e5\u770b\u670d\u52a1\u5668\u72b6\u6001 - status \u3002 \u4fee\u6539\u9ed8\u8ba4\u63d0\u793a\u7b26 - prompt \u3002 \u6267\u884c\u7cfb\u7edf\u547d\u4ee4 - system \u3002\u53ef\u4ee5\u5c06\u7cfb\u7edf\u547d\u4ee4\u8ddf\u5728 system \u547d\u4ee4\u7684\u540e\u9762\u6267\u884c\uff0c system \u547d\u4ee4\u4e5f\u53ef\u4ee5\u7f29\u5199\u4e3a \\! \u3002 \u6267\u884c SQL \u6587\u4ef6 - source \u3002 source \u547d\u4ee4\u540e\u9762\u8ddf SQL \u6587\u4ef6\u8def\u5f84\u3002 \u91cd\u5b9a\u5411\u8f93\u51fa - tee / notee \u3002\u53ef\u4ee5\u5c06\u547d\u4ee4\u7684\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u4e2d\u3002 \u5207\u6362\u6570\u636e\u5e93 - use \u3002 \u663e\u793a\u8b66\u544a\u4fe1\u606f - warnings \u3002 \u9000\u51fa\u547d\u4ee4\u884c - quit \u6216 exit \u3002","title":"\u7b2c40\u8bfe\uff1a\u5173\u7cfb\u578b\u6570\u636e\u5e93\u548cMySQL\u6982\u8ff0"},{"location":"%E7%AC%AC40%E8%AF%BE%EF%BC%9A%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CMySQL%E6%A6%82%E8%BF%B0/#40mysql","text":"","title":"\u7b2c40\u8bfe\uff1a\u5173\u7cfb\u578b\u6570\u636e\u5e93\u548cMySQL\u6982\u8ff0"},{"location":"%E7%AC%AC40%E8%AF%BE%EF%BC%9A%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CMySQL%E6%A6%82%E8%BF%B0/#_1","text":"\u6570\u636e\u6301\u4e45\u5316 - \u5c06\u6570\u636e\u4fdd\u5b58\u5230\u80fd\u591f\u957f\u4e45\u4fdd\u5b58\u6570\u636e\u7684\u5b58\u50a8\u4ecb\u8d28\u4e2d\uff0c\u5728\u6389\u7535\u7684\u60c5\u51b5\u4e0b\u6570\u636e\u4e5f\u4e0d\u4f1a\u4e22\u5931\u3002 \u6570\u636e\u5e93\u53d1\u5c55\u53f2 - \u7f51\u72b6\u6570\u636e\u5e93\u3001\u5c42\u6b21\u6570\u636e\u5e93\u3001\u5173\u7cfb\u6570\u636e\u5e93\u3001NoSQL \u6570\u636e\u5e93\u3001NewSQL \u6570\u636e\u5e93\u3002 1970\u5e74\uff0cIBM\u7684\u7814\u7a76\u5458E.F.Codd\u5728 Communication of the ACM \u4e0a\u53d1\u8868\u4e86\u540d\u4e3a A Relational Model of Data for Large Shared Data Banks \u7684\u8bba\u6587\uff0c\u63d0\u51fa\u4e86 \u5173\u7cfb\u6a21\u578b \u7684\u6982\u5ff5\uff0c\u5960\u5b9a\u4e86\u5173\u7cfb\u6a21\u578b\u7684\u7406\u8bba\u57fa\u7840\u3002\u540e\u6765Codd\u53c8\u9646\u7eed\u53d1\u8868\u591a\u7bc7\u6587\u7ae0\uff0c\u8bba\u8ff0\u4e86\u8303\u5f0f\u7406\u8bba\u548c\u8861\u91cf\u5173\u7cfb\u7cfb\u7edf\u768412\u6761\u6807\u51c6\uff0c\u7528\u6570\u5b66\u7406\u8bba\u5960\u5b9a\u4e86\u5173\u7cfb\u6570\u636e\u5e93\u7684\u57fa\u7840\u3002 \u5173\u7cfb\u6570\u636e\u5e93\u7279\u70b9\u3002 \u7406\u8bba\u57fa\u7840\uff1a \u5173\u7cfb\u4ee3\u6570 \uff08\u5173\u7cfb\u8fd0\u7b97\u3001\u96c6\u5408\u8bba\u3001\u4e00\u9636\u8c13\u8bcd\u903b\u8f91\uff09\u3002 \u5177\u4f53\u8868\u8c61\uff1a\u7528 \u4e8c\u7ef4\u8868 \uff08\u6709\u884c\u548c\u5217\uff09\u7ec4\u7ec7\u6570\u636e\u3002 \u7f16\u7a0b\u8bed\u8a00\uff1a \u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00 \uff08SQL\uff09\u3002 ER\u6a21\u578b\uff08\u5b9e\u4f53\u5173\u7cfb\u6a21\u578b\uff09\u548c\u6982\u5ff5\u6a21\u578b\u56fe\u3002 ER\u6a21\u578b \uff0c\u5168\u79f0\u4e3a \u5b9e\u4f53\u5173\u7cfb\u6a21\u578b \uff08Entity-Relationship Model\uff09\uff0c\u7531\u7f8e\u7c4d\u534e\u88d4\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u9648\u54c1\u5c71\u5148\u751f\u63d0\u51fa\uff0c\u662f\u6982\u5ff5\u6570\u636e\u6a21\u578b\u7684\u9ad8\u5c42\u63cf\u8ff0\u65b9\u5f0f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5b9e\u4f53 - \u77e9\u5f62\u6846 \u5c5e\u6027 - \u692d\u5706\u6846 \u5173\u7cfb - \u83f1\u5f62\u6846 \u91cd\u6570 - 1:1\uff08\u4e00\u5bf9\u4e00\uff09 / 1:N\uff08\u4e00\u5bf9\u591a\uff09 / M:N\uff08\u591a\u5bf9\u591a\uff09 \u5b9e\u9645\u9879\u76ee\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u6570\u636e\u5e93\u5efa\u6a21\u5de5\u5177\uff08\u5982\uff1aPowerDesigner\uff09\u6765\u7ed8\u5236\u6982\u5ff5\u6570\u636e\u6a21\u578b\uff08\u5176\u672c\u8d28\u5c31\u662f ER \u6a21\u578b\uff09\uff0c\u7136\u540e\u518d\u8bbe\u7f6e\u597d\u76ee\u6807\u6570\u636e\u5e93\u7cfb\u7edf\uff0c\u5c06\u6982\u5ff5\u6a21\u578b\u8f6c\u6362\u6210\u7269\u7406\u6a21\u578b\uff0c\u6700\u7ec8\u751f\u6210\u521b\u5efa\u4e8c\u7ef4\u8868\u7684 SQL\uff08\u5f88\u591a\u5de5\u5177\u90fd\u53ef\u4ee5\u6839\u636e\u6211\u4eec\u8bbe\u8ba1\u7684\u7269\u7406\u6a21\u578b\u56fe\u4ee5\u53ca\u8bbe\u5b9a\u7684\u76ee\u6807\u6570\u636e\u5e93\u6765\u5bfc\u51fa SQL \u6216\u76f4\u63a5\u751f\u6210\u6570\u636e\u8868\uff09\u3002 \u5173\u7cfb\u6570\u636e\u5e93\u4ea7\u54c1\u3002 Oracle - \u76ee\u524d\u4e16\u754c\u4e0a\u4f7f\u7528\u6700\u4e3a\u5e7f\u6cdb\u7684\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u901a\u7528\u7684\u6570\u636e\u5e93\u7cfb\u7edf\uff0c\u5b83\u5177\u6709\u5b8c\u6574\u7684\u6570\u636e\u7ba1\u7406\u529f\u80fd\uff1b\u4f5c\u4e3a\u4e00\u4e2a\u5173\u7cfb\u6570\u636e\u5e93\uff0c\u5b83\u662f\u4e00\u4e2a\u5b8c\u5907\u5173\u7cfb\u7684\u4ea7\u54c1\uff1b\u4f5c\u4e3a\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u5b83\u5b9e\u73b0\u4e86\u5206\u5e03\u5f0f\u5904\u7406\u7684\u529f\u80fd\u3002\u5728 Oracle \u6700\u65b0\u7684 12c \u7248\u672c\u4e2d\uff0c\u8fd8\u5f15\u5165\u4e86\u591a\u627f\u79df\u65b9\u67b6\u6784\uff0c\u4f7f\u7528\u8be5\u67b6\u6784\u53ef\u8f7b\u677e\u90e8\u7f72\u548c\u7ba1\u7406\u6570\u636e\u5e93\u4e91\u3002 DB2 - IBM \u516c\u53f8\u5f00\u53d1\u7684\u3001\u4e3b\u8981\u8fd0\u884c\u4e8e Unix\uff08\u5305\u62ec IBM \u81ea\u5bb6\u7684 AIX \uff09\u3001Linux\u3001\u4ee5\u53ca Windows \u670d\u52a1\u5668\u7248\u7b49\u7cfb\u7edf\u7684\u5173\u7cfb\u6570\u636e\u5e93\u4ea7\u54c1\u3002DB2 \u5386\u53f2\u60a0\u4e45\u4e14\u88ab\u8ba4\u4e3a\u662f\u6700\u65e9\u4f7f\u7528 SQL \u7684\u6570\u636e\u5e93\u4ea7\u54c1\uff0c\u5b83\u62e5\u6709\u8f83\u4e3a\u5f3a\u5927\u7684\u5546\u4e1a\u667a\u80fd\u529f\u80fd\u3002 SQL Server - \u7531 Microsoft \u5f00\u53d1\u548c\u63a8\u5e7f\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4ea7\u54c1\uff0c\u6700\u521d\u9002\u7528\u4e8e\u4e2d\u5c0f\u4f01\u4e1a\u7684\u6570\u636e\u7ba1\u7406\uff0c\u4f46\u662f\u8fd1\u5e74\u6765\u5b83\u7684\u5e94\u7528\u8303\u56f4\u6709\u6240\u6269\u5c55\uff0c\u90e8\u5206\u5927\u4f01\u4e1a\u751a\u81f3\u662f\u8de8\u56fd\u516c\u53f8\u4e5f\u5f00\u59cb\u57fa\u4e8e\u5b83\u6765\u6784\u5efa\u81ea\u5df1\u7684\u6570\u636e\u7ba1\u7406\u7cfb\u7edf\u3002 MySQL - MySQL \u662f\u5f00\u653e\u6e90\u4ee3\u7801\u7684\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5728 GPL\uff08General Public License\uff09\u7684\u8bb8\u53ef\u4e0b\u4e0b\u8f7d\u5e76\u6839\u636e\u4e2a\u6027\u5316\u7684\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u3002MySQL \u56e0\u4e3a\u5176\u901f\u5ea6\u3001\u53ef\u9760\u6027\u548c\u9002\u5e94\u6027\u800c\u5907\u53d7\u5173\u6ce8\u3002 PostgreSQL - \u5728 BSD \u8bb8\u53ef\u8bc1\u4e0b\u53d1\u884c\u7684\u5f00\u653e\u6e90\u4ee3\u7801\u7684\u5173\u7cfb\u6570\u636e\u5e93\u4ea7\u54c1\u3002","title":"\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6982\u8ff0"},{"location":"%E7%AC%AC40%E8%AF%BE%EF%BC%9A%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CMySQL%E6%A6%82%E8%BF%B0/#mysql","text":"MySQL \u6700\u65e9\u662f\u7531\u745e\u5178\u7684 MySQL AB \u516c\u53f8\u5f00\u53d1\u7684\u4e00\u4e2a\u5f00\u653e\u6e90\u7801\u7684\u5173\u7cfb\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff0c\u8be5\u516c\u53f8\u4e8e2008\u5e74\u88ab\u6607\u9633\u5fae\u7cfb\u7edf\u516c\u53f8\uff08Sun Microsystems\uff09\u6536\u8d2d\u3002\u57282009\u5e74\uff0c\u7532\u9aa8\u6587\u516c\u53f8\uff08Oracle\uff09\u6536\u8d2d\u6607\u9633\u5fae\u7cfb\u7edf\u516c\u53f8\uff0c\u56e0\u6b64 MySQL \u76ee\u524d\u4e5f\u662f Oracle \u65d7\u4e0b\u4ea7\u54c1\u3002 MySQL \u5728\u8fc7\u53bb\u7531\u4e8e\u6027\u80fd\u9ad8\u3001\u6210\u672c\u4f4e\u3001\u53ef\u9760\u6027\u597d\uff0c\u5df2\u7ecf\u6210\u4e3a\u6700\u6d41\u884c\u7684\u5f00\u6e90\u6570\u636e\u5e93\uff0c\u56e0\u6b64\u88ab\u5e7f\u6cdb\u5730\u5e94\u7528\u4e8e\u4e2d\u5c0f\u578b\u7f51\u7ad9\u5f00\u53d1\u3002\u968f\u7740 MySQL \u7684\u4e0d\u65ad\u6210\u719f\uff0c\u5b83\u4e5f\u9010\u6e10\u88ab\u5e94\u7528\u4e8e\u66f4\u591a\u5927\u89c4\u6a21\u7f51\u7ad9\u548c\u5e94\u7528\uff0c\u6bd4\u5982\u7ef4\u57fa\u767e\u79d1\u3001\u8c37\u6b4c\uff08Google\uff09\u3001\u8138\u4e66\uff08Facebook\uff09\u3001\u6dd8\u5b9d\u7f51\u7b49\u7f51\u7ad9\u90fd\u4f7f\u7528\u4e86 MySQL \u6765\u63d0\u4f9b\u6570\u636e\u6301\u4e45\u5316\u670d\u52a1\u3002 \u7532\u9aa8\u6587\u516c\u53f8\u6536\u8d2d\u540e\u6607\u9633\u5fae\u7cfb\u7edf\u516c\u53f8\uff0c\u5927\u5e45\u8c03\u6da8 MySQL \u5546\u4e1a\u7248\u7684\u552e\u4ef7\uff0c\u4e14\u7532\u9aa8\u6587\u516c\u53f8\u4e0d\u518d\u652f\u6301\u53e6\u4e00\u4e2a\u81ea\u7531\u8f6f\u4ef6\u9879\u76ee OpenSolaris \u7684\u53d1\u5c55\uff0c\u56e0\u6b64\u5bfc\u81f4\u81ea\u7531\u8f6f\u4ef6\u793e\u533a\u5bf9\u4e8e Oracle \u662f\u5426\u8fd8\u4f1a\u6301\u7eed\u652f\u6301 MySQL \u793e\u533a\u7248\uff08MySQL \u7684\u5404\u4e2a\u53d1\u884c\u7248\u672c\u4e2d\u552f\u4e00\u514d\u8d39\u7684\u7248\u672c\uff09\u6709\u6240\u62c5\u5fe7\uff0cMySQL \u7684\u521b\u59cb\u4eba\u9ea6\u514b\u5c14\u00b7\u7ef4\u5fb7\u7ebd\u65af\u4ee5 MySQL \u4e3a\u57fa\u7840\uff0c\u521b\u5efa\u4e86 MariaDB \uff08\u4ee5\u4ed6\u5973\u513f\u7684\u540d\u5b57\u547d\u540d\u7684\u6570\u636e\u5e93\uff09\u5206\u652f\u3002\u6709\u8bb8\u591a\u539f\u6765\u4f7f\u7528 MySQL \u6570\u636e\u5e93\u7684\u516c\u53f8\uff08\u4f8b\u5982\uff1a\u7ef4\u57fa\u767e\u79d1\uff09\u5df2\u7ecf\u9646\u7eed\u5b8c\u6210\u4e86\u4ece MySQL \u6570\u636e\u5e93\u5230 MariaDB \u6570\u636e\u5e93\u7684\u8fc1\u79fb\u3002","title":"MySQL \u7b80\u4ecb"},{"location":"%E7%AC%AC40%E8%AF%BE%EF%BC%9A%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CMySQL%E6%A6%82%E8%BF%B0/#mysql_1","text":"","title":"\u5b89\u88c5 MySQL"},{"location":"%E7%AC%AC40%E8%AF%BE%EF%BC%9A%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CMySQL%E6%A6%82%E8%BF%B0/#windows","text":"\u901a\u8fc7 \u5b98\u65b9\u7f51\u7ad9 \u63d0\u4f9b\u7684 \u4e0b\u8f7d\u94fe\u63a5 \u4e0b\u8f7d\u201cMySQL\u793e\u533a\u7248\u670d\u52a1\u5668\u201d\u5b89\u88c5\u7a0b\u5e8f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5efa\u8bae\u5927\u5bb6\u4e0b\u8f7d\u79bb\u7ebf\u5b89\u88c5\u7248\u7684MySQL Installer\u3002 \u8fd0\u884c Installer\uff0c\u6309\u7167\u4e0b\u9762\u7684\u6b65\u9aa4\u8fdb\u884c\u5b89\u88c5\u3002 \u9009\u62e9\u81ea\u5b9a\u4e49\u5b89\u88c5\u3002 \u9009\u62e9\u9700\u8981\u5b89\u88c5\u7684\u7ec4\u4ef6\u3002 \u5982\u679c\u7f3a\u5c11\u4f9d\u8d56\u9879\uff0c\u9700\u8981\u5148\u5b89\u88c5\u4f9d\u8d56\u9879\u3002 \u51c6\u5907\u5f00\u59cb\u5b89\u88c5\u3002 \u5b89\u88c5\u5b8c\u6210\u3002 \u51c6\u5907\u6267\u884c\u914d\u7f6e\u5411\u5bfc\u3002 \u6267\u884c\u5b89\u88c5\u540e\u7684\u914d\u7f6e\u5411\u5bfc\u3002 \u914d\u7f6e\u670d\u52a1\u5668\u7c7b\u578b\u548c\u7f51\u7edc\u3002 \u914d\u7f6e\u8ba4\u8bc1\u65b9\u6cd5\uff08\u4fdd\u62a4\u5bc6\u7801\u7684\u65b9\u5f0f\uff09\u3002 \u914d\u7f6e\u7528\u6237\u548c\u89d2\u8272\u3002 \u914d\u7f6eWindows\u670d\u52a1\u540d\u4ee5\u53ca\u662f\u5426\u5f00\u673a\u81ea\u542f\u3002 \u914d\u7f6e\u65e5\u5fd7\u3002 \u914d\u7f6e\u9ad8\u7ea7\u9009\u9879\u3002 \u5e94\u7528\u914d\u7f6e\u3002 \u53ef\u4ee5\u5728 Windows \u7cfb\u7edf\u7684\u201c\u670d\u52a1\u201d\u7a97\u53e3\u4e2d\u542f\u52a8\u6216\u505c\u6b62 MySQL\u3002 \u914d\u7f6e PATH \u73af\u5883\u53d8\u91cf\uff0c\u4ee5\u4fbf\u5728\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u7a97\u53e3\u4f7f\u7528 MySQL \u5ba2\u6237\u7aef\u5de5\u5177\u3002 \u6253\u5f00 Windows \u7684\u201c\u7cfb\u7edf\u201d\u7a97\u53e3\u5e76\u70b9\u51fb\u201c\u9ad8\u7ea7\u7cfb\u7edf\u8bbe\u7f6e\u201d\u3002 \u5728\u201c\u7cfb\u7edf\u5c5e\u6027\u201d\u7684\u201c\u9ad8\u7ea7\u201d\u7a97\u53e3\uff0c\u70b9\u51fb\u201c\u73af\u5883\u53d8\u91cf\u201d\u6309\u94ae\u3002 \u4fee\u6539PATH\u73af\u5883\u53d8\u91cf\uff0c\u5c06MySQL\u5b89\u88c5\u8def\u5f84\u4e0b\u7684 bin \u6587\u4ef6\u5939\u7684\u8def\u5f84\u914d\u7f6e\u5230PATH\u73af\u5883\u53d8\u91cf\u4e2d\u3002 \u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5728\u201c\u547d\u4ee4\u63d0\u793a\u7b26\u201d\u4e0b\u4f7f\u7528 MySQL \u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002","title":"Windows \u73af\u5883"},{"location":"%E7%AC%AC40%E8%AF%BE%EF%BC%9A%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CMySQL%E6%A6%82%E8%BF%B0/#linux","text":"\u4e0b\u9762\u4ee5 CentOS 7.x \u73af\u5883\u4e3a\u4f8b\uff0c\u6f14\u793a\u5982\u4f55\u5b89\u88c5 MySQL 5.7.x\uff0c\u5982\u679c\u9700\u8981\u5728\u5176\u4ed6 Linux \u7cfb\u7edf\u4e0b\u5b89\u88c5\u5176\u4ed6\u7248\u672c\u7684 MySQL\uff0c\u8bf7\u8bfb\u8005\u81ea\u884c\u5728\u7f51\u7edc\u4e0a\u67e5\u627e\u5bf9\u5e94\u7684\u5b89\u88c5\u6559\u7a0b\u3002 \u5b89\u88c5 MySQL\u3002 \u53ef\u4ee5\u5728 MySQL \u5b98\u65b9\u7f51\u7ad9 \u4e0b\u8f7d\u5b89\u88c5\u6587\u4ef6\u3002\u9996\u5148\u5728\u4e0b\u8f7d\u9875\u9762\u4e2d\u9009\u62e9\u5e73\u53f0\u548c\u7248\u672c\uff0c\u7136\u540e\u627e\u5230\u5bf9\u5e94\u7684\u4e0b\u8f7d\u94fe\u63a5\uff0c\u76f4\u63a5\u4e0b\u8f7d\u5305\u542b\u6240\u6709\u5b89\u88c5\u6587\u4ef6\u7684\u5f52\u6863\u6587\u4ef6\uff0c\u89e3\u5f52\u6863\u4e4b\u540e\u901a\u8fc7\u5305\u7ba1\u7406\u5de5\u5177\u8fdb\u884c\u5b89\u88c5\u3002 wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar tar -xvf mysql-5.7.26-1.el7.x86_64.rpm-bundle.tar \u5982\u679c\u7cfb\u7edf\u4e0a\u6709 MariaDB \u76f8\u5173\u7684\u6587\u4ef6\uff0c\u9700\u8981\u5148\u79fb\u9664 MariaDB \u76f8\u5173\u7684\u6587\u4ef6\u3002 yum list installed | grep mariadb | awk '{print $1}' | xargs yum erase -y \u66f4\u65b0\u548c\u5b89\u88c5\u53ef\u80fd\u7528\u5230\u7684\u5e95\u5c42\u4f9d\u8d56\u5e93\u3002 yum update yum install -y libaio libaio-devel \u63a5\u4e0b\u6765\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6240\u793a\u7684\u987a\u5e8f\u7528 RPM\uff08Redhat Package Manager\uff09\u5de5\u5177\u5b89\u88c5 MySQL\u3002 rpm -ivh mysql-community-common-5.7.26-1.el7.x86_64.rpm rpm -ivh mysql-community-libs-5.7.26-1.el7.x86_64.rpm rpm -ivh mysql-community-libs-compat-5.7.26-1.el7.x86_64.rpm rpm -ivh mysql-community-devel-5.7.26-1.el7.x86_64.rpm rpm -ivh mysql-community-client-5.7.26-1.el7.x86_64.rpm rpm -ivh mysql-community-server-5.7.26-1.el7.x86_64.rpm \u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u5df2\u7ecf\u5b89\u88c5\u7684 MySQL \u76f8\u5173\u7684\u5305\u3002 rpm -qa | grep mysql \u914d\u7f6e MySQL\u3002 MySQL \u7684\u914d\u7f6e\u6587\u4ef6\u5728 /etc \u76ee\u5f55\u4e0b\uff0c\u540d\u4e3a my.cnf \uff0c\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\u6240\u793a\u3002 cat /etc/my.cnf # For advice on how to change settings please see # http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html [mysqld] # # Remove leading # and set to the amount of RAM for the most important data # cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%. # innodb_buffer_pool_size = 128M # # Remove leading # to turn on a very important data integrity option: logging # changes to the binary log between backups. # log_bin # # Remove leading # to set options mainly useful for reporting servers. # The server defaults are faster for transactions and fast SELECTs. # Adjust sizes as needed, experiment to find the optimal values. # join_buffer_size = 128M # sort_buffer_size = 2M # read_rnd_buffer_size = 2M datadir = /var/lib/mysql socket = /var/lib/mysql/mysql.sock # Disabling symbolic-links is recommended to prevent assorted security risks symbolic-links = 0 log-error = /var/log/mysqld.log pid-file = /var/run/mysqld/mysqld.pid \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539 MySQL \u670d\u52a1\u4f7f\u7528\u7684\u7aef\u53e3\u3001\u5b57\u7b26\u96c6\u3001\u6700\u5927\u8fde\u63a5\u6570\u3001\u5957\u63a5\u5b57\u961f\u5217\u5927\u5c0f\u3001\u6700\u5927\u6570\u636e\u5305\u5927\u5c0f\u3001\u65e5\u5fd7\u6587\u4ef6\u7684\u4f4d\u7f6e\u3001\u65e5\u5fd7\u8fc7\u671f\u65f6\u95f4\u7b49\u914d\u7f6e\u3002\u5f53\u7136\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u6765\u5bf9 MySQL \u670d\u52a1\u5668\u8fdb\u884c\u6027\u80fd\u8c03\u4f18\u548c\u5b89\u5168\u7ba1\u63a7\u3002 \u542f\u52a8 MySQL \u670d\u52a1\u3002 \u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u542f\u52a8 MySQL\u3002 service mysqld start \u5728 CentOS 7 \u4e2d\uff0c\u66f4\u63a8\u8350\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u542f\u52a8 MySQL\u3002 systemctl start mysqld \u542f\u52a8 MySQL \u6210\u529f\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u68c0\u67e5\u7f51\u7edc\u7aef\u53e3\u4f7f\u7528\u60c5\u51b5\uff0cMySQL \u9ed8\u8ba4\u4f7f\u7528 3306 \u7aef\u53e3\u3002 netstat -ntlp | grep mysql \u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u627e\u662f\u5426\u6709\u540d\u4e3a mysqld \u7684\u8fdb\u7a0b\u3002 pgrep mysqld \u4f7f\u7528 MySQL \u5ba2\u6237\u7aef\u5de5\u5177\u8fde\u63a5\u670d\u52a1\u5668\u3002 \u547d\u4ee4\u884c\u5de5\u5177\uff1a mysql -u root -p \u8bf4\u660e\uff1a\u542f\u52a8\u5ba2\u6237\u7aef\u65f6\uff0c -u \u53c2\u6570\u7528\u6765\u6307\u5b9a\u7528\u6237\u540d\uff0cMySQL \u9ed8\u8ba4\u7684\u8d85\u7ea7\u7ba1\u7406\u8d26\u53f7\u4e3a root \uff1b -p \u8868\u793a\u8981\u8f93\u5165\u5bc6\u7801\uff08\u7528\u6237\u53e3\u4ee4\uff09\uff1b\u5982\u679c\u8fde\u63a5\u7684\u662f\u5176\u4ed6\u4e3b\u673a\u800c\u975e\u672c\u673a\uff0c\u53ef\u4ee5\u7528 -h \u6765\u6307\u5b9a\u8fde\u63a5\u4e3b\u673a\u7684\u4e3b\u673a\u540d\u6216IP\u5730\u5740\u3002 \u5982\u679c\u662f\u9996\u6b21\u5b89\u88c5 MySQL\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u627e\u5230\u9ed8\u8ba4\u7684\u521d\u59cb\u5bc6\u7801\u3002 cat /var/log/mysqld.log | grep password \u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u67e5\u770b MySQL \u7684\u65e5\u5fd7\u5e26\u6709 password \u7684\u884c\uff0c\u5728\u663e\u793a\u7684\u7ed3\u679c\u4e2d root@localhost: \u540e\u9762\u7684\u90e8\u5206\u5c31\u662f\u9ed8\u8ba4\u8bbe\u7f6e\u7684\u521d\u59cb\u5bc6\u7801\u3002 \u8fdb\u5165\u5ba2\u6237\u7aef\u5de5\u5177\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u6307\u4ee4\u6765\u4fee\u6539\u8d85\u7ea7\u7ba1\u7406\u5458\uff08root\uff09\u7684\u8bbf\u95ee\u53e3\u4ee4\u4e3a 123456 \u3002 set global validate_password_policy = 0 ; set global validate_password_length = 6 ; alter user 'root' @ 'localhost' identified by '123456' ; \u8bf4\u660e \uff1aMySQL \u8f83\u65b0\u7684\u7248\u672c\u9ed8\u8ba4\u4e0d\u5141\u8bb8\u4f7f\u7528\u5f31\u53e3\u4ee4\u4f5c\u4e3a\u7528\u6237\u53e3\u4ee4\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u4ee3\u7801\u4fee\u6539\u4e86\u9a8c\u8bc1\u7528\u6237\u53e3\u4ee4\u7684\u7b56\u7565\u548c\u53e3\u4ee4\u7684\u957f\u5ea6\u3002\u4e8b\u5b9e\u4e0a\u6211\u4eec\u4e0d\u5e94\u8be5\u4f7f\u7528\u5f31\u53e3\u4ee4\uff0c\u56e0\u4e3a\u5b58\u5728\u7528\u6237\u53e3\u4ee4\u88ab\u66b4\u529b\u7834\u89e3\u7684\u98ce\u9669\u3002\u8fd1\u5e74\u6765\uff0c \u653b\u51fb\u6570\u636e\u5e93\u7a83\u53d6\u6570\u636e\u548c\u52ab\u6301\u6570\u636e\u5e93\u52d2\u7d22\u6bd4\u7279\u5e01 \u7684\u4e8b\u4ef6\u5c61\u89c1\u4e0d\u9c9c\uff0c\u8981\u907f\u514d\u8fd9\u4e9b\u6f5c\u5728\u7684\u98ce\u9669\uff0c\u6700\u4e3a\u91cd\u8981\u7684\u4e00\u70b9\u662f \u4e0d\u8981\u8ba9\u6570\u636e\u5e93\u670d\u52a1\u5668\u66b4\u9732\u5728\u516c\u7f51\u4e0a \uff08\u6700\u597d\u7684\u505a\u6cd5\u662f\u5c06\u6570\u636e\u5e93\u7f6e\u4e8e\u5185\u7f51\uff0c\u81f3\u5c11\u8981\u505a\u5230\u4e0d\u5411\u516c\u7f51\u5f00\u653e\u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u8bbf\u95ee\u7aef\u53e3\uff09\uff0c\u53e6\u5916\u8981\u4fdd\u7ba1\u597d root \u8d26\u53f7\u7684\u53e3\u4ee4\uff0c\u5e94\u7528\u7cfb\u7edf\u9700\u8981\u8bbf\u95ee\u6570\u636e\u5e93\u65f6\uff0c\u901a\u5e38\u4e0d\u4f7f\u7528 root \u8d26\u53f7\u8fdb\u884c\u8bbf\u95ee\uff0c\u800c\u662f \u521b\u5efa\u5176\u4ed6\u62e5\u6709\u9002\u5f53\u6743\u9650\u7684\u8d26\u53f7\u6765\u8bbf\u95ee \u3002 \u518d\u6b21\u4f7f\u7528\u5ba2\u6237\u7aef\u5de5\u5177\u8fde\u63a5 MySQL \u670d\u52a1\u5668\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u65b0\u8bbe\u7f6e\u7684\u53e3\u4ee4\u4e86\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u64cd\u4f5c\uff0c\u53ef\u4ee5\u9009\u62e9\u56fe\u5f62\u5316\u7684\u5ba2\u6237\u7aef\u5de5\u5177\u6765\u8fde\u63a5 MySQL \u670d\u52a1\u5668\uff0c\u5305\u62ec\uff1a MySQL Workbench\uff08\u5b98\u65b9\u5de5\u5177\uff09 Navicat for MySQL\uff08\u754c\u9762\u7b80\u5355\u53cb\u597d\uff09","title":"Linux \u73af\u5883"},{"location":"%E7%AC%AC40%E8%AF%BE%EF%BC%9A%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CMySQL%E6%A6%82%E8%BF%B0/#macos","text":"macOS \u7cfb\u7edf\u5b89\u88c5 MySQL \u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u53ea\u9700\u8981\u4ece\u521a\u624d\u8bf4\u5230\u7684\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d DMG \u5b89\u88c5\u6587\u4ef6\u5e76\u8fd0\u884c\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0b\u8f7d\u7684\u65f6\u5019\u9700\u8981\u6839\u636e\u81ea\u5df1\u4f7f\u7528\u7684\u662f Intel \u7684\u82af\u7247\u8fd8\u662f\u82f9\u679c\u7684 M1 \u82af\u7247\u9009\u62e9\u4e0b\u8f7d\u94fe\u63a5\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u5b89\u88c5\u6210\u529f\u540e\uff0c\u53ef\u4ee5\u5728\u201c\u7cfb\u7edf\u504f\u597d\u8bbe\u7f6e\u201d\u4e2d\u627e\u5230\u201cMySQL\u201d\uff0c\u5728\u5982\u4e0b\u6240\u793a\u7684\u753b\u9762\u4e2d\uff0c\u53ef\u4ee5\u542f\u52a8\u548c\u505c\u6b62 MySQL \u670d\u52a1\u5668\uff0c\u4e5f\u53ef\u4ee5\u5bf9 MySQL \u6838\u5fc3\u6587\u4ef6\u7684\u8def\u5f84\u8fdb\u884c\u914d\u7f6e\u3002","title":"macOS\u73af\u5883"},{"location":"%E7%AC%AC40%E8%AF%BE%EF%BC%9A%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CMySQL%E6%A6%82%E8%BF%B0/#mysql_2","text":"","title":"MySQL \u57fa\u672c\u547d\u4ee4"},{"location":"%E7%AC%AC40%E8%AF%BE%EF%BC%9A%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CMySQL%E6%A6%82%E8%BF%B0/#_2","text":"\u67e5\u770b\u6240\u6709\u6570\u636e\u5e93 show databases ; \u67e5\u770b\u6240\u6709\u5b57\u7b26\u96c6 show character set ; \u67e5\u770b\u6240\u6709\u7684\u6392\u5e8f\u89c4\u5219 show collation ; \u67e5\u770b\u6240\u6709\u7684\u5f15\u64ce show engines ; \u67e5\u770b\u6240\u6709\u65e5\u5fd7\u6587\u4ef6 show binary logs ; \u67e5\u770b\u6570\u636e\u5e93\u4e0b\u6240\u6709\u8868 show tables ;","title":"\u67e5\u770b\u547d\u4ee4"},{"location":"%E7%AC%AC40%E8%AF%BE%EF%BC%9A%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CMySQL%E6%A6%82%E8%BF%B0/#_3","text":"\u5728 MySQL \u547d\u4ee4\u884c\u5de5\u5177\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 help \u547d\u4ee4\u6216 ? \u6765\u83b7\u53d6\u5e2e\u52a9\uff0c\u5982\u4e0b\u6240\u793a\u3002 \u67e5\u770b show \u547d\u4ee4\u7684\u5e2e\u52a9\u3002 ? show \u67e5\u770b\u6709\u54ea\u4e9b\u5e2e\u52a9\u5185\u5bb9\u3002 ? contents \u83b7\u53d6\u51fd\u6570\u7684\u5e2e\u52a9\u3002 ? functions \u83b7\u53d6\u6570\u636e\u7c7b\u578b\u7684\u5e2e\u52a9\u3002 ? data types","title":"\u83b7\u53d6\u5e2e\u52a9"},{"location":"%E7%AC%AC40%E8%AF%BE%EF%BC%9A%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8CMySQL%E6%A6%82%E8%BF%B0/#_4","text":"\u65b0\u5efa/\u91cd\u5efa\u670d\u52a1\u5668\u8fde\u63a5 - connect / resetconnection \u3002 \u6e05\u7a7a\u5f53\u524d\u8f93\u5165 - \\c \u3002\u5728\u8f93\u5165\u9519\u8bef\u65f6\uff0c\u53ef\u4ee5\u53ca\u65f6\u4f7f\u7528 \\c \u6e05\u7a7a\u5f53\u524d\u8f93\u5165\u5e76\u91cd\u65b0\u5f00\u59cb\u3002 \u4fee\u6539\u7ec8\u6b62\u7b26\uff08\u5b9a\u754c\u7b26\uff09- delimiter \u3002\u9ed8\u8ba4\u7684\u7ec8\u6b62\u7b26\u662f ; \uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u547d\u4ee4\u4fee\u6539\u6210\u5176\u4ed6\u7684\u5b57\u7b26\uff0c\u4f8b\u5982\u4fee\u6539\u4e3a $ \u7b26\u53f7\uff0c\u53ef\u4ee5\u7528 delimiter $ \u547d\u4ee4\u3002 \u6253\u5f00\u7cfb\u7edf\u9ed8\u8ba4\u7f16\u8f91\u5668 - edit \u3002\u7f16\u8f91\u5b8c\u6210\u4fdd\u5b58\u5173\u95ed\u4e4b\u540e\uff0c\u547d\u4ee4\u884c\u4f1a\u81ea\u52a8\u6267\u884c\u7f16\u8f91\u7684\u5185\u5bb9\u3002 \u67e5\u770b\u670d\u52a1\u5668\u72b6\u6001 - status \u3002 \u4fee\u6539\u9ed8\u8ba4\u63d0\u793a\u7b26 - prompt \u3002 \u6267\u884c\u7cfb\u7edf\u547d\u4ee4 - system \u3002\u53ef\u4ee5\u5c06\u7cfb\u7edf\u547d\u4ee4\u8ddf\u5728 system \u547d\u4ee4\u7684\u540e\u9762\u6267\u884c\uff0c system \u547d\u4ee4\u4e5f\u53ef\u4ee5\u7f29\u5199\u4e3a \\! \u3002 \u6267\u884c SQL \u6587\u4ef6 - source \u3002 source \u547d\u4ee4\u540e\u9762\u8ddf SQL \u6587\u4ef6\u8def\u5f84\u3002 \u91cd\u5b9a\u5411\u8f93\u51fa - tee / notee \u3002\u53ef\u4ee5\u5c06\u547d\u4ee4\u7684\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6307\u5b9a\u7684\u6587\u4ef6\u4e2d\u3002 \u5207\u6362\u6570\u636e\u5e93 - use \u3002 \u663e\u793a\u8b66\u544a\u4fe1\u606f - warnings \u3002 \u9000\u51fa\u547d\u4ee4\u884c - quit \u6216 exit \u3002","title":"\u5176\u4ed6\u547d\u4ee4"},{"location":"%E7%AC%AC41%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDDL/","text":"SQL\u8be6\u89e3\u4e4bDDL \u6211\u4eec\u901a\u5e38\u53ef\u4ee5\u5c06 SQL \u5206\u4e3a\u56db\u7c7b\uff0c\u5206\u522b\u662f DDL\uff08\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff09\u3001DML\uff08\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff09\u3001DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u548c DCL\uff08\u6570\u636e\u63a7\u5236\u8bed\u8a00\uff09\u3002DDL \u4e3b\u8981\u7528\u4e8e\u521b\u5efa\u3001\u5220\u9664\u3001\u4fee\u6539\u6570\u636e\u5e93\u4e2d\u7684\u5bf9\u8c61\uff0c\u6bd4\u5982\u521b\u5efa\u3001\u5220\u9664\u548c\u4fee\u6539\u4e8c\u7ef4\u8868\uff0c\u6838\u5fc3\u7684\u5173\u952e\u5b57\u5305\u62ec create \u3001 drop \u548c alter \uff1bDML \u4e3b\u8981\u8d1f\u8d23\u6570\u636e\u7684\u63d2\u5165\u3001\u5220\u9664\u548c\u66f4\u65b0\uff0c\u5173\u952e\u8bcd\u5305\u62ec insert \u3001 delete \u548c update \uff1bDQL \u8d1f\u8d23\u6570\u636e\u67e5\u8be2\uff0c\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u5173\u952e\u8bcd\u662f select \uff1bDCL \u901a\u5e38\u7528\u4e8e\u6388\u4e88\u548c\u53ec\u56de\u6743\u9650\uff0c\u6838\u5fc3\u5173\u952e\u8bcd\u662f grant \u548c revoke \u3002 \u8bf4\u660e \uff1aSQL \u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u8bed\u8a00\uff0c\u6709\u4eba\u4f1a\u5efa\u8bae\u5c06\u5173\u952e\u5b57\u5927\u5199\uff0c\u5176\u4ed6\u90e8\u5206\u5c0f\u5199\u3002\u4e3a\u4e86\u4e66\u5199\u548c\u8bc6\u522b\u65b9\u4fbf\uff0c\u4e0b\u9762\u7684 SQL \u6211\u90fd\u662f\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\u8fdb\u884c\u4e66\u5199\u7684\u3002 \u5982\u679c\u516c\u53f8\u7684 SQL \u7f16\u7a0b\u89c4\u8303\u6709\u5f3a\u5236\u89c4\u5b9a\uff0c\u90a3\u4e48\u5c31\u6309\u7167\u516c\u53f8\u7684\u8981\u6c42\u6765\uff0c\u4e2a\u4eba\u7684\u559c\u597d\u4e0d\u5e94\u8be5\u51cc\u9a7e\u4e8e\u516c\u53f8\u7684\u7f16\u7a0b\u89c4\u8303\u4e4b\u4e0a\uff0c\u8fd9\u4e00\u70b9\u5bf9\u804c\u4e1a\u4eba\u6765\u8bf4\u5e94\u8be5\u662f\u5e38\u8bc6\u3002 \u5efa\u5e93\u5efa\u8868 \u4e0b\u9762\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5b66\u6821\u9009\u8bfe\u7cfb\u7edf\u7684\u6570\u636e\u5e93\u3002\u6211\u4eec\u5c06\u6570\u636e\u5e93\u547d\u540d\u4e3a school \uff0c\u56db\u4e2a\u5173\u952e\u7684\u5b9e\u4f53\u5206\u522b\u662f\u5b66\u9662\u3001\u8001\u5e08\u3001\u5b66\u751f\u548c\u8bfe\u7a0b\uff0c\u5176\u4e2d\uff0c\u5b66\u751f\u8ddf\u5b66\u9662\u662f\u4ece\u5c5e\u5173\u7cfb\uff0c\u8fd9\u4e2a\u5173\u7cfb\u4ece\u6570\u91cf\u4e0a\u6765\u8bb2\u662f\u591a\u5bf9\u4e00\u5173\u7cfb\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5b66\u9662\u53ef\u4ee5\u6709\u591a\u540d\u5b66\u751f\uff0c\u800c\u4e00\u4e2a\u5b66\u751f\u901a\u5e38\u53ea\u5c5e\u4e8e\u4e00\u4e2a\u5b66\u9662\uff1b\u540c\u7406\uff0c\u8001\u5e08\u8ddf\u5b66\u9662\u7684\u4ece\u5c5e\u5173\u7cfb\u4e5f\u662f\u591a\u5bf9\u4e00\u5173\u7cfb\u3002\u4e00\u540d\u8001\u5e08\u53ef\u4ee5\u8bb2\u6388\u591a\u95e8\u8bfe\u7a0b\uff0c\u4e00\u95e8\u8bfe\u7a0b\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u6388\u8bfe\u8001\u5e08\u7684\u8bdd\uff0c\u90a3\u4e48\u8bfe\u7a0b\u8ddf\u8001\u5e08\u4e5f\u662f\u591a\u5bf9\u4e00\u5173\u7cfb\uff1b\u5982\u679c\u5141\u8bb8\u591a\u4e2a\u8001\u5e08\u5408\u4f5c\u8bb2\u6388\u4e00\u95e8\u8bfe\u7a0b\uff0c\u90a3\u4e48\u8bfe\u7a0b\u548c\u8001\u5e08\u5c31\u662f\u591a\u5bf9\u591a\u5173\u7cfb\u3002\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u8bfe\u7a0b\u548c\u8001\u5e08\u8bbe\u8ba1\u4e3a\u591a\u5bf9\u4e00\u5173\u7cfb\u3002\u5b66\u751f\u548c\u8bfe\u7a0b\u662f\u5178\u578b\u7684\u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5b66\u751f\u53ef\u4ee5\u9009\u62e9\u591a\u95e8\u8bfe\u7a0b\uff0c\u4e00\u95e8\u8bfe\u7a0b\u4e5f\u53ef\u4ee5\u88ab\u591a\u4e2a\u5b66\u751f\u9009\u62e9\uff0c\u800c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u9700\u8981\u501f\u52a9\u4e2d\u95f4\u8868\u624d\u80fd\u7ef4\u6301\u7ef4\u6301\u4e24\u4e2a\u5b9e\u4f53\u7684\u591a\u5bf9\u591a\u5173\u7cfb\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u7684\u5b66\u6821\u9009\u8bfe\u7cfb\u7edf\u4e00\u5171\u6709\u4e94\u5f20\u8868\uff0c\u5206\u522b\u662f\u5b66\u9662\u8868\uff08 tb_college \uff09\u3001\u5b66\u751f\u8868\uff08 tb_student \uff09\u3001\u6559\u5e08\u8868\uff08 tb_teacher \uff09\u3001\u8bfe\u7a0b\u8868\uff08 tb_course \uff09\u548c\u9009\u8bfe\u8bb0\u5f55\u8868\uff08 tb_record \uff09\uff0c\u5176\u4e2d\u9009\u8bfe\u8bb0\u5f55\u8868\u5c31\u662f\u7ef4\u6301\u5b66\u751f\u8ddf\u8bfe\u7a0b\u591a\u5bf9\u591a\u5173\u7cfb\u7684\u4e2d\u95f4\u8868\u3002 -- \u5982\u679c\u5b58\u5728\u540d\u4e3aschool\u7684\u6570\u636e\u5e93\u5c31\u5220\u9664\u5b83 drop database if exists ` school ` ; -- \u521b\u5efa\u540d\u4e3aschool\u7684\u6570\u636e\u5e93\u5e76\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u5b57\u7b26\u96c6\u548c\u6392\u5e8f\u65b9\u5f0f create database ` school ` default character set utf8mb4 collate utf8mb4_general_ci ; -- \u5207\u6362\u5230school\u6570\u636e\u5e93\u4e0a\u4e0b\u6587\u73af\u5883 use ` school ` ; -- \u521b\u5efa\u5b66\u9662\u8868 create table ` tb_college ` ( ` col_id ` int unsigned auto_increment comment '\u7f16\u53f7' , ` col_name ` varchar ( 50 ) not null comment '\u540d\u79f0' , ` col_intro ` varchar ( 500 ) default '' comment '\u4ecb\u7ecd' , primary key ( ` col_id ` ) ) engine = innodb auto_increment = 1 comment '\u5b66\u9662\u8868' ; -- \u521b\u5efa\u5b66\u751f\u8868 create table ` tb_student ` ( ` stu_id ` int unsigned not null comment '\u5b66\u53f7' , ` stu_name ` varchar ( 20 ) not null comment '\u59d3\u540d' , ` stu_sex ` boolean default 1 not null comment '\u6027\u522b' , ` stu_birth ` date not null comment '\u51fa\u751f\u65e5\u671f' , ` stu_addr ` varchar ( 255 ) default '' comment '\u7c4d\u8d2f' , ` col_id ` int unsigned not null comment '\u6240\u5c5e\u5b66\u9662' , primary key ( ` stu_id ` ), constraint ` fk_student_col_id ` foreign key ( ` col_id ` ) references ` tb_college ` ( ` col_id ` ) ) engine = innodb comment '\u5b66\u751f\u8868' ; -- \u521b\u5efa\u6559\u5e08\u8868 create table ` tb_teacher ` ( ` tea_id ` int unsigned not null comment '\u5de5\u53f7' , ` tea_name ` varchar ( 20 ) not null comment '\u59d3\u540d' , ` tea_title ` varchar ( 10 ) default '\u52a9\u6559' comment '\u804c\u79f0' , ` col_id ` int unsigned not null comment '\u6240\u5c5e\u5b66\u9662' , primary key ( ` tea_id ` ), constraint ` fk_teacher_col_id ` foreign key ( ` col_id ` ) references ` tb_college ` ( ` col_id ` ) ) engine = innodb comment '\u8001\u5e08\u8868' ; -- \u521b\u5efa\u8bfe\u7a0b\u8868 create table ` tb_course ` ( ` cou_id ` int unsigned not null comment '\u7f16\u53f7' , ` cou_name ` varchar ( 50 ) not null comment '\u540d\u79f0' , ` cou_credit ` int not null comment '\u5b66\u5206' , ` tea_id ` int unsigned not null comment '\u6388\u8bfe\u8001\u5e08' , primary key ( ` cou_id ` ), constraint ` fk_course_tea_id ` foreign key ( ` tea_id ` ) references ` tb_teacher ` ( ` tea_id ` ) ) engine = innodb comment '\u8bfe\u7a0b\u8868' ; -- \u521b\u5efa\u9009\u8bfe\u8bb0\u5f55\u8868 create table ` tb_record ` ( ` rec_id ` bigint unsigned auto_increment comment '\u9009\u8bfe\u8bb0\u5f55\u53f7' , ` stu_id ` int unsigned not null comment '\u5b66\u53f7' , ` cou_id ` int unsigned not null comment '\u8bfe\u7a0b\u7f16\u53f7' , ` sel_date ` date not null comment '\u9009\u8bfe\u65e5\u671f' , ` score ` decimal ( 4 , 1 ) comment '\u8003\u8bd5\u6210\u7ee9' , primary key ( ` rec_id ` ), constraint ` fk_record_stu_id ` foreign key ( ` stu_id ` ) references ` tb_student ` ( ` stu_id ` ), constraint ` fk_record_cou_id ` foreign key ( ` cou_id ` ) references ` tb_course ` ( ` cou_id ` ), constraint ` uk_record_stu_cou ` unique ( ` stu_id ` , ` cou_id ` ) ) engine = innodb comment '\u9009\u8bfe\u8bb0\u5f55\u8868' ; \u4e0a\u9762\u7684DDL\u6709\u51e0\u4e2a\u5730\u65b9\u9700\u8981\u5f3a\u8c03\u4e00\u4e0b\uff1a \u9996\u5148\uff0c\u4e0a\u9762 SQL \u4e2d\u7684\u6570\u636e\u5e93\u540d\u3001\u8868\u540d\u3001\u5b57\u6bb5\u540d\u90fd\u88ab\u53cd\u5f15\u53f7\uff08`\uff09\u5305\u88f9\u8d77\u6765\uff0c\u53cd\u5f15\u53f7\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f\u5374\u53ef\u4ee5\u89e3\u51b3\u8868\u540d\u3001\u5b57\u6bb5\u540d\u7b49\u8ddf SQL \u5173\u952e\u5b57\uff08SQL \u4e2d\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\uff09\u51b2\u7a81\u7684\u95ee\u9898\u3002 \u521b\u5efa\u6570\u636e\u5e93\u65f6\uff0c\u6211\u4eec\u901a\u8fc7 default character set utf8mb4 \u6307\u5b9a\u4e86\u6570\u636e\u5e93\u9ed8\u8ba4\u4f7f\u7528\u7684\u5b57\u7b26\u96c6\u4e3a utf8mb4 \uff08\u6700\u5927 4 \u5b57\u8282\u7684 utf-8 \u7f16\u7801\uff09\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528\u8be5\u5b57\u7b26\u96c6\uff0c\u5b83\u4e5f\u662f MySQL 8.x \u9ed8\u8ba4\u4f7f\u7528\u7684\u5b57\u7b26\u96c6\uff0c\u56e0\u4e3a\u5b83\u80fd\u591f\u652f\u6301\u56fd\u9645\u5316\u7f16\u7801\uff0c\u8fd8\u53ef\u4ee5\u5b58\u50a8 Emoji \u5b57\u7b26\u3002\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b MySQL \u652f\u6301\u7684\u5b57\u7b26\u96c6\u4ee5\u53ca\u9ed8\u8ba4\u7684\u6392\u5e8f\u89c4\u5219\u3002 show character set ; +----------+---------------------------------+---------------------+--------+ | Charset | Description | Default collation | Maxlen | +----------+---------------------------------+---------------------+--------+ | big5 | Big5 Traditional Chinese | big5_chinese_ci | 2 | | dec8 | DEC West European | dec8_swedish_ci | 1 | | cp850 | DOS West European | cp850_general_ci | 1 | | hp8 | HP West European | hp8_english_ci | 1 | | koi8r | KOI8-R Relcom Russian | koi8r_general_ci | 1 | | latin1 | cp1252 West European | latin1_swedish_ci | 1 | | latin2 | ISO 8859-2 Central European | latin2_general_ci | 1 | | swe7 | 7bit Swedish | swe7_swedish_ci | 1 | | ascii | US ASCII | ascii_general_ci | 1 | | ujis | EUC-JP Japanese | ujis_japanese_ci | 3 | | sjis | Shift-JIS Japanese | sjis_japanese_ci | 2 | | hebrew | ISO 8859-8 Hebrew | hebrew_general_ci | 1 | | tis620 | TIS620 Thai | tis620_thai_ci | 1 | | euckr | EUC-KR Korean | euckr_korean_ci | 2 | | koi8u | KOI8-U Ukrainian | koi8u_general_ci | 1 | | gb2312 | GB2312 Simplified Chinese | gb2312_chinese_ci | 2 | | greek | ISO 8859-7 Greek | greek_general_ci | 1 | | cp1250 | Windows Central European | cp1250_general_ci | 1 | | gbk | GBK Simplified Chinese | gbk_chinese_ci | 2 | | latin5 | ISO 8859-9 Turkish | latin5_turkish_ci | 1 | | armscii8 | ARMSCII-8 Armenian | armscii8_general_ci | 1 | | utf8 | UTF-8 Unicode | utf8_general_ci | 3 | | ucs2 | UCS-2 Unicode | ucs2_general_ci | 2 | | cp866 | DOS Russian | cp866_general_ci | 1 | | keybcs2 | DOS Kamenicky Czech-Slovak | keybcs2_general_ci | 1 | | macce | Mac Central European | macce_general_ci | 1 | | macroman | Mac West European | macroman_general_ci | 1 | | cp852 | DOS Central European | cp852_general_ci | 1 | | latin7 | ISO 8859-13 Baltic | latin7_general_ci | 1 | | utf8mb4 | UTF-8 Unicode | utf8mb4_general_ci | 4 | | cp1251 | Windows Cyrillic | cp1251_general_ci | 1 | | utf16 | UTF-16 Unicode | utf16_general_ci | 4 | | utf16le | UTF-16LE Unicode | utf16le_general_ci | 4 | | cp1256 | Windows Arabic | cp1256_general_ci | 1 | | cp1257 | Windows Baltic | cp1257_general_ci | 1 | | utf32 | UTF-32 Unicode | utf32_general_ci | 4 | | binary | Binary pseudo charset | binary | 1 | | geostd8 | GEOSTD8 Georgian | geostd8_general_ci | 1 | | cp932 | SJIS for Windows Japanese | cp932_japanese_ci | 2 | | eucjpms | UJIS for Windows Japanese | eucjpms_japanese_ci | 3 | | gb18030 | China National Standard GB18030 | gb18030_chinese_ci | 4 | +----------+---------------------------------+---------------------+--------+ 41 rows in set (0.00 sec) \u5982\u679c\u8981\u8bbe\u7f6e MySQL \u670d\u52a1\u542f\u52a8\u65f6\u9ed8\u8ba4\u4f7f\u7528\u7684\u5b57\u7b26\u96c6\uff0c\u53ef\u4ee5\u4fee\u6539MySQL\u7684\u914d\u7f6e\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\u3002 [mysqld] character-set-server = utf8 \u63d0\u793a \uff1a\u5982\u679c\u4e0d\u6e05\u695a\u5982\u4f55\u4fee\u6539 MySQL \u7684\u914d\u7f6e\u6587\u4ef6\u5c31\u5148\u4e0d\u8981\u7ba1\u5b83\u3002 \u521b\u5efa\u548c\u5220\u9664\u6570\u636e\u5e93\u65f6\uff0c\u5173\u952e\u5b57 database \u4e5f\u53ef\u4ee5\u66ff\u6362\u4e3a schema \uff0c\u4e8c\u8005\u4f5c\u7528\u76f8\u540c\u3002 \u5efa\u8868\u8bed\u53e5\u4e2d\u7684 not null \u662f\u975e\u7a7a\u7ea6\u675f\uff0c\u5b83\u9650\u5b9a\u4e86\u5b57\u6bb5\u4e0d\u80fd\u4e3a\u7a7a\uff1b default \u7528\u4e8e\u4e3a\u5b57\u6bb5\u6307\u5b9a\u9ed8\u8ba4\u503c\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u9ed8\u8ba4\u503c\u7ea6\u675f\uff1b primary key \u662f\u4e3b\u952e\u7ea6\u675f\uff0c\u5b83\u8bbe\u5b9a\u4e86\u80fd\u591f\u552f\u4e00\u786e\u5b9a\u4e00\u6761\u8bb0\u5f55\u7684\u5217\uff0c\u4e5f\u786e\u4fdd\u4e86\u6bcf\u6761\u8bb0\u5f55\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u56e0\u4e3a\u4e3b\u952e\u4e0d\u5141\u8bb8\u91cd\u590d\uff1b foreign key \u662f\u5916\u952e\u7ea6\u675f\uff0c\u5b83\u7ef4\u6301\u4e86\u4e24\u5f20\u8868\u7684\u53c2\u7167\u5b8c\u6574\u6027\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u7531\u4e8e\u5b66\u751f\u8868\u4e2d\u4e3a col_id \u5b57\u6bb5\u6dfb\u52a0\u4e86\u5916\u952e\u7ea6\u675f\uff0c\u9650\u5b9a\u5176\u5fc5\u987b\u5f15\u7528\uff08 references \uff09\u5b66\u9662\u8868\u4e2d\u7684 col_id\uff0c\u56e0\u6b64\u5b66\u751f\u8868\u4e2d\u7684\u5b66\u9662\u7f16\u53f7\u5fc5\u987b\u6765\u81ea\u4e8e\u5b66\u9662\u8868\u4e2d\u7684\u5b66\u9662\u7f16\u53f7\uff0c\u4e0d\u80fd\u591f\u968f\u610f\u4e3a\u8be5\u5b57\u6bb5\u8d4b\u503c\u3002\u5982\u679c\u9700\u8981\u7ed9\u4e3b\u952e\u7ea6\u675f\u3001\u5916\u952e\u7ea6\u675f\u7b49\u8d77\u540d\u5b57\uff0c\u53ef\u4ee5\u4f7f\u7528 constriant \u5173\u952e\u5b57\u5e76\u5728\u540e\u9762\u8ddf\u4e0a\u7ea6\u675f\u7684\u540d\u5b57\u3002 \u5efa\u8868\u8bed\u53e5\u4e2d\u7684 comment \u5173\u952e\u5b57\u7528\u6765\u7ed9\u5217\u548c\u8868\u6dfb\u52a0\u6ce8\u91ca\uff0c\u589e\u5f3a\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 \u5728\u521b\u5efa\u8868\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u81ea\u884c\u9009\u62e9\u5e95\u5c42\u7684\u5b58\u50a8\u5f15\u64ce\u3002MySQL \u652f\u6301\u591a\u79cd\u5b58\u50a8\u5f15\u64ce\uff0c\u53ef\u4ee5\u901a\u8fc7 show engines \u547d\u4ee4\u8fdb\u884c\u67e5\u770b\u3002MySQL 5.5 \u4ee5\u540e\u7684\u7248\u672c\u9ed8\u8ba4\u4f7f\u7528\u7684\u5b58\u50a8\u5f15\u64ce\u662f InnoDB\uff0c\u5b83\u662f\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u7684\u5b58\u50a8\u5f15\u64ce\uff08\u56e0\u4e3a\u66f4\u9002\u5408\u5f53\u4e0b\u4e92\u8054\u7f51\u5e94\u7528\u5bf9\u9ad8\u5e76\u53d1\u3001\u6027\u80fd\u4ee5\u53ca\u4e8b\u52a1\u652f\u6301\u7b49\u65b9\u9762\u7684\u9700\u6c42\uff09\uff0c\u4e3a\u4e86 SQL \u8bed\u53e5\u7684\u5411\u4e0b\u517c\u5bb9\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5efa\u8868\u8bed\u53e5\u7ed3\u675f\u5904\u53f3\u5706\u62ec\u53f7\u7684\u540e\u9762\u901a\u8fc7 engine=innodb \u6765\u6307\u5b9a\u4f7f\u7528 InnoDB \u5b58\u50a8\u5f15\u64ce\u3002 show engines \\ G \u8bf4\u660e \uff1a\u4e0a\u9762\u7684 \\G \u662f\u4e3a\u4e86\u6362\u4e00\u79cd\u8f93\u51fa\u65b9\u5f0f\uff0c\u5728\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u4e2d\uff0c\u5982\u679c\u8868\u7684\u5b57\u6bb5\u5f88\u591a\u4e00\u884c\u663e\u793a\u4e0d\u5b8c\uff0c\u5c31\u4f1a\u5bfc\u81f4\u8f93\u51fa\u7684\u5185\u5bb9\u770b\u8d77\u6765\u975e\u5e38\u4e0d\u8212\u670d\uff0c\u4f7f\u7528 \\G \u53ef\u4ee5\u5c06\u8bb0\u5f55\u7684\u6bcf\u4e2a\u5217\u4ee5\u72ec\u5360\u6574\u884c\u7684\u7684\u65b9\u5f0f\u8f93\u51fa\uff0c\u8fd9\u79cd\u8f93\u51fa\u65b9\u5f0f\u5728\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u4e2d\u770b\u8d77\u6765\u4f1a\u8212\u670d\u5f88\u591a\u3002 *************************** 1. row *************************** Engine: InnoDB Support: DEFAULT Comment: Supports transactions, row-level locking, and foreign keys Transactions: YES XA: YES Savepoints: YES *************************** 2. row *************************** Engine: MRG_MYISAM Support: YES Comment: Collection of identical MyISAM tables Transactions: NO XA: NO Savepoints: NO *************************** 3. row *************************** Engine: MEMORY Support: YES Comment: Hash based, stored in memory, useful for temporary tables Transactions: NO XA: NO Savepoints: NO *************************** 4. row *************************** Engine: BLACKHOLE Support: YES Comment: /dev/null storage engine (anything you write to it disappears) Transactions: NO XA: NO Savepoints: NO *************************** 5. row *************************** Engine: MyISAM Support: YES Comment: MyISAM storage engine Transactions: NO XA: NO Savepoints: NO *************************** 6. row *************************** Engine: CSV Support: YES Comment: CSV storage engine Transactions: NO XA: NO Savepoints: NO *************************** 7. row *************************** Engine: ARCHIVE Support: YES Comment: Archive storage engine Transactions: NO XA: NO Savepoints: NO *************************** 8. row *************************** Engine: PERFORMANCE_SCHEMA Support: YES Comment: Performance Schema Transactions: NO XA: NO Savepoints: NO *************************** 9. row *************************** Engine: FEDERATED Support: NO Comment: Federated MySQL storage engine Transactions: NULL XA: NULL Savepoints: NULL 9 rows in set (0.00 sec) \u4e0b\u9762\u7684\u8868\u683c\u5bf9MySQL\u51e0\u79cd\u5e38\u7528\u7684\u6570\u636e\u5f15\u64ce\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u5bf9\u6bd4\u3002 \u7279\u6027 InnoDB MRG_MYISAM MEMORY MyISAM \u5b58\u50a8\u9650\u5236 \u6709 \u6ca1\u6709 \u6709 \u6709 \u4e8b\u52a1 \u652f\u6301 \u9501\u673a\u5236 \u884c\u9501 \u8868\u9501 \u8868\u9501 \u8868\u9501 B\u6811\u7d22\u5f15 \u652f\u6301 \u652f\u6301 \u652f\u6301 \u652f\u6301 \u54c8\u5e0c\u7d22\u5f15 \u652f\u6301 \u5168\u6587\u68c0\u7d22 \u652f\u6301\uff085.6+\uff09 \u652f\u6301 \u96c6\u7fa4\u7d22\u5f15 \u652f\u6301 \u6570\u636e\u7f13\u5b58 \u652f\u6301 \u652f\u6301 \u7d22\u5f15\u7f13\u5b58 \u652f\u6301 \u652f\u6301 \u652f\u6301 \u652f\u6301 \u6570\u636e\u53ef\u538b\u7f29 \u652f\u6301 \u5185\u5b58\u4f7f\u7528 \u9ad8 \u4f4e \u4e2d \u4f4e \u5b58\u50a8\u7a7a\u95f4\u4f7f\u7528 \u9ad8 \u4f4e \u4f4e \u6279\u91cf\u63d2\u5165\u6027\u80fd \u4f4e \u9ad8 \u9ad8 \u9ad8 \u662f\u5426\u652f\u6301\u5916\u952e \u652f\u6301 \u901a\u8fc7\u4e0a\u9762\u7684\u6bd4\u8f83\u6211\u4eec\u53ef\u4ee5\u4e86\u89e3\u5230\uff0cInnoDB \u662f\u552f\u4e00\u80fd\u591f\u652f\u6301\u5916\u952e\u3001\u4e8b\u52a1\u4ee5\u53ca\u884c\u9501\u7684\u5b58\u50a8\u5f15\u64ce\uff0c\u6240\u4ee5\u6211\u4eec\u4e4b\u524d\u8bf4\u5b83\u66f4\u9002\u5408\u4e92\u8054\u7f51\u5e94\u7528\uff0c\u800c\u4e14\u5728\u8f83\u65b0\u7248\u672c\u7684 MySQL \u4e2d\uff0c\u5b83\u4e5f\u662f\u9ed8\u8ba4\u4f7f\u7528\u7684\u5b58\u50a8\u5f15\u64ce\u3002 \u5728\u5b9a\u4e49\u8868\u7ed3\u6784\u4e3a\u6bcf\u4e2a\u5b57\u6bb5\u9009\u62e9\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u5982\u679c\u4e0d\u6e05\u695a\u54ea\u4e2a\u6570\u636e\u7c7b\u578b\u66f4\u5408\u9002\uff0c\u53ef\u4ee5\u901a\u8fc7 MySQL \u7684\u5e2e\u52a9\u7cfb\u7edf\u6765\u4e86\u89e3\u6bcf\u79cd\u6570\u636e\u7c7b\u578b\u7684\u7279\u6027\u3001\u6570\u636e\u7684\u957f\u5ea6\u548c\u7cbe\u5ea6\u7b49\u76f8\u5173\u4fe1\u606f\u3002 ? data types \u8bf4\u660e \uff1a\u5728 MySQLWorkbench \u4e2d\uff0c\u4e0d\u80fd\u4f7f\u7528 ? \u83b7\u53d6\u5e2e\u52a9\uff0c\u8981\u4f7f\u7528\u5bf9\u5e94\u7684\u547d\u4ee4 help \u3002 You asked for help about help category: \"Data Types\" For more information, type 'help <item>', where <item> is one of the following topics: AUTO_INCREMENT BIGINT BINARY BIT BLOB BLOB DATA TYPE BOOLEAN CHAR CHAR BYTE DATE DATETIME DEC DECIMAL DOUBLE DOUBLE PRECISION ENUM FLOAT INT INTEGER LONGBLOB LONGTEXT MEDIUMBLOB MEDIUMINT MEDIUMTEXT SET DATA TYPE SMALLINT TEXT TIME TIMESTAMP TINYBLOB TINYINT TINYTEXT VARBINARY VARCHAR YEAR DATA TYPE \u83b7\u53d6 varchar \u7c7b\u578b\u7684\u5e2e\u52a9\uff1a ? varchar \u6267\u884c\u7ed3\u679c\uff1a Name: 'VARCHAR' Description: [NATIONAL] VARCHAR(M) [CHARACTER SET charset_name] [COLLATE collation_name] A variable-length string. M represents the maximum column length in characters. The range of M is 0 to 65,535. The effective maximum length of a VARCHAR is subject to the maximum row size (65,535 bytes, which is shared among all columns) and the character set used. For example, utf8 characters can require up to three bytes per character, so a VARCHAR column that uses the utf8 character set can be declared to be a maximum of 21,844 characters. See http://dev.mysql.com/doc/refman/5.7/en/column-count-limit.html. MySQL stores VARCHAR values as a 1-byte or 2-byte length prefix plus data. The length prefix indicates the number of bytes in the value. A VARCHAR column uses one length byte if values require no more than 255 bytes, two length bytes if values may require more than 255 bytes. *Note*: MySQL follows the standard SQL specification, and does not remove trailing spaces from VARCHAR values. VARCHAR is shorthand for CHARACTER VARYING. NATIONAL VARCHAR is the standard SQL way to define that a VARCHAR column should use some predefined character set. MySQL uses utf8 as this predefined character set. http://dev.mysql.com/doc/refman/5.7/en/charset-national.html. NVARCHAR is shorthand for NATIONAL VARCHAR. URL: http://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html \u5728\u6570\u636e\u7c7b\u578b\u7684\u9009\u62e9\u4e0a\uff0c\u4fdd\u5b58\u5b57\u7b26\u4e32\u6570\u636e\u901a\u5e38\u90fd\u4f7f\u7528 VARCHAR \u548c CHAR \u4e24\u79cd\u7c7b\u578b\uff0c\u524d\u8005\u901a\u5e38\u79f0\u4e3a\u53d8\u957f\u5b57\u7b26\u4e32\uff0c\u800c\u540e\u8005\u901a\u5e38\u79f0\u4e3a\u5b9a\u957f\u5b57\u7b26\u4e32\uff1b\u5bf9\u4e8e InnoDB \u5b58\u50a8\u5f15\u64ce\uff0c\u884c\u5b58\u50a8\u683c\u5f0f\u6ca1\u6709\u533a\u5206\u56fa\u5b9a\u957f\u5ea6\u548c\u53ef\u53d8\u957f\u5ea6\u5217\uff0c\u56e0\u6b64 VARCHAR \u7c7b\u578b\u548c CHAR \u7c7b\u578b\u6ca1\u6709\u672c\u8d28\u533a\u522b\uff0c\u540e\u8005\u4e0d\u4e00\u5b9a\u6bd4\u524d\u8005\u6027\u80fd\u66f4\u597d\u3002\u5982\u679c\u8981\u4fdd\u5b58\u7684\u5f88\u5927\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528 TEXT \u7c7b\u578b\uff1b\u5982\u679c\u8981\u4fdd\u5b58\u5f88\u5927\u7684\u5b57\u8282\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528 BLOB\uff08\u4e8c\u8fdb\u5236\u5927\u5bf9\u8c61\uff09\u7c7b\u578b\u3002\u5728 MySQL \u4e2d\uff0cTEXT \u548c BLOB\u53c8\u5206\u522b\u5305\u62ec TEXT\u3001MEDIUMTEXT\u3001LONGTEXT \u548c BLOB\u3001MEDIUMBLOB\u3001LONGBLOB \u4e09\u79cd\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u5b83\u4eec\u4e3b\u8981\u7684\u533a\u522b\u5728\u4e8e\u5b58\u50a8\u6570\u636e\u7684\u6700\u5927\u5927\u5c0f\u4e0d\u540c\u3002\u4fdd\u5b58\u6d6e\u70b9\u6570\u53ef\u4ee5\u7528 FLOAT \u6216 DOUBLE \u7c7b\u578b\uff0cFLOAT \u5df2\u7ecf\u4e0d\u63a8\u8350\u4f7f\u7528\u4e86\uff0c\u800c\u4e14\u5728 MySQL \u540e\u7eed\u7684\u7248\u672c\u4e2d\u53ef\u80fd\u4f1a\u88ab\u79fb\u9664\u6389\u3002\u800c\u4fdd\u5b58\u5b9a\u70b9\u6570\u5e94\u8be5\u4f7f\u7528 DECIMAL \u7c7b\u578b\uff0c\u5b83\u53ef\u4ee5\u6307\u5b9a\u5c0f\u6570\u70b9\u524d\u540e\u6709\u6548\u6570\u5b57\u7684\u4f4d\u6570\u3002\u5982\u679c\u8981\u4fdd\u5b58\u65f6\u95f4\u65e5\u671f\uff0cDATETIME \u7c7b\u578b\u4f18\u4e8e TIMESTAMP \u7c7b\u578b\uff0c\u56e0\u4e3a\u524d\u8005\u80fd\u8868\u793a\u7684\u65f6\u95f4\u65e5\u671f\u8303\u56f4\u66f4\u5927\uff0c\u540e\u8005\u5e95\u5c42\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8bb0\u5f55\u4e86\u6307\u5b9a\u7684\u65e5\u671f\u65f6\u95f4\u548c 1970-01-01 00:00:00 \u76f8\u5dee\u591a\u5c11\u4e2a\u6beb\u79d2\uff0c\u8be5\u7c7b\u578b\u5728 2038-01-19 03:14:07 \u4e4b\u540e\u5c31\u4f1a\u6ea2\u51fa\u3002 \u5bf9\u4e8e\u81ea\u589e\u5b57\u6bb5 AUTO_INCREMENT\uff0c\u5982\u679c\u4f7f\u7528 MySQL 5.x \u7248\u672c\u8981\u6ce8\u610f\u81ea\u589e\u5b57\u6bb5\u7684\u56de\u6eaf\u95ee\u9898\uff0c\u5f53\u7136\u8fd9\u4e2a\u95ee\u9898\u5728 MySQL 8.x \u4e2d\u5df2\u7ecf\u5f97\u5230\u4e86\u5f88\u597d\u7684\u89e3\u51b3\uff0c\u5f53\u7136\uff0cMySQL 8.x \u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u597d\u5904\uff0c\u4e0d\u7ba1\u662f\u529f\u80fd\u8fd8\u662f\u6027\u80fd\u4e0a\u90fd\u6709\u5f88\u591a\u7684\u4f18\u5316\u548c\u8c03\u6574\uff0c\u56e0\u6b64\u5f3a\u70c8\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 MySQL 8.x \u7248\u672c\u3002\u5bf9\u4e8e\u9ad8\u5e76\u53d1\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u573a\u666f\uff0cAUTO_INCREMENT \u4e0d\u4ec5\u5b58\u5728\u6027\u80fd\u4e0a\u7684\u95ee\u9898\uff0c\u8fd8\u53ef\u80fd\u5728\u591a\u673a\u7ed3\u6784\u4e0a\u4ea7\u751f\u91cd\u590d\u7684 ID \u503c\uff0c\u5728\u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u4f7f\u7528\u5206\u5e03\u5f0f ID \u751f\u6210\u7b97\u6cd5\uff08SnowFlake\u3001TinyID\u7b49\uff09\u624d\u662f\u6700\u597d\u7684\u9009\u62e9\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002 \u5220\u9664\u8868\u548c\u4fee\u6539\u8868 \u4e0b\u9762\u4ee5\u5b66\u751f\u8868\u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u8bf4\u660e\u5982\u4f55\u5220\u9664\u8868\u548c\u4fee\u6539\u8868\u3002\u5220\u9664\u8868\u53ef\u4ee5\u4f7f\u7528 drop table \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 drop table ` tb_student ` ; \u6216 drop table if exists ` tb_student ` ; \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u5b66\u751f\u8868\u5df2\u7ecf\u5f55\u5165\u4e86\u6570\u636e\u800c\u4e14\u8be5\u6570\u636e\u88ab\u5176\u4ed6\u8868\u5f15\u7528\u4e86\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u5220\u9664\u5b66\u751f\u8868\uff0c\u5426\u5219\u4e0a\u9762\u7684\u64cd\u4f5c\u4f1a\u62a5\u9519\u3002\u5728\u4e0b\u4e00\u8bfe\u4e2d\uff0c\u6211\u4eec\u4f1a\u8bb2\u89e3\u5982\u4f55\u5411\u8868\u4e2d\u63d2\u5165\u6570\u636e\uff0c\u5230\u65f6\u5019\u5927\u5bb6\u53ef\u4ee5\u8bd5\u4e00\u8bd5\uff0c\u80fd\u5426\u987a\u5229\u5220\u9664\u5b66\u751f\u8868\u3002 \u5982\u679c\u8981\u4fee\u6539\u5b66\u751f\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 alter table \uff0c\u5177\u4f53\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a \u4fee\u6539\u8868\uff0c\u6dfb\u52a0\u4e00\u4e2a\u65b0\u5217\uff0c\u4f8b\u5982\u7ed9\u5b66\u751f\u8868\u6dfb\u52a0\u4e00\u4e2a\u8054\u7cfb\u7535\u8bdd\u7684\u5217\u3002 alter table ` tb_student ` add column ` stu_tel ` varchar ( 20 ) not null comment '\u8054\u7cfb\u7535\u8bdd' ; \u6ce8\u610f \uff1a\u5982\u679c\u65b0\u589e\u5217\u7684\u65f6\u5019\u6307\u5b9a\u4e86\u975e\u7a7a\u7ea6\u675f\uff08 not null \uff09\uff0c\u90a3\u4e48\u5b66\u751f\u8868\u4e0d\u80fd\u591f\u6709\u6570\u636e\uff0c\u5426\u5219\u539f\u6765\u7684\u6570\u636e\u589e\u52a0\u4e86 stu_tel \u5217\u4e4b\u540e\u662f\u6ca1\u6709\u6570\u636e\u7684\uff0c\u8fd9\u5c31\u8fdd\u53cd\u4e86\u975e\u7a7a\u7ea6\u675f\u7684\u8981\u6c42\uff1b\u5f53\u7136\uff0c\u6211\u4eec\u5728\u6dfb\u52a0\u5217\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u503c\u7ea6\u675f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u4fee\u6539\u8868\uff0c\u5220\u9664\u6307\u5b9a\u7684\u5217\uff0c\u4f8b\u5982\u5c06\u4e0a\u9762\u6dfb\u52a0\u7684\u8054\u7cfb\u7535\u8bdd\u5217\u5220\u9664\u6389\u3002 alter table ` tb_student ` drop column ` stu_tel ` ; \u4fee\u6539\u8868\uff0c\u4fee\u6539\u5217\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4f8b\u5982\u5c06\u5b66\u751f\u8868\u7684 stu_sex \u4fee\u6539\u4e3a\u5b57\u7b26\u3002 alter table ` tb_student ` modify column ` stu_sex ` char ( 1 ) not null default 'M' comment '\u6027\u522b' ; \u4fee\u6539\u8868\uff0c\u4fee\u6539\u5217\u7684\u547d\u540d\uff0c\u4f8b\u5982\u5c06\u5b66\u751f\u8868\u7684 stu_sex \u4fee\u6539\u4e3a stu_gender\u3002 alter table ` tb_student ` change column ` stu_sex ` ` stu_gender ` boolean default 1 comment '\u6027\u522b' ; \u4fee\u6539\u8868\uff0c\u5220\u9664\u7ea6\u675f\u6761\u4ef6\uff0c\u4f8b\u5982\u5220\u9664\u5b66\u751f\u8868\u7684 col_id \u5217\u7684\u5916\u952e\u7ea6\u675f\u3002 alter table ` tb_student ` drop foreign key ` fk_student_col_id ` ; \u4fee\u6539\u8868\uff0c\u6dfb\u52a0\u7ea6\u675f\u6761\u4ef6\uff0c\u4f8b\u5982\u7ed9\u5b66\u751f\u8868\u7684 col_id \u5217\u52a0\u4e0a\u5916\u952e\u7ea6\u675f\u3002 alter table ` tb_student ` add foreign key ( ` col_id ` ) references ` tb_college ` ( ` col_id ` ); \u6216 alter table ` tb_student ` add constraint ` fk_student_col_id ` foreign key ( ` col_id ` ) references ` tb_college ` ( ` col_id ` ); \u8bf4\u660e \uff1a\u5728\u6dfb\u52a0\u5916\u952e\u7ea6\u675f\u65f6\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 on update \u548c on delete \u6765\u6307\u5b9a\u5728\u88ab\u5f15\u7528\u7684\u8868\u53d1\u751f\u5220\u9664\u548c\u66f4\u65b0\u64cd\u4f5c\u65f6\uff0c\u5e94\u8be5\u8fdb\u884c\u4f55\u79cd\u5904\u7406\uff0c\u4e8c\u8005\u7684\u9ed8\u8ba4\u503c\u90fd\u662f restrict \uff0c\u8868\u793a\u5982\u679c\u5b58\u5728\u5916\u952e\u7ea6\u675f\uff0c\u5219\u4e0d\u5141\u8bb8\u66f4\u65b0\u548c\u5220\u9664\u88ab\u5f15\u7528\u7684\u6570\u636e\u3002\u9664\u4e86 restrict \u4e4b\u5916\uff0c\u8fd9\u91cc\u53ef\u80fd\u7684\u53d6\u503c\u8fd8\u6709 cascade \uff08\u7ea7\u8054\u64cd\u4f5c\uff09\u548c set null \uff08\u8bbe\u7f6e\u4e3a\u7a7a\uff09\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002 \u4fee\u6539\u8868\u7684\u540d\u5b57\uff0c\u4f8b\u5982\u5c06\u5b66\u751f\u8868\u7684\u540d\u5b57\u4fee\u6539\u4e3a tb_stu_info\u3002 alter table ` tb_student ` rename to ` tb_stu_info ` ; \u63d0\u793a \uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8bf7\u4e0d\u8981\u8f7b\u6613\u4fee\u6539\u6570\u636e\u5e93\u6216\u8868\u7684\u540d\u5b57\u3002","title":"\u7b2c41\u8bfe.SQL\u8be6\u89e3\u4e4bDDL"},{"location":"%E7%AC%AC41%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDDL/#sqlddl","text":"\u6211\u4eec\u901a\u5e38\u53ef\u4ee5\u5c06 SQL \u5206\u4e3a\u56db\u7c7b\uff0c\u5206\u522b\u662f DDL\uff08\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff09\u3001DML\uff08\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff09\u3001DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u548c DCL\uff08\u6570\u636e\u63a7\u5236\u8bed\u8a00\uff09\u3002DDL \u4e3b\u8981\u7528\u4e8e\u521b\u5efa\u3001\u5220\u9664\u3001\u4fee\u6539\u6570\u636e\u5e93\u4e2d\u7684\u5bf9\u8c61\uff0c\u6bd4\u5982\u521b\u5efa\u3001\u5220\u9664\u548c\u4fee\u6539\u4e8c\u7ef4\u8868\uff0c\u6838\u5fc3\u7684\u5173\u952e\u5b57\u5305\u62ec create \u3001 drop \u548c alter \uff1bDML \u4e3b\u8981\u8d1f\u8d23\u6570\u636e\u7684\u63d2\u5165\u3001\u5220\u9664\u548c\u66f4\u65b0\uff0c\u5173\u952e\u8bcd\u5305\u62ec insert \u3001 delete \u548c update \uff1bDQL \u8d1f\u8d23\u6570\u636e\u67e5\u8be2\uff0c\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u5173\u952e\u8bcd\u662f select \uff1bDCL \u901a\u5e38\u7528\u4e8e\u6388\u4e88\u548c\u53ec\u56de\u6743\u9650\uff0c\u6838\u5fc3\u5173\u952e\u8bcd\u662f grant \u548c revoke \u3002 \u8bf4\u660e \uff1aSQL \u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u8bed\u8a00\uff0c\u6709\u4eba\u4f1a\u5efa\u8bae\u5c06\u5173\u952e\u5b57\u5927\u5199\uff0c\u5176\u4ed6\u90e8\u5206\u5c0f\u5199\u3002\u4e3a\u4e86\u4e66\u5199\u548c\u8bc6\u522b\u65b9\u4fbf\uff0c\u4e0b\u9762\u7684 SQL \u6211\u90fd\u662f\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\u8fdb\u884c\u4e66\u5199\u7684\u3002 \u5982\u679c\u516c\u53f8\u7684 SQL \u7f16\u7a0b\u89c4\u8303\u6709\u5f3a\u5236\u89c4\u5b9a\uff0c\u90a3\u4e48\u5c31\u6309\u7167\u516c\u53f8\u7684\u8981\u6c42\u6765\uff0c\u4e2a\u4eba\u7684\u559c\u597d\u4e0d\u5e94\u8be5\u51cc\u9a7e\u4e8e\u516c\u53f8\u7684\u7f16\u7a0b\u89c4\u8303\u4e4b\u4e0a\uff0c\u8fd9\u4e00\u70b9\u5bf9\u804c\u4e1a\u4eba\u6765\u8bf4\u5e94\u8be5\u662f\u5e38\u8bc6\u3002","title":"SQL\u8be6\u89e3\u4e4bDDL"},{"location":"%E7%AC%AC41%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDDL/#_1","text":"\u4e0b\u9762\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5b66\u6821\u9009\u8bfe\u7cfb\u7edf\u7684\u6570\u636e\u5e93\u3002\u6211\u4eec\u5c06\u6570\u636e\u5e93\u547d\u540d\u4e3a school \uff0c\u56db\u4e2a\u5173\u952e\u7684\u5b9e\u4f53\u5206\u522b\u662f\u5b66\u9662\u3001\u8001\u5e08\u3001\u5b66\u751f\u548c\u8bfe\u7a0b\uff0c\u5176\u4e2d\uff0c\u5b66\u751f\u8ddf\u5b66\u9662\u662f\u4ece\u5c5e\u5173\u7cfb\uff0c\u8fd9\u4e2a\u5173\u7cfb\u4ece\u6570\u91cf\u4e0a\u6765\u8bb2\u662f\u591a\u5bf9\u4e00\u5173\u7cfb\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5b66\u9662\u53ef\u4ee5\u6709\u591a\u540d\u5b66\u751f\uff0c\u800c\u4e00\u4e2a\u5b66\u751f\u901a\u5e38\u53ea\u5c5e\u4e8e\u4e00\u4e2a\u5b66\u9662\uff1b\u540c\u7406\uff0c\u8001\u5e08\u8ddf\u5b66\u9662\u7684\u4ece\u5c5e\u5173\u7cfb\u4e5f\u662f\u591a\u5bf9\u4e00\u5173\u7cfb\u3002\u4e00\u540d\u8001\u5e08\u53ef\u4ee5\u8bb2\u6388\u591a\u95e8\u8bfe\u7a0b\uff0c\u4e00\u95e8\u8bfe\u7a0b\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u6388\u8bfe\u8001\u5e08\u7684\u8bdd\uff0c\u90a3\u4e48\u8bfe\u7a0b\u8ddf\u8001\u5e08\u4e5f\u662f\u591a\u5bf9\u4e00\u5173\u7cfb\uff1b\u5982\u679c\u5141\u8bb8\u591a\u4e2a\u8001\u5e08\u5408\u4f5c\u8bb2\u6388\u4e00\u95e8\u8bfe\u7a0b\uff0c\u90a3\u4e48\u8bfe\u7a0b\u548c\u8001\u5e08\u5c31\u662f\u591a\u5bf9\u591a\u5173\u7cfb\u3002\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u8bfe\u7a0b\u548c\u8001\u5e08\u8bbe\u8ba1\u4e3a\u591a\u5bf9\u4e00\u5173\u7cfb\u3002\u5b66\u751f\u548c\u8bfe\u7a0b\u662f\u5178\u578b\u7684\u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u56e0\u4e3a\u4e00\u4e2a\u5b66\u751f\u53ef\u4ee5\u9009\u62e9\u591a\u95e8\u8bfe\u7a0b\uff0c\u4e00\u95e8\u8bfe\u7a0b\u4e5f\u53ef\u4ee5\u88ab\u591a\u4e2a\u5b66\u751f\u9009\u62e9\uff0c\u800c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u9700\u8981\u501f\u52a9\u4e2d\u95f4\u8868\u624d\u80fd\u7ef4\u6301\u7ef4\u6301\u4e24\u4e2a\u5b9e\u4f53\u7684\u591a\u5bf9\u591a\u5173\u7cfb\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u7684\u5b66\u6821\u9009\u8bfe\u7cfb\u7edf\u4e00\u5171\u6709\u4e94\u5f20\u8868\uff0c\u5206\u522b\u662f\u5b66\u9662\u8868\uff08 tb_college \uff09\u3001\u5b66\u751f\u8868\uff08 tb_student \uff09\u3001\u6559\u5e08\u8868\uff08 tb_teacher \uff09\u3001\u8bfe\u7a0b\u8868\uff08 tb_course \uff09\u548c\u9009\u8bfe\u8bb0\u5f55\u8868\uff08 tb_record \uff09\uff0c\u5176\u4e2d\u9009\u8bfe\u8bb0\u5f55\u8868\u5c31\u662f\u7ef4\u6301\u5b66\u751f\u8ddf\u8bfe\u7a0b\u591a\u5bf9\u591a\u5173\u7cfb\u7684\u4e2d\u95f4\u8868\u3002 -- \u5982\u679c\u5b58\u5728\u540d\u4e3aschool\u7684\u6570\u636e\u5e93\u5c31\u5220\u9664\u5b83 drop database if exists ` school ` ; -- \u521b\u5efa\u540d\u4e3aschool\u7684\u6570\u636e\u5e93\u5e76\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u5b57\u7b26\u96c6\u548c\u6392\u5e8f\u65b9\u5f0f create database ` school ` default character set utf8mb4 collate utf8mb4_general_ci ; -- \u5207\u6362\u5230school\u6570\u636e\u5e93\u4e0a\u4e0b\u6587\u73af\u5883 use ` school ` ; -- \u521b\u5efa\u5b66\u9662\u8868 create table ` tb_college ` ( ` col_id ` int unsigned auto_increment comment '\u7f16\u53f7' , ` col_name ` varchar ( 50 ) not null comment '\u540d\u79f0' , ` col_intro ` varchar ( 500 ) default '' comment '\u4ecb\u7ecd' , primary key ( ` col_id ` ) ) engine = innodb auto_increment = 1 comment '\u5b66\u9662\u8868' ; -- \u521b\u5efa\u5b66\u751f\u8868 create table ` tb_student ` ( ` stu_id ` int unsigned not null comment '\u5b66\u53f7' , ` stu_name ` varchar ( 20 ) not null comment '\u59d3\u540d' , ` stu_sex ` boolean default 1 not null comment '\u6027\u522b' , ` stu_birth ` date not null comment '\u51fa\u751f\u65e5\u671f' , ` stu_addr ` varchar ( 255 ) default '' comment '\u7c4d\u8d2f' , ` col_id ` int unsigned not null comment '\u6240\u5c5e\u5b66\u9662' , primary key ( ` stu_id ` ), constraint ` fk_student_col_id ` foreign key ( ` col_id ` ) references ` tb_college ` ( ` col_id ` ) ) engine = innodb comment '\u5b66\u751f\u8868' ; -- \u521b\u5efa\u6559\u5e08\u8868 create table ` tb_teacher ` ( ` tea_id ` int unsigned not null comment '\u5de5\u53f7' , ` tea_name ` varchar ( 20 ) not null comment '\u59d3\u540d' , ` tea_title ` varchar ( 10 ) default '\u52a9\u6559' comment '\u804c\u79f0' , ` col_id ` int unsigned not null comment '\u6240\u5c5e\u5b66\u9662' , primary key ( ` tea_id ` ), constraint ` fk_teacher_col_id ` foreign key ( ` col_id ` ) references ` tb_college ` ( ` col_id ` ) ) engine = innodb comment '\u8001\u5e08\u8868' ; -- \u521b\u5efa\u8bfe\u7a0b\u8868 create table ` tb_course ` ( ` cou_id ` int unsigned not null comment '\u7f16\u53f7' , ` cou_name ` varchar ( 50 ) not null comment '\u540d\u79f0' , ` cou_credit ` int not null comment '\u5b66\u5206' , ` tea_id ` int unsigned not null comment '\u6388\u8bfe\u8001\u5e08' , primary key ( ` cou_id ` ), constraint ` fk_course_tea_id ` foreign key ( ` tea_id ` ) references ` tb_teacher ` ( ` tea_id ` ) ) engine = innodb comment '\u8bfe\u7a0b\u8868' ; -- \u521b\u5efa\u9009\u8bfe\u8bb0\u5f55\u8868 create table ` tb_record ` ( ` rec_id ` bigint unsigned auto_increment comment '\u9009\u8bfe\u8bb0\u5f55\u53f7' , ` stu_id ` int unsigned not null comment '\u5b66\u53f7' , ` cou_id ` int unsigned not null comment '\u8bfe\u7a0b\u7f16\u53f7' , ` sel_date ` date not null comment '\u9009\u8bfe\u65e5\u671f' , ` score ` decimal ( 4 , 1 ) comment '\u8003\u8bd5\u6210\u7ee9' , primary key ( ` rec_id ` ), constraint ` fk_record_stu_id ` foreign key ( ` stu_id ` ) references ` tb_student ` ( ` stu_id ` ), constraint ` fk_record_cou_id ` foreign key ( ` cou_id ` ) references ` tb_course ` ( ` cou_id ` ), constraint ` uk_record_stu_cou ` unique ( ` stu_id ` , ` cou_id ` ) ) engine = innodb comment '\u9009\u8bfe\u8bb0\u5f55\u8868' ; \u4e0a\u9762\u7684DDL\u6709\u51e0\u4e2a\u5730\u65b9\u9700\u8981\u5f3a\u8c03\u4e00\u4e0b\uff1a \u9996\u5148\uff0c\u4e0a\u9762 SQL \u4e2d\u7684\u6570\u636e\u5e93\u540d\u3001\u8868\u540d\u3001\u5b57\u6bb5\u540d\u90fd\u88ab\u53cd\u5f15\u53f7\uff08`\uff09\u5305\u88f9\u8d77\u6765\uff0c\u53cd\u5f15\u53f7\u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f\u5374\u53ef\u4ee5\u89e3\u51b3\u8868\u540d\u3001\u5b57\u6bb5\u540d\u7b49\u8ddf SQL \u5173\u952e\u5b57\uff08SQL \u4e2d\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\uff09\u51b2\u7a81\u7684\u95ee\u9898\u3002 \u521b\u5efa\u6570\u636e\u5e93\u65f6\uff0c\u6211\u4eec\u901a\u8fc7 default character set utf8mb4 \u6307\u5b9a\u4e86\u6570\u636e\u5e93\u9ed8\u8ba4\u4f7f\u7528\u7684\u5b57\u7b26\u96c6\u4e3a utf8mb4 \uff08\u6700\u5927 4 \u5b57\u8282\u7684 utf-8 \u7f16\u7801\uff09\uff0c\u6211\u4eec\u63a8\u8350\u4f7f\u7528\u8be5\u5b57\u7b26\u96c6\uff0c\u5b83\u4e5f\u662f MySQL 8.x \u9ed8\u8ba4\u4f7f\u7528\u7684\u5b57\u7b26\u96c6\uff0c\u56e0\u4e3a\u5b83\u80fd\u591f\u652f\u6301\u56fd\u9645\u5316\u7f16\u7801\uff0c\u8fd8\u53ef\u4ee5\u5b58\u50a8 Emoji \u5b57\u7b26\u3002\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b MySQL \u652f\u6301\u7684\u5b57\u7b26\u96c6\u4ee5\u53ca\u9ed8\u8ba4\u7684\u6392\u5e8f\u89c4\u5219\u3002 show character set ; +----------+---------------------------------+---------------------+--------+ | Charset | Description | Default collation | Maxlen | +----------+---------------------------------+---------------------+--------+ | big5 | Big5 Traditional Chinese | big5_chinese_ci | 2 | | dec8 | DEC West European | dec8_swedish_ci | 1 | | cp850 | DOS West European | cp850_general_ci | 1 | | hp8 | HP West European | hp8_english_ci | 1 | | koi8r | KOI8-R Relcom Russian | koi8r_general_ci | 1 | | latin1 | cp1252 West European | latin1_swedish_ci | 1 | | latin2 | ISO 8859-2 Central European | latin2_general_ci | 1 | | swe7 | 7bit Swedish | swe7_swedish_ci | 1 | | ascii | US ASCII | ascii_general_ci | 1 | | ujis | EUC-JP Japanese | ujis_japanese_ci | 3 | | sjis | Shift-JIS Japanese | sjis_japanese_ci | 2 | | hebrew | ISO 8859-8 Hebrew | hebrew_general_ci | 1 | | tis620 | TIS620 Thai | tis620_thai_ci | 1 | | euckr | EUC-KR Korean | euckr_korean_ci | 2 | | koi8u | KOI8-U Ukrainian | koi8u_general_ci | 1 | | gb2312 | GB2312 Simplified Chinese | gb2312_chinese_ci | 2 | | greek | ISO 8859-7 Greek | greek_general_ci | 1 | | cp1250 | Windows Central European | cp1250_general_ci | 1 | | gbk | GBK Simplified Chinese | gbk_chinese_ci | 2 | | latin5 | ISO 8859-9 Turkish | latin5_turkish_ci | 1 | | armscii8 | ARMSCII-8 Armenian | armscii8_general_ci | 1 | | utf8 | UTF-8 Unicode | utf8_general_ci | 3 | | ucs2 | UCS-2 Unicode | ucs2_general_ci | 2 | | cp866 | DOS Russian | cp866_general_ci | 1 | | keybcs2 | DOS Kamenicky Czech-Slovak | keybcs2_general_ci | 1 | | macce | Mac Central European | macce_general_ci | 1 | | macroman | Mac West European | macroman_general_ci | 1 | | cp852 | DOS Central European | cp852_general_ci | 1 | | latin7 | ISO 8859-13 Baltic | latin7_general_ci | 1 | | utf8mb4 | UTF-8 Unicode | utf8mb4_general_ci | 4 | | cp1251 | Windows Cyrillic | cp1251_general_ci | 1 | | utf16 | UTF-16 Unicode | utf16_general_ci | 4 | | utf16le | UTF-16LE Unicode | utf16le_general_ci | 4 | | cp1256 | Windows Arabic | cp1256_general_ci | 1 | | cp1257 | Windows Baltic | cp1257_general_ci | 1 | | utf32 | UTF-32 Unicode | utf32_general_ci | 4 | | binary | Binary pseudo charset | binary | 1 | | geostd8 | GEOSTD8 Georgian | geostd8_general_ci | 1 | | cp932 | SJIS for Windows Japanese | cp932_japanese_ci | 2 | | eucjpms | UJIS for Windows Japanese | eucjpms_japanese_ci | 3 | | gb18030 | China National Standard GB18030 | gb18030_chinese_ci | 4 | +----------+---------------------------------+---------------------+--------+ 41 rows in set (0.00 sec) \u5982\u679c\u8981\u8bbe\u7f6e MySQL \u670d\u52a1\u542f\u52a8\u65f6\u9ed8\u8ba4\u4f7f\u7528\u7684\u5b57\u7b26\u96c6\uff0c\u53ef\u4ee5\u4fee\u6539MySQL\u7684\u914d\u7f6e\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\u3002 [mysqld] character-set-server = utf8 \u63d0\u793a \uff1a\u5982\u679c\u4e0d\u6e05\u695a\u5982\u4f55\u4fee\u6539 MySQL \u7684\u914d\u7f6e\u6587\u4ef6\u5c31\u5148\u4e0d\u8981\u7ba1\u5b83\u3002 \u521b\u5efa\u548c\u5220\u9664\u6570\u636e\u5e93\u65f6\uff0c\u5173\u952e\u5b57 database \u4e5f\u53ef\u4ee5\u66ff\u6362\u4e3a schema \uff0c\u4e8c\u8005\u4f5c\u7528\u76f8\u540c\u3002 \u5efa\u8868\u8bed\u53e5\u4e2d\u7684 not null \u662f\u975e\u7a7a\u7ea6\u675f\uff0c\u5b83\u9650\u5b9a\u4e86\u5b57\u6bb5\u4e0d\u80fd\u4e3a\u7a7a\uff1b default \u7528\u4e8e\u4e3a\u5b57\u6bb5\u6307\u5b9a\u9ed8\u8ba4\u503c\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u9ed8\u8ba4\u503c\u7ea6\u675f\uff1b primary key \u662f\u4e3b\u952e\u7ea6\u675f\uff0c\u5b83\u8bbe\u5b9a\u4e86\u80fd\u591f\u552f\u4e00\u786e\u5b9a\u4e00\u6761\u8bb0\u5f55\u7684\u5217\uff0c\u4e5f\u786e\u4fdd\u4e86\u6bcf\u6761\u8bb0\u5f55\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u56e0\u4e3a\u4e3b\u952e\u4e0d\u5141\u8bb8\u91cd\u590d\uff1b foreign key \u662f\u5916\u952e\u7ea6\u675f\uff0c\u5b83\u7ef4\u6301\u4e86\u4e24\u5f20\u8868\u7684\u53c2\u7167\u5b8c\u6574\u6027\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u7531\u4e8e\u5b66\u751f\u8868\u4e2d\u4e3a col_id \u5b57\u6bb5\u6dfb\u52a0\u4e86\u5916\u952e\u7ea6\u675f\uff0c\u9650\u5b9a\u5176\u5fc5\u987b\u5f15\u7528\uff08 references \uff09\u5b66\u9662\u8868\u4e2d\u7684 col_id\uff0c\u56e0\u6b64\u5b66\u751f\u8868\u4e2d\u7684\u5b66\u9662\u7f16\u53f7\u5fc5\u987b\u6765\u81ea\u4e8e\u5b66\u9662\u8868\u4e2d\u7684\u5b66\u9662\u7f16\u53f7\uff0c\u4e0d\u80fd\u591f\u968f\u610f\u4e3a\u8be5\u5b57\u6bb5\u8d4b\u503c\u3002\u5982\u679c\u9700\u8981\u7ed9\u4e3b\u952e\u7ea6\u675f\u3001\u5916\u952e\u7ea6\u675f\u7b49\u8d77\u540d\u5b57\uff0c\u53ef\u4ee5\u4f7f\u7528 constriant \u5173\u952e\u5b57\u5e76\u5728\u540e\u9762\u8ddf\u4e0a\u7ea6\u675f\u7684\u540d\u5b57\u3002 \u5efa\u8868\u8bed\u53e5\u4e2d\u7684 comment \u5173\u952e\u5b57\u7528\u6765\u7ed9\u5217\u548c\u8868\u6dfb\u52a0\u6ce8\u91ca\uff0c\u589e\u5f3a\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 \u5728\u521b\u5efa\u8868\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u81ea\u884c\u9009\u62e9\u5e95\u5c42\u7684\u5b58\u50a8\u5f15\u64ce\u3002MySQL \u652f\u6301\u591a\u79cd\u5b58\u50a8\u5f15\u64ce\uff0c\u53ef\u4ee5\u901a\u8fc7 show engines \u547d\u4ee4\u8fdb\u884c\u67e5\u770b\u3002MySQL 5.5 \u4ee5\u540e\u7684\u7248\u672c\u9ed8\u8ba4\u4f7f\u7528\u7684\u5b58\u50a8\u5f15\u64ce\u662f InnoDB\uff0c\u5b83\u662f\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u7684\u5b58\u50a8\u5f15\u64ce\uff08\u56e0\u4e3a\u66f4\u9002\u5408\u5f53\u4e0b\u4e92\u8054\u7f51\u5e94\u7528\u5bf9\u9ad8\u5e76\u53d1\u3001\u6027\u80fd\u4ee5\u53ca\u4e8b\u52a1\u652f\u6301\u7b49\u65b9\u9762\u7684\u9700\u6c42\uff09\uff0c\u4e3a\u4e86 SQL \u8bed\u53e5\u7684\u5411\u4e0b\u517c\u5bb9\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5efa\u8868\u8bed\u53e5\u7ed3\u675f\u5904\u53f3\u5706\u62ec\u53f7\u7684\u540e\u9762\u901a\u8fc7 engine=innodb \u6765\u6307\u5b9a\u4f7f\u7528 InnoDB \u5b58\u50a8\u5f15\u64ce\u3002 show engines \\ G \u8bf4\u660e \uff1a\u4e0a\u9762\u7684 \\G \u662f\u4e3a\u4e86\u6362\u4e00\u79cd\u8f93\u51fa\u65b9\u5f0f\uff0c\u5728\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u4e2d\uff0c\u5982\u679c\u8868\u7684\u5b57\u6bb5\u5f88\u591a\u4e00\u884c\u663e\u793a\u4e0d\u5b8c\uff0c\u5c31\u4f1a\u5bfc\u81f4\u8f93\u51fa\u7684\u5185\u5bb9\u770b\u8d77\u6765\u975e\u5e38\u4e0d\u8212\u670d\uff0c\u4f7f\u7528 \\G \u53ef\u4ee5\u5c06\u8bb0\u5f55\u7684\u6bcf\u4e2a\u5217\u4ee5\u72ec\u5360\u6574\u884c\u7684\u7684\u65b9\u5f0f\u8f93\u51fa\uff0c\u8fd9\u79cd\u8f93\u51fa\u65b9\u5f0f\u5728\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u4e2d\u770b\u8d77\u6765\u4f1a\u8212\u670d\u5f88\u591a\u3002 *************************** 1. row *************************** Engine: InnoDB Support: DEFAULT Comment: Supports transactions, row-level locking, and foreign keys Transactions: YES XA: YES Savepoints: YES *************************** 2. row *************************** Engine: MRG_MYISAM Support: YES Comment: Collection of identical MyISAM tables Transactions: NO XA: NO Savepoints: NO *************************** 3. row *************************** Engine: MEMORY Support: YES Comment: Hash based, stored in memory, useful for temporary tables Transactions: NO XA: NO Savepoints: NO *************************** 4. row *************************** Engine: BLACKHOLE Support: YES Comment: /dev/null storage engine (anything you write to it disappears) Transactions: NO XA: NO Savepoints: NO *************************** 5. row *************************** Engine: MyISAM Support: YES Comment: MyISAM storage engine Transactions: NO XA: NO Savepoints: NO *************************** 6. row *************************** Engine: CSV Support: YES Comment: CSV storage engine Transactions: NO XA: NO Savepoints: NO *************************** 7. row *************************** Engine: ARCHIVE Support: YES Comment: Archive storage engine Transactions: NO XA: NO Savepoints: NO *************************** 8. row *************************** Engine: PERFORMANCE_SCHEMA Support: YES Comment: Performance Schema Transactions: NO XA: NO Savepoints: NO *************************** 9. row *************************** Engine: FEDERATED Support: NO Comment: Federated MySQL storage engine Transactions: NULL XA: NULL Savepoints: NULL 9 rows in set (0.00 sec) \u4e0b\u9762\u7684\u8868\u683c\u5bf9MySQL\u51e0\u79cd\u5e38\u7528\u7684\u6570\u636e\u5f15\u64ce\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u5bf9\u6bd4\u3002 \u7279\u6027 InnoDB MRG_MYISAM MEMORY MyISAM \u5b58\u50a8\u9650\u5236 \u6709 \u6ca1\u6709 \u6709 \u6709 \u4e8b\u52a1 \u652f\u6301 \u9501\u673a\u5236 \u884c\u9501 \u8868\u9501 \u8868\u9501 \u8868\u9501 B\u6811\u7d22\u5f15 \u652f\u6301 \u652f\u6301 \u652f\u6301 \u652f\u6301 \u54c8\u5e0c\u7d22\u5f15 \u652f\u6301 \u5168\u6587\u68c0\u7d22 \u652f\u6301\uff085.6+\uff09 \u652f\u6301 \u96c6\u7fa4\u7d22\u5f15 \u652f\u6301 \u6570\u636e\u7f13\u5b58 \u652f\u6301 \u652f\u6301 \u7d22\u5f15\u7f13\u5b58 \u652f\u6301 \u652f\u6301 \u652f\u6301 \u652f\u6301 \u6570\u636e\u53ef\u538b\u7f29 \u652f\u6301 \u5185\u5b58\u4f7f\u7528 \u9ad8 \u4f4e \u4e2d \u4f4e \u5b58\u50a8\u7a7a\u95f4\u4f7f\u7528 \u9ad8 \u4f4e \u4f4e \u6279\u91cf\u63d2\u5165\u6027\u80fd \u4f4e \u9ad8 \u9ad8 \u9ad8 \u662f\u5426\u652f\u6301\u5916\u952e \u652f\u6301 \u901a\u8fc7\u4e0a\u9762\u7684\u6bd4\u8f83\u6211\u4eec\u53ef\u4ee5\u4e86\u89e3\u5230\uff0cInnoDB \u662f\u552f\u4e00\u80fd\u591f\u652f\u6301\u5916\u952e\u3001\u4e8b\u52a1\u4ee5\u53ca\u884c\u9501\u7684\u5b58\u50a8\u5f15\u64ce\uff0c\u6240\u4ee5\u6211\u4eec\u4e4b\u524d\u8bf4\u5b83\u66f4\u9002\u5408\u4e92\u8054\u7f51\u5e94\u7528\uff0c\u800c\u4e14\u5728\u8f83\u65b0\u7248\u672c\u7684 MySQL \u4e2d\uff0c\u5b83\u4e5f\u662f\u9ed8\u8ba4\u4f7f\u7528\u7684\u5b58\u50a8\u5f15\u64ce\u3002 \u5728\u5b9a\u4e49\u8868\u7ed3\u6784\u4e3a\u6bcf\u4e2a\u5b57\u6bb5\u9009\u62e9\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u5982\u679c\u4e0d\u6e05\u695a\u54ea\u4e2a\u6570\u636e\u7c7b\u578b\u66f4\u5408\u9002\uff0c\u53ef\u4ee5\u901a\u8fc7 MySQL \u7684\u5e2e\u52a9\u7cfb\u7edf\u6765\u4e86\u89e3\u6bcf\u79cd\u6570\u636e\u7c7b\u578b\u7684\u7279\u6027\u3001\u6570\u636e\u7684\u957f\u5ea6\u548c\u7cbe\u5ea6\u7b49\u76f8\u5173\u4fe1\u606f\u3002 ? data types \u8bf4\u660e \uff1a\u5728 MySQLWorkbench \u4e2d\uff0c\u4e0d\u80fd\u4f7f\u7528 ? \u83b7\u53d6\u5e2e\u52a9\uff0c\u8981\u4f7f\u7528\u5bf9\u5e94\u7684\u547d\u4ee4 help \u3002 You asked for help about help category: \"Data Types\" For more information, type 'help <item>', where <item> is one of the following topics: AUTO_INCREMENT BIGINT BINARY BIT BLOB BLOB DATA TYPE BOOLEAN CHAR CHAR BYTE DATE DATETIME DEC DECIMAL DOUBLE DOUBLE PRECISION ENUM FLOAT INT INTEGER LONGBLOB LONGTEXT MEDIUMBLOB MEDIUMINT MEDIUMTEXT SET DATA TYPE SMALLINT TEXT TIME TIMESTAMP TINYBLOB TINYINT TINYTEXT VARBINARY VARCHAR YEAR DATA TYPE \u83b7\u53d6 varchar \u7c7b\u578b\u7684\u5e2e\u52a9\uff1a ? varchar \u6267\u884c\u7ed3\u679c\uff1a Name: 'VARCHAR' Description: [NATIONAL] VARCHAR(M) [CHARACTER SET charset_name] [COLLATE collation_name] A variable-length string. M represents the maximum column length in characters. The range of M is 0 to 65,535. The effective maximum length of a VARCHAR is subject to the maximum row size (65,535 bytes, which is shared among all columns) and the character set used. For example, utf8 characters can require up to three bytes per character, so a VARCHAR column that uses the utf8 character set can be declared to be a maximum of 21,844 characters. See http://dev.mysql.com/doc/refman/5.7/en/column-count-limit.html. MySQL stores VARCHAR values as a 1-byte or 2-byte length prefix plus data. The length prefix indicates the number of bytes in the value. A VARCHAR column uses one length byte if values require no more than 255 bytes, two length bytes if values may require more than 255 bytes. *Note*: MySQL follows the standard SQL specification, and does not remove trailing spaces from VARCHAR values. VARCHAR is shorthand for CHARACTER VARYING. NATIONAL VARCHAR is the standard SQL way to define that a VARCHAR column should use some predefined character set. MySQL uses utf8 as this predefined character set. http://dev.mysql.com/doc/refman/5.7/en/charset-national.html. NVARCHAR is shorthand for NATIONAL VARCHAR. URL: http://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html \u5728\u6570\u636e\u7c7b\u578b\u7684\u9009\u62e9\u4e0a\uff0c\u4fdd\u5b58\u5b57\u7b26\u4e32\u6570\u636e\u901a\u5e38\u90fd\u4f7f\u7528 VARCHAR \u548c CHAR \u4e24\u79cd\u7c7b\u578b\uff0c\u524d\u8005\u901a\u5e38\u79f0\u4e3a\u53d8\u957f\u5b57\u7b26\u4e32\uff0c\u800c\u540e\u8005\u901a\u5e38\u79f0\u4e3a\u5b9a\u957f\u5b57\u7b26\u4e32\uff1b\u5bf9\u4e8e InnoDB \u5b58\u50a8\u5f15\u64ce\uff0c\u884c\u5b58\u50a8\u683c\u5f0f\u6ca1\u6709\u533a\u5206\u56fa\u5b9a\u957f\u5ea6\u548c\u53ef\u53d8\u957f\u5ea6\u5217\uff0c\u56e0\u6b64 VARCHAR \u7c7b\u578b\u548c CHAR \u7c7b\u578b\u6ca1\u6709\u672c\u8d28\u533a\u522b\uff0c\u540e\u8005\u4e0d\u4e00\u5b9a\u6bd4\u524d\u8005\u6027\u80fd\u66f4\u597d\u3002\u5982\u679c\u8981\u4fdd\u5b58\u7684\u5f88\u5927\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528 TEXT \u7c7b\u578b\uff1b\u5982\u679c\u8981\u4fdd\u5b58\u5f88\u5927\u7684\u5b57\u8282\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528 BLOB\uff08\u4e8c\u8fdb\u5236\u5927\u5bf9\u8c61\uff09\u7c7b\u578b\u3002\u5728 MySQL \u4e2d\uff0cTEXT \u548c BLOB\u53c8\u5206\u522b\u5305\u62ec TEXT\u3001MEDIUMTEXT\u3001LONGTEXT \u548c BLOB\u3001MEDIUMBLOB\u3001LONGBLOB \u4e09\u79cd\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u5b83\u4eec\u4e3b\u8981\u7684\u533a\u522b\u5728\u4e8e\u5b58\u50a8\u6570\u636e\u7684\u6700\u5927\u5927\u5c0f\u4e0d\u540c\u3002\u4fdd\u5b58\u6d6e\u70b9\u6570\u53ef\u4ee5\u7528 FLOAT \u6216 DOUBLE \u7c7b\u578b\uff0cFLOAT \u5df2\u7ecf\u4e0d\u63a8\u8350\u4f7f\u7528\u4e86\uff0c\u800c\u4e14\u5728 MySQL \u540e\u7eed\u7684\u7248\u672c\u4e2d\u53ef\u80fd\u4f1a\u88ab\u79fb\u9664\u6389\u3002\u800c\u4fdd\u5b58\u5b9a\u70b9\u6570\u5e94\u8be5\u4f7f\u7528 DECIMAL \u7c7b\u578b\uff0c\u5b83\u53ef\u4ee5\u6307\u5b9a\u5c0f\u6570\u70b9\u524d\u540e\u6709\u6548\u6570\u5b57\u7684\u4f4d\u6570\u3002\u5982\u679c\u8981\u4fdd\u5b58\u65f6\u95f4\u65e5\u671f\uff0cDATETIME \u7c7b\u578b\u4f18\u4e8e TIMESTAMP \u7c7b\u578b\uff0c\u56e0\u4e3a\u524d\u8005\u80fd\u8868\u793a\u7684\u65f6\u95f4\u65e5\u671f\u8303\u56f4\u66f4\u5927\uff0c\u540e\u8005\u5e95\u5c42\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8bb0\u5f55\u4e86\u6307\u5b9a\u7684\u65e5\u671f\u65f6\u95f4\u548c 1970-01-01 00:00:00 \u76f8\u5dee\u591a\u5c11\u4e2a\u6beb\u79d2\uff0c\u8be5\u7c7b\u578b\u5728 2038-01-19 03:14:07 \u4e4b\u540e\u5c31\u4f1a\u6ea2\u51fa\u3002 \u5bf9\u4e8e\u81ea\u589e\u5b57\u6bb5 AUTO_INCREMENT\uff0c\u5982\u679c\u4f7f\u7528 MySQL 5.x \u7248\u672c\u8981\u6ce8\u610f\u81ea\u589e\u5b57\u6bb5\u7684\u56de\u6eaf\u95ee\u9898\uff0c\u5f53\u7136\u8fd9\u4e2a\u95ee\u9898\u5728 MySQL 8.x \u4e2d\u5df2\u7ecf\u5f97\u5230\u4e86\u5f88\u597d\u7684\u89e3\u51b3\uff0c\u5f53\u7136\uff0cMySQL 8.x \u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u597d\u5904\uff0c\u4e0d\u7ba1\u662f\u529f\u80fd\u8fd8\u662f\u6027\u80fd\u4e0a\u90fd\u6709\u5f88\u591a\u7684\u4f18\u5316\u548c\u8c03\u6574\uff0c\u56e0\u6b64\u5f3a\u70c8\u63a8\u8350\u5927\u5bb6\u4f7f\u7528 MySQL 8.x \u7248\u672c\u3002\u5bf9\u4e8e\u9ad8\u5e76\u53d1\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u573a\u666f\uff0cAUTO_INCREMENT \u4e0d\u4ec5\u5b58\u5728\u6027\u80fd\u4e0a\u7684\u95ee\u9898\uff0c\u8fd8\u53ef\u80fd\u5728\u591a\u673a\u7ed3\u6784\u4e0a\u4ea7\u751f\u91cd\u590d\u7684 ID \u503c\uff0c\u5728\u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u4f7f\u7528\u5206\u5e03\u5f0f ID \u751f\u6210\u7b97\u6cd5\uff08SnowFlake\u3001TinyID\u7b49\uff09\u624d\u662f\u6700\u597d\u7684\u9009\u62e9\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002","title":"\u5efa\u5e93\u5efa\u8868"},{"location":"%E7%AC%AC41%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDDL/#_2","text":"\u4e0b\u9762\u4ee5\u5b66\u751f\u8868\u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u8bf4\u660e\u5982\u4f55\u5220\u9664\u8868\u548c\u4fee\u6539\u8868\u3002\u5220\u9664\u8868\u53ef\u4ee5\u4f7f\u7528 drop table \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 drop table ` tb_student ` ; \u6216 drop table if exists ` tb_student ` ; \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u5b66\u751f\u8868\u5df2\u7ecf\u5f55\u5165\u4e86\u6570\u636e\u800c\u4e14\u8be5\u6570\u636e\u88ab\u5176\u4ed6\u8868\u5f15\u7528\u4e86\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u5220\u9664\u5b66\u751f\u8868\uff0c\u5426\u5219\u4e0a\u9762\u7684\u64cd\u4f5c\u4f1a\u62a5\u9519\u3002\u5728\u4e0b\u4e00\u8bfe\u4e2d\uff0c\u6211\u4eec\u4f1a\u8bb2\u89e3\u5982\u4f55\u5411\u8868\u4e2d\u63d2\u5165\u6570\u636e\uff0c\u5230\u65f6\u5019\u5927\u5bb6\u53ef\u4ee5\u8bd5\u4e00\u8bd5\uff0c\u80fd\u5426\u987a\u5229\u5220\u9664\u5b66\u751f\u8868\u3002 \u5982\u679c\u8981\u4fee\u6539\u5b66\u751f\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 alter table \uff0c\u5177\u4f53\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a \u4fee\u6539\u8868\uff0c\u6dfb\u52a0\u4e00\u4e2a\u65b0\u5217\uff0c\u4f8b\u5982\u7ed9\u5b66\u751f\u8868\u6dfb\u52a0\u4e00\u4e2a\u8054\u7cfb\u7535\u8bdd\u7684\u5217\u3002 alter table ` tb_student ` add column ` stu_tel ` varchar ( 20 ) not null comment '\u8054\u7cfb\u7535\u8bdd' ; \u6ce8\u610f \uff1a\u5982\u679c\u65b0\u589e\u5217\u7684\u65f6\u5019\u6307\u5b9a\u4e86\u975e\u7a7a\u7ea6\u675f\uff08 not null \uff09\uff0c\u90a3\u4e48\u5b66\u751f\u8868\u4e0d\u80fd\u591f\u6709\u6570\u636e\uff0c\u5426\u5219\u539f\u6765\u7684\u6570\u636e\u589e\u52a0\u4e86 stu_tel \u5217\u4e4b\u540e\u662f\u6ca1\u6709\u6570\u636e\u7684\uff0c\u8fd9\u5c31\u8fdd\u53cd\u4e86\u975e\u7a7a\u7ea6\u675f\u7684\u8981\u6c42\uff1b\u5f53\u7136\uff0c\u6211\u4eec\u5728\u6dfb\u52a0\u5217\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9ed8\u8ba4\u503c\u7ea6\u675f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u4fee\u6539\u8868\uff0c\u5220\u9664\u6307\u5b9a\u7684\u5217\uff0c\u4f8b\u5982\u5c06\u4e0a\u9762\u6dfb\u52a0\u7684\u8054\u7cfb\u7535\u8bdd\u5217\u5220\u9664\u6389\u3002 alter table ` tb_student ` drop column ` stu_tel ` ; \u4fee\u6539\u8868\uff0c\u4fee\u6539\u5217\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4f8b\u5982\u5c06\u5b66\u751f\u8868\u7684 stu_sex \u4fee\u6539\u4e3a\u5b57\u7b26\u3002 alter table ` tb_student ` modify column ` stu_sex ` char ( 1 ) not null default 'M' comment '\u6027\u522b' ; \u4fee\u6539\u8868\uff0c\u4fee\u6539\u5217\u7684\u547d\u540d\uff0c\u4f8b\u5982\u5c06\u5b66\u751f\u8868\u7684 stu_sex \u4fee\u6539\u4e3a stu_gender\u3002 alter table ` tb_student ` change column ` stu_sex ` ` stu_gender ` boolean default 1 comment '\u6027\u522b' ; \u4fee\u6539\u8868\uff0c\u5220\u9664\u7ea6\u675f\u6761\u4ef6\uff0c\u4f8b\u5982\u5220\u9664\u5b66\u751f\u8868\u7684 col_id \u5217\u7684\u5916\u952e\u7ea6\u675f\u3002 alter table ` tb_student ` drop foreign key ` fk_student_col_id ` ; \u4fee\u6539\u8868\uff0c\u6dfb\u52a0\u7ea6\u675f\u6761\u4ef6\uff0c\u4f8b\u5982\u7ed9\u5b66\u751f\u8868\u7684 col_id \u5217\u52a0\u4e0a\u5916\u952e\u7ea6\u675f\u3002 alter table ` tb_student ` add foreign key ( ` col_id ` ) references ` tb_college ` ( ` col_id ` ); \u6216 alter table ` tb_student ` add constraint ` fk_student_col_id ` foreign key ( ` col_id ` ) references ` tb_college ` ( ` col_id ` ); \u8bf4\u660e \uff1a\u5728\u6dfb\u52a0\u5916\u952e\u7ea6\u675f\u65f6\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 on update \u548c on delete \u6765\u6307\u5b9a\u5728\u88ab\u5f15\u7528\u7684\u8868\u53d1\u751f\u5220\u9664\u548c\u66f4\u65b0\u64cd\u4f5c\u65f6\uff0c\u5e94\u8be5\u8fdb\u884c\u4f55\u79cd\u5904\u7406\uff0c\u4e8c\u8005\u7684\u9ed8\u8ba4\u503c\u90fd\u662f restrict \uff0c\u8868\u793a\u5982\u679c\u5b58\u5728\u5916\u952e\u7ea6\u675f\uff0c\u5219\u4e0d\u5141\u8bb8\u66f4\u65b0\u548c\u5220\u9664\u88ab\u5f15\u7528\u7684\u6570\u636e\u3002\u9664\u4e86 restrict \u4e4b\u5916\uff0c\u8fd9\u91cc\u53ef\u80fd\u7684\u53d6\u503c\u8fd8\u6709 cascade \uff08\u7ea7\u8054\u64cd\u4f5c\uff09\u548c set null \uff08\u8bbe\u7f6e\u4e3a\u7a7a\uff09\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002 \u4fee\u6539\u8868\u7684\u540d\u5b57\uff0c\u4f8b\u5982\u5c06\u5b66\u751f\u8868\u7684\u540d\u5b57\u4fee\u6539\u4e3a tb_stu_info\u3002 alter table ` tb_student ` rename to ` tb_stu_info ` ; \u63d0\u793a \uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8bf7\u4e0d\u8981\u8f7b\u6613\u4fee\u6539\u6570\u636e\u5e93\u6216\u8868\u7684\u540d\u5b57\u3002","title":"\u5220\u9664\u8868\u548c\u4fee\u6539\u8868"},{"location":"%E7%AC%AC42%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDML/","text":"SQL\u8be6\u89e3\u4e4bDML \u6211\u4eec\u63a5\u7740\u4e0a\u4e00\u8bfe\u4e2d\u521b\u5efa\u7684\u5b66\u6821\u9009\u8bfe\u7cfb\u7edf\u6570\u636e\u5e93\uff0c\u4e3a\u5927\u5bb6\u8bb2\u89e3 DML \u7684\u4f7f\u7528\u3002DML \u53ef\u4ee5\u5e2e\u52a9\u5c06\u6570\u636e\u63d2\u5165\u5230\u4e8c\u7ef4\u8868\uff08 insert \u64cd\u4f5c\uff09\u3001\u4ece\u4e8c\u7ef4\u8868\u5220\u9664\u6570\u636e\uff08 delete \u64cd\u4f5c\uff09\u4ee5\u53ca\u66f4\u65b0\u4e8c\u7ef4\u8868\u7684\u6570\u636e\uff08 update \u64cd\u4f5c\uff09\u3002\u5728\u6267\u884c DML \u4e4b\u524d\uff0c\u6211\u4eec\u5148\u901a\u8fc7\u4e0b\u9762\u7684 use \u547d\u4ee4\u5207\u6362\u5230 school \u6570\u636e\u5e93\u3002 use ` school ` ; insert\u64cd\u4f5c \u987e\u540d\u601d\u4e49\uff0c insert \u662f\u7528\u6765\u63d2\u5165\u884c\u5230\u4e8c\u7ef4\u8868\u4e2d\u7684\uff0c\u63d2\u5165\u7684\u65b9\u5f0f\u5305\u62ec\uff1a\u63d2\u5165\u5b8c\u6574\u7684\u884c\u3001\u63d2\u5165\u884c\u7684\u4e00\u90e8\u5206\u3001\u63d2\u5165\u591a\u884c\u3001\u63d2\u5165\u67e5\u8be2\u7684\u7ed3\u679c\u3002\u6211\u4eec\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684 SQL \u5411\u5b66\u9662\u8868\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5b66\u9662\u3002 insert into ` tb_college ` values ( default , '\u8ba1\u7b97\u673a\u5b66\u9662' , '\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7684\u5730\u65b9' ); \u5176\u4e2d\uff0c\u7531\u4e8e\u5b66\u9662\u8868\u7684\u4e3b\u952e\u662f\u4e00\u4e2a\u81ea\u589e\u5b57\u6bb5\uff0c\u56e0\u6b64\u4e0a\u9762\u7684 SQL \u4e2d\u7528 default \u8868\u793a\u8be5\u5217\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u5b8c\u6210\u540c\u6837\u7684\u64cd\u4f5c\u3002 insert into ` tb_college ` ( ` col_name ` , ` col_intro ` ) values ( '\u8ba1\u7b97\u673a\u5b66\u9662' , '\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7684\u5730\u65b9' ); \u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u4e0b\u9762\u8fd9\u79cd\u505a\u6cd5\uff0c\u6307\u5b9a\u4e3a\u54ea\u4e9b\u5b57\u6bb5\u8d4b\u503c\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u4e0d\u6309\u7167\u5efa\u8868\u65f6\u8bbe\u5b9a\u7684\u5b57\u6bb5\u987a\u5e8f\u8d4b\u503c\uff0c\u53ef\u4ee5\u6309\u7167 values \u524d\u9762\u7684\u5143\u7ec4\u4e2d\u7ed9\u5b9a\u7684\u5b57\u6bb5\u987a\u5e8f\u4e3a\u5b57\u6bb5\u8d4b\u503c\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\uff0c\u9664\u4e86\u5141\u8bb8\u4e3a null \u548c\u6709\u9ed8\u8ba4\u503c\u7684\u5b57\u6bb5\u5916\uff0c\u5176\u4ed6\u7684\u5b57\u6bb5\u90fd\u5fc5\u987b\u8981\u4e00\u4e00\u5217\u51fa\u5e76\u5728 values \u540e\u9762\u7684\u5143\u7ec4\u4e2d\u4e3a\u5176\u8d4b\u503c\u3002\u5982\u679c\u5e0c\u671b\u4e00\u6b21\u6027\u63d2\u5165\u591a\u6761\u8bb0\u5f55\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 values \u540e\u9762\u8ddf\u4e0a\u591a\u4e2a\u5143\u7ec4\u6765\u5b9e\u73b0\u6279\u91cf\u63d2\u5165\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 insert into ` tb_college ` ( ` col_name ` , ` col_intro ` ) values ( '\u5916\u56fd\u8bed\u5b66\u9662' , '\u5b66\u4e60\u6b6a\u679c\u4ec1\u7684\u8bed\u8a00\u7684\u5b66\u9662' ), ( '\u7ecf\u6d4e\u7ba1\u7406\u5b66\u9662' , '\u7ecf\u4e16\u6d4e\u6c11\uff0c\u6cbb\u7406\u56fd\u5bb6\uff1b\u7ba1\u7406\u79d1\u5b66\uff0c\u5174\u56fd\u4e4b\u9053' ), ( '\u4f53\u80b2\u5b66\u9662' , '\u53d1\u5c55\u4f53\u80b2\u8fd0\u52a8\uff0c\u589e\u5f3a\u4eba\u6c11\u4f53\u8d28' ); \u5728\u63d2\u5165\u6570\u636e\u65f6\uff0c\u8981\u6ce8\u610f\u4e3b\u952e\u662f\u4e0d\u80fd\u91cd\u590d\u7684\uff0c\u5982\u679c\u63d2\u5165\u7684\u6570\u636e\u4e0e\u8868\u4e2d\u5df2\u6709\u8bb0\u5f55\u4e3b\u952e\u76f8\u540c\uff0c\u90a3\u4e48 insert \u64cd\u4f5c\u5c06\u4f1a\u4ea7\u751f Duplicated Entry \u7684\u62a5\u9519\u4fe1\u606f\u3002\u518d\u6b21\u63d0\u9192\u5927\u5bb6\uff0c\u5982\u679c insert \u64cd\u4f5c\u7701\u7565\u4e86\u67d0\u4e9b\u5217\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5217\u8981\u4e48\u6709\u9ed8\u8ba4\u503c\uff0c\u8981\u4e48\u5141\u8bb8\u4e3a null \uff0c\u5426\u5219\u4e5f\u5c06\u4ea7\u751f\u9519\u8bef\u3002\u5728\u4e1a\u52a1\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u4e86\u8ba9 insert \u64cd\u4f5c\u4e0d\u5f71\u54cd\u5176\u4ed6\u64cd\u4f5c\uff08\u4e3b\u8981\u662f\u540e\u9762\u8981\u8bb2\u7684 select \u64cd\u4f5c\uff09\u7684\u6027\u80fd\uff0c\u53ef\u4ee5\u5728 insert \u548c into \u4e4b\u95f4\u52a0\u4e00\u4e2a low_priority \u6765\u964d\u4f4e insert \u64cd\u4f5c\u7684\u4f18\u5148\u7ea7\uff0c\u8fd9\u4e2a\u505a\u6cd5\u4e5f\u9002\u7528\u4e8e\u4e0b\u9762\u8981\u8bb2\u7684 delete \u548c update \u64cd\u4f5c\u3002 \u5047\u5982\u6709\u4e00\u5f20\u540d\u4e3a tb_temp \u7684\u8868\u4e2d\u6709 a \u548c b \u4e24\u4e2a\u5217\uff0c\u5206\u522b\u4fdd\u5b58\u4e86\u5b66\u9662\u7684\u540d\u79f0\u548c\u5b66\u9662\u7684\u4ecb\u7ecd\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u67e5\u8be2\u64cd\u4f5c\u83b7\u5f97 tb_temp \u8868\u7684\u6570\u636e\u5e76\u63d2\u5165\u5230\u5b66\u9662\u8868\u4e2d\uff0c\u5982\u4e0b\u6240\u793a\uff0c\u5176\u4e2d\u7684 select \u5c31\u662f\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684 DQL\uff0c\u5728\u4e0b\u4e00\u8bfe\u4e2d\u4f1a\u8be6\u7ec6\u8bb2\u89e3\u3002 insert into ` tb_college ` ( ` col_name ` , ` col_intro ` ) select ` a ` , ` b ` from ` tb_temp ` ; delete \u64cd\u4f5c \u5982\u679c\u9700\u8981\u4ece\u8868\u4e2d\u5220\u9664\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528 delete \u64cd\u4f5c\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5220\u9664\u6307\u5b9a\u884c\u6216\u6240\u6709\u884c\uff0c\u4f8b\u5982\u6211\u4eec\u8981\u5220\u9664\u7f16\u53f7\u4e3a 1 \u7684\u5b66\u9662\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684 SQL\u3002 delete from ` tb_college ` where col_id = 1 ; \u6ce8\u610f\uff0c\u4e0a\u9762\u7684 delete \u64cd\u4f5c\u4e2d\u7684 where \u5b50\u53e5\u662f\u7528\u6765\u6307\u5b9a\u6761\u4ef6\u7684\uff0c\u53ea\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u884c\u4f1a\u88ab\u5220\u9664\u3002\u5982\u679c\u6211\u4eec\u4e0d\u5c0f\u5fc3\u5199\u51fa\u4e86\u4e0b\u9762\u7684 SQL\uff0c\u5c31\u4f1a\u5220\u9664\u5b66\u9662\u8868\u4e2d\u6240\u6709\u7684\u8bb0\u5f55\uff0c\u8fd9\u662f\u76f8\u5f53\u5371\u9669\u7684\uff0c\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u901a\u5e38\u4e5f\u4e0d\u4f1a\u8fd9\u4e48\u505a\u3002 delete from ` tb_college ` ; \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5373\u4fbf\u5220\u9664\u4e86\u6240\u6709\u7684\u6570\u636e\uff0c delete \u64cd\u4f5c\u4e0d\u4f1a\u5220\u9664\u8868\u672c\u8eab\uff0c\u4e5f\u4e0d\u4f1a\u8ba9 AUTO_INCREMENT \u5b57\u6bb5\u7684\u503c\u56de\u5230\u521d\u59cb\u503c\u3002\u5982\u679c\u9700\u8981\u5220\u9664\u6240\u6709\u7684\u6570\u636e\u800c\u4e14\u8ba9 AUTO_INCREMENT \u5b57\u6bb5\u56de\u5230\u521d\u59cb\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528 truncate table \u6267\u884c\u622a\u65ad\u8868\u64cd\u4f5c\uff0c truncate \u7684\u672c\u8d28\u662f\u5220\u9664\u539f\u6765\u7684\u8868\u5e76\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u8868\uff0c\u5b83\u7684\u901f\u5ea6\u5176\u5b9e\u66f4\u5feb\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u9010\u884c\u5220\u9664\u6570\u636e\u3002\u4f46\u662f\u8bf7\u5927\u5bb6\u8bb0\u4f4f\u4e00\u70b9\uff0c\u7528 truncate table \u5220\u9664\u6570\u636e\u662f\u975e\u5e38\u5371\u9669\u7684\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5220\u9664\u6240\u6709\u7684\u6570\u636e\uff0c\u800c\u4e14\u7531\u4e8e\u539f\u6765\u7684\u8868\u5df2\u7ecf\u88ab\u5220\u9664\u4e86\uff0c\u8981\u60f3\u6062\u590d\u8bef\u5220\u9664\u7684\u6570\u636e\u4e5f\u4f1a\u53d8\u5f97\u6781\u4e3a\u56f0\u96be\u3002 update \u64cd\u4f5c \u5982\u679c\u8981\u4fee\u6539\u8868\u4e2d\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528 update \u64cd\u4f5c\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u5220\u9664\u6307\u5b9a\u7684\u884c\u6216\u6240\u6709\u7684\u884c\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5c06\u5b66\u751f\u8868\u4e2d\u7684\u201c\u6768\u8fc7\u201d\u4fee\u6539\u4e3a\u201c\u6768\u900d\u201d\uff0c\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u201c\u6768\u8fc7\u201d\u7684\u5b66\u53f7\u4e3a 1001 \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 update ` tb_student ` set ` stu_name `= '\u6768\u900d' where ` stu_id `= 1001 ; \u6ce8\u610f\u4e0a\u9762 SQL \u4e2d\u7684 where \u5b50\u53e5\uff0c\u6211\u4eec\u4f7f\u7528\u5b66\u53f7\u4f5c\u4e3a\u6761\u4ef6\u7b5b\u9009\u51fa\u5bf9\u5e94\u7684\u5b66\u751f\uff0c\u7136\u540e\u901a\u8fc7\u524d\u9762\u7684\u8d4b\u503c\u64cd\u4f5c\u5c06\u5176\u59d3\u540d\u4fee\u6539\u4e3a\u201c\u6768\u900d\u201d\u3002\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u4f7f\u7528\u59d3\u540d\u4f5c\u4e3a\u7b5b\u9009\u6761\u4ef6\uff0c\u90a3\u662f\u56e0\u4e3a\u5b66\u751f\u8868\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u540d\u4e3a\u201c\u6768\u8fc7\u201d\u7684\u5b66\u751f\uff0c\u5982\u679c\u4f7f\u7528 stu_name \u4f5c\u4e3a\u7b5b\u9009\u6761\u4ef6\uff0c\u90a3\u4e48\u6211\u4eec\u7684 update \u64cd\u4f5c\u6709\u53ef\u80fd\u4f1a\u4e00\u6b21\u66f4\u65b0\u591a\u6761\u6570\u636e\uff0c\u8fd9\u663e\u7136\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u770b\u5230\u7684\u3002\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u662f update \u64cd\u4f5c\u4e2d\u7684 set \u5173\u952e\u5b57\uff0c\u56e0\u4e3a SQL \u4e2d\u7684 = \u5e76\u4e0d\u8868\u793a\u8d4b\u503c\uff0c\u800c\u662f\u5224\u65ad\u76f8\u7b49\u7684\u8fd0\u7b97\u7b26\uff0c\u53ea\u6709\u51fa\u73b0\u5728 set \u5173\u952e\u5b57\u540e\u9762\u7684 = \uff0c\u624d\u5177\u5907\u8d4b\u503c\u7684\u80fd\u529b\u3002 \u5982\u679c\u8981\u540c\u65f6\u4fee\u6539\u5b66\u751f\u7684\u59d3\u540d\u548c\u751f\u65e5\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e0a\u9762\u7684 update \u8bed\u53e5\u7a0d\u4f5c\u4fee\u6539\uff0c\u5982\u4e0b\u6240\u793a\u3002 update ` tb_student ` set ` stu_name `= '\u6768\u900d' , ` stu_birth `= '1975-12-29' where ` stu_id `= 1001 ; update \u8bed\u53e5\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u67e5\u8be2\u7684\u65b9\u5f0f\u83b7\u5f97\u6570\u636e\u5e76\u4ee5\u6b64\u6765\u66f4\u65b0\u6307\u5b9a\u7684\u8868\u6570\u636e\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002\u5728\u4e66\u5199 update \u8bed\u53e5\u65f6\uff0c\u901a\u5e38\u90fd\u4f1a\u6709 where \u5b50\u53e5\uff0c\u56e0\u4e3a\u5b9e\u9645\u5de5\u4f5c\u4e2d\u51e0\u4e4e\u4e0d\u592a\u4f1a\u7528\u5230\u66f4\u65b0\u5168\u8868\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e00\u70b9\u5927\u5bb6\u4e00\u5b9a\u8981\u6ce8\u610f\u3002 \u5b8c\u6574\u7684\u6570\u636e \u4e0b\u9762\u6211\u4eec\u7ed9\u51fa\u5b8c\u6574\u7684\u5411 school \u6570\u636e\u5e93\u7684\u4e94\u5f20\u8868\u4e2d\u63d2\u5165\u6570\u636e\u7684 SQL\u3002 use ` school ` ; -- \u63d2\u5165\u5b66\u9662\u6570\u636e insert into ` tb_college ` ( ` col_name ` , ` col_intro ` ) values ( '\u8ba1\u7b97\u673a\u5b66\u9662' , '\u8ba1\u7b97\u673a\u5b66\u96621958\u5e74\u8bbe\u7acb\u8ba1\u7b97\u673a\u4e13\u4e1a\uff0c1981\u5e74\u5efa\u7acb\u8ba1\u7b97\u673a\u79d1\u5b66\u7cfb\uff0c1998\u5e74\u8bbe\u7acb\u8ba1\u7b97\u673a\u5b66\u9662\uff0c2005\u5e745\u6708\uff0c\u4e3a\u4e86\u8fdb\u4e00\u6b65\u6574\u5408\u6559\u5b66\u548c\u79d1\u7814\u8d44\u6e90\uff0c\u5b66\u6821\u51b3\u5b9a\uff0c\u8ba1\u7b97\u673a\u5b66\u9662\u548c\u8f6f\u4ef6\u5b66\u9662\u884c\u653f\u73ed\u5b50\u5408\u5e76\u7edf\u4e00\u8fd0\u4f5c\u3001\u5b9e\u884c\u6559\u5b66\u548c\u5b66\u751f\u7ba1\u7406\u72ec\u7acb\u8fd0\u884c\u7684\u6a21\u5f0f\u3002 \u5b66\u9662\u4e0b\u8bbe\u4e09\u4e2a\u7cfb\uff1a\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7cfb\u3001\u7269\u8054\u7f51\u5de5\u7a0b\u7cfb\u3001\u8ba1\u7b97\u91d1\u878d\u7cfb\uff1b\u4e24\u4e2a\u7814\u7a76\u6240\uff1a\u56fe\u8c61\u56fe\u5f62\u7814\u7a76\u6240\u3001\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u7814\u7a76\u9662\uff082015\u5e74\u6210\u7acb\uff09\uff1b\u4e09\u4e2a\u6559\u5b66\u5b9e\u9a8c\u4e2d\u5fc3\uff1a\u8ba1\u7b97\u673a\u57fa\u7840\u6559\u5b66\u5b9e\u9a8c\u4e2d\u5fc3\u3001IBM\u6280\u672f\u4e2d\u5fc3\u548c\u8ba1\u7b97\u673a\u4e13\u4e1a\u5b9e\u9a8c\u4e2d\u5fc3\u3002' ), ( '\u5916\u56fd\u8bed\u5b66\u9662' , '\u5916\u56fd\u8bed\u5b66\u9662\u8bbe\u67097\u4e2a\u6559\u5b66\u5355\u4f4d\uff0c6\u4e2a\u6587\u7406\u517c\u6536\u7684\u672c\u79d1\u4e13\u4e1a\uff1b\u62e5\u67091\u4e2a\u4e00\u7ea7\u5b66\u79d1\u535a\u58eb\u6388\u4e88\u70b9\uff0c3\u4e2a\u4e8c\u7ea7\u5b66\u79d1\u535a\u58eb\u6388\u4e88\u70b9\uff0c5\u4e2a\u4e00\u7ea7\u5b66\u79d1\u7855\u58eb\u5b66\u4f4d\u6388\u6743\u70b9\uff0c5\u4e2a\u4e8c\u7ea7\u5b66\u79d1\u7855\u58eb\u5b66\u4f4d\u6388\u6743\u70b9\uff0c5\u4e2a\u7855\u58eb\u4e13\u4e1a\u6388\u6743\u9886\u57df\uff0c\u540c\u65f6\u8fd8\u67092\u4e2a\u7855\u58eb\u4e13\u4e1a\u5b66\u4f4d\uff08MTI\uff09\u4e13\u4e1a\uff1b\u6709\u6559\u804c\u5458\u5de5210\u4f59\u4eba\uff0c\u5176\u4e2d\u6559\u6388\u3001\u526f\u6559\u638880\u4f59\u4eba\uff0c\u6559\u5e08\u4e2d\u83b7\u5f97\u4e2d\u56fd\u56fd\u5185\u5916\u540d\u6821\u535a\u58eb\u5b66\u4f4d\u548c\u6b63\u5728\u804c\u653b\u8bfb\u535a\u58eb\u5b66\u4f4d\u7684\u6559\u5e08\u6bd4\u4f8b\u5360\u4e13\u4efb\u6559\u5e08\u768460%\u4ee5\u4e0a\u3002' ), ( '\u7ecf\u6d4e\u7ba1\u7406\u5b66\u9662' , '\u7ecf\u6d4e\u5b66\u9662\u524d\u8eab\u662f\u521b\u529e\u4e8e1905\u5e74\u7684\u7ecf\u6d4e\u79d1\uff1b\u5df2\u6545\u7ecf\u6d4e\u5b66\u5bb6\u5f6d\u8fea\u5148\u3001\u5f20\u4e0e\u4e5d\u3001\u848b\u5b66\u6a21\u3001\u80e1\u5bc4\u7a97\u3001\u9676\u5927\u955b\u3001\u80e1\u4ee3\u5149\uff0c\u4ee5\u53ca\u5f53\u4ee3\u5b66\u8005\u5218\u8bd7\u767d\u7b49\u66fe\u5148\u540e\u5728\u6b64\u4efb\u6559\u6216\u5b66\u4e60\u3002' ); -- \u63d2\u5165\u5b66\u751f\u6570\u636e insert into ` tb_student ` ( ` stu_id ` , ` stu_name ` , ` stu_sex ` , ` stu_birth ` , ` stu_addr ` , ` col_id ` ) values ( 1001 , '\u6768\u8fc7' , 1 , '1990-3-4' , '\u6e56\u5357\u957f\u6c99' , 1 ), ( 1002 , '\u4efb\u6211\u884c' , 1 , '1992-2-2' , '\u6e56\u5357\u957f\u6c99' , 1 ), ( 1033 , '\u738b\u8bed\u5ae3' , 0 , '1989-12-3' , '\u56db\u5ddd\u6210\u90fd' , 1 ), ( 1572 , '\u5cb3\u4e0d\u7fa4' , 1 , '1993-7-19' , '\u9655\u897f\u54b8\u9633' , 1 ), ( 1378 , '\u7eaa\u5ae3\u7136' , 0 , '1995-8-12' , '\u56db\u5ddd\u7ef5\u9633' , 1 ), ( 1954 , '\u6797\u5e73\u4e4b' , 1 , '1994-9-20' , '\u798f\u5efa\u8386\u7530' , 1 ), ( 2035 , '\u4e1c\u65b9\u4e0d\u8d25' , 1 , '1988-6-30' , null , 2 ), ( 3011 , '\u6797\u9707\u5357' , 1 , '1985-12-12' , '\u798f\u5efa\u8386\u7530' , 3 ), ( 3755 , '\u9879\u5c11\u9f99' , 1 , '1993-1-25' , '\u56db\u5ddd\u6210\u90fd' , 3 ), ( 3923 , '\u6768\u4e0d\u6094' , 0 , '1985-4-17' , '\u56db\u5ddd\u6210\u90fd' , 3 ); -- \u63d2\u5165\u8001\u5e08\u6570\u636e insert into ` tb_teacher ` ( ` tea_id ` , ` tea_name ` , ` tea_title ` , ` col_id ` ) values ( 1122 , '\u5f20\u4e09\u4e30' , '\u6559\u6388' , 1 ), ( 1133 , '\u5b8b\u8fdc\u6865' , '\u526f\u6559\u6388' , 1 ), ( 1144 , '\u6768\u900d' , '\u526f\u6559\u6388' , 1 ), ( 2255 , '\u8303\u9065' , '\u526f\u6559\u6388' , 2 ), ( 3366 , '\u97e6\u4e00\u7b11' , default , 3 ); -- \u63d2\u5165\u8bfe\u7a0b\u6570\u636e insert into ` tb_course ` ( ` cou_id ` , ` cou_name ` , ` cou_credit ` , ` tea_id ` ) values ( 1111 , 'Python\u7a0b\u5e8f\u8bbe\u8ba1' , 3 , 1122 ), ( 2222 , 'Web\u524d\u7aef\u5f00\u53d1' , 2 , 1122 ), ( 3333 , '\u64cd\u4f5c\u7cfb\u7edf' , 4 , 1122 ), ( 4444 , '\u8ba1\u7b97\u673a\u7f51\u7edc' , 2 , 1133 ), ( 5555 , '\u7f16\u8bd1\u539f\u7406' , 4 , 1144 ), ( 6666 , '\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784' , 3 , 1144 ), ( 7777 , '\u7ecf\u8d38\u6cd5\u8bed' , 3 , 2255 ), ( 8888 , '\u6210\u672c\u4f1a\u8ba1' , 2 , 3366 ), ( 9999 , '\u5ba1\u8ba1\u5b66' , 3 , 3366 ); -- \u63d2\u5165\u9009\u8bfe\u6570\u636e insert into ` tb_record ` ( ` stu_id ` , ` cou_id ` , ` sel_date ` , ` score ` ) values ( 1001 , 1111 , '2017-09-01' , 95 ), ( 1001 , 2222 , '2017-09-01' , 87 . 5 ), ( 1001 , 3333 , '2017-09-01' , 100 ), ( 1001 , 4444 , '2018-09-03' , null ), ( 1001 , 6666 , '2017-09-02' , 100 ), ( 1002 , 1111 , '2017-09-03' , 65 ), ( 1002 , 5555 , '2017-09-01' , 42 ), ( 1033 , 1111 , '2017-09-03' , 92 . 5 ), ( 1033 , 4444 , '2017-09-01' , 78 ), ( 1033 , 5555 , '2017-09-01' , 82 . 5 ), ( 1572 , 1111 , '2017-09-02' , 78 ), ( 1378 , 1111 , '2017-09-05' , 82 ), ( 1378 , 7777 , '2017-09-02' , 65 . 5 ), ( 2035 , 7777 , '2018-09-03' , 88 ), ( 2035 , 9999 , '2019-09-02' , null ), ( 3755 , 1111 , '2019-09-02' , null ), ( 3755 , 8888 , '2019-09-02' , null ), ( 3755 , 9999 , '2017-09-01' , 92 ); \u6ce8\u610f \uff1a\u4e0a\u9762\u7684 insert \u8bed\u53e5\u4f7f\u7528\u4e86\u6279\u5904\u7406\u7684\u65b9\u5f0f\u6765\u63d2\u5165\u6570\u636e\uff0c\u8fd9\u79cd\u505a\u6cd5\u63d2\u5165\u6570\u636e\u7684\u6548\u7387\u6bd4\u8f83\u9ad8\u3002","title":"\u7b2c42\u8bfe.SQL\u8be6\u89e3\u4e4bDML"},{"location":"%E7%AC%AC42%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDML/#sqldml","text":"\u6211\u4eec\u63a5\u7740\u4e0a\u4e00\u8bfe\u4e2d\u521b\u5efa\u7684\u5b66\u6821\u9009\u8bfe\u7cfb\u7edf\u6570\u636e\u5e93\uff0c\u4e3a\u5927\u5bb6\u8bb2\u89e3 DML \u7684\u4f7f\u7528\u3002DML \u53ef\u4ee5\u5e2e\u52a9\u5c06\u6570\u636e\u63d2\u5165\u5230\u4e8c\u7ef4\u8868\uff08 insert \u64cd\u4f5c\uff09\u3001\u4ece\u4e8c\u7ef4\u8868\u5220\u9664\u6570\u636e\uff08 delete \u64cd\u4f5c\uff09\u4ee5\u53ca\u66f4\u65b0\u4e8c\u7ef4\u8868\u7684\u6570\u636e\uff08 update \u64cd\u4f5c\uff09\u3002\u5728\u6267\u884c DML \u4e4b\u524d\uff0c\u6211\u4eec\u5148\u901a\u8fc7\u4e0b\u9762\u7684 use \u547d\u4ee4\u5207\u6362\u5230 school \u6570\u636e\u5e93\u3002 use ` school ` ;","title":"SQL\u8be6\u89e3\u4e4bDML"},{"location":"%E7%AC%AC42%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDML/#insert","text":"\u987e\u540d\u601d\u4e49\uff0c insert \u662f\u7528\u6765\u63d2\u5165\u884c\u5230\u4e8c\u7ef4\u8868\u4e2d\u7684\uff0c\u63d2\u5165\u7684\u65b9\u5f0f\u5305\u62ec\uff1a\u63d2\u5165\u5b8c\u6574\u7684\u884c\u3001\u63d2\u5165\u884c\u7684\u4e00\u90e8\u5206\u3001\u63d2\u5165\u591a\u884c\u3001\u63d2\u5165\u67e5\u8be2\u7684\u7ed3\u679c\u3002\u6211\u4eec\u901a\u8fc7\u5982\u4e0b\u6240\u793a\u7684 SQL \u5411\u5b66\u9662\u8868\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5b66\u9662\u3002 insert into ` tb_college ` values ( default , '\u8ba1\u7b97\u673a\u5b66\u9662' , '\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7684\u5730\u65b9' ); \u5176\u4e2d\uff0c\u7531\u4e8e\u5b66\u9662\u8868\u7684\u4e3b\u952e\u662f\u4e00\u4e2a\u81ea\u589e\u5b57\u6bb5\uff0c\u56e0\u6b64\u4e0a\u9762\u7684 SQL \u4e2d\u7528 default \u8868\u793a\u8be5\u5217\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u5b8c\u6210\u540c\u6837\u7684\u64cd\u4f5c\u3002 insert into ` tb_college ` ( ` col_name ` , ` col_intro ` ) values ( '\u8ba1\u7b97\u673a\u5b66\u9662' , '\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7684\u5730\u65b9' ); \u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u4e0b\u9762\u8fd9\u79cd\u505a\u6cd5\uff0c\u6307\u5b9a\u4e3a\u54ea\u4e9b\u5b57\u6bb5\u8d4b\u503c\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u4e0d\u6309\u7167\u5efa\u8868\u65f6\u8bbe\u5b9a\u7684\u5b57\u6bb5\u987a\u5e8f\u8d4b\u503c\uff0c\u53ef\u4ee5\u6309\u7167 values \u524d\u9762\u7684\u5143\u7ec4\u4e2d\u7ed9\u5b9a\u7684\u5b57\u6bb5\u987a\u5e8f\u4e3a\u5b57\u6bb5\u8d4b\u503c\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\uff0c\u9664\u4e86\u5141\u8bb8\u4e3a null \u548c\u6709\u9ed8\u8ba4\u503c\u7684\u5b57\u6bb5\u5916\uff0c\u5176\u4ed6\u7684\u5b57\u6bb5\u90fd\u5fc5\u987b\u8981\u4e00\u4e00\u5217\u51fa\u5e76\u5728 values \u540e\u9762\u7684\u5143\u7ec4\u4e2d\u4e3a\u5176\u8d4b\u503c\u3002\u5982\u679c\u5e0c\u671b\u4e00\u6b21\u6027\u63d2\u5165\u591a\u6761\u8bb0\u5f55\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 values \u540e\u9762\u8ddf\u4e0a\u591a\u4e2a\u5143\u7ec4\u6765\u5b9e\u73b0\u6279\u91cf\u63d2\u5165\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 insert into ` tb_college ` ( ` col_name ` , ` col_intro ` ) values ( '\u5916\u56fd\u8bed\u5b66\u9662' , '\u5b66\u4e60\u6b6a\u679c\u4ec1\u7684\u8bed\u8a00\u7684\u5b66\u9662' ), ( '\u7ecf\u6d4e\u7ba1\u7406\u5b66\u9662' , '\u7ecf\u4e16\u6d4e\u6c11\uff0c\u6cbb\u7406\u56fd\u5bb6\uff1b\u7ba1\u7406\u79d1\u5b66\uff0c\u5174\u56fd\u4e4b\u9053' ), ( '\u4f53\u80b2\u5b66\u9662' , '\u53d1\u5c55\u4f53\u80b2\u8fd0\u52a8\uff0c\u589e\u5f3a\u4eba\u6c11\u4f53\u8d28' ); \u5728\u63d2\u5165\u6570\u636e\u65f6\uff0c\u8981\u6ce8\u610f\u4e3b\u952e\u662f\u4e0d\u80fd\u91cd\u590d\u7684\uff0c\u5982\u679c\u63d2\u5165\u7684\u6570\u636e\u4e0e\u8868\u4e2d\u5df2\u6709\u8bb0\u5f55\u4e3b\u952e\u76f8\u540c\uff0c\u90a3\u4e48 insert \u64cd\u4f5c\u5c06\u4f1a\u4ea7\u751f Duplicated Entry \u7684\u62a5\u9519\u4fe1\u606f\u3002\u518d\u6b21\u63d0\u9192\u5927\u5bb6\uff0c\u5982\u679c insert \u64cd\u4f5c\u7701\u7565\u4e86\u67d0\u4e9b\u5217\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5217\u8981\u4e48\u6709\u9ed8\u8ba4\u503c\uff0c\u8981\u4e48\u5141\u8bb8\u4e3a null \uff0c\u5426\u5219\u4e5f\u5c06\u4ea7\u751f\u9519\u8bef\u3002\u5728\u4e1a\u52a1\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u4e86\u8ba9 insert \u64cd\u4f5c\u4e0d\u5f71\u54cd\u5176\u4ed6\u64cd\u4f5c\uff08\u4e3b\u8981\u662f\u540e\u9762\u8981\u8bb2\u7684 select \u64cd\u4f5c\uff09\u7684\u6027\u80fd\uff0c\u53ef\u4ee5\u5728 insert \u548c into \u4e4b\u95f4\u52a0\u4e00\u4e2a low_priority \u6765\u964d\u4f4e insert \u64cd\u4f5c\u7684\u4f18\u5148\u7ea7\uff0c\u8fd9\u4e2a\u505a\u6cd5\u4e5f\u9002\u7528\u4e8e\u4e0b\u9762\u8981\u8bb2\u7684 delete \u548c update \u64cd\u4f5c\u3002 \u5047\u5982\u6709\u4e00\u5f20\u540d\u4e3a tb_temp \u7684\u8868\u4e2d\u6709 a \u548c b \u4e24\u4e2a\u5217\uff0c\u5206\u522b\u4fdd\u5b58\u4e86\u5b66\u9662\u7684\u540d\u79f0\u548c\u5b66\u9662\u7684\u4ecb\u7ecd\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u67e5\u8be2\u64cd\u4f5c\u83b7\u5f97 tb_temp \u8868\u7684\u6570\u636e\u5e76\u63d2\u5165\u5230\u5b66\u9662\u8868\u4e2d\uff0c\u5982\u4e0b\u6240\u793a\uff0c\u5176\u4e2d\u7684 select \u5c31\u662f\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684 DQL\uff0c\u5728\u4e0b\u4e00\u8bfe\u4e2d\u4f1a\u8be6\u7ec6\u8bb2\u89e3\u3002 insert into ` tb_college ` ( ` col_name ` , ` col_intro ` ) select ` a ` , ` b ` from ` tb_temp ` ;","title":"insert\u64cd\u4f5c"},{"location":"%E7%AC%AC42%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDML/#delete","text":"\u5982\u679c\u9700\u8981\u4ece\u8868\u4e2d\u5220\u9664\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528 delete \u64cd\u4f5c\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5220\u9664\u6307\u5b9a\u884c\u6216\u6240\u6709\u884c\uff0c\u4f8b\u5982\u6211\u4eec\u8981\u5220\u9664\u7f16\u53f7\u4e3a 1 \u7684\u5b66\u9662\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684 SQL\u3002 delete from ` tb_college ` where col_id = 1 ; \u6ce8\u610f\uff0c\u4e0a\u9762\u7684 delete \u64cd\u4f5c\u4e2d\u7684 where \u5b50\u53e5\u662f\u7528\u6765\u6307\u5b9a\u6761\u4ef6\u7684\uff0c\u53ea\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u884c\u4f1a\u88ab\u5220\u9664\u3002\u5982\u679c\u6211\u4eec\u4e0d\u5c0f\u5fc3\u5199\u51fa\u4e86\u4e0b\u9762\u7684 SQL\uff0c\u5c31\u4f1a\u5220\u9664\u5b66\u9662\u8868\u4e2d\u6240\u6709\u7684\u8bb0\u5f55\uff0c\u8fd9\u662f\u76f8\u5f53\u5371\u9669\u7684\uff0c\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u901a\u5e38\u4e5f\u4e0d\u4f1a\u8fd9\u4e48\u505a\u3002 delete from ` tb_college ` ; \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5373\u4fbf\u5220\u9664\u4e86\u6240\u6709\u7684\u6570\u636e\uff0c delete \u64cd\u4f5c\u4e0d\u4f1a\u5220\u9664\u8868\u672c\u8eab\uff0c\u4e5f\u4e0d\u4f1a\u8ba9 AUTO_INCREMENT \u5b57\u6bb5\u7684\u503c\u56de\u5230\u521d\u59cb\u503c\u3002\u5982\u679c\u9700\u8981\u5220\u9664\u6240\u6709\u7684\u6570\u636e\u800c\u4e14\u8ba9 AUTO_INCREMENT \u5b57\u6bb5\u56de\u5230\u521d\u59cb\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528 truncate table \u6267\u884c\u622a\u65ad\u8868\u64cd\u4f5c\uff0c truncate \u7684\u672c\u8d28\u662f\u5220\u9664\u539f\u6765\u7684\u8868\u5e76\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u8868\uff0c\u5b83\u7684\u901f\u5ea6\u5176\u5b9e\u66f4\u5feb\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u9010\u884c\u5220\u9664\u6570\u636e\u3002\u4f46\u662f\u8bf7\u5927\u5bb6\u8bb0\u4f4f\u4e00\u70b9\uff0c\u7528 truncate table \u5220\u9664\u6570\u636e\u662f\u975e\u5e38\u5371\u9669\u7684\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5220\u9664\u6240\u6709\u7684\u6570\u636e\uff0c\u800c\u4e14\u7531\u4e8e\u539f\u6765\u7684\u8868\u5df2\u7ecf\u88ab\u5220\u9664\u4e86\uff0c\u8981\u60f3\u6062\u590d\u8bef\u5220\u9664\u7684\u6570\u636e\u4e5f\u4f1a\u53d8\u5f97\u6781\u4e3a\u56f0\u96be\u3002","title":"delete \u64cd\u4f5c"},{"location":"%E7%AC%AC42%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDML/#update","text":"\u5982\u679c\u8981\u4fee\u6539\u8868\u4e2d\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528 update \u64cd\u4f5c\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u5220\u9664\u6307\u5b9a\u7684\u884c\u6216\u6240\u6709\u7684\u884c\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5c06\u5b66\u751f\u8868\u4e2d\u7684\u201c\u6768\u8fc7\u201d\u4fee\u6539\u4e3a\u201c\u6768\u900d\u201d\uff0c\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u201c\u6768\u8fc7\u201d\u7684\u5b66\u53f7\u4e3a 1001 \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 update ` tb_student ` set ` stu_name `= '\u6768\u900d' where ` stu_id `= 1001 ; \u6ce8\u610f\u4e0a\u9762 SQL \u4e2d\u7684 where \u5b50\u53e5\uff0c\u6211\u4eec\u4f7f\u7528\u5b66\u53f7\u4f5c\u4e3a\u6761\u4ef6\u7b5b\u9009\u51fa\u5bf9\u5e94\u7684\u5b66\u751f\uff0c\u7136\u540e\u901a\u8fc7\u524d\u9762\u7684\u8d4b\u503c\u64cd\u4f5c\u5c06\u5176\u59d3\u540d\u4fee\u6539\u4e3a\u201c\u6768\u900d\u201d\u3002\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u4f7f\u7528\u59d3\u540d\u4f5c\u4e3a\u7b5b\u9009\u6761\u4ef6\uff0c\u90a3\u662f\u56e0\u4e3a\u5b66\u751f\u8868\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u540d\u4e3a\u201c\u6768\u8fc7\u201d\u7684\u5b66\u751f\uff0c\u5982\u679c\u4f7f\u7528 stu_name \u4f5c\u4e3a\u7b5b\u9009\u6761\u4ef6\uff0c\u90a3\u4e48\u6211\u4eec\u7684 update \u64cd\u4f5c\u6709\u53ef\u80fd\u4f1a\u4e00\u6b21\u66f4\u65b0\u591a\u6761\u6570\u636e\uff0c\u8fd9\u663e\u7136\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u770b\u5230\u7684\u3002\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u662f update \u64cd\u4f5c\u4e2d\u7684 set \u5173\u952e\u5b57\uff0c\u56e0\u4e3a SQL \u4e2d\u7684 = \u5e76\u4e0d\u8868\u793a\u8d4b\u503c\uff0c\u800c\u662f\u5224\u65ad\u76f8\u7b49\u7684\u8fd0\u7b97\u7b26\uff0c\u53ea\u6709\u51fa\u73b0\u5728 set \u5173\u952e\u5b57\u540e\u9762\u7684 = \uff0c\u624d\u5177\u5907\u8d4b\u503c\u7684\u80fd\u529b\u3002 \u5982\u679c\u8981\u540c\u65f6\u4fee\u6539\u5b66\u751f\u7684\u59d3\u540d\u548c\u751f\u65e5\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e0a\u9762\u7684 update \u8bed\u53e5\u7a0d\u4f5c\u4fee\u6539\uff0c\u5982\u4e0b\u6240\u793a\u3002 update ` tb_student ` set ` stu_name `= '\u6768\u900d' , ` stu_birth `= '1975-12-29' where ` stu_id `= 1001 ; update \u8bed\u53e5\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u67e5\u8be2\u7684\u65b9\u5f0f\u83b7\u5f97\u6570\u636e\u5e76\u4ee5\u6b64\u6765\u66f4\u65b0\u6307\u5b9a\u7684\u8868\u6570\u636e\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002\u5728\u4e66\u5199 update \u8bed\u53e5\u65f6\uff0c\u901a\u5e38\u90fd\u4f1a\u6709 where \u5b50\u53e5\uff0c\u56e0\u4e3a\u5b9e\u9645\u5de5\u4f5c\u4e2d\u51e0\u4e4e\u4e0d\u592a\u4f1a\u7528\u5230\u66f4\u65b0\u5168\u8868\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e00\u70b9\u5927\u5bb6\u4e00\u5b9a\u8981\u6ce8\u610f\u3002","title":"update \u64cd\u4f5c"},{"location":"%E7%AC%AC42%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDML/#_1","text":"\u4e0b\u9762\u6211\u4eec\u7ed9\u51fa\u5b8c\u6574\u7684\u5411 school \u6570\u636e\u5e93\u7684\u4e94\u5f20\u8868\u4e2d\u63d2\u5165\u6570\u636e\u7684 SQL\u3002 use ` school ` ; -- \u63d2\u5165\u5b66\u9662\u6570\u636e insert into ` tb_college ` ( ` col_name ` , ` col_intro ` ) values ( '\u8ba1\u7b97\u673a\u5b66\u9662' , '\u8ba1\u7b97\u673a\u5b66\u96621958\u5e74\u8bbe\u7acb\u8ba1\u7b97\u673a\u4e13\u4e1a\uff0c1981\u5e74\u5efa\u7acb\u8ba1\u7b97\u673a\u79d1\u5b66\u7cfb\uff0c1998\u5e74\u8bbe\u7acb\u8ba1\u7b97\u673a\u5b66\u9662\uff0c2005\u5e745\u6708\uff0c\u4e3a\u4e86\u8fdb\u4e00\u6b65\u6574\u5408\u6559\u5b66\u548c\u79d1\u7814\u8d44\u6e90\uff0c\u5b66\u6821\u51b3\u5b9a\uff0c\u8ba1\u7b97\u673a\u5b66\u9662\u548c\u8f6f\u4ef6\u5b66\u9662\u884c\u653f\u73ed\u5b50\u5408\u5e76\u7edf\u4e00\u8fd0\u4f5c\u3001\u5b9e\u884c\u6559\u5b66\u548c\u5b66\u751f\u7ba1\u7406\u72ec\u7acb\u8fd0\u884c\u7684\u6a21\u5f0f\u3002 \u5b66\u9662\u4e0b\u8bbe\u4e09\u4e2a\u7cfb\uff1a\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7cfb\u3001\u7269\u8054\u7f51\u5de5\u7a0b\u7cfb\u3001\u8ba1\u7b97\u91d1\u878d\u7cfb\uff1b\u4e24\u4e2a\u7814\u7a76\u6240\uff1a\u56fe\u8c61\u56fe\u5f62\u7814\u7a76\u6240\u3001\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u7814\u7a76\u9662\uff082015\u5e74\u6210\u7acb\uff09\uff1b\u4e09\u4e2a\u6559\u5b66\u5b9e\u9a8c\u4e2d\u5fc3\uff1a\u8ba1\u7b97\u673a\u57fa\u7840\u6559\u5b66\u5b9e\u9a8c\u4e2d\u5fc3\u3001IBM\u6280\u672f\u4e2d\u5fc3\u548c\u8ba1\u7b97\u673a\u4e13\u4e1a\u5b9e\u9a8c\u4e2d\u5fc3\u3002' ), ( '\u5916\u56fd\u8bed\u5b66\u9662' , '\u5916\u56fd\u8bed\u5b66\u9662\u8bbe\u67097\u4e2a\u6559\u5b66\u5355\u4f4d\uff0c6\u4e2a\u6587\u7406\u517c\u6536\u7684\u672c\u79d1\u4e13\u4e1a\uff1b\u62e5\u67091\u4e2a\u4e00\u7ea7\u5b66\u79d1\u535a\u58eb\u6388\u4e88\u70b9\uff0c3\u4e2a\u4e8c\u7ea7\u5b66\u79d1\u535a\u58eb\u6388\u4e88\u70b9\uff0c5\u4e2a\u4e00\u7ea7\u5b66\u79d1\u7855\u58eb\u5b66\u4f4d\u6388\u6743\u70b9\uff0c5\u4e2a\u4e8c\u7ea7\u5b66\u79d1\u7855\u58eb\u5b66\u4f4d\u6388\u6743\u70b9\uff0c5\u4e2a\u7855\u58eb\u4e13\u4e1a\u6388\u6743\u9886\u57df\uff0c\u540c\u65f6\u8fd8\u67092\u4e2a\u7855\u58eb\u4e13\u4e1a\u5b66\u4f4d\uff08MTI\uff09\u4e13\u4e1a\uff1b\u6709\u6559\u804c\u5458\u5de5210\u4f59\u4eba\uff0c\u5176\u4e2d\u6559\u6388\u3001\u526f\u6559\u638880\u4f59\u4eba\uff0c\u6559\u5e08\u4e2d\u83b7\u5f97\u4e2d\u56fd\u56fd\u5185\u5916\u540d\u6821\u535a\u58eb\u5b66\u4f4d\u548c\u6b63\u5728\u804c\u653b\u8bfb\u535a\u58eb\u5b66\u4f4d\u7684\u6559\u5e08\u6bd4\u4f8b\u5360\u4e13\u4efb\u6559\u5e08\u768460%\u4ee5\u4e0a\u3002' ), ( '\u7ecf\u6d4e\u7ba1\u7406\u5b66\u9662' , '\u7ecf\u6d4e\u5b66\u9662\u524d\u8eab\u662f\u521b\u529e\u4e8e1905\u5e74\u7684\u7ecf\u6d4e\u79d1\uff1b\u5df2\u6545\u7ecf\u6d4e\u5b66\u5bb6\u5f6d\u8fea\u5148\u3001\u5f20\u4e0e\u4e5d\u3001\u848b\u5b66\u6a21\u3001\u80e1\u5bc4\u7a97\u3001\u9676\u5927\u955b\u3001\u80e1\u4ee3\u5149\uff0c\u4ee5\u53ca\u5f53\u4ee3\u5b66\u8005\u5218\u8bd7\u767d\u7b49\u66fe\u5148\u540e\u5728\u6b64\u4efb\u6559\u6216\u5b66\u4e60\u3002' ); -- \u63d2\u5165\u5b66\u751f\u6570\u636e insert into ` tb_student ` ( ` stu_id ` , ` stu_name ` , ` stu_sex ` , ` stu_birth ` , ` stu_addr ` , ` col_id ` ) values ( 1001 , '\u6768\u8fc7' , 1 , '1990-3-4' , '\u6e56\u5357\u957f\u6c99' , 1 ), ( 1002 , '\u4efb\u6211\u884c' , 1 , '1992-2-2' , '\u6e56\u5357\u957f\u6c99' , 1 ), ( 1033 , '\u738b\u8bed\u5ae3' , 0 , '1989-12-3' , '\u56db\u5ddd\u6210\u90fd' , 1 ), ( 1572 , '\u5cb3\u4e0d\u7fa4' , 1 , '1993-7-19' , '\u9655\u897f\u54b8\u9633' , 1 ), ( 1378 , '\u7eaa\u5ae3\u7136' , 0 , '1995-8-12' , '\u56db\u5ddd\u7ef5\u9633' , 1 ), ( 1954 , '\u6797\u5e73\u4e4b' , 1 , '1994-9-20' , '\u798f\u5efa\u8386\u7530' , 1 ), ( 2035 , '\u4e1c\u65b9\u4e0d\u8d25' , 1 , '1988-6-30' , null , 2 ), ( 3011 , '\u6797\u9707\u5357' , 1 , '1985-12-12' , '\u798f\u5efa\u8386\u7530' , 3 ), ( 3755 , '\u9879\u5c11\u9f99' , 1 , '1993-1-25' , '\u56db\u5ddd\u6210\u90fd' , 3 ), ( 3923 , '\u6768\u4e0d\u6094' , 0 , '1985-4-17' , '\u56db\u5ddd\u6210\u90fd' , 3 ); -- \u63d2\u5165\u8001\u5e08\u6570\u636e insert into ` tb_teacher ` ( ` tea_id ` , ` tea_name ` , ` tea_title ` , ` col_id ` ) values ( 1122 , '\u5f20\u4e09\u4e30' , '\u6559\u6388' , 1 ), ( 1133 , '\u5b8b\u8fdc\u6865' , '\u526f\u6559\u6388' , 1 ), ( 1144 , '\u6768\u900d' , '\u526f\u6559\u6388' , 1 ), ( 2255 , '\u8303\u9065' , '\u526f\u6559\u6388' , 2 ), ( 3366 , '\u97e6\u4e00\u7b11' , default , 3 ); -- \u63d2\u5165\u8bfe\u7a0b\u6570\u636e insert into ` tb_course ` ( ` cou_id ` , ` cou_name ` , ` cou_credit ` , ` tea_id ` ) values ( 1111 , 'Python\u7a0b\u5e8f\u8bbe\u8ba1' , 3 , 1122 ), ( 2222 , 'Web\u524d\u7aef\u5f00\u53d1' , 2 , 1122 ), ( 3333 , '\u64cd\u4f5c\u7cfb\u7edf' , 4 , 1122 ), ( 4444 , '\u8ba1\u7b97\u673a\u7f51\u7edc' , 2 , 1133 ), ( 5555 , '\u7f16\u8bd1\u539f\u7406' , 4 , 1144 ), ( 6666 , '\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784' , 3 , 1144 ), ( 7777 , '\u7ecf\u8d38\u6cd5\u8bed' , 3 , 2255 ), ( 8888 , '\u6210\u672c\u4f1a\u8ba1' , 2 , 3366 ), ( 9999 , '\u5ba1\u8ba1\u5b66' , 3 , 3366 ); -- \u63d2\u5165\u9009\u8bfe\u6570\u636e insert into ` tb_record ` ( ` stu_id ` , ` cou_id ` , ` sel_date ` , ` score ` ) values ( 1001 , 1111 , '2017-09-01' , 95 ), ( 1001 , 2222 , '2017-09-01' , 87 . 5 ), ( 1001 , 3333 , '2017-09-01' , 100 ), ( 1001 , 4444 , '2018-09-03' , null ), ( 1001 , 6666 , '2017-09-02' , 100 ), ( 1002 , 1111 , '2017-09-03' , 65 ), ( 1002 , 5555 , '2017-09-01' , 42 ), ( 1033 , 1111 , '2017-09-03' , 92 . 5 ), ( 1033 , 4444 , '2017-09-01' , 78 ), ( 1033 , 5555 , '2017-09-01' , 82 . 5 ), ( 1572 , 1111 , '2017-09-02' , 78 ), ( 1378 , 1111 , '2017-09-05' , 82 ), ( 1378 , 7777 , '2017-09-02' , 65 . 5 ), ( 2035 , 7777 , '2018-09-03' , 88 ), ( 2035 , 9999 , '2019-09-02' , null ), ( 3755 , 1111 , '2019-09-02' , null ), ( 3755 , 8888 , '2019-09-02' , null ), ( 3755 , 9999 , '2017-09-01' , 92 ); \u6ce8\u610f \uff1a\u4e0a\u9762\u7684 insert \u8bed\u53e5\u4f7f\u7528\u4e86\u6279\u5904\u7406\u7684\u65b9\u5f0f\u6765\u63d2\u5165\u6570\u636e\uff0c\u8fd9\u79cd\u505a\u6cd5\u63d2\u5165\u6570\u636e\u7684\u6548\u7387\u6bd4\u8f83\u9ad8\u3002","title":"\u5b8c\u6574\u7684\u6570\u636e"},{"location":"%E7%AC%AC43%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDQL/","text":"SQL\u8be6\u89e3\u4e4bDQL \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5229\u7528\u4e4b\u524d\u521b\u5efa\u7684\u5b66\u6821\u9009\u8bfe\u7cfb\u7edf\u6570\u636e\u5e93\uff0c\u4e3a\u5927\u5bb6\u8bb2\u89e3 DQL \u7684\u5e94\u7528\u3002\u65e0\u8bba\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u8fd8\u662f\u6570\u636e\u5206\u6790\u5e08\uff0cDQL \u90fd\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u5b83\u5173\u7cfb\u7740\u6211\u4eec\u80fd\u5426\u4ece\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u6211\u4eec\u9700\u8981\u7684\u6570\u636e\u3002\u5efa\u8bae\u5927\u5bb6\u628a\u4e0a\u4e0a\u4e00\u8282\u8bfe\u4e2d\u5efa\u5e93\u5efa\u8868\u7684 DDL \u4ee5\u53ca \u4e0a\u4e00\u8282\u8bfe\u4e2d\u63d2\u5165\u6570\u636e\u7684 DML \u91cd\u65b0\u6267\u884c\u4e00\u6b21\uff0c\u786e\u4fdd\u8868\u548c\u6570\u636e\u8ddf\u6ca1\u6709\u95ee\u9898\u518d\u6267\u884c\u4e0b\u9762\u7684\u64cd\u4f5c\u3002 use ` school ` ; -- \u67e5\u8be2\u6240\u6709\u5b66\u751f\u7684\u6240\u6709\u4fe1\u606f -- \u8bf4\u660e\uff1a\u5b9e\u9645\u5de5\u4f5c\u4e2d\u4e0d\u5efa\u8bae\u4f7f\u7528 select * \u7684\u65b9\u5f0f\u8fdb\u884c\u67e5\u8be2 select * from tb_student ; -- \u67e5\u8be2\u5b66\u751f\u7684\u5b66\u53f7\u3001\u59d3\u540d\u548c\u7c4d\u8d2f select stu_id , stu_name , stu_addr from tb_student ; select stu_id as \u5b66\u53f7 , stu_name as \u59d3\u540d , stu_addr as \u7c4d\u8d2f from tb_student ; -- \u67e5\u8be2\u6240\u6709\u8bfe\u7a0b\u7684\u540d\u79f0\u53ca\u5b66\u5206 select cou_name as \u8bfe\u7a0b\u540d\u79f0 , cou_credit as \u5b66\u5206 from tb_course ; -- \u67e5\u8be2\u6240\u6709\u5973\u5b66\u751f\u7684\u59d3\u540d\u548c\u51fa\u751f\u65e5\u671f select stu_name , stu_birth from tb_student where stu_sex = 0 ; -- \u67e5\u8be2\u7c4d\u8d2f\u4e3a\u201c\u56db\u5ddd\u6210\u90fd\u201d\u7684\u5973\u5b66\u751f\u7684\u59d3\u540d\u548c\u51fa\u751f\u65e5\u671f select stu_name , stu_birth from tb_student where stu_sex = 0 and stu_addr = '\u56db\u5ddd\u6210\u90fd' ; -- \u67e5\u8be2\u7c4d\u8d2f\u4e3a\u201c\u56db\u5ddd\u6210\u90fd\u201d\u6216\u8005\u6027\u522b\u662f\u5973\u7684\u5b66\u751f select stu_name , stu_birth from tb_student where stu_sex = 0 or stu_addr = '\u56db\u5ddd\u6210\u90fd' ; -- \u67e5\u8be2\u6240\u670980\u540e\u5b66\u751f\u7684\u59d3\u540d\u3001\u6027\u522b\u548c\u51fa\u751f\u65e5\u671f -- \u65b9\u6cd5\u4e00\uff1a select stu_name , stu_sex , stu_birth from tb_student where stu_birth >= '1980-1-1' and stu_birth <= '1989-12-31' ; -- \u65b9\u6cd5\u4e8c\uff1a select stu_name , stu_sex , stu_birth from tb_student where stu_birth between '1980-1-1' and '1989-12-31' ; -- \u67e5\u8be2\u5b66\u5206\u5927\u4e8e2\u7684\u8bfe\u7a0b\u7684\u540d\u79f0\u548c\u5b66\u5206 select cou_name , cou_credit from tb_course where cou_credit > 2 ; -- \u67e5\u8be2\u5b66\u5206\u662f\u5947\u6570\u7684\u8bfe\u7a0b\u7684\u540d\u79f0\u548c\u5b66\u5206 select cou_name , cou_credit from tb_course where cou_credit % 2 <> 0 ; -- \u67e5\u8be2\u9009\u62e9\u9009\u4e861111\u7684\u8bfe\u7a0b\u8003\u8bd5\u6210\u7ee9\u572890\u5206\u4ee5\u4e0a\u7684\u5b66\u751f\u5b66\u53f7 select stu_id from tb_record where cou_id = 1111 and score > 90 ; -- \u67e5\u8be2\u59d3\u201c\u6768\u201d\u7684\u5b66\u751f\u59d3\u540d\u548c\u6027\u522b(\u6a21\u7cca) -- % \u53ef\u4ee5\u5339\u914d\u96f6\u4e2a\u6216\u4efb\u610f\u591a\u4e2a\u5b57\u7b26 select stu_name , stu_sex from tb_student where stu_name like '\u6768%' ; -- \u67e5\u8be2\u59d3\u201c\u6768\u201d\u540d\u5b57\u4e24\u4e2a\u5b57\u7684\u5b66\u751f\u59d3\u540d\u548c\u6027\u522b(\u6a21\u7cca) -- _ \u53ef\u4ee5\u5339\u914d\u4e00\u4e2a\u5b57\u7b26 select stu_name , stu_sex from tb_student where stu_name like '\u6768_' ; -- \u67e5\u8be2\u59d3\u201c\u6768\u201d\u540d\u5b57\u4e09\u4e2a\u5b57\u7684\u5b66\u751f\u59d3\u540d\u548c\u6027\u522b(\u6a21\u7cca) select stu_name , stu_sex from tb_student where stu_name like '\u6768__' ; -- \u67e5\u8be2\u540d\u5b57\u4e2d\u6709\u201c\u4e0d\u201d\u5b57\u6216\u201c\u5ae3\u201d\u5b57\u7684\u5b66\u751f\u7684\u59d3\u540d(\u6a21\u7cca) -- \u65b9\u6cd5\u4e00\uff1a select stu_name , stu_sex from tb_student where stu_name like '%\u4e0d%' or stu_name like '%\u5ae3%' ; -- \u65b9\u6cd5\u4e8c\uff1a select stu_name , stu_sex from tb_student where stu_name like '%\u4e0d%' union select stu_name , stu_sex from tb_student where stu_name like '%\u5ae3%' ; -- \u67e5\u8be2\u59d3\u201c\u6768\u201d\u6216\u59d3\u201c\u6797\u201d\u540d\u5b57\u4e09\u4e2a\u5b57\u7684\u5b66\u751f\u7684\u59d3\u540d select stu_name , stu_sex from tb_student where stu_name regexp '^[\u6768\u6797][\\\\u4e00-\\\\u9fa5]{2}$' ; -- \u67e5\u8be2\u6ca1\u6709\u5f55\u5165\u7c4d\u8d2f\u7684\u5b66\u751f\u59d3\u540d select stu_name from tb_student where stu_addr = '' or stu_addr is null ; -- \u67e5\u8be2\u5f55\u5165\u4e86\u7c4d\u8d2f\u7684\u5b66\u751f\u59d3\u540d select stu_name from tb_student where stu_addr <> '' and stu_addr is not null ; -- \u67e5\u8be2\u5b66\u751f\u9009\u8bfe\u7684\u6240\u6709\u65e5\u671f select distinct sel_date from tb_record ; -- \u67e5\u8be2\u5b66\u751f\u7684\u7c4d\u8d2f select distinct stu_addr from tb_student where stu_addr <> '' and stu_addr is not null ; -- \u67e5\u8be2\u5b66\u9662\u7f16\u53f7\u4e3a1\u7684\u5b66\u751f\u59d3\u540d\u3001\u6027\u522b\u548c\u751f\u65e5\u6309\u5e74\u9f84\u4ece\u5927\u5230\u5c0f\u6392\u5217 -- asc - \u5347\u5e8f\uff08\u4ece\u5c0f\u5230\u5927\uff0c\u9ed8\u8ba4\uff09\uff0cdesc - \u964d\u5e8f\uff08\u4ece\u5927\u5230\u5c0f\uff09 select stu_name , stu_sex , stu_birth from tb_student where col_id = 1 order by stu_sex asc , stu_birth asc ; -- \u8865\u5145\uff1a\u5c06\u4e0a\u9762\u7684\u6027\u522b\u5904\u7406\u6210\u201c\u7537\u201d\u6216\u201c\u5973\u201d\uff0c\u5c06\u751f\u65e5\u6362\u7b97\u6210\u5e74\u9f84 select stu_name as \u59d3\u540d , if ( stu_sex , '\u7537' , '\u5973' ) as \u6027\u522b , floor ( datediff ( curdate (), stu_birth ) / 365 ) as \u5e74\u9f84 from tb_student where col_id = 1 order by stu_sex asc , \u5e74\u9f84 desc ; -- \u67e5\u8be2\u5e74\u9f84\u6700\u5927\u7684\u5b66\u751f\u7684\u51fa\u751f\u65e5\u671f select min ( stu_birth ) from tb_student ; -- \u67e5\u8be2\u5e74\u9f84\u6700\u5c0f\u7684\u5b66\u751f\u7684\u51fa\u751f\u65e5\u671f select max ( stu_birth ) from tb_student ; -- \u67e5\u8be2\u5b66\u53f7\u4e3a1001\u7684\u5b66\u751f\u4e00\u5171\u9009\u4e86\u51e0\u95e8\u8bfe select count ( * ) from tb_record where stu_id = 1001 ; -- \u67e5\u8be2\u5b66\u53f7\u4e3a1001\u7684\u5b66\u751f\u8003\u8bd5\u6210\u7ee9\u7684\u5e73\u5747\u5206 select round ( avg ( score ), 1 ) as \u5e73\u5747\u5206 from tb_record where stu_id = 1001 ; -- \u67e5\u8be2\u5b66\u53f7\u4e3a1001\u7684\u5b66\u751f\u8003\u8bd5\u6210\u7ee9\u7684\u5e73\u5747\u5206\uff0c\u5982\u679c\u6709null\u503c\uff0cnull\u503c\u7b970\u5206 -- \u65b9\u6cd5\u4e00\uff1a select sum ( score ) / count ( * ) from tb_record where stu_id = 1001 ; -- \u65b9\u6cd5\u4e8c\uff1a select avg ( coalesce ( score , 0 )) from tb_record where stu_id = 1001 ; -- \u67e5\u8be2\u5b66\u53f7\u4e3a1001\u7684\u5b66\u751f\u8003\u8bd5\u6210\u7ee9\u7684\u6807\u51c6\u5dee(\u805a\u5408\u51fd\u6570) select stddev_samp ( score ) from tb_record where stu_id = 1001 ; -- \u67e5\u8be2\u7537\u5973\u5b66\u751f\u7684\u4eba\u6570 select case stu_sex when 1 then '\u7537' else '\u5973' end as \u6027\u522b , count ( * ) as \u4eba\u6570 from tb_student group by stu_sex ; -- \u67e5\u8be2\u6bcf\u4e2a\u5b66\u9662\u5b66\u751f\u4eba\u6570 select col_id as \u5b66\u9662\u7f16\u53f7 , count ( * ) as \u4eba\u6570 from tb_student group by col_id ; -- \u67e5\u8be2\u6bcf\u4e2a\u5b66\u9662\u7537\u5973\u5b66\u751f\u4eba\u6570 select col_id as \u5b66\u9662\u7f16\u53f7 , case stu_sex when 1 then '\u7537' else '\u5973' end as \u6027\u522b , count ( * ) as \u4eba\u6570 from tb_student group by col_id , stu_sex ; -- \u67e5\u8be2\u6bcf\u4e2a\u5b66\u751f\u7684\u5b66\u53f7\u548c\u5e73\u5747\u6210\u7ee9 select stu_id as \u5b66\u53f7 , round ( avg ( score ), 2 ) as \u5e73\u5747\u6210\u7ee9 from tb_record group by stu_id ; -- \u67e5\u8be2\u5e73\u5747\u6210\u7ee9\u5927\u4e8e\u7b49\u4e8e90\u5206\u7684\u5b66\u751f\u7684\u5b66\u53f7\u548c\u5e73\u5747\u6210\u7ee9 -- \u65b9\u6cd5\u4e00\uff1a select stu_id as \u5b66\u53f7 , round ( avg ( score ), 2 ) as \u5e73\u5747\u6210\u7ee9 from tb_record group by stu_id having \u5e73\u5747\u6210\u7ee9 >= 90 ; -- \u65b9\u6cd5\u4e8c\uff1a select * from ( select stu_id as \u5b66\u53f7 , round ( avg ( score ), 2 ) as \u5e73\u5747\u6210\u7ee9 from tb_record group by stu_id ) as t where \u5e73\u5747\u6210\u7ee9 >= 90 ; -- \u67e5\u8be21111\u30012222\u30013333\u4e09\u95e8\u8bfe\u7a0b\u5e73\u5747\u6210\u7ee9\u5927\u4e8e\u7b49\u4e8e90\u5206\u7684\u5b66\u751f\u7684\u5b66\u53f7\u548c\u5e73\u5747\u6210\u7ee9 select stu_id as \u5b66\u53f7 , round ( avg ( score ), 2 ) as \u5e73\u5747\u6210\u7ee9 from tb_record where cou_id in ( 1111 , 2222 , 3333 ) group by stu_id having avg ( score ) >= 90 ; -- \u5d4c\u5957\u67e5\u8be2\uff1a\u628a\u4e00\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c\u4f5c\u4e3a\u53e6\u5916\u4e00\u4e2a\u67e5\u8be2\u7684\u4e00\u90e8\u5206\u6765\u4f7f\u7528 select stu_name from tb_student where stu_birth = ( select min ( stu_birth ) from tb_student ); -- \u67e5\u8be2\u9009\u4e86\u4e24\u95e8\u4ee5\u4e0a\u7684\u8bfe\u7a0b\u7684\u5b66\u751f\u59d3\u540d select stu_name from tb_student where stu_id in ( select stu_id from tb_record group by stu_id having count ( * ) > 2 ); -- \u67e5\u8be2\u5b66\u751f\u7684\u59d3\u540d\u3001\u751f\u65e5\u548c\u6240\u5728\u5b66\u9662\u540d\u79f0 -- \u65b9\u6cd5\u4e00\uff1a select stu_name , stu_birth , col_name from tb_student , tb_college where tb_student . col_id = tb_college . col_id ; -- \u65b9\u6cd5\u4e8c\uff1a select stu_name , stu_birth , col_name from tb_student inner join tb_college on tb_student . col_id = tb_college . col_id ; -- \u65b9\u6cd5\u4e09\uff1a select stu_name , stu_birth , col_name from tb_student natural join tb_college ; -- \u67e5\u8be2\u5b66\u751f\u59d3\u540d\u3001\u8bfe\u7a0b\u540d\u79f0\u4ee5\u53ca\u6210\u7ee9 -- \u65b9\u6cd5\u4e00\uff1a select stu_name , cou_name , score from tb_student , tb_course , tb_record where tb_student . stu_id = tb_record . stu_id and tb_course . cou_id = tb_record . cou_id and score is not null ; -- \u65b9\u6cd5\u4e8c\uff1a select stu_name , cou_name , score from tb_student inner join tb_record inner join tb_course on tb_student . stu_id = tb_record . stu_id and tb_course . cou_id = tb_record . cou_id where score is not null ; -- \u65b9\u6cd5\u4e09\uff1a select stu_name , cou_name , score from tb_student natural join tb_record natural join tb_course where score is not null ; -- \u8865\u5145\uff1a\u4e0a\u9762\u7684\u67e5\u8be2\u7ed3\u679c\u53d6\u524d5\u6761\u6570\u636e select stu_name , cou_name , score from tb_student natural join tb_record natural join tb_course where score is not null order by stu_id asc , score desc limit 5 ; -- \u8865\u5145\uff1a\u4e0a\u9762\u7684\u67e5\u8be2\u7ed3\u679c\u53d6\u7b2c6-10\u6761\u6570\u636e select stu_name , cou_name , score from tb_student inner join tb_record inner join tb_course on tb_student . stu_id = tb_record . stu_id and tb_course . cou_id = tb_record . cou_id order by stu_id asc , score desc limit 5 offset 5 ; -- \u8865\u5145\uff1a\u4e0a\u9762\u7684\u67e5\u8be2\u7ed3\u679c\u53d6\u7b2c11-15\u6761\u6570\u636e select stu_name , cou_name , score from tb_student natural join tb_record natural join tb_course where score is not null order by stu_id asc , score desc limit 5 offset 10 ; -- \u67e5\u8be2\u9009\u8bfe\u5b66\u751f\u7684\u59d3\u540d\u548c\u5e73\u5747\u6210\u7ee9 select stu_name , avg_score from tb_student t1 inner join ( select stu_id , round ( avg ( score ), 2 ) as avg_score from tb_record group by stu_id ) t2 on t1 . stu_id = t2 . stu_id ; -- \u67e5\u8be2\u5b66\u751f\u7684\u59d3\u540d\u548c\u9009\u8bfe\u7684\u6570\u91cf select stu_name , total from tb_student t1 natural join ( select stu_id , count ( * ) as total from tb_record group by stu_id ) t2 ; -- \u67e5\u8be2\u6bcf\u4e2a\u5b66\u751f\u7684\u59d3\u540d\u548c\u9009\u8bfe\u6570\u91cf(\u5de6\u5916\u8fde\u63a5\u548c\u5b50\u67e5\u8be2) select stu_name as \u59d3\u540d , coalesce ( total , 0 ) as \u9009\u8bfe\u6570\u91cf from tb_student t1 left join ( select stu_id , count ( * ) as total from tb_record group by stu_id ) t2 on t1 . stu_id = t2 . stu_id ; \u4e0a\u9762\u7684 DQL \u6709\u51e0\u4e2a\u5730\u65b9\u9700\u8981\u52a0\u4ee5\u8bf4\u660e\uff1a MySQL\u76ee\u524d\u7684\u7248\u672c\u4e0d\u652f\u6301\u5168\u5916\u8fde\u63a5\uff0c\u4e0a\u9762\u6211\u4eec\u901a\u8fc7 union \u64cd\u4f5c\uff0c\u5c06\u5de6\u5916\u8fde\u63a5\u548c\u53f3\u5916\u8fde\u63a5\u7684\u7ed3\u679c\u6c42\u5e76\u96c6\u5b9e\u73b0\u5168\u5916\u8fde\u63a5\u7684\u6548\u679c\u3002\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u56fe\u6765\u52a0\u6df1\u5bf9\u8fde\u8868\u64cd\u4f5c\u7684\u8ba4\u8bc6\u3002 MySQL \u4e2d\u652f\u6301\u591a\u79cd\u7c7b\u578b\u7684\u8fd0\u7b97\u7b26\uff0c\u5305\u62ec\uff1a\u7b97\u672f\u8fd0\u7b97\u7b26\uff08 + \u3001 - \u3001 * \u3001 / \u3001 % \uff09\u3001\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff08 = \u3001 <> \u3001 <=> \u3001 < \u3001 <= \u3001 > \u3001 >= \u3001 BETWEEN...AND.. .\u3001 IN \u3001 IS NULL \u3001 IS NOT NULL \u3001 LIKE \u3001 RLIKE \u3001 REGEXP \uff09\u3001\u903b\u8f91\u8fd0\u7b97\u7b26\uff08 NOT \u3001 AND \u3001 OR \u3001 XOR \uff09\u548c\u4f4d\u8fd0\u7b97\u7b26\uff08 & \u3001 | \u3001 ^ \u3001 ~ \u3001 >> \u3001 << \uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 DML \u4e2d\u4f7f\u7528\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u5904\u7406\u6570\u636e\u3002 \u5728\u67e5\u8be2\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u5728 SELECT \u8bed\u53e5\u53ca\u5176\u5b50\u53e5\uff08\u5982 WHERE \u5b50\u53e5\u3001 ORDER BY \u5b50\u53e5\u3001 HAVING \u5b50\u53e5\u7b49\uff09\u4e2d\u4f7f\u7528\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u5305\u62ec\u5b57\u7b26\u4e32\u51fd\u6570\u3001\u6570\u503c\u51fd\u6570\u3001\u65f6\u95f4\u65e5\u671f\u51fd\u6570\u3001\u6d41\u7a0b\u51fd\u6570\u7b49\uff0c\u5982\u4e0b\u9762\u7684\u8868\u683c\u6240\u793a\u3002 \u5e38\u7528\u5b57\u7b26\u4e32\u51fd\u6570\u3002 \u51fd\u6570 \u529f\u80fd CONCAT \u5c06\u591a\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32 FORMAT \u5c06\u6570\u503c\u683c\u5f0f\u5316\u6210\u5b57\u7b26\u4e32\u5e76\u6307\u5b9a\u4fdd\u7559\u51e0\u4f4d\u5c0f\u6570 FROM_BASE64 / TO_BASE64 BASE64\u89e3\u7801/\u7f16\u7801 BIN / OCT / HEX \u5c06\u6570\u503c\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236/\u516b\u8fdb\u5236/\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32 LOCATE \u5728\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u4e00\u4e2a\u5b50\u4e32\u7684\u4f4d\u7f6e LEFT / RIGHT \u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u5de6\u8fb9/\u53f3\u8fb9\u6307\u5b9a\u957f\u5ea6\u7684\u5b57\u7b26 LENGTH / CHAR_LENGTH \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4ee5\u5b57\u8282/\u5b57\u7b26\u4e3a\u5355\u4f4d LOWER / UPPER \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u5c0f\u5199/\u5927\u5199\u5f62\u5f0f LPAD / RPAD \u5982\u679c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u8db3\uff0c\u5728\u5b57\u7b26\u4e32\u5de6\u8fb9/\u53f3\u8fb9\u586b\u5145\u6307\u5b9a\u7684\u5b57\u7b26 LTRIM / RTRIM \u53bb\u6389\u5b57\u7b26\u4e32\u524d\u9762/\u540e\u9762\u7684\u7a7a\u683c ORD / CHAR \u8fd4\u56de\u5b57\u7b26\u5bf9\u5e94\u7684\u7f16\u7801/\u8fd4\u56de\u7f16\u7801\u5bf9\u5e94\u7684\u5b57\u7b26 STRCMP \u6bd4\u8f83\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de-1\u30010\u30011\u5206\u522b\u8868\u793a\u5c0f\u4e8e\u3001\u7b49\u4e8e\u3001\u5927\u4e8e SUBSTRING \u8fd4\u56de\u5b57\u7b26\u4e32\u6307\u5b9a\u8303\u56f4\u7684\u5b50\u4e32 \u5e38\u7528\u6570\u503c\u51fd\u6570\u3002 \u51fd\u6570 \u529f\u80fd ABS \u8fd4\u56de\u4e00\u4e2a\u6570\u7684\u7edd\u5ea6\u503c CEILING / FLOOR \u8fd4\u56de\u4e00\u4e2a\u6570\u4e0a\u53d6\u6574/\u4e0b\u53d6\u6574\u7684\u7ed3\u679c CONV \u5c06\u4e00\u4e2a\u6570\u4ece\u4e00\u79cd\u8fdb\u5236\u8f6c\u6362\u6210\u53e6\u4e00\u79cd\u8fdb\u5236 CRC32 \u8ba1\u7b97\u5faa\u73af\u5197\u4f59\u6821\u9a8c\u7801 EXP / LOG / LOG2 / LOG10 \u8ba1\u7b97\u6307\u6570/\u5bf9\u6570 POW \u6c42\u5e42 RAND \u8fd4\u56de[0,1)\u8303\u56f4\u7684\u968f\u673a\u6570 ROUND \u8fd4\u56de\u4e00\u4e2a\u6570\u56db\u820d\u4e94\u5165\u540e\u7684\u7ed3\u679c SQRT \u8fd4\u56de\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u6839 TRUNCATE \u622a\u65ad\u4e00\u4e2a\u6570\u5230\u6307\u5b9a\u7684\u7cbe\u5ea6 SIN / COS / TAN / COT / ASIN / ACOS / ATAN \u4e09\u89d2\u51fd\u6570 \u5e38\u7528\u65f6\u95f4\u65e5\u671f\u51fd\u6570\u3002 \u51fd\u6570 \u529f\u80fd CURDATE / CURTIME / NOW \u83b7\u53d6\u5f53\u524d\u65e5\u671f/\u65f6\u95f4/\u65e5\u671f\u548c\u65f6\u95f4 ADDDATE / SUBDATE \u5c06\u4e24\u4e2a\u65e5\u671f\u8868\u8fbe\u5f0f\u76f8\u52a0/\u76f8\u51cf\u5e76\u8fd4\u56de\u7ed3\u679c DATE / TIME \u4ece\u5b57\u7b26\u4e32\u4e2d\u83b7\u53d6\u65e5\u671f/\u65f6\u95f4 YEAR / MONTH / DAY \u4ece\u65e5\u671f\u4e2d\u83b7\u53d6\u5e74/\u6708/\u65e5 HOUR / MINUTE / SECOND \u4ece\u65f6\u95f4\u4e2d\u83b7\u53d6\u65f6/\u5206/\u79d2 DATEDIFF / TIMEDIFF \u8fd4\u56de\u4e24\u4e2a\u65f6\u95f4\u65e5\u671f\u8868\u8fbe\u5f0f\u76f8\u5dee\u591a\u5c11\u5929/\u5c0f\u65f6 MAKEDATE / MAKETIME \u5236\u9020\u4e00\u4e2a\u65e5\u671f/\u65f6\u95f4 \u5e38\u7528\u6d41\u7a0b\u51fd\u6570\u3002 \u51fd\u6570 \u529f\u80fd IF \u6839\u636e\u6761\u4ef6\u662f\u5426\u6210\u7acb\u8fd4\u56de\u4e0d\u540c\u7684\u503c IFNULL \u5982\u679c\u4e3aNULL\u5219\u8fd4\u56de\u6307\u5b9a\u7684\u503c\u5426\u5219\u5c31\u8fd4\u56de\u672c\u8eab NULLIF \u4e24\u4e2a\u8868\u8fbe\u5f0f\u76f8\u7b49\u5c31\u8fd4\u56deNULL\u5426\u5219\u8fd4\u56de\u7b2c\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c \u5176\u4ed6\u5e38\u7528\u51fd\u6570\u3002 \u51fd\u6570 \u529f\u80fd MD5 / SHA1 / SHA2 \u8fd4\u56de\u5b57\u7b26\u4e32\u5bf9\u5e94\u7684\u54c8\u5e0c\u6458\u8981 CHARSET / COLLATION \u8fd4\u56de\u5b57\u7b26\u96c6/\u6821\u5bf9\u89c4\u5219 USER / CURRENT_USER \u8fd4\u56de\u5f53\u524d\u7528\u6237 DATABASE \u8fd4\u56de\u5f53\u524d\u6570\u636e\u5e93\u540d VERSION \u8fd4\u56de\u5f53\u524d\u6570\u636e\u5e93\u7248\u672c FOUND_ROWS / ROW_COUNT \u8fd4\u56de\u67e5\u8be2\u5230\u7684\u884c\u6570/\u53d7\u5f71\u54cd\u7684\u884c\u6570 LAST_INSERT_ID \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u81ea\u589e\u4e3b\u952e\u7684\u503c UUID / UUID_SHORT \u8fd4\u56de\u5168\u5c40\u552f\u4e00\u6807\u8bc6\u7b26","title":"\u7b2c43\u8bfe.SQL\u8be6\u89e3\u4e4bDQL"},{"location":"%E7%AC%AC43%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDQL/#sqldql","text":"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5229\u7528\u4e4b\u524d\u521b\u5efa\u7684\u5b66\u6821\u9009\u8bfe\u7cfb\u7edf\u6570\u636e\u5e93\uff0c\u4e3a\u5927\u5bb6\u8bb2\u89e3 DQL \u7684\u5e94\u7528\u3002\u65e0\u8bba\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u8fd8\u662f\u6570\u636e\u5206\u6790\u5e08\uff0cDQL \u90fd\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u5b83\u5173\u7cfb\u7740\u6211\u4eec\u80fd\u5426\u4ece\u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u6211\u4eec\u9700\u8981\u7684\u6570\u636e\u3002\u5efa\u8bae\u5927\u5bb6\u628a\u4e0a\u4e0a\u4e00\u8282\u8bfe\u4e2d\u5efa\u5e93\u5efa\u8868\u7684 DDL \u4ee5\u53ca \u4e0a\u4e00\u8282\u8bfe\u4e2d\u63d2\u5165\u6570\u636e\u7684 DML \u91cd\u65b0\u6267\u884c\u4e00\u6b21\uff0c\u786e\u4fdd\u8868\u548c\u6570\u636e\u8ddf\u6ca1\u6709\u95ee\u9898\u518d\u6267\u884c\u4e0b\u9762\u7684\u64cd\u4f5c\u3002 use ` school ` ; -- \u67e5\u8be2\u6240\u6709\u5b66\u751f\u7684\u6240\u6709\u4fe1\u606f -- \u8bf4\u660e\uff1a\u5b9e\u9645\u5de5\u4f5c\u4e2d\u4e0d\u5efa\u8bae\u4f7f\u7528 select * \u7684\u65b9\u5f0f\u8fdb\u884c\u67e5\u8be2 select * from tb_student ; -- \u67e5\u8be2\u5b66\u751f\u7684\u5b66\u53f7\u3001\u59d3\u540d\u548c\u7c4d\u8d2f select stu_id , stu_name , stu_addr from tb_student ; select stu_id as \u5b66\u53f7 , stu_name as \u59d3\u540d , stu_addr as \u7c4d\u8d2f from tb_student ; -- \u67e5\u8be2\u6240\u6709\u8bfe\u7a0b\u7684\u540d\u79f0\u53ca\u5b66\u5206 select cou_name as \u8bfe\u7a0b\u540d\u79f0 , cou_credit as \u5b66\u5206 from tb_course ; -- \u67e5\u8be2\u6240\u6709\u5973\u5b66\u751f\u7684\u59d3\u540d\u548c\u51fa\u751f\u65e5\u671f select stu_name , stu_birth from tb_student where stu_sex = 0 ; -- \u67e5\u8be2\u7c4d\u8d2f\u4e3a\u201c\u56db\u5ddd\u6210\u90fd\u201d\u7684\u5973\u5b66\u751f\u7684\u59d3\u540d\u548c\u51fa\u751f\u65e5\u671f select stu_name , stu_birth from tb_student where stu_sex = 0 and stu_addr = '\u56db\u5ddd\u6210\u90fd' ; -- \u67e5\u8be2\u7c4d\u8d2f\u4e3a\u201c\u56db\u5ddd\u6210\u90fd\u201d\u6216\u8005\u6027\u522b\u662f\u5973\u7684\u5b66\u751f select stu_name , stu_birth from tb_student where stu_sex = 0 or stu_addr = '\u56db\u5ddd\u6210\u90fd' ; -- \u67e5\u8be2\u6240\u670980\u540e\u5b66\u751f\u7684\u59d3\u540d\u3001\u6027\u522b\u548c\u51fa\u751f\u65e5\u671f -- \u65b9\u6cd5\u4e00\uff1a select stu_name , stu_sex , stu_birth from tb_student where stu_birth >= '1980-1-1' and stu_birth <= '1989-12-31' ; -- \u65b9\u6cd5\u4e8c\uff1a select stu_name , stu_sex , stu_birth from tb_student where stu_birth between '1980-1-1' and '1989-12-31' ; -- \u67e5\u8be2\u5b66\u5206\u5927\u4e8e2\u7684\u8bfe\u7a0b\u7684\u540d\u79f0\u548c\u5b66\u5206 select cou_name , cou_credit from tb_course where cou_credit > 2 ; -- \u67e5\u8be2\u5b66\u5206\u662f\u5947\u6570\u7684\u8bfe\u7a0b\u7684\u540d\u79f0\u548c\u5b66\u5206 select cou_name , cou_credit from tb_course where cou_credit % 2 <> 0 ; -- \u67e5\u8be2\u9009\u62e9\u9009\u4e861111\u7684\u8bfe\u7a0b\u8003\u8bd5\u6210\u7ee9\u572890\u5206\u4ee5\u4e0a\u7684\u5b66\u751f\u5b66\u53f7 select stu_id from tb_record where cou_id = 1111 and score > 90 ; -- \u67e5\u8be2\u59d3\u201c\u6768\u201d\u7684\u5b66\u751f\u59d3\u540d\u548c\u6027\u522b(\u6a21\u7cca) -- % \u53ef\u4ee5\u5339\u914d\u96f6\u4e2a\u6216\u4efb\u610f\u591a\u4e2a\u5b57\u7b26 select stu_name , stu_sex from tb_student where stu_name like '\u6768%' ; -- \u67e5\u8be2\u59d3\u201c\u6768\u201d\u540d\u5b57\u4e24\u4e2a\u5b57\u7684\u5b66\u751f\u59d3\u540d\u548c\u6027\u522b(\u6a21\u7cca) -- _ \u53ef\u4ee5\u5339\u914d\u4e00\u4e2a\u5b57\u7b26 select stu_name , stu_sex from tb_student where stu_name like '\u6768_' ; -- \u67e5\u8be2\u59d3\u201c\u6768\u201d\u540d\u5b57\u4e09\u4e2a\u5b57\u7684\u5b66\u751f\u59d3\u540d\u548c\u6027\u522b(\u6a21\u7cca) select stu_name , stu_sex from tb_student where stu_name like '\u6768__' ; -- \u67e5\u8be2\u540d\u5b57\u4e2d\u6709\u201c\u4e0d\u201d\u5b57\u6216\u201c\u5ae3\u201d\u5b57\u7684\u5b66\u751f\u7684\u59d3\u540d(\u6a21\u7cca) -- \u65b9\u6cd5\u4e00\uff1a select stu_name , stu_sex from tb_student where stu_name like '%\u4e0d%' or stu_name like '%\u5ae3%' ; -- \u65b9\u6cd5\u4e8c\uff1a select stu_name , stu_sex from tb_student where stu_name like '%\u4e0d%' union select stu_name , stu_sex from tb_student where stu_name like '%\u5ae3%' ; -- \u67e5\u8be2\u59d3\u201c\u6768\u201d\u6216\u59d3\u201c\u6797\u201d\u540d\u5b57\u4e09\u4e2a\u5b57\u7684\u5b66\u751f\u7684\u59d3\u540d select stu_name , stu_sex from tb_student where stu_name regexp '^[\u6768\u6797][\\\\u4e00-\\\\u9fa5]{2}$' ; -- \u67e5\u8be2\u6ca1\u6709\u5f55\u5165\u7c4d\u8d2f\u7684\u5b66\u751f\u59d3\u540d select stu_name from tb_student where stu_addr = '' or stu_addr is null ; -- \u67e5\u8be2\u5f55\u5165\u4e86\u7c4d\u8d2f\u7684\u5b66\u751f\u59d3\u540d select stu_name from tb_student where stu_addr <> '' and stu_addr is not null ; -- \u67e5\u8be2\u5b66\u751f\u9009\u8bfe\u7684\u6240\u6709\u65e5\u671f select distinct sel_date from tb_record ; -- \u67e5\u8be2\u5b66\u751f\u7684\u7c4d\u8d2f select distinct stu_addr from tb_student where stu_addr <> '' and stu_addr is not null ; -- \u67e5\u8be2\u5b66\u9662\u7f16\u53f7\u4e3a1\u7684\u5b66\u751f\u59d3\u540d\u3001\u6027\u522b\u548c\u751f\u65e5\u6309\u5e74\u9f84\u4ece\u5927\u5230\u5c0f\u6392\u5217 -- asc - \u5347\u5e8f\uff08\u4ece\u5c0f\u5230\u5927\uff0c\u9ed8\u8ba4\uff09\uff0cdesc - \u964d\u5e8f\uff08\u4ece\u5927\u5230\u5c0f\uff09 select stu_name , stu_sex , stu_birth from tb_student where col_id = 1 order by stu_sex asc , stu_birth asc ; -- \u8865\u5145\uff1a\u5c06\u4e0a\u9762\u7684\u6027\u522b\u5904\u7406\u6210\u201c\u7537\u201d\u6216\u201c\u5973\u201d\uff0c\u5c06\u751f\u65e5\u6362\u7b97\u6210\u5e74\u9f84 select stu_name as \u59d3\u540d , if ( stu_sex , '\u7537' , '\u5973' ) as \u6027\u522b , floor ( datediff ( curdate (), stu_birth ) / 365 ) as \u5e74\u9f84 from tb_student where col_id = 1 order by stu_sex asc , \u5e74\u9f84 desc ; -- \u67e5\u8be2\u5e74\u9f84\u6700\u5927\u7684\u5b66\u751f\u7684\u51fa\u751f\u65e5\u671f select min ( stu_birth ) from tb_student ; -- \u67e5\u8be2\u5e74\u9f84\u6700\u5c0f\u7684\u5b66\u751f\u7684\u51fa\u751f\u65e5\u671f select max ( stu_birth ) from tb_student ; -- \u67e5\u8be2\u5b66\u53f7\u4e3a1001\u7684\u5b66\u751f\u4e00\u5171\u9009\u4e86\u51e0\u95e8\u8bfe select count ( * ) from tb_record where stu_id = 1001 ; -- \u67e5\u8be2\u5b66\u53f7\u4e3a1001\u7684\u5b66\u751f\u8003\u8bd5\u6210\u7ee9\u7684\u5e73\u5747\u5206 select round ( avg ( score ), 1 ) as \u5e73\u5747\u5206 from tb_record where stu_id = 1001 ; -- \u67e5\u8be2\u5b66\u53f7\u4e3a1001\u7684\u5b66\u751f\u8003\u8bd5\u6210\u7ee9\u7684\u5e73\u5747\u5206\uff0c\u5982\u679c\u6709null\u503c\uff0cnull\u503c\u7b970\u5206 -- \u65b9\u6cd5\u4e00\uff1a select sum ( score ) / count ( * ) from tb_record where stu_id = 1001 ; -- \u65b9\u6cd5\u4e8c\uff1a select avg ( coalesce ( score , 0 )) from tb_record where stu_id = 1001 ; -- \u67e5\u8be2\u5b66\u53f7\u4e3a1001\u7684\u5b66\u751f\u8003\u8bd5\u6210\u7ee9\u7684\u6807\u51c6\u5dee(\u805a\u5408\u51fd\u6570) select stddev_samp ( score ) from tb_record where stu_id = 1001 ; -- \u67e5\u8be2\u7537\u5973\u5b66\u751f\u7684\u4eba\u6570 select case stu_sex when 1 then '\u7537' else '\u5973' end as \u6027\u522b , count ( * ) as \u4eba\u6570 from tb_student group by stu_sex ; -- \u67e5\u8be2\u6bcf\u4e2a\u5b66\u9662\u5b66\u751f\u4eba\u6570 select col_id as \u5b66\u9662\u7f16\u53f7 , count ( * ) as \u4eba\u6570 from tb_student group by col_id ; -- \u67e5\u8be2\u6bcf\u4e2a\u5b66\u9662\u7537\u5973\u5b66\u751f\u4eba\u6570 select col_id as \u5b66\u9662\u7f16\u53f7 , case stu_sex when 1 then '\u7537' else '\u5973' end as \u6027\u522b , count ( * ) as \u4eba\u6570 from tb_student group by col_id , stu_sex ; -- \u67e5\u8be2\u6bcf\u4e2a\u5b66\u751f\u7684\u5b66\u53f7\u548c\u5e73\u5747\u6210\u7ee9 select stu_id as \u5b66\u53f7 , round ( avg ( score ), 2 ) as \u5e73\u5747\u6210\u7ee9 from tb_record group by stu_id ; -- \u67e5\u8be2\u5e73\u5747\u6210\u7ee9\u5927\u4e8e\u7b49\u4e8e90\u5206\u7684\u5b66\u751f\u7684\u5b66\u53f7\u548c\u5e73\u5747\u6210\u7ee9 -- \u65b9\u6cd5\u4e00\uff1a select stu_id as \u5b66\u53f7 , round ( avg ( score ), 2 ) as \u5e73\u5747\u6210\u7ee9 from tb_record group by stu_id having \u5e73\u5747\u6210\u7ee9 >= 90 ; -- \u65b9\u6cd5\u4e8c\uff1a select * from ( select stu_id as \u5b66\u53f7 , round ( avg ( score ), 2 ) as \u5e73\u5747\u6210\u7ee9 from tb_record group by stu_id ) as t where \u5e73\u5747\u6210\u7ee9 >= 90 ; -- \u67e5\u8be21111\u30012222\u30013333\u4e09\u95e8\u8bfe\u7a0b\u5e73\u5747\u6210\u7ee9\u5927\u4e8e\u7b49\u4e8e90\u5206\u7684\u5b66\u751f\u7684\u5b66\u53f7\u548c\u5e73\u5747\u6210\u7ee9 select stu_id as \u5b66\u53f7 , round ( avg ( score ), 2 ) as \u5e73\u5747\u6210\u7ee9 from tb_record where cou_id in ( 1111 , 2222 , 3333 ) group by stu_id having avg ( score ) >= 90 ; -- \u5d4c\u5957\u67e5\u8be2\uff1a\u628a\u4e00\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c\u4f5c\u4e3a\u53e6\u5916\u4e00\u4e2a\u67e5\u8be2\u7684\u4e00\u90e8\u5206\u6765\u4f7f\u7528 select stu_name from tb_student where stu_birth = ( select min ( stu_birth ) from tb_student ); -- \u67e5\u8be2\u9009\u4e86\u4e24\u95e8\u4ee5\u4e0a\u7684\u8bfe\u7a0b\u7684\u5b66\u751f\u59d3\u540d select stu_name from tb_student where stu_id in ( select stu_id from tb_record group by stu_id having count ( * ) > 2 ); -- \u67e5\u8be2\u5b66\u751f\u7684\u59d3\u540d\u3001\u751f\u65e5\u548c\u6240\u5728\u5b66\u9662\u540d\u79f0 -- \u65b9\u6cd5\u4e00\uff1a select stu_name , stu_birth , col_name from tb_student , tb_college where tb_student . col_id = tb_college . col_id ; -- \u65b9\u6cd5\u4e8c\uff1a select stu_name , stu_birth , col_name from tb_student inner join tb_college on tb_student . col_id = tb_college . col_id ; -- \u65b9\u6cd5\u4e09\uff1a select stu_name , stu_birth , col_name from tb_student natural join tb_college ; -- \u67e5\u8be2\u5b66\u751f\u59d3\u540d\u3001\u8bfe\u7a0b\u540d\u79f0\u4ee5\u53ca\u6210\u7ee9 -- \u65b9\u6cd5\u4e00\uff1a select stu_name , cou_name , score from tb_student , tb_course , tb_record where tb_student . stu_id = tb_record . stu_id and tb_course . cou_id = tb_record . cou_id and score is not null ; -- \u65b9\u6cd5\u4e8c\uff1a select stu_name , cou_name , score from tb_student inner join tb_record inner join tb_course on tb_student . stu_id = tb_record . stu_id and tb_course . cou_id = tb_record . cou_id where score is not null ; -- \u65b9\u6cd5\u4e09\uff1a select stu_name , cou_name , score from tb_student natural join tb_record natural join tb_course where score is not null ; -- \u8865\u5145\uff1a\u4e0a\u9762\u7684\u67e5\u8be2\u7ed3\u679c\u53d6\u524d5\u6761\u6570\u636e select stu_name , cou_name , score from tb_student natural join tb_record natural join tb_course where score is not null order by stu_id asc , score desc limit 5 ; -- \u8865\u5145\uff1a\u4e0a\u9762\u7684\u67e5\u8be2\u7ed3\u679c\u53d6\u7b2c6-10\u6761\u6570\u636e select stu_name , cou_name , score from tb_student inner join tb_record inner join tb_course on tb_student . stu_id = tb_record . stu_id and tb_course . cou_id = tb_record . cou_id order by stu_id asc , score desc limit 5 offset 5 ; -- \u8865\u5145\uff1a\u4e0a\u9762\u7684\u67e5\u8be2\u7ed3\u679c\u53d6\u7b2c11-15\u6761\u6570\u636e select stu_name , cou_name , score from tb_student natural join tb_record natural join tb_course where score is not null order by stu_id asc , score desc limit 5 offset 10 ; -- \u67e5\u8be2\u9009\u8bfe\u5b66\u751f\u7684\u59d3\u540d\u548c\u5e73\u5747\u6210\u7ee9 select stu_name , avg_score from tb_student t1 inner join ( select stu_id , round ( avg ( score ), 2 ) as avg_score from tb_record group by stu_id ) t2 on t1 . stu_id = t2 . stu_id ; -- \u67e5\u8be2\u5b66\u751f\u7684\u59d3\u540d\u548c\u9009\u8bfe\u7684\u6570\u91cf select stu_name , total from tb_student t1 natural join ( select stu_id , count ( * ) as total from tb_record group by stu_id ) t2 ; -- \u67e5\u8be2\u6bcf\u4e2a\u5b66\u751f\u7684\u59d3\u540d\u548c\u9009\u8bfe\u6570\u91cf(\u5de6\u5916\u8fde\u63a5\u548c\u5b50\u67e5\u8be2) select stu_name as \u59d3\u540d , coalesce ( total , 0 ) as \u9009\u8bfe\u6570\u91cf from tb_student t1 left join ( select stu_id , count ( * ) as total from tb_record group by stu_id ) t2 on t1 . stu_id = t2 . stu_id ; \u4e0a\u9762\u7684 DQL \u6709\u51e0\u4e2a\u5730\u65b9\u9700\u8981\u52a0\u4ee5\u8bf4\u660e\uff1a MySQL\u76ee\u524d\u7684\u7248\u672c\u4e0d\u652f\u6301\u5168\u5916\u8fde\u63a5\uff0c\u4e0a\u9762\u6211\u4eec\u901a\u8fc7 union \u64cd\u4f5c\uff0c\u5c06\u5de6\u5916\u8fde\u63a5\u548c\u53f3\u5916\u8fde\u63a5\u7684\u7ed3\u679c\u6c42\u5e76\u96c6\u5b9e\u73b0\u5168\u5916\u8fde\u63a5\u7684\u6548\u679c\u3002\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u56fe\u6765\u52a0\u6df1\u5bf9\u8fde\u8868\u64cd\u4f5c\u7684\u8ba4\u8bc6\u3002 MySQL \u4e2d\u652f\u6301\u591a\u79cd\u7c7b\u578b\u7684\u8fd0\u7b97\u7b26\uff0c\u5305\u62ec\uff1a\u7b97\u672f\u8fd0\u7b97\u7b26\uff08 + \u3001 - \u3001 * \u3001 / \u3001 % \uff09\u3001\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff08 = \u3001 <> \u3001 <=> \u3001 < \u3001 <= \u3001 > \u3001 >= \u3001 BETWEEN...AND.. .\u3001 IN \u3001 IS NULL \u3001 IS NOT NULL \u3001 LIKE \u3001 RLIKE \u3001 REGEXP \uff09\u3001\u903b\u8f91\u8fd0\u7b97\u7b26\uff08 NOT \u3001 AND \u3001 OR \u3001 XOR \uff09\u548c\u4f4d\u8fd0\u7b97\u7b26\uff08 & \u3001 | \u3001 ^ \u3001 ~ \u3001 >> \u3001 << \uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 DML \u4e2d\u4f7f\u7528\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u5904\u7406\u6570\u636e\u3002 \u5728\u67e5\u8be2\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u5728 SELECT \u8bed\u53e5\u53ca\u5176\u5b50\u53e5\uff08\u5982 WHERE \u5b50\u53e5\u3001 ORDER BY \u5b50\u53e5\u3001 HAVING \u5b50\u53e5\u7b49\uff09\u4e2d\u4f7f\u7528\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u5305\u62ec\u5b57\u7b26\u4e32\u51fd\u6570\u3001\u6570\u503c\u51fd\u6570\u3001\u65f6\u95f4\u65e5\u671f\u51fd\u6570\u3001\u6d41\u7a0b\u51fd\u6570\u7b49\uff0c\u5982\u4e0b\u9762\u7684\u8868\u683c\u6240\u793a\u3002 \u5e38\u7528\u5b57\u7b26\u4e32\u51fd\u6570\u3002 \u51fd\u6570 \u529f\u80fd CONCAT \u5c06\u591a\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32 FORMAT \u5c06\u6570\u503c\u683c\u5f0f\u5316\u6210\u5b57\u7b26\u4e32\u5e76\u6307\u5b9a\u4fdd\u7559\u51e0\u4f4d\u5c0f\u6570 FROM_BASE64 / TO_BASE64 BASE64\u89e3\u7801/\u7f16\u7801 BIN / OCT / HEX \u5c06\u6570\u503c\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236/\u516b\u8fdb\u5236/\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32 LOCATE \u5728\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u4e00\u4e2a\u5b50\u4e32\u7684\u4f4d\u7f6e LEFT / RIGHT \u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u5de6\u8fb9/\u53f3\u8fb9\u6307\u5b9a\u957f\u5ea6\u7684\u5b57\u7b26 LENGTH / CHAR_LENGTH \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4ee5\u5b57\u8282/\u5b57\u7b26\u4e3a\u5355\u4f4d LOWER / UPPER \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u5c0f\u5199/\u5927\u5199\u5f62\u5f0f LPAD / RPAD \u5982\u679c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u8db3\uff0c\u5728\u5b57\u7b26\u4e32\u5de6\u8fb9/\u53f3\u8fb9\u586b\u5145\u6307\u5b9a\u7684\u5b57\u7b26 LTRIM / RTRIM \u53bb\u6389\u5b57\u7b26\u4e32\u524d\u9762/\u540e\u9762\u7684\u7a7a\u683c ORD / CHAR \u8fd4\u56de\u5b57\u7b26\u5bf9\u5e94\u7684\u7f16\u7801/\u8fd4\u56de\u7f16\u7801\u5bf9\u5e94\u7684\u5b57\u7b26 STRCMP \u6bd4\u8f83\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de-1\u30010\u30011\u5206\u522b\u8868\u793a\u5c0f\u4e8e\u3001\u7b49\u4e8e\u3001\u5927\u4e8e SUBSTRING \u8fd4\u56de\u5b57\u7b26\u4e32\u6307\u5b9a\u8303\u56f4\u7684\u5b50\u4e32 \u5e38\u7528\u6570\u503c\u51fd\u6570\u3002 \u51fd\u6570 \u529f\u80fd ABS \u8fd4\u56de\u4e00\u4e2a\u6570\u7684\u7edd\u5ea6\u503c CEILING / FLOOR \u8fd4\u56de\u4e00\u4e2a\u6570\u4e0a\u53d6\u6574/\u4e0b\u53d6\u6574\u7684\u7ed3\u679c CONV \u5c06\u4e00\u4e2a\u6570\u4ece\u4e00\u79cd\u8fdb\u5236\u8f6c\u6362\u6210\u53e6\u4e00\u79cd\u8fdb\u5236 CRC32 \u8ba1\u7b97\u5faa\u73af\u5197\u4f59\u6821\u9a8c\u7801 EXP / LOG / LOG2 / LOG10 \u8ba1\u7b97\u6307\u6570/\u5bf9\u6570 POW \u6c42\u5e42 RAND \u8fd4\u56de[0,1)\u8303\u56f4\u7684\u968f\u673a\u6570 ROUND \u8fd4\u56de\u4e00\u4e2a\u6570\u56db\u820d\u4e94\u5165\u540e\u7684\u7ed3\u679c SQRT \u8fd4\u56de\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u6839 TRUNCATE \u622a\u65ad\u4e00\u4e2a\u6570\u5230\u6307\u5b9a\u7684\u7cbe\u5ea6 SIN / COS / TAN / COT / ASIN / ACOS / ATAN \u4e09\u89d2\u51fd\u6570 \u5e38\u7528\u65f6\u95f4\u65e5\u671f\u51fd\u6570\u3002 \u51fd\u6570 \u529f\u80fd CURDATE / CURTIME / NOW \u83b7\u53d6\u5f53\u524d\u65e5\u671f/\u65f6\u95f4/\u65e5\u671f\u548c\u65f6\u95f4 ADDDATE / SUBDATE \u5c06\u4e24\u4e2a\u65e5\u671f\u8868\u8fbe\u5f0f\u76f8\u52a0/\u76f8\u51cf\u5e76\u8fd4\u56de\u7ed3\u679c DATE / TIME \u4ece\u5b57\u7b26\u4e32\u4e2d\u83b7\u53d6\u65e5\u671f/\u65f6\u95f4 YEAR / MONTH / DAY \u4ece\u65e5\u671f\u4e2d\u83b7\u53d6\u5e74/\u6708/\u65e5 HOUR / MINUTE / SECOND \u4ece\u65f6\u95f4\u4e2d\u83b7\u53d6\u65f6/\u5206/\u79d2 DATEDIFF / TIMEDIFF \u8fd4\u56de\u4e24\u4e2a\u65f6\u95f4\u65e5\u671f\u8868\u8fbe\u5f0f\u76f8\u5dee\u591a\u5c11\u5929/\u5c0f\u65f6 MAKEDATE / MAKETIME \u5236\u9020\u4e00\u4e2a\u65e5\u671f/\u65f6\u95f4 \u5e38\u7528\u6d41\u7a0b\u51fd\u6570\u3002 \u51fd\u6570 \u529f\u80fd IF \u6839\u636e\u6761\u4ef6\u662f\u5426\u6210\u7acb\u8fd4\u56de\u4e0d\u540c\u7684\u503c IFNULL \u5982\u679c\u4e3aNULL\u5219\u8fd4\u56de\u6307\u5b9a\u7684\u503c\u5426\u5219\u5c31\u8fd4\u56de\u672c\u8eab NULLIF \u4e24\u4e2a\u8868\u8fbe\u5f0f\u76f8\u7b49\u5c31\u8fd4\u56deNULL\u5426\u5219\u8fd4\u56de\u7b2c\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c \u5176\u4ed6\u5e38\u7528\u51fd\u6570\u3002 \u51fd\u6570 \u529f\u80fd MD5 / SHA1 / SHA2 \u8fd4\u56de\u5b57\u7b26\u4e32\u5bf9\u5e94\u7684\u54c8\u5e0c\u6458\u8981 CHARSET / COLLATION \u8fd4\u56de\u5b57\u7b26\u96c6/\u6821\u5bf9\u89c4\u5219 USER / CURRENT_USER \u8fd4\u56de\u5f53\u524d\u7528\u6237 DATABASE \u8fd4\u56de\u5f53\u524d\u6570\u636e\u5e93\u540d VERSION \u8fd4\u56de\u5f53\u524d\u6570\u636e\u5e93\u7248\u672c FOUND_ROWS / ROW_COUNT \u8fd4\u56de\u67e5\u8be2\u5230\u7684\u884c\u6570/\u53d7\u5f71\u54cd\u7684\u884c\u6570 LAST_INSERT_ID \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u81ea\u589e\u4e3b\u952e\u7684\u503c UUID / UUID_SHORT \u8fd4\u56de\u5168\u5c40\u552f\u4e00\u6807\u8bc6\u7b26","title":"SQL\u8be6\u89e3\u4e4bDQL"},{"location":"%E7%AC%AC44%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDCL/","text":"SQL\u8be6\u89e3\u4e4bDCL \u6570\u636e\u5e93\u670d\u52a1\u5668\u901a\u5e38\u5305\u542b\u4e86\u975e\u5e38\u91cd\u8981\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u63a7\u5236\u6765\u786e\u4fdd\u8fd9\u4e9b\u6570\u636e\u7684\u5b89\u5168\uff0c\u800c DCL \u5c31\u662f\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\uff0c\u5b83\u53ef\u4ee5\u4e3a\u6307\u5b9a\u7684\u7528\u6237\u6388\u4e88\u8bbf\u95ee\u6743\u9650\u6216\u8005\u4ece\u6307\u5b9a\u7528\u6237\u5904\u53ec\u56de\u6307\u5b9a\u7684\u6743\u9650\u3002DCL \u5bf9\u6570\u636e\u5e93\u7ba1\u7406\u5458\u6765\u8bf4\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u7528\u6237\u6743\u9650\u7684\u7ba1\u7406\u5173\u7cfb\u5230\u6570\u636e\u5e93\u7684\u5b89\u5168\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 DCL \u5141\u8bb8\u53d7\u4fe1\u4efb\u7684\u7528\u6237\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u963b\u6b62\u4e0d\u53d7\u4fe1\u4efb\u7684\u7528\u6237\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u901a\u8fc7 DCL \u5c06\u6bcf\u4e2a\u8bbf\u95ee\u8005\u7684\u7684\u6743\u9650\u6700\u5c0f\u5316\uff08\u8ba9\u8bbf\u95ee\u8005\u7684\u6743\u9650\u521a\u521a\u591f\u7528\uff09\u3002 \u521b\u5efa\u7528\u6237 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684 SQL \u6765\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u5e76\u4e3a\u5176\u6307\u5b9a\u8bbf\u95ee\u53e3\u4ee4\u3002 create user 'wangdachui' @ '%' identified by 'Wang.618' ; \u4e0a\u9762\u7684 SQL \u521b\u5efa\u4e86\u540d\u4e3a wangdachui \u7684\u7528\u6237\uff0c\u5b83\u7684\u8bbf\u95ee\u53e3\u4ee4\u662f Wang.618\uff0c\u8be5\u7528\u6237\u53ef\u4ee5\u4ece\u4efb\u610f\u4e3b\u673a\u8bbf\u95ee\u6570\u636e\u5e93\u670d\u52a1\u5668\uff0c\u56e0\u4e3a @ \u540e\u9762\u4f7f\u7528\u4e86\u53ef\u4ee5\u8868\u793a\u4efb\u610f\u591a\u4e2a\u5b57\u7b26\u7684\u901a\u914d\u7b26 %\u3002\u5982\u679c\u8981\u9650\u5236 wangdachui \u8fd9\u4e2a\u7528\u6237\u53ea\u80fd\u4ece 192.168.0.x \u8fd9\u4e2a\u7f51\u6bb5\u7684\u4e3b\u673a\u8bbf\u95ee\u6570\u636e\u5e93\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u4fee\u6539 SQL \u8bed\u53e5\u3002 drop user if exists 'wangdachui' @ '%' ; create user 'wangdachui' @ '192.168.0.%' identified by 'Wang.618' ; \u6b64\u65f6\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528 wangdachui \u8fd9\u4e2a\u8d26\u53f7\u8bbf\u95ee\u6570\u636e\u5e93\u670d\u52a1\u5668\uff0c\u6211\u4eec\u51e0\u4e4e\u4e0d\u80fd\u505a\u4efb\u4f55\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8be5\u8d26\u53f7\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c\u6743\u9650\u3002 \u6388\u4e88\u6743\u9650 \u6211\u4eec\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u4e3a wangdachui \u6388\u4e88\u67e5\u8be2 school \u6570\u636e\u5e93\u5b66\u9662\u8868\uff08 tb_college \uff09\u7684\u6743\u9650\u3002 grant select on ` school ` . ` tb_college ` to 'wangdachui' @ '192.168.0.%' ; \u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba9 wangdachui \u5bf9 school \u6570\u636e\u5e93\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u5177\u6709\u67e5\u8be2\u6743\u9650\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 grant select on ` school ` . * to 'wangdachui' @ '192.168.0.%' ; \u5982\u679c\u6211\u4eec\u5e0c\u671b wangdachui \u8fd8\u6709 insert\u3001delete \u548c update \u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u8fdb\u884c\u64cd\u4f5c\u3002 grant insert , delete , update on ` school ` . * to 'wangdachui' @ '192.168.0.%' ; \u5982\u679c\u6211\u4eec\u8fd8\u60f3\u6388\u4e88 wangdachui \u6267\u884c DDL \u7684\u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684 SQL\u3002 grant create , drop , alter on ` school ` . * to 'wangdachui' @ '192.168.0.%' ; \u5982\u679c\u6211\u4eec\u5e0c\u671b wangdachui \u8d26\u53f7\u5bf9\u6240\u6709\u6570\u636e\u5e93\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u5177\u5907\u6240\u6709\u7684\u64cd\u4f5c\u6743\u9650\uff0c\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u6240\u793a\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u4f1a\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u6211\u4eec\u4e4b\u524d\u8bf4\u8fc7\uff0c\u6743\u9650\u521a\u521a\u591f\u7528\u5c31\u884c\uff0c\u4e00\u4e2a\u666e\u901a\u7684\u8d26\u53f7\u4e0d\u5e94\u8be5\u62e5\u6709\u8fd9\u4e48\u5927\u7684\u6743\u9650\u3002 grant all privileges on * . * to 'wangdachui' @ '192.168.0.%' ; \u53ec\u56de\u6743\u9650 \u5982\u679c\u8981\u53ec\u56de wangdachui \u5bf9 school \u6570\u636e\u5e93\u7684 insert\u3001delete \u548c update \u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u64cd\u4f5c\u3002 revoke insert , delete , update on ` school ` . * from 'wangdachui' @ '192.168.0.%' ; \u5982\u679c\u8981\u53ec\u56de\u6240\u6709\u7684\u6743\u9650\uff0c\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u8fdb\u884c\u64cd\u4f5c\u3002 revoke all privileges on * . * from 'wangdachui' @ '192.168.0.%' ; \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u7531\u4e8e\u6570\u636e\u5e93\u53ef\u80fd\u4f1a\u7f13\u5b58\u7528\u6237\u7684\u6743\u9650\uff0c\u53ef\u4ee5\u5728\u6388\u4e88\u6216\u53ec\u56de\u6743\u9650\u540e\u6267\u884c\u4e0b\u9762\u7684\u8bed\u53e5\u4f7f\u65b0\u7684\u6743\u9650\u5373\u65f6\u751f\u6548\u3002 flush privileges ;","title":"\u7b2c44\u8bfe.SQL\u8be6\u89e3\u4e4bDCL"},{"location":"%E7%AC%AC44%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDCL/#sqldcl","text":"\u6570\u636e\u5e93\u670d\u52a1\u5668\u901a\u5e38\u5305\u542b\u4e86\u975e\u5e38\u91cd\u8981\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u63a7\u5236\u6765\u786e\u4fdd\u8fd9\u4e9b\u6570\u636e\u7684\u5b89\u5168\uff0c\u800c DCL \u5c31\u662f\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\uff0c\u5b83\u53ef\u4ee5\u4e3a\u6307\u5b9a\u7684\u7528\u6237\u6388\u4e88\u8bbf\u95ee\u6743\u9650\u6216\u8005\u4ece\u6307\u5b9a\u7528\u6237\u5904\u53ec\u56de\u6307\u5b9a\u7684\u6743\u9650\u3002DCL \u5bf9\u6570\u636e\u5e93\u7ba1\u7406\u5458\u6765\u8bf4\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u7528\u6237\u6743\u9650\u7684\u7ba1\u7406\u5173\u7cfb\u5230\u6570\u636e\u5e93\u7684\u5b89\u5168\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 DCL \u5141\u8bb8\u53d7\u4fe1\u4efb\u7684\u7528\u6237\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u963b\u6b62\u4e0d\u53d7\u4fe1\u4efb\u7684\u7528\u6237\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u901a\u8fc7 DCL \u5c06\u6bcf\u4e2a\u8bbf\u95ee\u8005\u7684\u7684\u6743\u9650\u6700\u5c0f\u5316\uff08\u8ba9\u8bbf\u95ee\u8005\u7684\u6743\u9650\u521a\u521a\u591f\u7528\uff09\u3002","title":"SQL\u8be6\u89e3\u4e4bDCL"},{"location":"%E7%AC%AC44%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDCL/#_1","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684 SQL \u6765\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u5e76\u4e3a\u5176\u6307\u5b9a\u8bbf\u95ee\u53e3\u4ee4\u3002 create user 'wangdachui' @ '%' identified by 'Wang.618' ; \u4e0a\u9762\u7684 SQL \u521b\u5efa\u4e86\u540d\u4e3a wangdachui \u7684\u7528\u6237\uff0c\u5b83\u7684\u8bbf\u95ee\u53e3\u4ee4\u662f Wang.618\uff0c\u8be5\u7528\u6237\u53ef\u4ee5\u4ece\u4efb\u610f\u4e3b\u673a\u8bbf\u95ee\u6570\u636e\u5e93\u670d\u52a1\u5668\uff0c\u56e0\u4e3a @ \u540e\u9762\u4f7f\u7528\u4e86\u53ef\u4ee5\u8868\u793a\u4efb\u610f\u591a\u4e2a\u5b57\u7b26\u7684\u901a\u914d\u7b26 %\u3002\u5982\u679c\u8981\u9650\u5236 wangdachui \u8fd9\u4e2a\u7528\u6237\u53ea\u80fd\u4ece 192.168.0.x \u8fd9\u4e2a\u7f51\u6bb5\u7684\u4e3b\u673a\u8bbf\u95ee\u6570\u636e\u5e93\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u4fee\u6539 SQL \u8bed\u53e5\u3002 drop user if exists 'wangdachui' @ '%' ; create user 'wangdachui' @ '192.168.0.%' identified by 'Wang.618' ; \u6b64\u65f6\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528 wangdachui \u8fd9\u4e2a\u8d26\u53f7\u8bbf\u95ee\u6570\u636e\u5e93\u670d\u52a1\u5668\uff0c\u6211\u4eec\u51e0\u4e4e\u4e0d\u80fd\u505a\u4efb\u4f55\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8be5\u8d26\u53f7\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c\u6743\u9650\u3002","title":"\u521b\u5efa\u7528\u6237"},{"location":"%E7%AC%AC44%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDCL/#_2","text":"\u6211\u4eec\u7528\u4e0b\u9762\u7684\u8bed\u53e5\u4e3a wangdachui \u6388\u4e88\u67e5\u8be2 school \u6570\u636e\u5e93\u5b66\u9662\u8868\uff08 tb_college \uff09\u7684\u6743\u9650\u3002 grant select on ` school ` . ` tb_college ` to 'wangdachui' @ '192.168.0.%' ; \u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba9 wangdachui \u5bf9 school \u6570\u636e\u5e93\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u5177\u6709\u67e5\u8be2\u6743\u9650\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 grant select on ` school ` . * to 'wangdachui' @ '192.168.0.%' ; \u5982\u679c\u6211\u4eec\u5e0c\u671b wangdachui \u8fd8\u6709 insert\u3001delete \u548c update \u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u8fdb\u884c\u64cd\u4f5c\u3002 grant insert , delete , update on ` school ` . * to 'wangdachui' @ '192.168.0.%' ; \u5982\u679c\u6211\u4eec\u8fd8\u60f3\u6388\u4e88 wangdachui \u6267\u884c DDL \u7684\u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\u7684 SQL\u3002 grant create , drop , alter on ` school ` . * to 'wangdachui' @ '192.168.0.%' ; \u5982\u679c\u6211\u4eec\u5e0c\u671b wangdachui \u8d26\u53f7\u5bf9\u6240\u6709\u6570\u636e\u5e93\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u5177\u5907\u6240\u6709\u7684\u64cd\u4f5c\u6743\u9650\uff0c\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u6240\u793a\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u4f1a\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u6211\u4eec\u4e4b\u524d\u8bf4\u8fc7\uff0c\u6743\u9650\u521a\u521a\u591f\u7528\u5c31\u884c\uff0c\u4e00\u4e2a\u666e\u901a\u7684\u8d26\u53f7\u4e0d\u5e94\u8be5\u62e5\u6709\u8fd9\u4e48\u5927\u7684\u6743\u9650\u3002 grant all privileges on * . * to 'wangdachui' @ '192.168.0.%' ;","title":"\u6388\u4e88\u6743\u9650"},{"location":"%E7%AC%AC44%E8%AF%BE.SQL%E8%AF%A6%E8%A7%A3%E4%B9%8BDCL/#_3","text":"\u5982\u679c\u8981\u53ec\u56de wangdachui \u5bf9 school \u6570\u636e\u5e93\u7684 insert\u3001delete \u548c update \u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u64cd\u4f5c\u3002 revoke insert , delete , update on ` school ` . * from 'wangdachui' @ '192.168.0.%' ; \u5982\u679c\u8981\u53ec\u56de\u6240\u6709\u7684\u6743\u9650\uff0c\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u8fdb\u884c\u64cd\u4f5c\u3002 revoke all privileges on * . * from 'wangdachui' @ '192.168.0.%' ; \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u7531\u4e8e\u6570\u636e\u5e93\u53ef\u80fd\u4f1a\u7f13\u5b58\u7528\u6237\u7684\u6743\u9650\uff0c\u53ef\u4ee5\u5728\u6388\u4e88\u6216\u53ec\u56de\u6743\u9650\u540e\u6267\u884c\u4e0b\u9762\u7684\u8bed\u53e5\u4f7f\u65b0\u7684\u6743\u9650\u5373\u65f6\u751f\u6548\u3002 flush privileges ;","title":"\u53ec\u56de\u6743\u9650"},{"location":"%E7%AC%AC45%E8%AF%BE.%E7%B4%A2%E5%BC%95/","text":"\u7d22\u5f15 \u7d22\u5f15\u662f\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7528\u6765\u63d0\u5347\u67e5\u8be2\u6027\u80fd\u6700\u4e3a\u91cd\u8981\u7684\u624b\u6bb5\u3002\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u7d22\u5f15\u5c31\u50cf\u4e00\u672c\u4e66\u7684\u76ee\u5f55\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u8981\u4ece\u4e00\u672c\u4e66\u4e2d\u627e\u51fa\u67d0\u4e2a\u77e5\u8bc6\u70b9\uff0c\u4f46\u662f\u8fd9\u672c\u4e66\u6ca1\u6709\u76ee\u5f55\uff0c\u8fd9\u5c06\u662f\u610f\u89c1\u591a\u4e48\u53ef\u6015\u7684\u4e8b\u60c5\uff01\u6211\u4eec\u4f30\u8ba1\u5f97\u4e00\u7bc7\u4e00\u7bc7\u7684\u7ffb\u4e0b\u53bb\uff0c\u624d\u80fd\u786e\u5b9a\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u5230\u5e95\u5728\u4ec0\u4e48\u4f4d\u7f6e\u3002\u521b\u5efa\u7d22\u5f15\u867d\u7136\u4f1a\u5e26\u6765\u5b58\u50a8\u7a7a\u95f4\u4e0a\u7684\u5f00\u9500\uff0c\u5c31\u50cf\u4e00\u672c\u4e66\u7684\u76ee\u5f55\u4f1a\u5360\u7528\u4e00\u90e8\u5206\u7bc7\u5e45\u4e00\u6837\uff0c\u4f46\u662f\u5728\u727a\u7272\u7a7a\u95f4\u540e\u6362\u6765\u7684\u67e5\u8be2\u65f6\u95f4\u7684\u51cf\u5c11\u4e5f\u662f\u975e\u5e38\u663e\u8457\u7684\u3002 MySQL \u6570\u636e\u5e93\u4e2d\u6240\u6709\u6570\u636e\u7c7b\u578b\u7684\u5217\u90fd\u53ef\u4ee5\u88ab\u7d22\u5f15\u3002\u5bf9\u4e8eMySQL 8.0 \u7248\u672c\u7684 InnoDB \u5b58\u50a8\u5f15\u64ce\u6765\u8bf4\uff0c\u5b83\u652f\u6301\u4e09\u79cd\u7c7b\u578b\u7684\u7d22\u5f15\uff0c\u5206\u522b\u662f B+ \u6811\u7d22\u5f15\u3001\u5168\u6587\u7d22\u5f15\u548c R \u6811\u7d22\u5f15\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u4ecb\u7ecd\u4f7f\u7528\u5f97\u6700\u4e3a\u5e7f\u6cdb\u7684 B+ \u6811\u7d22\u5f15\u3002\u4f7f\u7528 B+ \u6811\u7684\u539f\u56e0\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u662f\u76ee\u524d\u5728\u57fa\u4e8e\u78c1\u76d8\u8fdb\u884c\u6d77\u91cf\u6570\u636e\u5b58\u50a8\u548c\u6392\u5e8f\u4e0a\u6700\u6709\u6548\u7387\u7684\u6570\u636e\u7ed3\u6784\u3002B+ \u6811\u662f\u4e00\u68f5 \u5e73\u8861\u6811 \uff0c\u6811\u7684\u9ad8\u5ea6\u901a\u5e38\u4e3a3\u62164\uff0c\u4f46\u662f\u5374\u53ef\u4ee5\u4fdd\u5b58\u4ece\u767e\u4e07\u7ea7\u5230\u5341\u4ebf\u7ea7\u7684\u6570\u636e\uff0c\u800c\u4ece\u8fd9\u4e9b\u6570\u636e\u91cc\u9762\u67e5\u8be2\u4e00\u6761\u6570\u636e\uff0c\u53ea\u9700\u89813\u6b21\u62164\u6b21 I/O \u64cd\u4f5c\u3002 B+ \u6811\u7531\u6839\u8282\u70b9\u3001\u4e2d\u95f4\u8282\u70b9\u548c\u53f6\u5b50\u8282\u70b9\u6784\u6210\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u7528\u6765\u4fdd\u5b58\u6392\u5e8f\u540e\u7684\u6570\u636e\u3002\u7531\u4e8e\u8bb0\u5f55\u5728\u7d22\u5f15\u4e0a\u662f\u6392\u5e8f\u8fc7\u7684\uff0c\u56e0\u6b64\u5728\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5185\u67e5\u627e\u6570\u636e\u65f6\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u8fd9\u79cd\u67e5\u627e\u65b9\u5f0f\u6548\u7387\u975e\u5e38\u7684\u9ad8\u3002\u5f53\u6570\u636e\u5f88\u5c11\u7684\u65f6\u5019\uff0cB+ \u6811\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u6570\u636e\u4e5f\u5c31\u4fdd\u5b58\u5728\u6839\u8282\u70b9\u4e0a\u3002\u968f\u7740\u8bb0\u5f55\u8d8a\u6765\u8d8a\u591a\uff0cB+ \u6811\u4f1a\u53d1\u751f\u5206\u88c2\uff0c\u6839\u8282\u70b9\u4e0d\u518d\u4fdd\u5b58\u6570\u636e\uff0c\u800c\u662f\u63d0\u4f9b\u4e86\u8bbf\u95ee\u4e0b\u4e00\u5c42\u8282\u70b9\u7684\u6307\u9488\uff0c\u5e2e\u52a9\u5feb\u901f\u786e\u5b9a\u6570\u636e\u5728\u54ea\u4e2a\u53f6\u5b50\u8282\u70b9\u4e0a\u3002 \u5728\u521b\u5efa\u4e8c\u7ef4\u8868\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u90fd\u4f1a\u4e3a\u8868\u6307\u5b9a\u4e3b\u952e\u5217\uff0c\u4e3b\u952e\u5217\u4e0a\u9ed8\u8ba4\u4f1a\u521b\u5efa\u7d22\u5f15\uff0c\u800c\u5bf9\u4e8e MySQL InnoDB \u5b58\u50a8\u5f15\u64ce\u6765\u8bf4\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u7684\u662f\u7d22\u5f15\u7ec4\u7ec7\u8868\u8fd9\u79cd\u6570\u636e\u5b58\u50a8\u7ed3\u6784\uff0c\u6240\u4ee5\u4e3b\u952e\u4e0a\u7684\u7d22\u5f15\u5c31\u662f\u6574\u5f20\u8868\u7684\u6570\u636e\uff0c\u800c\u8fd9\u79cd\u7d22\u5f15\u6211\u4eec\u4e5f\u5c06\u5176\u79f0\u4e4b\u4e3a \u805a\u96c6\u7d22\u5f15 \uff08clustered index\uff09\u3002\u5f88\u663e\u7136\uff0c\u4e00\u5f20\u8868\u53ea\u80fd\u6709\u4e00\u4e2a\u805a\u96c6\u7d22\u5f15\uff0c\u5426\u5219\u8868\u7684\u6570\u636e\u5c82\u4e0d\u662f\u8981\u4fdd\u5b58\u591a\u6b21\u3002\u6211\u4eec\u81ea\u5df1\u521b\u5efa\u7684\u7d22\u5f15\u90fd\u662f\u4e8c\u7ea7\u7d22\u5f15\uff08secondary index\uff09\uff0c\u66f4\u5e38\u89c1\u7684\u53eb\u6cd5\u662f \u975e\u805a\u96c6\u7d22\u5f15 \uff08non-clustered index\uff09\u3002\u901a\u8fc7\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u975e\u805a\u96c6\u7d22\u5f15\u53ea\u80fd\u5b9a\u4f4d\u8bb0\u5f55\u7684\u4e3b\u952e\uff0c\u5728\u83b7\u53d6\u6570\u636e\u65f6\u53ef\u80fd\u9700\u8981\u518d\u901a\u8fc7\u4e3b\u952e\u4e0a\u7684\u805a\u96c6\u7d22\u5f15\u8fdb\u884c\u67e5\u8be2\uff0c\u8fd9\u79cd\u73b0\u8c61\u79f0\u4e3a\u201c\u56de\u8868\u201d\uff0c\u56e0\u6b64\u901a\u8fc7\u975e\u805a\u96c6\u7d22\u5f15\u68c0\u7d22\u6570\u636e\u901a\u5e38\u6bd4\u4f7f\u7528\u805a\u96c6\u7d22\u5f15\u68c0\u7d22\u6570\u636e\u8981\u6162\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u7d22\u5f15\u7684\u610f\u4e49\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u6839\u636e\u5b66\u751f\u7684\u59d3\u540d\u6765\u67e5\u627e\u5b66\u751f\uff0c\u8fd9\u4e2a\u573a\u666f\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u5e94\u8be5\u7ecf\u5e38\u9047\u5230\uff0c\u5c31\u8ddf\u901a\u8fc7\u5546\u54c1\u540d\u79f0\u67e5\u627e\u5546\u54c1\u662f\u4e00\u4e2a\u9053\u7406\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 MySQL \u7684 explain \u5173\u952e\u5b57\u6765\u67e5\u770b SQL \u7684\u6267\u884c\u8ba1\u5212\uff08\u6570\u636e\u5e93\u6267\u884c SQL \u8bed\u53e5\u7684\u5177\u4f53\u6b65\u9aa4\uff09\u3002 explain select * from tb_student where stuname = '\u6797\u9707\u5357' \\ G *************************** 1. row *************************** id: 1 select_type: SIMPLE table: tb_student partitions: NULL type: ALL possible_keys: NULL key: NULL key_len: NULL ref: NULL rows: 11 filtered: 10.00 Extra: Using where 1 row in set, 1 warning (0.00 sec) \u5728\u4e0a\u9762\u7684 SQL \u6267\u884c\u8ba1\u5212\u4e2d\uff0c\u6709\u51e0\u9879\u503c\u5f97\u6211\u4eec\u5173\u6ce8\uff1a select_type \uff1a\u67e5\u8be2\u7684\u7c7b\u578b\u3002 SIMPLE \uff1a\u7b80\u5355 SELECT\uff0c\u4e0d\u9700\u8981\u4f7f\u7528 UNION \u64cd\u4f5c\u6216\u5b50\u67e5\u8be2\u3002 PRIMARY \uff1a\u5982\u679c\u67e5\u8be2\u5305\u542b\u5b50\u67e5\u8be2\uff0c\u6700\u5916\u5c42\u7684 SELECT \u88ab\u6807\u8bb0\u4e3a PRIMARY\u3002 UNION \uff1aUNION \u64cd\u4f5c\u4e2d\u7b2c\u4e8c\u4e2a\u6216\u540e\u9762\u7684 SELECT \u8bed\u53e5\u3002 SUBQUERY \uff1a\u5b50\u67e5\u8be2\u4e2d\u7684\u7b2c\u4e00\u4e2a SELECT\u3002 DERIVED \uff1a\u6d3e\u751f\u8868\u7684 SELECT \u5b50\u67e5\u8be2\u3002 table \uff1a\u67e5\u8be2\u5bf9\u5e94\u7684\u8868\u3002 type \uff1aMySQL \u5728\u8868\u4e2d\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u884c\u7684\u65b9\u5f0f\uff0c\u4e5f\u79f0\u4e3a\u8bbf\u95ee\u7c7b\u578b\uff0c\u5305\u62ec\uff1a ALL \uff08\u5168\u8868\u626b\u63cf\uff09\u3001 index \uff08\u7d22\u5f15\u5168\u626b\u63cf\uff0c\u53ea\u904d\u5386\u7d22\u5f15\u6811\uff09\u3001 range \uff08\u7d22\u5f15\u8303\u56f4\u626b\u63cf\uff09\u3001 ref \uff08\u975e\u552f\u4e00\u7d22\u5f15\u626b\u63cf\uff09\u3001 eq_ref \uff08\u552f\u4e00\u7d22\u5f15\u626b\u63cf\uff09\u3001 const / system \uff08\u5e38\u91cf\u7ea7\u67e5\u8be2\uff09\u3001 NULL \uff08\u4e0d\u9700\u8981\u8bbf\u95ee\u8868\u6216\u7d22\u5f15\uff09\u3002\u5728\u6240\u6709\u7684\u8bbf\u95ee\u7c7b\u578b\u4e2d\uff0c\u5f88\u663e\u7136 ALL \u662f\u6027\u80fd\u6700\u5dee\u7684\uff0c\u5b83\u4ee3\u8868\u7684\u5168\u8868\u626b\u63cf\u662f\u6307\u8981\u626b\u63cf\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\u624d\u80fd\u627e\u5230\u5339\u914d\u7684\u884c\u3002 possible_keys \uff1aMySQL \u53ef\u4ee5\u9009\u62e9\u7684\u7d22\u5f15\uff0c\u4f46\u662f \u6709\u53ef\u80fd\u4e0d\u4f1a\u4f7f\u7528 \u3002 key \uff1aMySQL \u771f\u6b63\u4f7f\u7528\u7684\u7d22\u5f15\uff0c\u5982\u679c\u4e3a NULL \u5c31\u8868\u793a\u6ca1\u6709\u4f7f\u7528\u7d22\u5f15\u3002 key_len \uff1a\u4f7f\u7528\u7684\u7d22\u5f15\u7684\u957f\u5ea6\uff0c\u5728\u4e0d\u5f71\u54cd\u67e5\u8be2\u7684\u60c5\u51b5\u4e0b\u80af\u5b9a\u662f\u957f\u5ea6\u8d8a\u77ed\u8d8a\u597d\u3002 rows \uff1a\u6267\u884c\u67e5\u8be2\u9700\u8981\u626b\u63cf\u7684\u884c\u6570\uff0c\u8fd9\u662f\u4e00\u4e2a \u9884\u4f30\u503c \u3002 extra \uff1a\u5173\u4e8e\u67e5\u8be2\u989d\u5916\u7684\u4fe1\u606f\u3002 Using filesort \uff1aMySQL \u65e0\u6cd5\u5229\u7528\u7d22\u5f15\u5b8c\u6210\u6392\u5e8f\u64cd\u4f5c\u3002 Using index \uff1a\u53ea\u4f7f\u7528\u7d22\u5f15\u7684\u4fe1\u606f\u800c\u4e0d\u9700\u8981\u8fdb\u4e00\u6b65\u67e5\u8868\u6765\u83b7\u53d6\u66f4\u591a\u7684\u4fe1\u606f\u3002 Using temporary \uff1aMySQL \u9700\u8981\u4f7f\u7528\u4e34\u65f6\u8868\u6765\u5b58\u50a8\u7ed3\u679c\u96c6\uff0c\u5e38\u7528\u4e8e\u5206\u7ec4\u548c\u6392\u5e8f\u3002 Impossible where \uff1a where \u5b50\u53e5\u4f1a\u5bfc\u81f4\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684\u884c\u3002 Distinct \uff1aMySQL \u53d1\u73b0\u7b2c\u4e00\u4e2a\u5339\u914d\u884c\u540e\uff0c\u505c\u6b62\u4e3a\u5f53\u524d\u7684\u884c\u7ec4\u5408\u641c\u7d22\u66f4\u591a\u7684\u884c\u3002 Using where \uff1a\u67e5\u8be2\u7684\u5217\u672a\u88ab\u7d22\u5f15\u8986\u76d6\uff0c\u7b5b\u9009\u6761\u4ef6\u5e76\u4e0d\u662f\u7d22\u5f15\u7684\u524d\u5bfc\u5217\u3002 \u4ece\u4e0a\u9762\u7684\u6267\u884c\u8ba1\u5212\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u6211\u4eec\u901a\u8fc7\u5b66\u751f\u540d\u5b57\u67e5\u8be2\u5b66\u751f\u65f6\u5b9e\u9645\u4e0a\u662f\u8fdb\u884c\u4e86\u5168\u8868\u626b\u63cf\uff0c\u4e0d\u8a00\u800c\u55bb\u8fd9\u4e2a\u67e5\u8be2\u6027\u80fd\u80af\u5b9a\u662f\u975e\u5e38\u7cdf\u7cd5\u7684\uff0c\u5c24\u5176\u662f\u5728\u8868\u4e2d\u7684\u884c\u5f88\u591a\u7684\u65f6\u5019\u3002\u5982\u679c\u6211\u4eec\u9700\u8981\u7ecf\u5e38\u901a\u8fc7\u5b66\u751f\u59d3\u540d\u6765\u67e5\u8be2\u5b66\u751f\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u5728\u5b66\u751f\u59d3\u540d\u5bf9\u5e94\u7684\u5217\u4e0a\u521b\u5efa\u7d22\u5f15\uff0c\u901a\u8fc7\u7d22\u5f15\u6765\u52a0\u901f\u67e5\u8be2\u3002 create index idx_student_name on tb_student ( stuname ); \u518d\u6b21\u67e5\u770b\u521a\u624d\u7684 SQL \u5bf9\u5e94\u7684\u6267\u884c\u8ba1\u5212\u3002 explain select * from tb_student where stuname = '\u6797\u9707\u5357' \\ G *************************** 1. row *************************** id: 1 select_type: SIMPLE table: tb_student partitions: NULL type: ref possible_keys: idx_student_name key: idx_student_name key_len: 62 ref: const rows: 1 filtered: 100.00 Extra: NULL 1 row in set, 1 warning (0.00 sec) \u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5728\u5bf9\u5b66\u751f\u59d3\u540d\u521b\u5efa\u7d22\u5f15\u540e\uff0c\u521a\u624d\u7684\u67e5\u8be2\u5df2\u7ecf\u4e0d\u662f\u5168\u8868\u626b\u63cf\u800c\u662f\u57fa\u4e8e\u7d22\u5f15\u7684\u67e5\u8be2\uff0c\u800c\u4e14\u626b\u63cf\u7684\u884c\u53ea\u6709\u552f\u4e00\u7684\u4e00\u884c\uff0c\u8fd9\u663e\u7136\u5927\u5927\u7684\u63d0\u5347\u4e86\u67e5\u8be2\u7684\u6027\u80fd\u3002MySQL \u4e2d\u8fd8\u5141\u8bb8\u521b\u5efa\u524d\u7f00\u7d22\u5f15\uff0c\u5373\u5bf9\u7d22\u5f15\u5b57\u6bb5\u7684\u524dN\u4e2a\u5b57\u7b26\u521b\u5efa\u7d22\u5f15\uff0c\u8fd9\u6837\u7684\u8bdd\u53ef\u4ee5\u51cf\u5c11\u7d22\u5f15\u5360\u7528\u7684\u7a7a\u95f4\uff08\u4f46\u8282\u7701\u4e86\u7a7a\u95f4\u5f88\u6709\u53ef\u80fd\u4f1a\u6d6a\u8d39\u65f6\u95f4\uff0c \u65f6\u95f4\u548c\u7a7a\u95f4\u662f\u4e0d\u53ef\u8c03\u548c\u7684\u77db\u76fe \uff09\uff0c\u5982\u4e0b\u6240\u793a\u3002 create index idx_student_name_1 on tb_student ( stuname ( 1 )); \u4e0a\u9762\u7684\u7d22\u5f15\u76f8\u5f53\u4e8e\u662f\u6839\u636e\u5b66\u751f\u59d3\u540d\u7684\u7b2c\u4e00\u4e2a\u5b57\u6765\u521b\u5efa\u7684\u7d22\u5f15\uff0c\u6211\u4eec\u518d\u770b\u770b SQL \u6267\u884c\u8ba1\u5212\u3002 explain select * from tb_student where stuname = '\u6797\u9707\u5357' \\ G *************************** 1. row *************************** id: 1 select_type: SIMPLE table: tb_student partitions: NULL type: ref possible_keys: idx_student_name key: idx_student_name key_len: 5 ref: const rows: 2 filtered: 100.00 Extra: Using where 1 row in set, 1 warning (0.00 sec) \u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u6ce8\u610f\u5230\uff0c\u8fd9\u4e00\u6b21\u626b\u63cf\u7684\u884c\u53d8\u6210\u4e862\u884c\uff0c\u56e0\u4e3a\u5b66\u751f\u8868\u4e2d\u6709\u4e24\u4e2a\u59d3\u201c\u6797\u201d\u7684\u5b66\u751f\uff0c\u6211\u4eec\u53ea\u7528\u59d3\u540d\u7684\u7b2c\u4e00\u4e2a\u5b57\u4f5c\u4e3a\u7d22\u5f15\u7684\u8bdd\uff0c\u5728\u67e5\u8be2\u65f6\u901a\u8fc7\u7d22\u5f15\u5c31\u4f1a\u627e\u5230\u8fd9\u4e24\u884c\u3002 \u5982\u679c\u8981\u5220\u9664\u7d22\u5f15\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684SQL\u3002 alter table tb_student drop index idx_student_name ; \u6216\u8005 drop index idx_student_name on tb_student ; \u5728\u521b\u5efa\u7d22\u5f15\u65f6\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u590d\u5408\u7d22\u5f15\u3001\u51fd\u6570\u7d22\u5f15\uff08MySQL 5.7 \u5f00\u59cb\u652f\u6301\uff09\uff0c\u7528\u597d\u590d\u5408\u7d22\u5f15\u5b9e\u73b0 \u7d22\u5f15\u8986\u76d6 \u53ef\u4ee5\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u6392\u5e8f\u548c\u56de\u8868\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31\u4f1a\u8ba9\u67e5\u8be2\u7684\u6027\u80fd\u6210\u500d\u7684\u63d0\u5347\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002 \u6211\u4eec\u7b80\u5355\u7684\u4e3a\u5927\u5bb6\u603b\u7ed3\u4e00\u4e0b\u7d22\u5f15\u7684\u8bbe\u8ba1\u539f\u5219\uff1a \u6700\u9002\u5408 \u7d22\u5f15\u7684\u5217\u662f\u51fa\u73b0\u5728 WHERE\u5b50\u53e5 \u548c\u8fde\u63a5\u5b50\u53e5\u4e2d\u7684\u5217\u3002 \u7d22\u5f15\u5217\u7684\u57fa\u6570\u8d8a\u5927\uff08\u53d6\u503c\u591a\u3001\u91cd\u590d\u503c\u5c11\uff09\uff0c\u7d22\u5f15\u7684\u6548\u679c\u5c31\u8d8a\u597d\u3002 \u4f7f\u7528 \u524d\u7f00\u7d22\u5f15 \u53ef\u4ee5\u51cf\u5c11\u7d22\u5f15\u5360\u7528\u7684\u7a7a\u95f4\uff0c\u5185\u5b58\u4e2d\u53ef\u4ee5\u7f13\u5b58\u66f4\u591a\u7684\u7d22\u5f15\u3002 \u7d22\u5f15\u4e0d\u662f\u8d8a\u591a\u8d8a\u597d \uff0c\u867d\u7136\u7d22\u5f15\u52a0\u901f\u4e86\u8bfb\u64cd\u4f5c\uff08\u67e5\u8be2\uff09\uff0c\u4f46\u662f\u5199\u64cd\u4f5c\uff08\u589e\u3001\u5220\u3001\u6539\uff09\u90fd\u4f1a\u53d8\u5f97\u66f4\u6162\uff0c\u56e0\u4e3a\u6570\u636e\u7684\u53d8\u5316\u4f1a\u5bfc\u81f4\u7d22\u5f15\u7684\u66f4\u65b0\uff0c\u5c31\u5982\u540c\u4e66\u7c4d\u7ae0\u8282\u7684\u589e\u5220\u9700\u8981\u66f4\u65b0\u76ee\u5f55\u4e00\u6837\u3002 \u4f7f\u7528 InnoDB \u5b58\u50a8\u5f15\u64ce\u65f6\uff0c\u8868\u7684\u666e\u901a\u7d22\u5f15\u90fd\u4f1a\u4fdd\u5b58\u4e3b\u952e\u7684\u503c\uff0c\u6240\u4ee5 \u4e3b\u952e\u8981\u5c3d\u53ef\u80fd\u9009\u62e9\u8f83\u77ed\u7684\u6570\u636e\u7c7b\u578b \uff0c\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u7684\u51cf\u5c11\u7d22\u5f15\u5360\u7528\u7684\u7a7a\u95f4\uff0c\u63d0\u5347\u7d22\u5f15\u7684\u7f13\u5b58\u6548\u679c\u3002 \u6700\u540e\uff0c\u8fd8\u6709\u4e00\u70b9\u9700\u8981\u8bf4\u660e\uff0cInnoDB \u4f7f\u7528\u7684 B-tree \u7d22\u5f15\uff0c\u6570\u503c\u7c7b\u578b\u7684\u5217\u9664\u4e86\u7b49\u503c\u5224\u65ad\u65f6\u7d22\u5f15\u4f1a\u751f\u6548\u4e4b\u5916\uff0c\u4f7f\u7528 > \u3001 < \u3001 >= \u3001 <= \u3001 BETWEEN...AND... \u3001 <> \u65f6\uff0c\u7d22\u5f15\u4ecd\u7136\u751f\u6548\uff1b\u5bf9\u4e8e\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5217\uff0c\u5982\u679c\u4f7f\u7528\u4e0d\u4ee5\u901a\u914d\u7b26\u5f00\u5934\u7684\u6a21\u7cca\u67e5\u8be2\uff0c\u7d22\u5f15\u4e5f\u662f\u8d77\u4f5c\u7528\u7684\uff0c\u4f46\u662f\u5176\u4ed6\u7684\u60c5\u51b5\u4f1a\u5bfc\u81f4\u7d22\u5f15\u5931\u6548\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5f88\u6709\u53ef\u80fd\u4f1a\u505a\u5168\u8868\u67e5\u8be2\u3002","title":"\u7b2c45\u8bfe.\u7d22\u5f15"},{"location":"%E7%AC%AC45%E8%AF%BE.%E7%B4%A2%E5%BC%95/#_1","text":"\u7d22\u5f15\u662f\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7528\u6765\u63d0\u5347\u67e5\u8be2\u6027\u80fd\u6700\u4e3a\u91cd\u8981\u7684\u624b\u6bb5\u3002\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u7d22\u5f15\u5c31\u50cf\u4e00\u672c\u4e66\u7684\u76ee\u5f55\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u8981\u4ece\u4e00\u672c\u4e66\u4e2d\u627e\u51fa\u67d0\u4e2a\u77e5\u8bc6\u70b9\uff0c\u4f46\u662f\u8fd9\u672c\u4e66\u6ca1\u6709\u76ee\u5f55\uff0c\u8fd9\u5c06\u662f\u610f\u89c1\u591a\u4e48\u53ef\u6015\u7684\u4e8b\u60c5\uff01\u6211\u4eec\u4f30\u8ba1\u5f97\u4e00\u7bc7\u4e00\u7bc7\u7684\u7ffb\u4e0b\u53bb\uff0c\u624d\u80fd\u786e\u5b9a\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u5230\u5e95\u5728\u4ec0\u4e48\u4f4d\u7f6e\u3002\u521b\u5efa\u7d22\u5f15\u867d\u7136\u4f1a\u5e26\u6765\u5b58\u50a8\u7a7a\u95f4\u4e0a\u7684\u5f00\u9500\uff0c\u5c31\u50cf\u4e00\u672c\u4e66\u7684\u76ee\u5f55\u4f1a\u5360\u7528\u4e00\u90e8\u5206\u7bc7\u5e45\u4e00\u6837\uff0c\u4f46\u662f\u5728\u727a\u7272\u7a7a\u95f4\u540e\u6362\u6765\u7684\u67e5\u8be2\u65f6\u95f4\u7684\u51cf\u5c11\u4e5f\u662f\u975e\u5e38\u663e\u8457\u7684\u3002 MySQL \u6570\u636e\u5e93\u4e2d\u6240\u6709\u6570\u636e\u7c7b\u578b\u7684\u5217\u90fd\u53ef\u4ee5\u88ab\u7d22\u5f15\u3002\u5bf9\u4e8eMySQL 8.0 \u7248\u672c\u7684 InnoDB \u5b58\u50a8\u5f15\u64ce\u6765\u8bf4\uff0c\u5b83\u652f\u6301\u4e09\u79cd\u7c7b\u578b\u7684\u7d22\u5f15\uff0c\u5206\u522b\u662f B+ \u6811\u7d22\u5f15\u3001\u5168\u6587\u7d22\u5f15\u548c R \u6811\u7d22\u5f15\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u4ecb\u7ecd\u4f7f\u7528\u5f97\u6700\u4e3a\u5e7f\u6cdb\u7684 B+ \u6811\u7d22\u5f15\u3002\u4f7f\u7528 B+ \u6811\u7684\u539f\u56e0\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u662f\u76ee\u524d\u5728\u57fa\u4e8e\u78c1\u76d8\u8fdb\u884c\u6d77\u91cf\u6570\u636e\u5b58\u50a8\u548c\u6392\u5e8f\u4e0a\u6700\u6709\u6548\u7387\u7684\u6570\u636e\u7ed3\u6784\u3002B+ \u6811\u662f\u4e00\u68f5 \u5e73\u8861\u6811 \uff0c\u6811\u7684\u9ad8\u5ea6\u901a\u5e38\u4e3a3\u62164\uff0c\u4f46\u662f\u5374\u53ef\u4ee5\u4fdd\u5b58\u4ece\u767e\u4e07\u7ea7\u5230\u5341\u4ebf\u7ea7\u7684\u6570\u636e\uff0c\u800c\u4ece\u8fd9\u4e9b\u6570\u636e\u91cc\u9762\u67e5\u8be2\u4e00\u6761\u6570\u636e\uff0c\u53ea\u9700\u89813\u6b21\u62164\u6b21 I/O \u64cd\u4f5c\u3002 B+ \u6811\u7531\u6839\u8282\u70b9\u3001\u4e2d\u95f4\u8282\u70b9\u548c\u53f6\u5b50\u8282\u70b9\u6784\u6210\uff0c\u5176\u4e2d\u53f6\u5b50\u8282\u70b9\u7528\u6765\u4fdd\u5b58\u6392\u5e8f\u540e\u7684\u6570\u636e\u3002\u7531\u4e8e\u8bb0\u5f55\u5728\u7d22\u5f15\u4e0a\u662f\u6392\u5e8f\u8fc7\u7684\uff0c\u56e0\u6b64\u5728\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5185\u67e5\u627e\u6570\u636e\u65f6\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\uff0c\u8fd9\u79cd\u67e5\u627e\u65b9\u5f0f\u6548\u7387\u975e\u5e38\u7684\u9ad8\u3002\u5f53\u6570\u636e\u5f88\u5c11\u7684\u65f6\u5019\uff0cB+ \u6811\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u6570\u636e\u4e5f\u5c31\u4fdd\u5b58\u5728\u6839\u8282\u70b9\u4e0a\u3002\u968f\u7740\u8bb0\u5f55\u8d8a\u6765\u8d8a\u591a\uff0cB+ \u6811\u4f1a\u53d1\u751f\u5206\u88c2\uff0c\u6839\u8282\u70b9\u4e0d\u518d\u4fdd\u5b58\u6570\u636e\uff0c\u800c\u662f\u63d0\u4f9b\u4e86\u8bbf\u95ee\u4e0b\u4e00\u5c42\u8282\u70b9\u7684\u6307\u9488\uff0c\u5e2e\u52a9\u5feb\u901f\u786e\u5b9a\u6570\u636e\u5728\u54ea\u4e2a\u53f6\u5b50\u8282\u70b9\u4e0a\u3002 \u5728\u521b\u5efa\u4e8c\u7ef4\u8868\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u90fd\u4f1a\u4e3a\u8868\u6307\u5b9a\u4e3b\u952e\u5217\uff0c\u4e3b\u952e\u5217\u4e0a\u9ed8\u8ba4\u4f1a\u521b\u5efa\u7d22\u5f15\uff0c\u800c\u5bf9\u4e8e MySQL InnoDB \u5b58\u50a8\u5f15\u64ce\u6765\u8bf4\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u7684\u662f\u7d22\u5f15\u7ec4\u7ec7\u8868\u8fd9\u79cd\u6570\u636e\u5b58\u50a8\u7ed3\u6784\uff0c\u6240\u4ee5\u4e3b\u952e\u4e0a\u7684\u7d22\u5f15\u5c31\u662f\u6574\u5f20\u8868\u7684\u6570\u636e\uff0c\u800c\u8fd9\u79cd\u7d22\u5f15\u6211\u4eec\u4e5f\u5c06\u5176\u79f0\u4e4b\u4e3a \u805a\u96c6\u7d22\u5f15 \uff08clustered index\uff09\u3002\u5f88\u663e\u7136\uff0c\u4e00\u5f20\u8868\u53ea\u80fd\u6709\u4e00\u4e2a\u805a\u96c6\u7d22\u5f15\uff0c\u5426\u5219\u8868\u7684\u6570\u636e\u5c82\u4e0d\u662f\u8981\u4fdd\u5b58\u591a\u6b21\u3002\u6211\u4eec\u81ea\u5df1\u521b\u5efa\u7684\u7d22\u5f15\u90fd\u662f\u4e8c\u7ea7\u7d22\u5f15\uff08secondary index\uff09\uff0c\u66f4\u5e38\u89c1\u7684\u53eb\u6cd5\u662f \u975e\u805a\u96c6\u7d22\u5f15 \uff08non-clustered index\uff09\u3002\u901a\u8fc7\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u975e\u805a\u96c6\u7d22\u5f15\u53ea\u80fd\u5b9a\u4f4d\u8bb0\u5f55\u7684\u4e3b\u952e\uff0c\u5728\u83b7\u53d6\u6570\u636e\u65f6\u53ef\u80fd\u9700\u8981\u518d\u901a\u8fc7\u4e3b\u952e\u4e0a\u7684\u805a\u96c6\u7d22\u5f15\u8fdb\u884c\u67e5\u8be2\uff0c\u8fd9\u79cd\u73b0\u8c61\u79f0\u4e3a\u201c\u56de\u8868\u201d\uff0c\u56e0\u6b64\u901a\u8fc7\u975e\u805a\u96c6\u7d22\u5f15\u68c0\u7d22\u6570\u636e\u901a\u5e38\u6bd4\u4f7f\u7528\u805a\u96c6\u7d22\u5f15\u68c0\u7d22\u6570\u636e\u8981\u6162\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u7d22\u5f15\u7684\u610f\u4e49\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u6839\u636e\u5b66\u751f\u7684\u59d3\u540d\u6765\u67e5\u627e\u5b66\u751f\uff0c\u8fd9\u4e2a\u573a\u666f\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u5e94\u8be5\u7ecf\u5e38\u9047\u5230\uff0c\u5c31\u8ddf\u901a\u8fc7\u5546\u54c1\u540d\u79f0\u67e5\u627e\u5546\u54c1\u662f\u4e00\u4e2a\u9053\u7406\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 MySQL \u7684 explain \u5173\u952e\u5b57\u6765\u67e5\u770b SQL \u7684\u6267\u884c\u8ba1\u5212\uff08\u6570\u636e\u5e93\u6267\u884c SQL \u8bed\u53e5\u7684\u5177\u4f53\u6b65\u9aa4\uff09\u3002 explain select * from tb_student where stuname = '\u6797\u9707\u5357' \\ G *************************** 1. row *************************** id: 1 select_type: SIMPLE table: tb_student partitions: NULL type: ALL possible_keys: NULL key: NULL key_len: NULL ref: NULL rows: 11 filtered: 10.00 Extra: Using where 1 row in set, 1 warning (0.00 sec) \u5728\u4e0a\u9762\u7684 SQL \u6267\u884c\u8ba1\u5212\u4e2d\uff0c\u6709\u51e0\u9879\u503c\u5f97\u6211\u4eec\u5173\u6ce8\uff1a select_type \uff1a\u67e5\u8be2\u7684\u7c7b\u578b\u3002 SIMPLE \uff1a\u7b80\u5355 SELECT\uff0c\u4e0d\u9700\u8981\u4f7f\u7528 UNION \u64cd\u4f5c\u6216\u5b50\u67e5\u8be2\u3002 PRIMARY \uff1a\u5982\u679c\u67e5\u8be2\u5305\u542b\u5b50\u67e5\u8be2\uff0c\u6700\u5916\u5c42\u7684 SELECT \u88ab\u6807\u8bb0\u4e3a PRIMARY\u3002 UNION \uff1aUNION \u64cd\u4f5c\u4e2d\u7b2c\u4e8c\u4e2a\u6216\u540e\u9762\u7684 SELECT \u8bed\u53e5\u3002 SUBQUERY \uff1a\u5b50\u67e5\u8be2\u4e2d\u7684\u7b2c\u4e00\u4e2a SELECT\u3002 DERIVED \uff1a\u6d3e\u751f\u8868\u7684 SELECT \u5b50\u67e5\u8be2\u3002 table \uff1a\u67e5\u8be2\u5bf9\u5e94\u7684\u8868\u3002 type \uff1aMySQL \u5728\u8868\u4e2d\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u884c\u7684\u65b9\u5f0f\uff0c\u4e5f\u79f0\u4e3a\u8bbf\u95ee\u7c7b\u578b\uff0c\u5305\u62ec\uff1a ALL \uff08\u5168\u8868\u626b\u63cf\uff09\u3001 index \uff08\u7d22\u5f15\u5168\u626b\u63cf\uff0c\u53ea\u904d\u5386\u7d22\u5f15\u6811\uff09\u3001 range \uff08\u7d22\u5f15\u8303\u56f4\u626b\u63cf\uff09\u3001 ref \uff08\u975e\u552f\u4e00\u7d22\u5f15\u626b\u63cf\uff09\u3001 eq_ref \uff08\u552f\u4e00\u7d22\u5f15\u626b\u63cf\uff09\u3001 const / system \uff08\u5e38\u91cf\u7ea7\u67e5\u8be2\uff09\u3001 NULL \uff08\u4e0d\u9700\u8981\u8bbf\u95ee\u8868\u6216\u7d22\u5f15\uff09\u3002\u5728\u6240\u6709\u7684\u8bbf\u95ee\u7c7b\u578b\u4e2d\uff0c\u5f88\u663e\u7136 ALL \u662f\u6027\u80fd\u6700\u5dee\u7684\uff0c\u5b83\u4ee3\u8868\u7684\u5168\u8868\u626b\u63cf\u662f\u6307\u8981\u626b\u63cf\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\u624d\u80fd\u627e\u5230\u5339\u914d\u7684\u884c\u3002 possible_keys \uff1aMySQL \u53ef\u4ee5\u9009\u62e9\u7684\u7d22\u5f15\uff0c\u4f46\u662f \u6709\u53ef\u80fd\u4e0d\u4f1a\u4f7f\u7528 \u3002 key \uff1aMySQL \u771f\u6b63\u4f7f\u7528\u7684\u7d22\u5f15\uff0c\u5982\u679c\u4e3a NULL \u5c31\u8868\u793a\u6ca1\u6709\u4f7f\u7528\u7d22\u5f15\u3002 key_len \uff1a\u4f7f\u7528\u7684\u7d22\u5f15\u7684\u957f\u5ea6\uff0c\u5728\u4e0d\u5f71\u54cd\u67e5\u8be2\u7684\u60c5\u51b5\u4e0b\u80af\u5b9a\u662f\u957f\u5ea6\u8d8a\u77ed\u8d8a\u597d\u3002 rows \uff1a\u6267\u884c\u67e5\u8be2\u9700\u8981\u626b\u63cf\u7684\u884c\u6570\uff0c\u8fd9\u662f\u4e00\u4e2a \u9884\u4f30\u503c \u3002 extra \uff1a\u5173\u4e8e\u67e5\u8be2\u989d\u5916\u7684\u4fe1\u606f\u3002 Using filesort \uff1aMySQL \u65e0\u6cd5\u5229\u7528\u7d22\u5f15\u5b8c\u6210\u6392\u5e8f\u64cd\u4f5c\u3002 Using index \uff1a\u53ea\u4f7f\u7528\u7d22\u5f15\u7684\u4fe1\u606f\u800c\u4e0d\u9700\u8981\u8fdb\u4e00\u6b65\u67e5\u8868\u6765\u83b7\u53d6\u66f4\u591a\u7684\u4fe1\u606f\u3002 Using temporary \uff1aMySQL \u9700\u8981\u4f7f\u7528\u4e34\u65f6\u8868\u6765\u5b58\u50a8\u7ed3\u679c\u96c6\uff0c\u5e38\u7528\u4e8e\u5206\u7ec4\u548c\u6392\u5e8f\u3002 Impossible where \uff1a where \u5b50\u53e5\u4f1a\u5bfc\u81f4\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684\u884c\u3002 Distinct \uff1aMySQL \u53d1\u73b0\u7b2c\u4e00\u4e2a\u5339\u914d\u884c\u540e\uff0c\u505c\u6b62\u4e3a\u5f53\u524d\u7684\u884c\u7ec4\u5408\u641c\u7d22\u66f4\u591a\u7684\u884c\u3002 Using where \uff1a\u67e5\u8be2\u7684\u5217\u672a\u88ab\u7d22\u5f15\u8986\u76d6\uff0c\u7b5b\u9009\u6761\u4ef6\u5e76\u4e0d\u662f\u7d22\u5f15\u7684\u524d\u5bfc\u5217\u3002 \u4ece\u4e0a\u9762\u7684\u6267\u884c\u8ba1\u5212\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u6211\u4eec\u901a\u8fc7\u5b66\u751f\u540d\u5b57\u67e5\u8be2\u5b66\u751f\u65f6\u5b9e\u9645\u4e0a\u662f\u8fdb\u884c\u4e86\u5168\u8868\u626b\u63cf\uff0c\u4e0d\u8a00\u800c\u55bb\u8fd9\u4e2a\u67e5\u8be2\u6027\u80fd\u80af\u5b9a\u662f\u975e\u5e38\u7cdf\u7cd5\u7684\uff0c\u5c24\u5176\u662f\u5728\u8868\u4e2d\u7684\u884c\u5f88\u591a\u7684\u65f6\u5019\u3002\u5982\u679c\u6211\u4eec\u9700\u8981\u7ecf\u5e38\u901a\u8fc7\u5b66\u751f\u59d3\u540d\u6765\u67e5\u8be2\u5b66\u751f\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u5728\u5b66\u751f\u59d3\u540d\u5bf9\u5e94\u7684\u5217\u4e0a\u521b\u5efa\u7d22\u5f15\uff0c\u901a\u8fc7\u7d22\u5f15\u6765\u52a0\u901f\u67e5\u8be2\u3002 create index idx_student_name on tb_student ( stuname ); \u518d\u6b21\u67e5\u770b\u521a\u624d\u7684 SQL \u5bf9\u5e94\u7684\u6267\u884c\u8ba1\u5212\u3002 explain select * from tb_student where stuname = '\u6797\u9707\u5357' \\ G *************************** 1. row *************************** id: 1 select_type: SIMPLE table: tb_student partitions: NULL type: ref possible_keys: idx_student_name key: idx_student_name key_len: 62 ref: const rows: 1 filtered: 100.00 Extra: NULL 1 row in set, 1 warning (0.00 sec) \u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5728\u5bf9\u5b66\u751f\u59d3\u540d\u521b\u5efa\u7d22\u5f15\u540e\uff0c\u521a\u624d\u7684\u67e5\u8be2\u5df2\u7ecf\u4e0d\u662f\u5168\u8868\u626b\u63cf\u800c\u662f\u57fa\u4e8e\u7d22\u5f15\u7684\u67e5\u8be2\uff0c\u800c\u4e14\u626b\u63cf\u7684\u884c\u53ea\u6709\u552f\u4e00\u7684\u4e00\u884c\uff0c\u8fd9\u663e\u7136\u5927\u5927\u7684\u63d0\u5347\u4e86\u67e5\u8be2\u7684\u6027\u80fd\u3002MySQL \u4e2d\u8fd8\u5141\u8bb8\u521b\u5efa\u524d\u7f00\u7d22\u5f15\uff0c\u5373\u5bf9\u7d22\u5f15\u5b57\u6bb5\u7684\u524dN\u4e2a\u5b57\u7b26\u521b\u5efa\u7d22\u5f15\uff0c\u8fd9\u6837\u7684\u8bdd\u53ef\u4ee5\u51cf\u5c11\u7d22\u5f15\u5360\u7528\u7684\u7a7a\u95f4\uff08\u4f46\u8282\u7701\u4e86\u7a7a\u95f4\u5f88\u6709\u53ef\u80fd\u4f1a\u6d6a\u8d39\u65f6\u95f4\uff0c \u65f6\u95f4\u548c\u7a7a\u95f4\u662f\u4e0d\u53ef\u8c03\u548c\u7684\u77db\u76fe \uff09\uff0c\u5982\u4e0b\u6240\u793a\u3002 create index idx_student_name_1 on tb_student ( stuname ( 1 )); \u4e0a\u9762\u7684\u7d22\u5f15\u76f8\u5f53\u4e8e\u662f\u6839\u636e\u5b66\u751f\u59d3\u540d\u7684\u7b2c\u4e00\u4e2a\u5b57\u6765\u521b\u5efa\u7684\u7d22\u5f15\uff0c\u6211\u4eec\u518d\u770b\u770b SQL \u6267\u884c\u8ba1\u5212\u3002 explain select * from tb_student where stuname = '\u6797\u9707\u5357' \\ G *************************** 1. row *************************** id: 1 select_type: SIMPLE table: tb_student partitions: NULL type: ref possible_keys: idx_student_name key: idx_student_name key_len: 5 ref: const rows: 2 filtered: 100.00 Extra: Using where 1 row in set, 1 warning (0.00 sec) \u4e0d\u77e5\u9053\u5927\u5bb6\u662f\u5426\u6ce8\u610f\u5230\uff0c\u8fd9\u4e00\u6b21\u626b\u63cf\u7684\u884c\u53d8\u6210\u4e862\u884c\uff0c\u56e0\u4e3a\u5b66\u751f\u8868\u4e2d\u6709\u4e24\u4e2a\u59d3\u201c\u6797\u201d\u7684\u5b66\u751f\uff0c\u6211\u4eec\u53ea\u7528\u59d3\u540d\u7684\u7b2c\u4e00\u4e2a\u5b57\u4f5c\u4e3a\u7d22\u5f15\u7684\u8bdd\uff0c\u5728\u67e5\u8be2\u65f6\u901a\u8fc7\u7d22\u5f15\u5c31\u4f1a\u627e\u5230\u8fd9\u4e24\u884c\u3002 \u5982\u679c\u8981\u5220\u9664\u7d22\u5f15\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684SQL\u3002 alter table tb_student drop index idx_student_name ; \u6216\u8005 drop index idx_student_name on tb_student ; \u5728\u521b\u5efa\u7d22\u5f15\u65f6\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u590d\u5408\u7d22\u5f15\u3001\u51fd\u6570\u7d22\u5f15\uff08MySQL 5.7 \u5f00\u59cb\u652f\u6301\uff09\uff0c\u7528\u597d\u590d\u5408\u7d22\u5f15\u5b9e\u73b0 \u7d22\u5f15\u8986\u76d6 \u53ef\u4ee5\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u6392\u5e8f\u548c\u56de\u8868\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31\u4f1a\u8ba9\u67e5\u8be2\u7684\u6027\u80fd\u6210\u500d\u7684\u63d0\u5347\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002 \u6211\u4eec\u7b80\u5355\u7684\u4e3a\u5927\u5bb6\u603b\u7ed3\u4e00\u4e0b\u7d22\u5f15\u7684\u8bbe\u8ba1\u539f\u5219\uff1a \u6700\u9002\u5408 \u7d22\u5f15\u7684\u5217\u662f\u51fa\u73b0\u5728 WHERE\u5b50\u53e5 \u548c\u8fde\u63a5\u5b50\u53e5\u4e2d\u7684\u5217\u3002 \u7d22\u5f15\u5217\u7684\u57fa\u6570\u8d8a\u5927\uff08\u53d6\u503c\u591a\u3001\u91cd\u590d\u503c\u5c11\uff09\uff0c\u7d22\u5f15\u7684\u6548\u679c\u5c31\u8d8a\u597d\u3002 \u4f7f\u7528 \u524d\u7f00\u7d22\u5f15 \u53ef\u4ee5\u51cf\u5c11\u7d22\u5f15\u5360\u7528\u7684\u7a7a\u95f4\uff0c\u5185\u5b58\u4e2d\u53ef\u4ee5\u7f13\u5b58\u66f4\u591a\u7684\u7d22\u5f15\u3002 \u7d22\u5f15\u4e0d\u662f\u8d8a\u591a\u8d8a\u597d \uff0c\u867d\u7136\u7d22\u5f15\u52a0\u901f\u4e86\u8bfb\u64cd\u4f5c\uff08\u67e5\u8be2\uff09\uff0c\u4f46\u662f\u5199\u64cd\u4f5c\uff08\u589e\u3001\u5220\u3001\u6539\uff09\u90fd\u4f1a\u53d8\u5f97\u66f4\u6162\uff0c\u56e0\u4e3a\u6570\u636e\u7684\u53d8\u5316\u4f1a\u5bfc\u81f4\u7d22\u5f15\u7684\u66f4\u65b0\uff0c\u5c31\u5982\u540c\u4e66\u7c4d\u7ae0\u8282\u7684\u589e\u5220\u9700\u8981\u66f4\u65b0\u76ee\u5f55\u4e00\u6837\u3002 \u4f7f\u7528 InnoDB \u5b58\u50a8\u5f15\u64ce\u65f6\uff0c\u8868\u7684\u666e\u901a\u7d22\u5f15\u90fd\u4f1a\u4fdd\u5b58\u4e3b\u952e\u7684\u503c\uff0c\u6240\u4ee5 \u4e3b\u952e\u8981\u5c3d\u53ef\u80fd\u9009\u62e9\u8f83\u77ed\u7684\u6570\u636e\u7c7b\u578b \uff0c\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u7684\u51cf\u5c11\u7d22\u5f15\u5360\u7528\u7684\u7a7a\u95f4\uff0c\u63d0\u5347\u7d22\u5f15\u7684\u7f13\u5b58\u6548\u679c\u3002 \u6700\u540e\uff0c\u8fd8\u6709\u4e00\u70b9\u9700\u8981\u8bf4\u660e\uff0cInnoDB \u4f7f\u7528\u7684 B-tree \u7d22\u5f15\uff0c\u6570\u503c\u7c7b\u578b\u7684\u5217\u9664\u4e86\u7b49\u503c\u5224\u65ad\u65f6\u7d22\u5f15\u4f1a\u751f\u6548\u4e4b\u5916\uff0c\u4f7f\u7528 > \u3001 < \u3001 >= \u3001 <= \u3001 BETWEEN...AND... \u3001 <> \u65f6\uff0c\u7d22\u5f15\u4ecd\u7136\u751f\u6548\uff1b\u5bf9\u4e8e\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5217\uff0c\u5982\u679c\u4f7f\u7528\u4e0d\u4ee5\u901a\u914d\u7b26\u5f00\u5934\u7684\u6a21\u7cca\u67e5\u8be2\uff0c\u7d22\u5f15\u4e5f\u662f\u8d77\u4f5c\u7528\u7684\uff0c\u4f46\u662f\u5176\u4ed6\u7684\u60c5\u51b5\u4f1a\u5bfc\u81f4\u7d22\u5f15\u5931\u6548\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5f88\u6709\u53ef\u80fd\u4f1a\u505a\u5168\u8868\u67e5\u8be2\u3002","title":"\u7d22\u5f15"},{"location":"%E7%AC%AC46%E8%AF%BE.%E8%A7%86%E5%9B%BE%2B%E5%87%BD%E6%95%B0%2B%E8%BF%87%E7%A8%8B/","text":"\u89c6\u56fe\u3001\u51fd\u6570\u548c\u8fc7\u7a0b \u4e3a\u4e86\u8bb2\u89e3\u89c6\u56fe\u3001\u51fd\u6570\u548c\u8fc7\u7a0b\uff0c\u6211\u4eec\u9996\u5148\u7528\u4e0b\u9762\u7684 DDL \u548c DML \u521b\u5efa\u540d\u4e3a hrs \u7684\u6570\u636e\u5e93\u5e76\u4e3a\u5176\u4e8c\u7ef4\u8868\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u7684\u6570\u636e\u3002 -- \u521b\u5efa\u540d\u4e3ahrs\u7684\u6570\u636e\u5e93\u5e76\u6307\u5b9a\u9ed8\u8ba4\u7684\u5b57\u7b26\u96c6 create database ` hrs ` default charset utf8mb4 ; -- \u5207\u6362\u5230hrs\u6570\u636e\u5e93 use ` hrs ` ; -- \u521b\u5efa\u90e8\u95e8\u8868 create table ` tb_dept ` ( ` dno ` int not null comment '\u7f16\u53f7' , ` dname ` varchar ( 10 ) not null comment '\u540d\u79f0' , ` dloc ` varchar ( 20 ) not null comment '\u6240\u5728\u5730' , primary key ( ` dno ` ) ); -- \u63d2\u51654\u4e2a\u90e8\u95e8 insert into ` tb_dept ` values ( 10 , '\u4f1a\u8ba1\u90e8' , '\u5317\u4eac' ), ( 20 , '\u7814\u53d1\u90e8' , '\u6210\u90fd' ), ( 30 , '\u9500\u552e\u90e8' , '\u91cd\u5e86' ), ( 40 , '\u8fd0\u7ef4\u90e8' , '\u6df1\u5733' ); -- \u521b\u5efa\u5458\u5de5\u8868 create table ` tb_emp ` ( ` eno ` int not null comment '\u5458\u5de5\u7f16\u53f7' , ` ename ` varchar ( 20 ) not null comment '\u5458\u5de5\u59d3\u540d' , ` job ` varchar ( 20 ) not null comment '\u5458\u5de5\u804c\u4f4d' , ` mgr ` int comment '\u4e3b\u7ba1\u7f16\u53f7' , ` sal ` int not null comment '\u5458\u5de5\u6708\u85aa' , ` comm ` int comment '\u6bcf\u6708\u8865\u8d34' , ` dno ` int not null comment '\u6240\u5728\u90e8\u95e8\u7f16\u53f7' , primary key ( ` eno ` ), constraint ` fk_emp_mgr ` foreign key ( ` mgr ` ) references tb_emp ( ` eno ` ), constraint ` fk_emp_dno ` foreign key ( ` dno ` ) references tb_dept ( ` dno ` ) ); -- \u63d2\u516514\u4e2a\u5458\u5de5 insert into ` tb_emp ` values ( 7800 , '\u5f20\u4e09\u4e30' , '\u603b\u88c1' , null , 9000 , 1200 , 20 ), ( 2056 , '\u4e54\u5cf0' , '\u5206\u6790\u5e08' , 7800 , 5000 , 1500 , 20 ), ( 3088 , '\u674e\u83ab\u6101' , '\u8bbe\u8ba1\u5e08' , 2056 , 3500 , 800 , 20 ), ( 3211 , '\u5f20\u65e0\u5fcc' , '\u7a0b\u5e8f\u5458' , 2056 , 3200 , null , 20 ), ( 3233 , '\u4e18\u5904\u673a' , '\u7a0b\u5e8f\u5458' , 2056 , 3400 , null , 20 ), ( 3251 , '\u5f20\u7fe0\u5c71' , '\u7a0b\u5e8f\u5458' , 2056 , 4000 , null , 20 ), ( 5566 , '\u5b8b\u8fdc\u6865' , '\u4f1a\u8ba1\u5e08' , 7800 , 4000 , 1000 , 10 ), ( 5234 , '\u90ed\u9756' , '\u51fa\u7eb3' , 5566 , 2000 , null , 10 ), ( 3344 , '\u9ec4\u84c9' , '\u9500\u552e\u4e3b\u7ba1' , 7800 , 3000 , 800 , 30 ), ( 1359 , '\u80e1\u4e00\u5200' , '\u9500\u552e\u5458' , 3344 , 1800 , 200 , 30 ), ( 4466 , '\u82d7\u4eba\u51e4' , '\u9500\u552e\u5458' , 3344 , 2500 , null , 30 ), ( 3244 , '\u6b27\u9633\u950b' , '\u7a0b\u5e8f\u5458' , 3088 , 3200 , null , 20 ), ( 3577 , '\u6768\u8fc7' , '\u4f1a\u8ba1' , 5566 , 2200 , null , 10 ), ( 3588 , '\u6731\u4e5d\u771f' , '\u4f1a\u8ba1' , 5566 , 2500 , null , 10 ); \u89c6\u56fe \u89c6\u56fe\u662f\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u5c06\u4e00\u7ec4\u67e5\u8be2\u6307\u4ee4\u6784\u6210\u7684\u7ed3\u679c\u96c6\u7ec4\u5408\u6210\u53ef\u67e5\u8be2\u7684\u6570\u636e\u8868\u7684\u5bf9\u8c61\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u89c6\u56fe\u5c31\u662f\u865a\u62df\u7684\u8868\uff0c\u4f46\u4e0e\u6570\u636e\u8868\u4e0d\u540c\u7684\u662f\uff0c\u6570\u636e\u8868\u662f\u4e00\u79cd\u5b9e\u4f53\u7ed3\u6784\uff0c\u800c\u89c6\u56fe\u662f\u4e00\u79cd\u865a\u62df\u7ed3\u6784\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c06\u89c6\u56fe\u7406\u89e3\u4e3a\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d\u88ab\u8d4b\u4e88\u540d\u5b57\u7684 SQL \u8bed\u53e5\u3002 \u4f7f\u7528\u89c6\u56fe\u53ef\u4ee5\u83b7\u5f97\u4ee5\u4e0b\u597d\u5904\uff1a \u53ef\u4ee5\u5c06\u5b9e\u4f53\u6570\u636e\u8868\u9690\u85cf\u8d77\u6765\uff0c\u8ba9\u5916\u90e8\u7a0b\u5e8f\u65e0\u6cd5\u5f97\u77e5\u5b9e\u9645\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8ba9\u8bbf\u95ee\u8005\u53ef\u4ee5\u4f7f\u7528\u8868\u7684\u7ec4\u6210\u90e8\u5206\u800c\u4e0d\u662f\u6574\u4e2a\u8868\uff0c\u964d\u4f4e\u6570\u636e\u5e93\u88ab\u653b\u51fb\u7684\u98ce\u9669\u3002 \u5728\u5927\u591a\u6570\u7684\u60c5\u51b5\u4e0b\u89c6\u56fe\u662f\u53ea\u8bfb\u7684\uff08\u66f4\u65b0\u89c6\u56fe\u7684\u64cd\u4f5c\u901a\u5e38\u90fd\u6709\u8bf8\u591a\u7684\u9650\u5236\uff09\uff0c\u5916\u90e8\u7a0b\u5e8f\u65e0\u6cd5\u76f4\u63a5\u900f\u8fc7\u89c6\u56fe\u4fee\u6539\u6570\u636e\u3002 \u91cd\u7528 SQL \u8bed\u53e5\uff0c\u5c06\u9ad8\u5ea6\u590d\u6742\u7684\u67e5\u8be2\u5305\u88c5\u5728\u89c6\u56fe\u8868\u4e2d\uff0c\u76f4\u63a5\u8bbf\u95ee\u8be5\u89c6\u56fe\u5373\u53ef\u53d6\u51fa\u9700\u8981\u7684\u6570\u636e\uff1b\u4e5f\u53ef\u4ee5\u5c06\u89c6\u56fe\u89c6\u4e3a\u6570\u636e\u8868\u8fdb\u884c\u8fde\u63a5\u67e5\u8be2\u3002 \u89c6\u56fe\u53ef\u4ee5\u8fd4\u56de\u4e0e\u5b9e\u4f53\u6570\u636e\u8868\u4e0d\u540c\u683c\u5f0f\u7684\u6570\u636e\uff0c\u5728\u521b\u5efa\u89c6\u56fe\u7684\u65f6\u5019\u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u683c\u5f0f\u5316\u5904\u7406\u3002 \u521b\u5efa\u89c6\u56fe\u3002 create view ` vw_emp_simple ` as select ` eno ` , ` ename ` , ` job ` , ` dno ` from ` tb_emp ` ; \u63d0\u793a \uff1a\u56e0\u4e3a\u89c6\u56fe\u4e0d\u5305\u542b\u6570\u636e\uff0c\u6240\u4ee5\u6bcf\u6b21\u4f7f\u7528\u89c6\u56fe\u65f6\uff0c\u90fd\u5fc5\u987b\u6267\u884c\u67e5\u8be2\u4ee5\u83b7\u5f97\u6570\u636e\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u8fde\u63a5\u67e5\u8be2\u3001\u5d4c\u5957\u67e5\u8be2\u521b\u5efa\u4e86\u8f83\u4e3a\u590d\u6742\u7684\u89c6\u56fe\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u67e5\u8be2\u6027\u80fd\u4e0b\u964d\u5f97\u5f88\u5389\u5bb3\u3002\u56e0\u6b64\uff0c\u5728\u4f7f\u7528\u590d\u6742\u7684\u89c6\u56fe\u524d\uff0c\u5e94\u8be5\u8fdb\u884c\u6d4b\u8bd5\u4ee5\u786e\u4fdd\u5176\u6027\u80fd\u80fd\u591f\u6ee1\u8db3\u5e94\u7528\u7684\u9700\u6c42\u3002 \u6709\u4e86\u4e0a\u9762\u7684\u89c6\u56fe\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u8bb2\u8fc7\u7684 DCL\uff0c \u9650\u5236\u67d0\u4e9b\u7528\u6237\u53ea\u80fd\u4ece\u89c6\u56fe\u4e2d\u83b7\u53d6\u5458\u5de5\u4fe1\u606f\uff0c\u8fd9\u6837\u5458\u5de5\u8868\u4e2d\u7684\u5de5\u8d44\uff08 sal \uff09\u3001\u8865\u8d34\uff08 comm \uff09\u7b49\u654f\u611f\u5b57\u6bb5\u4fbf\u4e0d\u4f1a\u66b4\u9732\u7ed9\u7528\u6237\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4ece\u89c6\u56fe\u4e2d\u83b7\u53d6\u6570\u636e\u3002 select * from ` vw_emp_simple ` ; \u67e5\u8be2\u7ed3\u679c\uff1a +------+-----------+--------------+-----+ | eno | ename | job | dno | +------+-----------+--------------+-----+ | 1359 | \u80e1\u4e8c\u5200 | \u9500\u552e\u5458 | 30 | | 2056 | \u4e54\u5cf0 | \u5206\u6790\u5e08 | 20 | | 3088 | \u674e\u83ab\u6101 | \u8bbe\u8ba1\u5e08 | 20 | | 3211 | \u5f20\u65e0\u5fcc | \u7a0b\u5e8f\u5458 | 20 | | 3233 | \u4e18\u5904\u673a | \u7a0b\u5e8f\u5458 | 20 | | 3244 | \u6b27\u9633\u950b | \u7a0b\u5e8f\u5458 | 20 | | 3251 | \u5f20\u7fe0\u5c71 | \u7a0b\u5e8f\u5458 | 20 | | 3344 | \u9ec4\u84c9 | \u9500\u552e\u4e3b\u7ba1 | 30 | | 3577 | \u6768\u8fc7 | \u4f1a\u8ba1 | 10 | | 3588 | \u6731\u4e5d\u771f | \u4f1a\u8ba1 | 10 | | 4466 | \u82d7\u4eba\u51e4 | \u9500\u552e\u5458 | 30 | | 5234 | \u90ed\u9756 | \u51fa\u7eb3 | 10 | | 5566 | \u5b8b\u8fdc\u6865 | \u4f1a\u8ba1\u5e08 | 10 | | 7800 | \u5f20\u4e09\u4e30 | \u603b\u88c1 | 20 | +------+-----------+--------------+-----+ \u65e2\u7136\u89c6\u56fe\u662f\u4e00\u5f20\u865a\u62df\u7684\u8868\uff0c\u90a3\u4e48\u89c6\u56fe\u7684\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u66f4\u65b0\u5417\uff1f\u89c6\u56fe\u7684\u53ef\u66f4\u65b0\u6027\u8981\u89c6\u5177\u4f53\u60c5\u51b5\u800c\u5b9a\uff0c\u4ee5\u4e0b\u7c7b\u578b\u7684\u89c6\u56fe\u662f\u4e0d\u80fd\u66f4\u65b0\u7684\uff1a \u4f7f\u7528\u4e86\u805a\u5408\u51fd\u6570\uff08 SUM \u3001 MIN \u3001 MAX \u3001 AVG \u3001 COUNT \u7b49\uff09\u3001 DISTINCT \u3001 GROUP BY \u3001 HAVING \u3001 UNION \u6216\u8005 UNION ALL \u7684\u89c6\u56fe\u3002 SELECT \u4e2d\u5305\u542b\u4e86\u5b50\u67e5\u8be2\u7684\u89c6\u56fe\u3002 FROM \u5b50\u53e5\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u4e0d\u80fd\u66f4\u65b0\u7684\u89c6\u56fe\u7684\u89c6\u56fe\u3002 WHERE \u5b50\u53e5\u7684\u5b50\u67e5\u8be2\u5f15\u7528\u4e86 FROM \u5b50\u53e5\u4e2d\u7684\u8868\u7684\u89c6\u56fe\u3002 \u5220\u9664\u89c6\u56fe\u3002 drop view if exists ` vw_emp_simple ` ; \u8bf4\u660e \uff1a\u5982\u679c\u5e0c\u671b\u66f4\u65b0\u89c6\u56fe\uff0c\u53ef\u4ee5\u5148\u7528\u4e0a\u9762\u7684\u547d\u4ee4\u5220\u9664\u89c6\u56fe\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 create or replace view \u6765\u66f4\u65b0\u89c6\u56fe\u3002 \u89c6\u56fe\u7684\u89c4\u5219\u548c\u9650\u5236\u3002 \u89c6\u56fe\u53ef\u4ee5\u5d4c\u5957\uff0c\u53ef\u4ee5\u5229\u7528\u4ece\u5176\u4ed6\u89c6\u56fe\u4e2d\u68c0\u7d22\u7684\u6570\u636e\u6765\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u89c6\u56fe\u3002\u89c6\u56fe\u4e5f\u53ef\u4ee5\u548c\u8868\u4e00\u8d77\u4f7f\u7528\u3002 \u521b\u5efa\u89c6\u56fe\u65f6\u53ef\u4ee5\u4f7f\u7528 order by \u5b50\u53e5\uff0c\u4f46\u5982\u679c\u4ece\u89c6\u56fe\u4e2d\u68c0\u7d22\u6570\u636e\u65f6\u4e5f\u4f7f\u7528\u4e86 order by \uff0c\u90a3\u4e48\u8be5\u89c6\u56fe\u4e2d\u539f\u5148\u7684 order by \u4f1a\u88ab\u8986\u76d6\u3002 \u89c6\u56fe\u65e0\u6cd5\u4f7f\u7528\u7d22\u5f15\uff0c\u4e5f\u4e0d\u4f1a\u6fc0\u53d1\u89e6\u53d1\u5668\uff08\u5b9e\u9645\u5f00\u53d1\u4e2d\u56e0\u4e3a\u6027\u80fd\u7b49\u5404\u65b9\u9762\u7684\u8003\u8651\uff0c\u901a\u5e38\u4e0d\u5efa\u8bae\u4f7f\u7528\u89e6\u53d1\u5668\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u4e0d\u5bf9\u8fd9\u4e2a\u6982\u5ff5\u8fdb\u884c\u4ecb\u7ecd\uff09\u7684\u6267\u884c\u3002 \u51fd\u6570 MySQL \u4e2d\u7684\u51fd\u6570\u8ddf Python \u4e2d\u7684\u51fd\u6570\u5927\u540c\u5c0f\u5f02\uff0c\u56e0\u4e3a\u51fd\u6570\u90fd\u662f\u7528\u6765\u5c01\u88c5\u529f\u80fd\u4e0a\u76f8\u5bf9\u72ec\u7acb\u4e14\u4f1a\u88ab\u91cd\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u7684\u3002\u5982\u679c\u975e\u8981\u627e\u51fa\u4e00\u4e9b\u5dee\u522b\u6765\uff0c\u90a3\u4e48 MySQL \u4e2d\u7684\u51fd\u6570\u662f\u53ef\u4ee5\u6267\u884c SQL \u8bed\u53e5\u7684\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u901a\u8fc7\u81ea\u5b9a\u4e49\u51fd\u6570\u5b9e\u73b0\u4e86\u622a\u65ad\u8d85\u957f\u5b57\u7b26\u4e32\u7684\u529f\u80fd\u3002 delimiter $$ create function fn_truncate_string ( content varchar ( 10000 ), max_length int unsigned ) returns varchar ( 10000 ) no sql begin declare result varchar ( 10000 ) default content ; if char_length ( content ) > max_length then set result = left ( content , max_length ); set result = concat ( result , '\u2026\u2026' ); end if ; return result ; end $$ delimiter ; \u8bf4\u660e1 \uff1a\u51fd\u6570\u58f0\u660e\u540e\u9762\u7684 no sql \u662f\u58f0\u660e\u51fd\u6570\u4f53\u5e76\u6ca1\u6709\u4f7f\u7528 SQL \u8bed\u53e5\uff1b\u5982\u679c\u51fd\u6570\u4f53\u4e2d\u9700\u8981\u901a\u8fc7 SQL \u8bfb\u53d6\u6570\u636e\uff0c\u9700\u8981\u58f0\u660e\u4e3a reads sql data \u3002 \u8bf4\u660e2 \uff1a\u5b9a\u4e49\u51fd\u6570\u524d\u540e\u7684 delimiter \u547d\u4ee4\u662f\u4e3a\u4e86\u4fee\u6539\u7ec8\u6b62\u7b26\uff08\u5b9a\u754c\u7b26\uff09\uff0c\u56e0\u4e3a\u51fd\u6570\u4f53\u4e2d\u7684\u8bed\u53e5\u90fd\u662f\u7528 ; \u8868\u793a\u7ed3\u675f\uff0c\u5982\u679c\u4e0d\u91cd\u65b0\u5b9a\u4e49\u5b9a\u754c\u7b26\uff0c\u90a3\u4e48\u9047\u5230\u7684 ; \u7684\u65f6\u5019\u4ee3\u7801\u5c31\u4f1a\u88ab\u622a\u65ad\u6267\u884c\uff0c\u663e\u7136\u8fd9\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\u3002 \u5728\u67e5\u8be2\u4e2d\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u3002 select fn_truncate_string ( '\u548c\u6211\u5728\u6210\u90fd\u7684\u8857\u5934\u8d70\u4e00\u8d70\uff0c\u76f4\u5230\u6240\u6709\u7684\u706f\u90fd\u7184\u706d\u4e86\u4e5f\u4e0d\u505c\u7559' , 10 ) as short_string ; +--------------------------------------+ | short_string | +--------------------------------------+ | \u548c\u6211\u5728\u6210\u90fd\u7684\u8857\u5934\u8d70\u4e00\u2026\u2026 | +--------------------------------------+ \u8fc7\u7a0b \u8fc7\u7a0b\uff08\u53c8\u79f0\u5b58\u50a8\u8fc7\u7a0b\uff09\u662f\u4e8b\u5148\u7f16\u8bd1\u597d\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u7ec4 SQL \u7684\u96c6\u5408\uff0c\u8c03\u7528\u8fc7\u7a0b\u53ef\u4ee5\u7b80\u5316\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\uff0c\u51cf\u5c11\u4e0e\u6570\u636e\u5e93\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u5bf9\u4e8e\u63d0\u5347\u6570\u636e\u64cd\u4f5c\u7684\u6027\u80fd\u4e5f\u662f\u6709\u5e2e\u52a9\u7684\u3002\u5176\u5b9e\u8fc4\u4eca\u4e3a\u6b62\uff0c\u6211\u4eec\u4f7f\u7528\u7684 SQL \u8bed\u53e5\u90fd\u662f\u9488\u5bf9\u4e00\u4e2a\u6216\u591a\u4e2a\u8868\u7684\u5355\u6761\u8bed\u53e5\uff0c\u4f46\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u7ecf\u5e38\u4f1a\u9047\u5230\u67d0\u4e2a\u64cd\u4f5c\u9700\u8981\u591a\u6761 SQL \u8bed\u53e5\u624d\u80fd\u5b8c\u6210\u7684\u60c5\u51b5\u3002\u4f8b\u5982\uff0c\u7535\u5546\u7f51\u7ad9\u5728\u53d7\u7406\u7528\u6237\u8ba2\u5355\u65f6\uff0c\u9700\u8981\u505a\u4ee5\u4e0b\u4e00\u7cfb\u5217\u7684\u5904\u7406\u3002 \u901a\u8fc7\u67e5\u8be2\u6765\u6838\u5bf9\u5e93\u5b58\u4e2d\u662f\u5426\u6709\u5bf9\u5e94\u7684\u7269\u54c1\u4ee5\u53ca\u5e93\u5b58\u662f\u5426\u5145\u8db3\u3002 \u5982\u679c\u5e93\u5b58\u6709\u7269\u54c1\uff0c\u9700\u8981\u9501\u5b9a\u5e93\u5b58\u4ee5\u786e\u4fdd\u8fd9\u4e9b\u7269\u54c1\u4e0d\u518d\u5356\u7ed9\u522b\u4eba\uff0c \u5e76\u4e14\u8981\u51cf\u5c11\u53ef\u7528\u7684\u7269\u54c1\u6570\u91cf\u4ee5\u53cd\u6620\u6b63\u786e\u7684\u5e93\u5b58\u91cf\u3002 \u5982\u679c\u5e93\u5b58\u4e0d\u8db3\uff0c\u53ef\u80fd\u9700\u8981\u8fdb\u4e00\u6b65\u4e0e\u4f9b\u5e94\u5546\u8fdb\u884c\u4ea4\u4e92\u6216\u8005\u81f3\u5c11\u4ea7\u751f\u4e00\u6761\u7cfb\u7edf\u63d0\u793a\u6d88\u606f\u3002 \u4e0d\u7ba1\u53d7\u7406\u8ba2\u5355\u662f\u5426\u6210\u529f\uff0c\u90fd\u9700\u8981\u4ea7\u751f\u6d41\u6c34\u8bb0\u5f55\uff0c\u800c\u4e14\u9700\u8981\u7ed9\u5bf9\u5e94\u7684\u7528\u6237\u4ea7\u751f\u4e00\u6761\u901a\u77e5\u4fe1\u606f\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fc7\u7a0b\u5c06\u590d\u6742\u7684\u64cd\u4f5c\u5c01\u88c5\u8d77\u6765\uff0c\u8fd9\u6837\u4e0d\u4ec5\u6709\u52a9\u4e8e\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u800c\u4e14\u5c06\u6765\u5982\u679c\u4e1a\u52a1\u53d1\u751f\u4e86\u53d8\u52a8\uff0c\u53ea\u9700\u8981\u8c03\u6574\u548c\u4fee\u6539\u8fc7\u7a0b\u5373\u53ef\u3002\u5bf9\u4e8e\u8c03\u7528\u8fc7\u7a0b\u7684\u7528\u6237\u6765\u8bf4\uff0c\u8fc7\u7a0b\u5e76\u6ca1\u6709\u66b4\u9732\u6570\u636e\u8868\u7684\u7ec6\u8282\uff0c\u800c\u4e14\u6267\u884c\u8fc7\u7a0b\u6bd4\u4e00\u6761\u6761\u7684\u6267\u884c\u4e00\u7ec4 SQL \u8981\u5feb\u5f97\u591a\u3002 \u4e0b\u9762\u7684\u8fc7\u7a0b\u5b9e\u73b0 hrs \u6570\u636e\u5e93\u4e2d\u5458\u5de5\u5de5\u8d44\u7684\u666e\u8c03\uff0c\u5177\u4f53\u7684\u89c4\u5219\u662f\uff1a 10 \u90e8\u95e8\u7684\u5458\u5de5\u85aa\u8d44\u4e0a\u6d6e 300 \uff0c 20 \u90e8\u95e8\u7684\u5458\u5de5\u85aa\u8d44\u4e0a\u6d6e 800 \uff0c 30 \u90e8\u95e8\u7684\u5458\u5de5\u85aa\u8d44\u4e0a\u6d6e 500 \u3002 delimiter $$ create procedure sp_upgrade_salary () begin declare flag boolean default 1 ; -- \u5b9a\u4e49\u4e00\u4e2a\u5f02\u5e38\u5904\u7406\u5668 declare continue handler for sqlexception set flag = 0 ; -- \u5f00\u542f\u4e8b\u52a1\u73af\u5883 start transaction ; update tb_emp set sal = sal + 300 where dno = 10 ; update tb_emp set sal = sal + 800 where dno = 20 ; update tb_emp set sal = sal + 500 where dno = 30 ; -- \u63d0\u4ea4\u6216\u56de\u6eda\u4e8b\u52a1 if flag then commit ; else rollback ; end if ; end $$ delimiter ; \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u8fc7\u7a0b\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86 start transaction \u6765\u5f00\u542f\u4e8b\u52a1\u73af\u5883\uff0c\u5173\u4e8e\u4e8b\u52a1\uff0c\u5728\u672c\u8bfe\u7684\u6700\u540e\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u4ecb\u7ecd\u3002\u4e3a\u4e86\u786e\u5b9a\u4ee3\u7801\u4e2d\u662f\u5426\u53d1\u751f\u5f02\u5e38\uff0c\u4ece\u800c\u63d0\u4ea4\u6216\u56de\u6eda\u4e8b\u52a1\uff0c\u4e0a\u9762\u7684\u8fc7\u7a0b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a flag \u7684\u53d8\u91cf\u548c\u4e00\u4e2a\u5f02\u5e38\u5904\u7406\u5668\uff0c\u5982\u679c\u53d1\u751f\u4e86\u5f02\u5e38\uff0c flag \u5c06\u4f1a\u88ab\u8d4b\u503c\u4e3a 0 \uff0c\u540e\u9762\u7684\u5206\u652f\u7ed3\u6784\u4f1a\u6839\u636e flag \u7684\u503c\u6765\u51b3\u5b9a\u662f\u6267\u884c commit \uff0c\u8fd8\u662f\u6267\u884c rollback \u3002 \u8c03\u7528\u8fc7\u7a0b\u3002 call sp_upgrade_salary (); \u5220\u9664\u8fc7\u7a0b\u3002 drop procedure if exists sp_upgrade_salary ; \u5728\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u53d8\u91cf\u3001\u6761\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5206\u652f\u548c\u5faa\u73af\u8bed\u53e5\uff0c\u53ef\u4ee5\u901a\u8fc7\u6e38\u6807\u64cd\u4f5c\u67e5\u8be2\u7ed3\u679c\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e8b\u4ef6\u8c03\u5ea6\u5668\uff0c\u8fd9\u4e9b\u5185\u5bb9\u6211\u4eec\u6682\u65f6\u4e0d\u5728\u6b64\u5904\u8fdb\u884c\u4ecb\u7ecd\u3002\u867d\u7136\u6211\u4eec\u8bf4\u4e86\u5f88\u591a\u8fc7\u7a0b\u7684\u597d\u5904\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u9891\u7e41\u7684\u4f7f\u7528\u8fc7\u7a0b\u5e76\u5c06\u5927\u91cf\u590d\u6742\u7684\u8fd0\u7b97\u653e\u5230\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u7ed9\u636e\u5e93\u670d\u52a1\u5668\u9020\u6210\u5de8\u5927\u7684\u538b\u529b\uff0c\u800c\u6570\u636e\u5e93\u5f80\u5f80\u90fd\u662f\u6027\u80fd\u74f6\u9888\u6240\u5728\uff0c\u4f7f\u7528\u8fc7\u7a0b\u65e0\u7591\u662f\u96ea\u4e0a\u52a0\u971c\u7684\u64cd\u4f5c\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4e92\u8054\u7f51\u4ea7\u54c1\u5f00\u53d1\uff0c\u6211\u4eec\u4e00\u822c\u5efa\u8bae\u8ba9\u6570\u636e\u5e93\u53ea\u505a\u597d\u5b58\u50a8\uff0c\u590d\u6742\u7684\u8fd0\u7b97\u548c\u5904\u7406\u4ea4\u7ed9\u5e94\u7528\u670d\u52a1\u5668\u4e0a\u7684\u7a0b\u5e8f\u53bb\u5b8c\u6210\uff0c\u5982\u679c\u5e94\u7528\u670d\u52a1\u5668\u53d8\u5f97\u4e0d\u582a\u91cd\u8d1f\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u7684\u90e8\u7f72\u591a\u53f0\u5e94\u7528\u670d\u52a1\u5668\u6765\u5206\u644a\u8fd9\u4e9b\u538b\u529b\u3002 \u5982\u679c\u5927\u5bb6\u5bf9\u4e0a\u9762\u8bb2\u5230\u7684\u89c6\u56fe\u3001\u51fd\u6570\u3001\u8fc7\u7a0b\u5305\u62ec\u6211\u4eec\u6ca1\u6709\u8bb2\u5230\u7684\u89e6\u53d1\u5668\u8fd9\u4e9b\u77e5\u8bc6\u6709\u5174\u8da3\uff0c\u5efa\u8bae\u5927\u5bb6\u9605\u8bfb MySQL \u7684\u5165\u95e8\u8bfb\u7269 \u300aMySQL\u5fc5\u77e5\u5fc5\u4f1a\u300b \u8fdb\u884c\u4e00\u822c\u6027\u4e86\u89e3\u5373\u53ef\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u77e5\u8bc6\u70b9\u5728\u5927\u5bb6\u5c06\u6765\u7684\u5de5\u4f5c\u4e2d\u672a\u5fc5\u7528\u5f97\u4e0a\uff0c\u5b66\u4e86\u4e5f\u53ef\u80fd\u4ec5\u4ec5\u662f\u4e3a\u4e86\u5e94\u4ed8\u9762\u8bd5\u800c\u5df2\u3002 \u5176\u4ed6\u5185\u5bb9 \u8303\u5f0f\u7406\u8bba \u8303\u5f0f\u7406\u8bba\u662f\u8bbe\u8ba1\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u4e8c\u7ef4\u8868\u7684\u6307\u5bfc\u601d\u60f3\u3002 \u7b2c\u4e00\u8303\u5f0f\uff1a\u6570\u636e\u8868\u7684\u6bcf\u4e2a\u5217\u7684\u503c\u57df\u90fd\u662f\u7531\u539f\u5b50\u503c\u7ec4\u6210\u7684\uff0c\u4e0d\u80fd\u591f\u518d\u5206\u5272\u3002 \u7b2c\u4e8c\u8303\u5f0f\uff1a\u6570\u636e\u8868\u91cc\u7684\u6240\u6709\u6570\u636e\u90fd\u8981\u548c\u8be5\u6570\u636e\u8868\u7684\u952e\uff08\u4e3b\u952e\u4e0e\u5019\u9009\u952e\uff09\u6709\u5b8c\u5168\u4f9d\u8d56\u5173\u7cfb\u3002 \u7b2c\u4e09\u8303\u5f0f\uff1a\u6240\u6709\u975e\u952e\u5c5e\u6027\u90fd\u53ea\u548c\u5019\u9009\u952e\u6709\u76f8\u5173\u6027\uff0c\u4e5f\u5c31\u662f\u8bf4\u975e\u952e\u5c5e\u6027\u4e4b\u95f4\u5e94\u8be5\u662f\u72ec\u7acb\u65e0\u5173\u7684\u3002 \u8bf4\u660e \uff1a\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u51fa\u4e8e\u6548\u7387\u7684\u8003\u8651\uff0c\u6211\u4eec\u5728\u8bbe\u8ba1\u8868\u65f6\u5f88\u6709\u53ef\u80fd\u505a\u51fa\u53cd\u8303\u5f0f\u8bbe\u8ba1\uff0c\u5373\u6545\u610f\u964d\u4f4e\u65b9\u5f0f\u7ea7\u522b\uff0c\u589e\u52a0\u5197\u4f59\u6570\u636e\u6765\u83b7\u5f97\u66f4\u597d\u7684\u64cd\u4f5c\u6027\u80fd\u3002 \u6570\u636e\u5b8c\u6574\u6027 \u5b9e\u4f53\u5b8c\u6574\u6027 - \u6bcf\u4e2a\u5b9e\u4f53\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684 \u4e3b\u952e\uff08 primary key \uff09 / \u552f\u4e00\u7ea6\u675f\uff08 unique \uff09 \u5f15\u7528\u5b8c\u6574\u6027\uff08\u53c2\u7167\u5b8c\u6574\u6027\uff09- \u5173\u7cfb\u4e2d\u4e0d\u5141\u8bb8\u5f15\u7528\u4e0d\u5b58\u5728\u7684\u5b9e\u4f53 \u5916\u952e\uff08 foreign key \uff09 \u57df\uff08domain\uff09\u5b8c\u6574\u6027 - \u6570\u636e\u662f\u6709\u6548\u7684 \u6570\u636e\u7c7b\u578b\u53ca\u957f\u5ea6 \u975e\u7a7a\u7ea6\u675f\uff08 not null \uff09 \u9ed8\u8ba4\u503c\u7ea6\u675f\uff08 default \uff09 \u68c0\u67e5\u7ea6\u675f\uff08 check \uff09 \u8bf4\u660e \uff1a\u5728 MySQL 8.x \u4ee5\u524d\uff0c\u68c0\u67e5\u7ea6\u675f\u5e76\u4e0d\u8d77\u4f5c\u7528\u3002 \u6570\u636e\u4e00\u81f4\u6027 \u4e8b\u52a1\uff1a\u4e00\u7cfb\u5217\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u8bfb/\u5199\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u8981\u4e48\u5168\u90fd\u6210\u529f\uff0c\u8981\u4e48\u5168\u90fd\u5931\u8d25\u3002 \u4e8b\u52a1\u7684 ACID \u7279\u6027 \u539f\u5b50\u6027\uff1a\u4e8b\u52a1\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u88ab\u6267\u884c\uff0c\u5305\u542b\u5728\u5176\u4e2d\u7684\u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c\u8981\u4e48\u5168\u90e8\u88ab\u6267\u884c\uff0c\u8981\u4e48\u90fd\u4e0d\u6267\u884c \u4e00\u81f4\u6027\uff1a\u4e8b\u52a1\u5e94\u786e\u4fdd\u6570\u636e\u5e93\u7684\u72b6\u6001\u4ece\u4e00\u4e2a\u4e00\u81f4\u72b6\u6001\u8f6c\u53d8\u4e3a\u53e6\u4e00\u4e2a\u4e00\u81f4\u72b6\u6001 \u9694\u79bb\u6027\uff1a\u591a\u4e2a\u4e8b\u52a1\u5e76\u53d1\u6267\u884c\u65f6\uff0c\u4e00\u4e2a\u4e8b\u52a1\u7684\u6267\u884c\u4e0d\u5e94\u5f71\u54cd\u5176\u4ed6\u4e8b\u52a1\u7684\u6267\u884c \u6301\u4e45\u6027\uff1a\u5df2\u88ab\u63d0\u4ea4\u7684\u4e8b\u52a1\u5bf9\u6570\u636e\u5e93\u7684\u4fee\u6539\u5e94\u8be5\u6c38\u4e45\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d MySQL \u4e2d\u7684\u4e8b\u52a1\u64cd\u4f5c \u5f00\u542f\u4e8b\u52a1\u73af\u5883 start transaction \u63d0\u4ea4\u4e8b\u52a1 commit \u56de\u6eda\u4e8b\u52a1 rollback \u67e5\u770b\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b show variables like 'transaction_isolation' ; +-----------------------+-----------------+ | Variable_name | Value | +-----------------------+-----------------+ | transaction_isolation | REPEATABLE-READ | +-----------------------+-----------------+ \u53ef\u4ee5\u770b\u51fa\uff0cMySQL \u9ed8\u8ba4\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u662f REPEATABLE-READ \u3002 \u4fee\u6539\uff08\u5f53\u524d\u4f1a\u8bdd\uff09\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b set session transaction isolation level read committed ; \u91cd\u65b0\u67e5\u770b\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\u3002 +-----------------------+----------------+ | Variable_name | Value | +-----------------------+----------------+ | transaction_isolation | READ-COMMITTED | +-----------------------+----------------+ \u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u4e8b\u52a1\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u8bdd\u9898\uff0c\u56e0\u4e3a\u5f53\u5b58\u5728\u591a\u4e2a\u5e76\u53d1\u4e8b\u52a1\u8bbf\u95ee\u6570\u636e\u65f6\uff0c\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u4e09\u7c7b\u8bfb\u6570\u636e\u7684\u95ee\u9898\uff08\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u3001\u5e7b\u8bfb\uff09\u548c\u4e24\u7c7b\u66f4\u65b0\u6570\u636e\u7684\u95ee\u9898\uff08\u7b2c\u4e00\u7c7b\u4e22\u5931\u66f4\u65b0\u3001\u7b2c\u4e8c\u7c7b\u4e22\u5931\u66f4\u65b0\uff09\u3002\u60f3\u4e86\u89e3\u8fd9\u4e94\u7c7b\u95ee\u9898\u7684\uff0c\u53ef\u4ee5\u9605\u8bfb\u6211\u53d1\u5e03\u5728 CSDN \u7f51\u7ad9\u4e0a\u7684 \u300aJava\u9762\u8bd5\u9898\u5168\u96c6\uff08\u4e0a\uff09\u300b \u4e00\u6587\u7684\u7b2c80\u9898\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4e9b\u95ee\u9898\uff0c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u5e95\u5c42\u662f\u6709\u5bf9\u5e94\u7684\u9501\u673a\u5236\u7684\uff0c\u6309\u9501\u5b9a\u5bf9\u8c61\u4e0d\u540c\u53ef\u4ee5\u5206\u4e3a\u8868\u7ea7\u9501\u548c\u884c\u7ea7\u9501\uff0c\u6309\u5e76\u53d1\u4e8b\u52a1\u9501\u5b9a\u5173\u7cfb\u53ef\u4ee5\u5206\u4e3a\u5171\u4eab\u9501\u548c\u72ec\u5360\u9501\u3002\u7136\u800c\u76f4\u63a5\u4f7f\u7528\u9501\u662f\u975e\u5e38\u9ebb\u70e6\u7684\uff0c\u4e3a\u6b64\u6570\u636e\u5e93\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u81ea\u52a8\u9501\u673a\u5236\uff0c\u53ea\u8981\u7528\u6237\u6307\u5b9a\u9002\u5f53\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u901a\u8fc7\u5206\u6790 SQL \u8bed\u53e5\uff0c\u7136\u540e\u4e3a\u4e8b\u52a1\u8bbf\u95ee\u7684\u8d44\u6e90\u52a0\u4e0a\u5408\u9002\u7684\u9501\u3002\u6b64\u5916\uff0c\u6570\u636e\u5e93\u8fd8\u4f1a\u7ef4\u62a4\u8fd9\u4e9b\u9501\u901a\u8fc7\u5404\u79cd\u624b\u6bb5\u63d0\u9ad8\u7cfb\u7edf\u7684\u6027\u80fd\uff0c\u8fd9\u4e9b\u5bf9\u7528\u6237\u6765\u8bf4\u90fd\u662f\u900f\u660e\u7684\u3002\u60f3\u4e86\u89e3 MySQL \u4e8b\u52a1\u548c\u9501\u7684\u7ec6\u8282\u77e5\u8bc6\uff0c\u63a8\u8350\u5927\u5bb6\u9605\u8bfb\u8fdb\u9636\u8bfb\u7269 \u300a\u9ad8\u6027\u80fdMySQL\u300b \uff0c\u8fd9\u4e5f\u662f\u6570\u636e\u5e93\u65b9\u9762\u7684\u7ecf\u5178\u4e66\u7c4d\u3002 ANSI/ISO SQL 92\u6807\u51c6\u5b9a\u4e49\u4e864\u4e2a\u7b49\u7ea7\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u5982\u4e0b\u8868\u6240\u793a\u3002\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u548c\u6570\u636e\u8bbf\u95ee\u7684\u5e76\u53d1\u6027\u662f\u5bf9\u7acb\u7684\uff0c\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u8d8a\u9ad8\u5e76\u53d1\u6027\u5c31\u8d8a\u5dee\u3002\u6240\u4ee5\u8981\u6839\u636e\u5177\u4f53\u7684\u5e94\u7528\u6765\u786e\u5b9a\u5230\u5e95\u4f7f\u7528\u54ea\u79cd\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u8fd9\u4e2a\u5730\u65b9\u6ca1\u6709\u4e07\u80fd\u7684\u539f\u5219\u3002 \u603b\u7ed3 \u5173\u4e8e MySQL \u7684\u77e5\u8bc6\u80af\u5b9a\u8fdc\u8fdc\u4e0d\u6b62\u4e0a\u9762\u5217\u51fa\u7684\u8fd9\u4e9b\uff0c\u6bd4\u5982 MySQL \u6027\u80fd\u8c03\u4f18\u3001MySQL \u8fd0\u7ef4\u76f8\u5173\u5de5\u5177\u3001MySQL \u6570\u636e\u7684\u5907\u4efd\u548c\u6062\u590d\u3001\u76d1\u63a7 MySQL \u670d\u52a1\u3001\u90e8\u7f72\u9ad8\u53ef\u7528\u67b6\u6784\u7b49\uff0c\u8fd9\u4e00\u7cfb\u5217\u7684\u95ee\u9898\u5728\u8fd9\u91cc\u90fd\u6ca1\u6709\u529e\u6cd5\u9010\u4e00\u5c55\u5f00\u6765\u8ba8\u8bba\uff0c\u90a3\u5c31\u7559\u5230\u6709\u9700\u8981\u7684\u65f6\u5019\u518d\u8fdb\u884c\u8bb2\u89e3\u5427\uff0c\u5404\u4f4d\u8bfb\u8005\u4e5f\u53ef\u4ee5\u81ea\u884c\u63a2\u7d22\u3002","title":"\u7b2c46\u8bfe.\u89c6\u56fe+\u51fd\u6570+\u8fc7\u7a0b"},{"location":"%E7%AC%AC46%E8%AF%BE.%E8%A7%86%E5%9B%BE%2B%E5%87%BD%E6%95%B0%2B%E8%BF%87%E7%A8%8B/#_1","text":"\u4e3a\u4e86\u8bb2\u89e3\u89c6\u56fe\u3001\u51fd\u6570\u548c\u8fc7\u7a0b\uff0c\u6211\u4eec\u9996\u5148\u7528\u4e0b\u9762\u7684 DDL \u548c DML \u521b\u5efa\u540d\u4e3a hrs \u7684\u6570\u636e\u5e93\u5e76\u4e3a\u5176\u4e8c\u7ef4\u8868\u6dfb\u52a0\u5982\u4e0b\u6240\u793a\u7684\u6570\u636e\u3002 -- \u521b\u5efa\u540d\u4e3ahrs\u7684\u6570\u636e\u5e93\u5e76\u6307\u5b9a\u9ed8\u8ba4\u7684\u5b57\u7b26\u96c6 create database ` hrs ` default charset utf8mb4 ; -- \u5207\u6362\u5230hrs\u6570\u636e\u5e93 use ` hrs ` ; -- \u521b\u5efa\u90e8\u95e8\u8868 create table ` tb_dept ` ( ` dno ` int not null comment '\u7f16\u53f7' , ` dname ` varchar ( 10 ) not null comment '\u540d\u79f0' , ` dloc ` varchar ( 20 ) not null comment '\u6240\u5728\u5730' , primary key ( ` dno ` ) ); -- \u63d2\u51654\u4e2a\u90e8\u95e8 insert into ` tb_dept ` values ( 10 , '\u4f1a\u8ba1\u90e8' , '\u5317\u4eac' ), ( 20 , '\u7814\u53d1\u90e8' , '\u6210\u90fd' ), ( 30 , '\u9500\u552e\u90e8' , '\u91cd\u5e86' ), ( 40 , '\u8fd0\u7ef4\u90e8' , '\u6df1\u5733' ); -- \u521b\u5efa\u5458\u5de5\u8868 create table ` tb_emp ` ( ` eno ` int not null comment '\u5458\u5de5\u7f16\u53f7' , ` ename ` varchar ( 20 ) not null comment '\u5458\u5de5\u59d3\u540d' , ` job ` varchar ( 20 ) not null comment '\u5458\u5de5\u804c\u4f4d' , ` mgr ` int comment '\u4e3b\u7ba1\u7f16\u53f7' , ` sal ` int not null comment '\u5458\u5de5\u6708\u85aa' , ` comm ` int comment '\u6bcf\u6708\u8865\u8d34' , ` dno ` int not null comment '\u6240\u5728\u90e8\u95e8\u7f16\u53f7' , primary key ( ` eno ` ), constraint ` fk_emp_mgr ` foreign key ( ` mgr ` ) references tb_emp ( ` eno ` ), constraint ` fk_emp_dno ` foreign key ( ` dno ` ) references tb_dept ( ` dno ` ) ); -- \u63d2\u516514\u4e2a\u5458\u5de5 insert into ` tb_emp ` values ( 7800 , '\u5f20\u4e09\u4e30' , '\u603b\u88c1' , null , 9000 , 1200 , 20 ), ( 2056 , '\u4e54\u5cf0' , '\u5206\u6790\u5e08' , 7800 , 5000 , 1500 , 20 ), ( 3088 , '\u674e\u83ab\u6101' , '\u8bbe\u8ba1\u5e08' , 2056 , 3500 , 800 , 20 ), ( 3211 , '\u5f20\u65e0\u5fcc' , '\u7a0b\u5e8f\u5458' , 2056 , 3200 , null , 20 ), ( 3233 , '\u4e18\u5904\u673a' , '\u7a0b\u5e8f\u5458' , 2056 , 3400 , null , 20 ), ( 3251 , '\u5f20\u7fe0\u5c71' , '\u7a0b\u5e8f\u5458' , 2056 , 4000 , null , 20 ), ( 5566 , '\u5b8b\u8fdc\u6865' , '\u4f1a\u8ba1\u5e08' , 7800 , 4000 , 1000 , 10 ), ( 5234 , '\u90ed\u9756' , '\u51fa\u7eb3' , 5566 , 2000 , null , 10 ), ( 3344 , '\u9ec4\u84c9' , '\u9500\u552e\u4e3b\u7ba1' , 7800 , 3000 , 800 , 30 ), ( 1359 , '\u80e1\u4e00\u5200' , '\u9500\u552e\u5458' , 3344 , 1800 , 200 , 30 ), ( 4466 , '\u82d7\u4eba\u51e4' , '\u9500\u552e\u5458' , 3344 , 2500 , null , 30 ), ( 3244 , '\u6b27\u9633\u950b' , '\u7a0b\u5e8f\u5458' , 3088 , 3200 , null , 20 ), ( 3577 , '\u6768\u8fc7' , '\u4f1a\u8ba1' , 5566 , 2200 , null , 10 ), ( 3588 , '\u6731\u4e5d\u771f' , '\u4f1a\u8ba1' , 5566 , 2500 , null , 10 );","title":"\u89c6\u56fe\u3001\u51fd\u6570\u548c\u8fc7\u7a0b"},{"location":"%E7%AC%AC46%E8%AF%BE.%E8%A7%86%E5%9B%BE%2B%E5%87%BD%E6%95%B0%2B%E8%BF%87%E7%A8%8B/#_2","text":"\u89c6\u56fe\u662f\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u5c06\u4e00\u7ec4\u67e5\u8be2\u6307\u4ee4\u6784\u6210\u7684\u7ed3\u679c\u96c6\u7ec4\u5408\u6210\u53ef\u67e5\u8be2\u7684\u6570\u636e\u8868\u7684\u5bf9\u8c61\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u89c6\u56fe\u5c31\u662f\u865a\u62df\u7684\u8868\uff0c\u4f46\u4e0e\u6570\u636e\u8868\u4e0d\u540c\u7684\u662f\uff0c\u6570\u636e\u8868\u662f\u4e00\u79cd\u5b9e\u4f53\u7ed3\u6784\uff0c\u800c\u89c6\u56fe\u662f\u4e00\u79cd\u865a\u62df\u7ed3\u6784\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c06\u89c6\u56fe\u7406\u89e3\u4e3a\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d\u88ab\u8d4b\u4e88\u540d\u5b57\u7684 SQL \u8bed\u53e5\u3002 \u4f7f\u7528\u89c6\u56fe\u53ef\u4ee5\u83b7\u5f97\u4ee5\u4e0b\u597d\u5904\uff1a \u53ef\u4ee5\u5c06\u5b9e\u4f53\u6570\u636e\u8868\u9690\u85cf\u8d77\u6765\uff0c\u8ba9\u5916\u90e8\u7a0b\u5e8f\u65e0\u6cd5\u5f97\u77e5\u5b9e\u9645\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8ba9\u8bbf\u95ee\u8005\u53ef\u4ee5\u4f7f\u7528\u8868\u7684\u7ec4\u6210\u90e8\u5206\u800c\u4e0d\u662f\u6574\u4e2a\u8868\uff0c\u964d\u4f4e\u6570\u636e\u5e93\u88ab\u653b\u51fb\u7684\u98ce\u9669\u3002 \u5728\u5927\u591a\u6570\u7684\u60c5\u51b5\u4e0b\u89c6\u56fe\u662f\u53ea\u8bfb\u7684\uff08\u66f4\u65b0\u89c6\u56fe\u7684\u64cd\u4f5c\u901a\u5e38\u90fd\u6709\u8bf8\u591a\u7684\u9650\u5236\uff09\uff0c\u5916\u90e8\u7a0b\u5e8f\u65e0\u6cd5\u76f4\u63a5\u900f\u8fc7\u89c6\u56fe\u4fee\u6539\u6570\u636e\u3002 \u91cd\u7528 SQL \u8bed\u53e5\uff0c\u5c06\u9ad8\u5ea6\u590d\u6742\u7684\u67e5\u8be2\u5305\u88c5\u5728\u89c6\u56fe\u8868\u4e2d\uff0c\u76f4\u63a5\u8bbf\u95ee\u8be5\u89c6\u56fe\u5373\u53ef\u53d6\u51fa\u9700\u8981\u7684\u6570\u636e\uff1b\u4e5f\u53ef\u4ee5\u5c06\u89c6\u56fe\u89c6\u4e3a\u6570\u636e\u8868\u8fdb\u884c\u8fde\u63a5\u67e5\u8be2\u3002 \u89c6\u56fe\u53ef\u4ee5\u8fd4\u56de\u4e0e\u5b9e\u4f53\u6570\u636e\u8868\u4e0d\u540c\u683c\u5f0f\u7684\u6570\u636e\uff0c\u5728\u521b\u5efa\u89c6\u56fe\u7684\u65f6\u5019\u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u683c\u5f0f\u5316\u5904\u7406\u3002 \u521b\u5efa\u89c6\u56fe\u3002 create view ` vw_emp_simple ` as select ` eno ` , ` ename ` , ` job ` , ` dno ` from ` tb_emp ` ; \u63d0\u793a \uff1a\u56e0\u4e3a\u89c6\u56fe\u4e0d\u5305\u542b\u6570\u636e\uff0c\u6240\u4ee5\u6bcf\u6b21\u4f7f\u7528\u89c6\u56fe\u65f6\uff0c\u90fd\u5fc5\u987b\u6267\u884c\u67e5\u8be2\u4ee5\u83b7\u5f97\u6570\u636e\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u8fde\u63a5\u67e5\u8be2\u3001\u5d4c\u5957\u67e5\u8be2\u521b\u5efa\u4e86\u8f83\u4e3a\u590d\u6742\u7684\u89c6\u56fe\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u67e5\u8be2\u6027\u80fd\u4e0b\u964d\u5f97\u5f88\u5389\u5bb3\u3002\u56e0\u6b64\uff0c\u5728\u4f7f\u7528\u590d\u6742\u7684\u89c6\u56fe\u524d\uff0c\u5e94\u8be5\u8fdb\u884c\u6d4b\u8bd5\u4ee5\u786e\u4fdd\u5176\u6027\u80fd\u80fd\u591f\u6ee1\u8db3\u5e94\u7528\u7684\u9700\u6c42\u3002 \u6709\u4e86\u4e0a\u9762\u7684\u89c6\u56fe\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u8bb2\u8fc7\u7684 DCL\uff0c \u9650\u5236\u67d0\u4e9b\u7528\u6237\u53ea\u80fd\u4ece\u89c6\u56fe\u4e2d\u83b7\u53d6\u5458\u5de5\u4fe1\u606f\uff0c\u8fd9\u6837\u5458\u5de5\u8868\u4e2d\u7684\u5de5\u8d44\uff08 sal \uff09\u3001\u8865\u8d34\uff08 comm \uff09\u7b49\u654f\u611f\u5b57\u6bb5\u4fbf\u4e0d\u4f1a\u66b4\u9732\u7ed9\u7528\u6237\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4ece\u89c6\u56fe\u4e2d\u83b7\u53d6\u6570\u636e\u3002 select * from ` vw_emp_simple ` ; \u67e5\u8be2\u7ed3\u679c\uff1a +------+-----------+--------------+-----+ | eno | ename | job | dno | +------+-----------+--------------+-----+ | 1359 | \u80e1\u4e8c\u5200 | \u9500\u552e\u5458 | 30 | | 2056 | \u4e54\u5cf0 | \u5206\u6790\u5e08 | 20 | | 3088 | \u674e\u83ab\u6101 | \u8bbe\u8ba1\u5e08 | 20 | | 3211 | \u5f20\u65e0\u5fcc | \u7a0b\u5e8f\u5458 | 20 | | 3233 | \u4e18\u5904\u673a | \u7a0b\u5e8f\u5458 | 20 | | 3244 | \u6b27\u9633\u950b | \u7a0b\u5e8f\u5458 | 20 | | 3251 | \u5f20\u7fe0\u5c71 | \u7a0b\u5e8f\u5458 | 20 | | 3344 | \u9ec4\u84c9 | \u9500\u552e\u4e3b\u7ba1 | 30 | | 3577 | \u6768\u8fc7 | \u4f1a\u8ba1 | 10 | | 3588 | \u6731\u4e5d\u771f | \u4f1a\u8ba1 | 10 | | 4466 | \u82d7\u4eba\u51e4 | \u9500\u552e\u5458 | 30 | | 5234 | \u90ed\u9756 | \u51fa\u7eb3 | 10 | | 5566 | \u5b8b\u8fdc\u6865 | \u4f1a\u8ba1\u5e08 | 10 | | 7800 | \u5f20\u4e09\u4e30 | \u603b\u88c1 | 20 | +------+-----------+--------------+-----+ \u65e2\u7136\u89c6\u56fe\u662f\u4e00\u5f20\u865a\u62df\u7684\u8868\uff0c\u90a3\u4e48\u89c6\u56fe\u7684\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u66f4\u65b0\u5417\uff1f\u89c6\u56fe\u7684\u53ef\u66f4\u65b0\u6027\u8981\u89c6\u5177\u4f53\u60c5\u51b5\u800c\u5b9a\uff0c\u4ee5\u4e0b\u7c7b\u578b\u7684\u89c6\u56fe\u662f\u4e0d\u80fd\u66f4\u65b0\u7684\uff1a \u4f7f\u7528\u4e86\u805a\u5408\u51fd\u6570\uff08 SUM \u3001 MIN \u3001 MAX \u3001 AVG \u3001 COUNT \u7b49\uff09\u3001 DISTINCT \u3001 GROUP BY \u3001 HAVING \u3001 UNION \u6216\u8005 UNION ALL \u7684\u89c6\u56fe\u3002 SELECT \u4e2d\u5305\u542b\u4e86\u5b50\u67e5\u8be2\u7684\u89c6\u56fe\u3002 FROM \u5b50\u53e5\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u4e0d\u80fd\u66f4\u65b0\u7684\u89c6\u56fe\u7684\u89c6\u56fe\u3002 WHERE \u5b50\u53e5\u7684\u5b50\u67e5\u8be2\u5f15\u7528\u4e86 FROM \u5b50\u53e5\u4e2d\u7684\u8868\u7684\u89c6\u56fe\u3002 \u5220\u9664\u89c6\u56fe\u3002 drop view if exists ` vw_emp_simple ` ; \u8bf4\u660e \uff1a\u5982\u679c\u5e0c\u671b\u66f4\u65b0\u89c6\u56fe\uff0c\u53ef\u4ee5\u5148\u7528\u4e0a\u9762\u7684\u547d\u4ee4\u5220\u9664\u89c6\u56fe\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 create or replace view \u6765\u66f4\u65b0\u89c6\u56fe\u3002 \u89c6\u56fe\u7684\u89c4\u5219\u548c\u9650\u5236\u3002 \u89c6\u56fe\u53ef\u4ee5\u5d4c\u5957\uff0c\u53ef\u4ee5\u5229\u7528\u4ece\u5176\u4ed6\u89c6\u56fe\u4e2d\u68c0\u7d22\u7684\u6570\u636e\u6765\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u89c6\u56fe\u3002\u89c6\u56fe\u4e5f\u53ef\u4ee5\u548c\u8868\u4e00\u8d77\u4f7f\u7528\u3002 \u521b\u5efa\u89c6\u56fe\u65f6\u53ef\u4ee5\u4f7f\u7528 order by \u5b50\u53e5\uff0c\u4f46\u5982\u679c\u4ece\u89c6\u56fe\u4e2d\u68c0\u7d22\u6570\u636e\u65f6\u4e5f\u4f7f\u7528\u4e86 order by \uff0c\u90a3\u4e48\u8be5\u89c6\u56fe\u4e2d\u539f\u5148\u7684 order by \u4f1a\u88ab\u8986\u76d6\u3002 \u89c6\u56fe\u65e0\u6cd5\u4f7f\u7528\u7d22\u5f15\uff0c\u4e5f\u4e0d\u4f1a\u6fc0\u53d1\u89e6\u53d1\u5668\uff08\u5b9e\u9645\u5f00\u53d1\u4e2d\u56e0\u4e3a\u6027\u80fd\u7b49\u5404\u65b9\u9762\u7684\u8003\u8651\uff0c\u901a\u5e38\u4e0d\u5efa\u8bae\u4f7f\u7528\u89e6\u53d1\u5668\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u4e0d\u5bf9\u8fd9\u4e2a\u6982\u5ff5\u8fdb\u884c\u4ecb\u7ecd\uff09\u7684\u6267\u884c\u3002","title":"\u89c6\u56fe"},{"location":"%E7%AC%AC46%E8%AF%BE.%E8%A7%86%E5%9B%BE%2B%E5%87%BD%E6%95%B0%2B%E8%BF%87%E7%A8%8B/#_3","text":"MySQL \u4e2d\u7684\u51fd\u6570\u8ddf Python \u4e2d\u7684\u51fd\u6570\u5927\u540c\u5c0f\u5f02\uff0c\u56e0\u4e3a\u51fd\u6570\u90fd\u662f\u7528\u6765\u5c01\u88c5\u529f\u80fd\u4e0a\u76f8\u5bf9\u72ec\u7acb\u4e14\u4f1a\u88ab\u91cd\u590d\u4f7f\u7528\u7684\u4ee3\u7801\u7684\u3002\u5982\u679c\u975e\u8981\u627e\u51fa\u4e00\u4e9b\u5dee\u522b\u6765\uff0c\u90a3\u4e48 MySQL \u4e2d\u7684\u51fd\u6570\u662f\u53ef\u4ee5\u6267\u884c SQL \u8bed\u53e5\u7684\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u901a\u8fc7\u81ea\u5b9a\u4e49\u51fd\u6570\u5b9e\u73b0\u4e86\u622a\u65ad\u8d85\u957f\u5b57\u7b26\u4e32\u7684\u529f\u80fd\u3002 delimiter $$ create function fn_truncate_string ( content varchar ( 10000 ), max_length int unsigned ) returns varchar ( 10000 ) no sql begin declare result varchar ( 10000 ) default content ; if char_length ( content ) > max_length then set result = left ( content , max_length ); set result = concat ( result , '\u2026\u2026' ); end if ; return result ; end $$ delimiter ; \u8bf4\u660e1 \uff1a\u51fd\u6570\u58f0\u660e\u540e\u9762\u7684 no sql \u662f\u58f0\u660e\u51fd\u6570\u4f53\u5e76\u6ca1\u6709\u4f7f\u7528 SQL \u8bed\u53e5\uff1b\u5982\u679c\u51fd\u6570\u4f53\u4e2d\u9700\u8981\u901a\u8fc7 SQL \u8bfb\u53d6\u6570\u636e\uff0c\u9700\u8981\u58f0\u660e\u4e3a reads sql data \u3002 \u8bf4\u660e2 \uff1a\u5b9a\u4e49\u51fd\u6570\u524d\u540e\u7684 delimiter \u547d\u4ee4\u662f\u4e3a\u4e86\u4fee\u6539\u7ec8\u6b62\u7b26\uff08\u5b9a\u754c\u7b26\uff09\uff0c\u56e0\u4e3a\u51fd\u6570\u4f53\u4e2d\u7684\u8bed\u53e5\u90fd\u662f\u7528 ; \u8868\u793a\u7ed3\u675f\uff0c\u5982\u679c\u4e0d\u91cd\u65b0\u5b9a\u4e49\u5b9a\u754c\u7b26\uff0c\u90a3\u4e48\u9047\u5230\u7684 ; \u7684\u65f6\u5019\u4ee3\u7801\u5c31\u4f1a\u88ab\u622a\u65ad\u6267\u884c\uff0c\u663e\u7136\u8fd9\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\u3002 \u5728\u67e5\u8be2\u4e2d\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u3002 select fn_truncate_string ( '\u548c\u6211\u5728\u6210\u90fd\u7684\u8857\u5934\u8d70\u4e00\u8d70\uff0c\u76f4\u5230\u6240\u6709\u7684\u706f\u90fd\u7184\u706d\u4e86\u4e5f\u4e0d\u505c\u7559' , 10 ) as short_string ; +--------------------------------------+ | short_string | +--------------------------------------+ | \u548c\u6211\u5728\u6210\u90fd\u7684\u8857\u5934\u8d70\u4e00\u2026\u2026 | +--------------------------------------+","title":"\u51fd\u6570"},{"location":"%E7%AC%AC46%E8%AF%BE.%E8%A7%86%E5%9B%BE%2B%E5%87%BD%E6%95%B0%2B%E8%BF%87%E7%A8%8B/#_4","text":"\u8fc7\u7a0b\uff08\u53c8\u79f0\u5b58\u50a8\u8fc7\u7a0b\uff09\u662f\u4e8b\u5148\u7f16\u8bd1\u597d\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u7ec4 SQL \u7684\u96c6\u5408\uff0c\u8c03\u7528\u8fc7\u7a0b\u53ef\u4ee5\u7b80\u5316\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\uff0c\u51cf\u5c11\u4e0e\u6570\u636e\u5e93\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u5bf9\u4e8e\u63d0\u5347\u6570\u636e\u64cd\u4f5c\u7684\u6027\u80fd\u4e5f\u662f\u6709\u5e2e\u52a9\u7684\u3002\u5176\u5b9e\u8fc4\u4eca\u4e3a\u6b62\uff0c\u6211\u4eec\u4f7f\u7528\u7684 SQL \u8bed\u53e5\u90fd\u662f\u9488\u5bf9\u4e00\u4e2a\u6216\u591a\u4e2a\u8868\u7684\u5355\u6761\u8bed\u53e5\uff0c\u4f46\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u7ecf\u5e38\u4f1a\u9047\u5230\u67d0\u4e2a\u64cd\u4f5c\u9700\u8981\u591a\u6761 SQL \u8bed\u53e5\u624d\u80fd\u5b8c\u6210\u7684\u60c5\u51b5\u3002\u4f8b\u5982\uff0c\u7535\u5546\u7f51\u7ad9\u5728\u53d7\u7406\u7528\u6237\u8ba2\u5355\u65f6\uff0c\u9700\u8981\u505a\u4ee5\u4e0b\u4e00\u7cfb\u5217\u7684\u5904\u7406\u3002 \u901a\u8fc7\u67e5\u8be2\u6765\u6838\u5bf9\u5e93\u5b58\u4e2d\u662f\u5426\u6709\u5bf9\u5e94\u7684\u7269\u54c1\u4ee5\u53ca\u5e93\u5b58\u662f\u5426\u5145\u8db3\u3002 \u5982\u679c\u5e93\u5b58\u6709\u7269\u54c1\uff0c\u9700\u8981\u9501\u5b9a\u5e93\u5b58\u4ee5\u786e\u4fdd\u8fd9\u4e9b\u7269\u54c1\u4e0d\u518d\u5356\u7ed9\u522b\u4eba\uff0c \u5e76\u4e14\u8981\u51cf\u5c11\u53ef\u7528\u7684\u7269\u54c1\u6570\u91cf\u4ee5\u53cd\u6620\u6b63\u786e\u7684\u5e93\u5b58\u91cf\u3002 \u5982\u679c\u5e93\u5b58\u4e0d\u8db3\uff0c\u53ef\u80fd\u9700\u8981\u8fdb\u4e00\u6b65\u4e0e\u4f9b\u5e94\u5546\u8fdb\u884c\u4ea4\u4e92\u6216\u8005\u81f3\u5c11\u4ea7\u751f\u4e00\u6761\u7cfb\u7edf\u63d0\u793a\u6d88\u606f\u3002 \u4e0d\u7ba1\u53d7\u7406\u8ba2\u5355\u662f\u5426\u6210\u529f\uff0c\u90fd\u9700\u8981\u4ea7\u751f\u6d41\u6c34\u8bb0\u5f55\uff0c\u800c\u4e14\u9700\u8981\u7ed9\u5bf9\u5e94\u7684\u7528\u6237\u4ea7\u751f\u4e00\u6761\u901a\u77e5\u4fe1\u606f\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fc7\u7a0b\u5c06\u590d\u6742\u7684\u64cd\u4f5c\u5c01\u88c5\u8d77\u6765\uff0c\u8fd9\u6837\u4e0d\u4ec5\u6709\u52a9\u4e8e\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u800c\u4e14\u5c06\u6765\u5982\u679c\u4e1a\u52a1\u53d1\u751f\u4e86\u53d8\u52a8\uff0c\u53ea\u9700\u8981\u8c03\u6574\u548c\u4fee\u6539\u8fc7\u7a0b\u5373\u53ef\u3002\u5bf9\u4e8e\u8c03\u7528\u8fc7\u7a0b\u7684\u7528\u6237\u6765\u8bf4\uff0c\u8fc7\u7a0b\u5e76\u6ca1\u6709\u66b4\u9732\u6570\u636e\u8868\u7684\u7ec6\u8282\uff0c\u800c\u4e14\u6267\u884c\u8fc7\u7a0b\u6bd4\u4e00\u6761\u6761\u7684\u6267\u884c\u4e00\u7ec4 SQL \u8981\u5feb\u5f97\u591a\u3002 \u4e0b\u9762\u7684\u8fc7\u7a0b\u5b9e\u73b0 hrs \u6570\u636e\u5e93\u4e2d\u5458\u5de5\u5de5\u8d44\u7684\u666e\u8c03\uff0c\u5177\u4f53\u7684\u89c4\u5219\u662f\uff1a 10 \u90e8\u95e8\u7684\u5458\u5de5\u85aa\u8d44\u4e0a\u6d6e 300 \uff0c 20 \u90e8\u95e8\u7684\u5458\u5de5\u85aa\u8d44\u4e0a\u6d6e 800 \uff0c 30 \u90e8\u95e8\u7684\u5458\u5de5\u85aa\u8d44\u4e0a\u6d6e 500 \u3002 delimiter $$ create procedure sp_upgrade_salary () begin declare flag boolean default 1 ; -- \u5b9a\u4e49\u4e00\u4e2a\u5f02\u5e38\u5904\u7406\u5668 declare continue handler for sqlexception set flag = 0 ; -- \u5f00\u542f\u4e8b\u52a1\u73af\u5883 start transaction ; update tb_emp set sal = sal + 300 where dno = 10 ; update tb_emp set sal = sal + 800 where dno = 20 ; update tb_emp set sal = sal + 500 where dno = 30 ; -- \u63d0\u4ea4\u6216\u56de\u6eda\u4e8b\u52a1 if flag then commit ; else rollback ; end if ; end $$ delimiter ; \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u8fc7\u7a0b\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86 start transaction \u6765\u5f00\u542f\u4e8b\u52a1\u73af\u5883\uff0c\u5173\u4e8e\u4e8b\u52a1\uff0c\u5728\u672c\u8bfe\u7684\u6700\u540e\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u4ecb\u7ecd\u3002\u4e3a\u4e86\u786e\u5b9a\u4ee3\u7801\u4e2d\u662f\u5426\u53d1\u751f\u5f02\u5e38\uff0c\u4ece\u800c\u63d0\u4ea4\u6216\u56de\u6eda\u4e8b\u52a1\uff0c\u4e0a\u9762\u7684\u8fc7\u7a0b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a flag \u7684\u53d8\u91cf\u548c\u4e00\u4e2a\u5f02\u5e38\u5904\u7406\u5668\uff0c\u5982\u679c\u53d1\u751f\u4e86\u5f02\u5e38\uff0c flag \u5c06\u4f1a\u88ab\u8d4b\u503c\u4e3a 0 \uff0c\u540e\u9762\u7684\u5206\u652f\u7ed3\u6784\u4f1a\u6839\u636e flag \u7684\u503c\u6765\u51b3\u5b9a\u662f\u6267\u884c commit \uff0c\u8fd8\u662f\u6267\u884c rollback \u3002 \u8c03\u7528\u8fc7\u7a0b\u3002 call sp_upgrade_salary (); \u5220\u9664\u8fc7\u7a0b\u3002 drop procedure if exists sp_upgrade_salary ; \u5728\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u53d8\u91cf\u3001\u6761\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5206\u652f\u548c\u5faa\u73af\u8bed\u53e5\uff0c\u53ef\u4ee5\u901a\u8fc7\u6e38\u6807\u64cd\u4f5c\u67e5\u8be2\u7ed3\u679c\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e8b\u4ef6\u8c03\u5ea6\u5668\uff0c\u8fd9\u4e9b\u5185\u5bb9\u6211\u4eec\u6682\u65f6\u4e0d\u5728\u6b64\u5904\u8fdb\u884c\u4ecb\u7ecd\u3002\u867d\u7136\u6211\u4eec\u8bf4\u4e86\u5f88\u591a\u8fc7\u7a0b\u7684\u597d\u5904\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u9891\u7e41\u7684\u4f7f\u7528\u8fc7\u7a0b\u5e76\u5c06\u5927\u91cf\u590d\u6742\u7684\u8fd0\u7b97\u653e\u5230\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u7ed9\u636e\u5e93\u670d\u52a1\u5668\u9020\u6210\u5de8\u5927\u7684\u538b\u529b\uff0c\u800c\u6570\u636e\u5e93\u5f80\u5f80\u90fd\u662f\u6027\u80fd\u74f6\u9888\u6240\u5728\uff0c\u4f7f\u7528\u8fc7\u7a0b\u65e0\u7591\u662f\u96ea\u4e0a\u52a0\u971c\u7684\u64cd\u4f5c\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4e92\u8054\u7f51\u4ea7\u54c1\u5f00\u53d1\uff0c\u6211\u4eec\u4e00\u822c\u5efa\u8bae\u8ba9\u6570\u636e\u5e93\u53ea\u505a\u597d\u5b58\u50a8\uff0c\u590d\u6742\u7684\u8fd0\u7b97\u548c\u5904\u7406\u4ea4\u7ed9\u5e94\u7528\u670d\u52a1\u5668\u4e0a\u7684\u7a0b\u5e8f\u53bb\u5b8c\u6210\uff0c\u5982\u679c\u5e94\u7528\u670d\u52a1\u5668\u53d8\u5f97\u4e0d\u582a\u91cd\u8d1f\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u7684\u90e8\u7f72\u591a\u53f0\u5e94\u7528\u670d\u52a1\u5668\u6765\u5206\u644a\u8fd9\u4e9b\u538b\u529b\u3002 \u5982\u679c\u5927\u5bb6\u5bf9\u4e0a\u9762\u8bb2\u5230\u7684\u89c6\u56fe\u3001\u51fd\u6570\u3001\u8fc7\u7a0b\u5305\u62ec\u6211\u4eec\u6ca1\u6709\u8bb2\u5230\u7684\u89e6\u53d1\u5668\u8fd9\u4e9b\u77e5\u8bc6\u6709\u5174\u8da3\uff0c\u5efa\u8bae\u5927\u5bb6\u9605\u8bfb MySQL \u7684\u5165\u95e8\u8bfb\u7269 \u300aMySQL\u5fc5\u77e5\u5fc5\u4f1a\u300b \u8fdb\u884c\u4e00\u822c\u6027\u4e86\u89e3\u5373\u53ef\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u77e5\u8bc6\u70b9\u5728\u5927\u5bb6\u5c06\u6765\u7684\u5de5\u4f5c\u4e2d\u672a\u5fc5\u7528\u5f97\u4e0a\uff0c\u5b66\u4e86\u4e5f\u53ef\u80fd\u4ec5\u4ec5\u662f\u4e3a\u4e86\u5e94\u4ed8\u9762\u8bd5\u800c\u5df2\u3002","title":"\u8fc7\u7a0b"},{"location":"%E7%AC%AC46%E8%AF%BE.%E8%A7%86%E5%9B%BE%2B%E5%87%BD%E6%95%B0%2B%E8%BF%87%E7%A8%8B/#_5","text":"","title":"\u5176\u4ed6\u5185\u5bb9"},{"location":"%E7%AC%AC46%E8%AF%BE.%E8%A7%86%E5%9B%BE%2B%E5%87%BD%E6%95%B0%2B%E8%BF%87%E7%A8%8B/#_6","text":"\u8303\u5f0f\u7406\u8bba\u662f\u8bbe\u8ba1\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u4e8c\u7ef4\u8868\u7684\u6307\u5bfc\u601d\u60f3\u3002 \u7b2c\u4e00\u8303\u5f0f\uff1a\u6570\u636e\u8868\u7684\u6bcf\u4e2a\u5217\u7684\u503c\u57df\u90fd\u662f\u7531\u539f\u5b50\u503c\u7ec4\u6210\u7684\uff0c\u4e0d\u80fd\u591f\u518d\u5206\u5272\u3002 \u7b2c\u4e8c\u8303\u5f0f\uff1a\u6570\u636e\u8868\u91cc\u7684\u6240\u6709\u6570\u636e\u90fd\u8981\u548c\u8be5\u6570\u636e\u8868\u7684\u952e\uff08\u4e3b\u952e\u4e0e\u5019\u9009\u952e\uff09\u6709\u5b8c\u5168\u4f9d\u8d56\u5173\u7cfb\u3002 \u7b2c\u4e09\u8303\u5f0f\uff1a\u6240\u6709\u975e\u952e\u5c5e\u6027\u90fd\u53ea\u548c\u5019\u9009\u952e\u6709\u76f8\u5173\u6027\uff0c\u4e5f\u5c31\u662f\u8bf4\u975e\u952e\u5c5e\u6027\u4e4b\u95f4\u5e94\u8be5\u662f\u72ec\u7acb\u65e0\u5173\u7684\u3002 \u8bf4\u660e \uff1a\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u51fa\u4e8e\u6548\u7387\u7684\u8003\u8651\uff0c\u6211\u4eec\u5728\u8bbe\u8ba1\u8868\u65f6\u5f88\u6709\u53ef\u80fd\u505a\u51fa\u53cd\u8303\u5f0f\u8bbe\u8ba1\uff0c\u5373\u6545\u610f\u964d\u4f4e\u65b9\u5f0f\u7ea7\u522b\uff0c\u589e\u52a0\u5197\u4f59\u6570\u636e\u6765\u83b7\u5f97\u66f4\u597d\u7684\u64cd\u4f5c\u6027\u80fd\u3002","title":"\u8303\u5f0f\u7406\u8bba"},{"location":"%E7%AC%AC46%E8%AF%BE.%E8%A7%86%E5%9B%BE%2B%E5%87%BD%E6%95%B0%2B%E8%BF%87%E7%A8%8B/#_7","text":"\u5b9e\u4f53\u5b8c\u6574\u6027 - \u6bcf\u4e2a\u5b9e\u4f53\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684 \u4e3b\u952e\uff08 primary key \uff09 / \u552f\u4e00\u7ea6\u675f\uff08 unique \uff09 \u5f15\u7528\u5b8c\u6574\u6027\uff08\u53c2\u7167\u5b8c\u6574\u6027\uff09- \u5173\u7cfb\u4e2d\u4e0d\u5141\u8bb8\u5f15\u7528\u4e0d\u5b58\u5728\u7684\u5b9e\u4f53 \u5916\u952e\uff08 foreign key \uff09 \u57df\uff08domain\uff09\u5b8c\u6574\u6027 - \u6570\u636e\u662f\u6709\u6548\u7684 \u6570\u636e\u7c7b\u578b\u53ca\u957f\u5ea6 \u975e\u7a7a\u7ea6\u675f\uff08 not null \uff09 \u9ed8\u8ba4\u503c\u7ea6\u675f\uff08 default \uff09 \u68c0\u67e5\u7ea6\u675f\uff08 check \uff09 \u8bf4\u660e \uff1a\u5728 MySQL 8.x \u4ee5\u524d\uff0c\u68c0\u67e5\u7ea6\u675f\u5e76\u4e0d\u8d77\u4f5c\u7528\u3002","title":"\u6570\u636e\u5b8c\u6574\u6027"},{"location":"%E7%AC%AC46%E8%AF%BE.%E8%A7%86%E5%9B%BE%2B%E5%87%BD%E6%95%B0%2B%E8%BF%87%E7%A8%8B/#_8","text":"\u4e8b\u52a1\uff1a\u4e00\u7cfb\u5217\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u8bfb/\u5199\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u8981\u4e48\u5168\u90fd\u6210\u529f\uff0c\u8981\u4e48\u5168\u90fd\u5931\u8d25\u3002 \u4e8b\u52a1\u7684 ACID \u7279\u6027 \u539f\u5b50\u6027\uff1a\u4e8b\u52a1\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u88ab\u6267\u884c\uff0c\u5305\u542b\u5728\u5176\u4e2d\u7684\u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c\u8981\u4e48\u5168\u90e8\u88ab\u6267\u884c\uff0c\u8981\u4e48\u90fd\u4e0d\u6267\u884c \u4e00\u81f4\u6027\uff1a\u4e8b\u52a1\u5e94\u786e\u4fdd\u6570\u636e\u5e93\u7684\u72b6\u6001\u4ece\u4e00\u4e2a\u4e00\u81f4\u72b6\u6001\u8f6c\u53d8\u4e3a\u53e6\u4e00\u4e2a\u4e00\u81f4\u72b6\u6001 \u9694\u79bb\u6027\uff1a\u591a\u4e2a\u4e8b\u52a1\u5e76\u53d1\u6267\u884c\u65f6\uff0c\u4e00\u4e2a\u4e8b\u52a1\u7684\u6267\u884c\u4e0d\u5e94\u5f71\u54cd\u5176\u4ed6\u4e8b\u52a1\u7684\u6267\u884c \u6301\u4e45\u6027\uff1a\u5df2\u88ab\u63d0\u4ea4\u7684\u4e8b\u52a1\u5bf9\u6570\u636e\u5e93\u7684\u4fee\u6539\u5e94\u8be5\u6c38\u4e45\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d MySQL \u4e2d\u7684\u4e8b\u52a1\u64cd\u4f5c \u5f00\u542f\u4e8b\u52a1\u73af\u5883 start transaction \u63d0\u4ea4\u4e8b\u52a1 commit \u56de\u6eda\u4e8b\u52a1 rollback \u67e5\u770b\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b show variables like 'transaction_isolation' ; +-----------------------+-----------------+ | Variable_name | Value | +-----------------------+-----------------+ | transaction_isolation | REPEATABLE-READ | +-----------------------+-----------------+ \u53ef\u4ee5\u770b\u51fa\uff0cMySQL \u9ed8\u8ba4\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u662f REPEATABLE-READ \u3002 \u4fee\u6539\uff08\u5f53\u524d\u4f1a\u8bdd\uff09\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b set session transaction isolation level read committed ; \u91cd\u65b0\u67e5\u770b\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\u3002 +-----------------------+----------------+ | Variable_name | Value | +-----------------------+----------------+ | transaction_isolation | READ-COMMITTED | +-----------------------+----------------+ \u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u4e8b\u52a1\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u8bdd\u9898\uff0c\u56e0\u4e3a\u5f53\u5b58\u5728\u591a\u4e2a\u5e76\u53d1\u4e8b\u52a1\u8bbf\u95ee\u6570\u636e\u65f6\uff0c\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u4e09\u7c7b\u8bfb\u6570\u636e\u7684\u95ee\u9898\uff08\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u3001\u5e7b\u8bfb\uff09\u548c\u4e24\u7c7b\u66f4\u65b0\u6570\u636e\u7684\u95ee\u9898\uff08\u7b2c\u4e00\u7c7b\u4e22\u5931\u66f4\u65b0\u3001\u7b2c\u4e8c\u7c7b\u4e22\u5931\u66f4\u65b0\uff09\u3002\u60f3\u4e86\u89e3\u8fd9\u4e94\u7c7b\u95ee\u9898\u7684\uff0c\u53ef\u4ee5\u9605\u8bfb\u6211\u53d1\u5e03\u5728 CSDN \u7f51\u7ad9\u4e0a\u7684 \u300aJava\u9762\u8bd5\u9898\u5168\u96c6\uff08\u4e0a\uff09\u300b \u4e00\u6587\u7684\u7b2c80\u9898\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4e9b\u95ee\u9898\uff0c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u5e95\u5c42\u662f\u6709\u5bf9\u5e94\u7684\u9501\u673a\u5236\u7684\uff0c\u6309\u9501\u5b9a\u5bf9\u8c61\u4e0d\u540c\u53ef\u4ee5\u5206\u4e3a\u8868\u7ea7\u9501\u548c\u884c\u7ea7\u9501\uff0c\u6309\u5e76\u53d1\u4e8b\u52a1\u9501\u5b9a\u5173\u7cfb\u53ef\u4ee5\u5206\u4e3a\u5171\u4eab\u9501\u548c\u72ec\u5360\u9501\u3002\u7136\u800c\u76f4\u63a5\u4f7f\u7528\u9501\u662f\u975e\u5e38\u9ebb\u70e6\u7684\uff0c\u4e3a\u6b64\u6570\u636e\u5e93\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u81ea\u52a8\u9501\u673a\u5236\uff0c\u53ea\u8981\u7528\u6237\u6307\u5b9a\u9002\u5f53\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u901a\u8fc7\u5206\u6790 SQL \u8bed\u53e5\uff0c\u7136\u540e\u4e3a\u4e8b\u52a1\u8bbf\u95ee\u7684\u8d44\u6e90\u52a0\u4e0a\u5408\u9002\u7684\u9501\u3002\u6b64\u5916\uff0c\u6570\u636e\u5e93\u8fd8\u4f1a\u7ef4\u62a4\u8fd9\u4e9b\u9501\u901a\u8fc7\u5404\u79cd\u624b\u6bb5\u63d0\u9ad8\u7cfb\u7edf\u7684\u6027\u80fd\uff0c\u8fd9\u4e9b\u5bf9\u7528\u6237\u6765\u8bf4\u90fd\u662f\u900f\u660e\u7684\u3002\u60f3\u4e86\u89e3 MySQL \u4e8b\u52a1\u548c\u9501\u7684\u7ec6\u8282\u77e5\u8bc6\uff0c\u63a8\u8350\u5927\u5bb6\u9605\u8bfb\u8fdb\u9636\u8bfb\u7269 \u300a\u9ad8\u6027\u80fdMySQL\u300b \uff0c\u8fd9\u4e5f\u662f\u6570\u636e\u5e93\u65b9\u9762\u7684\u7ecf\u5178\u4e66\u7c4d\u3002 ANSI/ISO SQL 92\u6807\u51c6\u5b9a\u4e49\u4e864\u4e2a\u7b49\u7ea7\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u5982\u4e0b\u8868\u6240\u793a\u3002\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u548c\u6570\u636e\u8bbf\u95ee\u7684\u5e76\u53d1\u6027\u662f\u5bf9\u7acb\u7684\uff0c\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u8d8a\u9ad8\u5e76\u53d1\u6027\u5c31\u8d8a\u5dee\u3002\u6240\u4ee5\u8981\u6839\u636e\u5177\u4f53\u7684\u5e94\u7528\u6765\u786e\u5b9a\u5230\u5e95\u4f7f\u7528\u54ea\u79cd\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u8fd9\u4e2a\u5730\u65b9\u6ca1\u6709\u4e07\u80fd\u7684\u539f\u5219\u3002","title":"\u6570\u636e\u4e00\u81f4\u6027"},{"location":"%E7%AC%AC46%E8%AF%BE.%E8%A7%86%E5%9B%BE%2B%E5%87%BD%E6%95%B0%2B%E8%BF%87%E7%A8%8B/#_9","text":"\u5173\u4e8e MySQL \u7684\u77e5\u8bc6\u80af\u5b9a\u8fdc\u8fdc\u4e0d\u6b62\u4e0a\u9762\u5217\u51fa\u7684\u8fd9\u4e9b\uff0c\u6bd4\u5982 MySQL \u6027\u80fd\u8c03\u4f18\u3001MySQL \u8fd0\u7ef4\u76f8\u5173\u5de5\u5177\u3001MySQL \u6570\u636e\u7684\u5907\u4efd\u548c\u6062\u590d\u3001\u76d1\u63a7 MySQL \u670d\u52a1\u3001\u90e8\u7f72\u9ad8\u53ef\u7528\u67b6\u6784\u7b49\uff0c\u8fd9\u4e00\u7cfb\u5217\u7684\u95ee\u9898\u5728\u8fd9\u91cc\u90fd\u6ca1\u6709\u529e\u6cd5\u9010\u4e00\u5c55\u5f00\u6765\u8ba8\u8bba\uff0c\u90a3\u5c31\u7559\u5230\u6709\u9700\u8981\u7684\u65f6\u5019\u518d\u8fdb\u884c\u8bb2\u89e3\u5427\uff0c\u5404\u4f4d\u8bfb\u8005\u4e5f\u53ef\u4ee5\u81ea\u884c\u63a2\u7d22\u3002","title":"\u603b\u7ed3"},{"location":"%E7%AC%AC47%E8%AF%BE.MySQL%E6%96%B0%E7%89%B9%E6%80%A7/","text":"MySQL \u65b0\u7279\u6027 JSON\u7c7b\u578b \u5f88\u591a\u5f00\u53d1\u8005\u5728\u4f7f\u7528\u5173\u7cfb\u578b\u6570\u636e\u5e93\u505a\u6570\u636e\u6301\u4e45\u5316\u7684\u65f6\u5019\uff0c\u5e38\u5e38\u611f\u5230\u7ed3\u6784\u5316\u7684\u5b58\u50a8\u7f3a\u4e4f\u7075\u6d3b\u6027\uff0c\u56e0\u4e3a\u5fc5\u987b\u4e8b\u5148\u8bbe\u8ba1\u597d\u6240\u6709\u7684\u5217\u4ee5\u53ca\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b\u3002\u5728\u4e1a\u52a1\u53d1\u5c55\u548c\u53d8\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u9700\u8981\u4fee\u6539\u8868\u7ed3\u6784\uff0c\u8fd9\u7edd\u5bf9\u662f\u6bd4\u8f83\u9ebb\u70e6\u548c\u96be\u53d7\u7684\u4e8b\u60c5\u3002\u4ece MySQL 5.7 \u7248\u672c\u5f00\u59cb\uff0cMySQL\u5f15\u5165\u4e86\u5bf9 JSON \u6570\u636e\u7c7b\u578b\u7684\u652f\u6301\uff08MySQL 8.0 \u89e3\u51b3\u4e86 JSON \u7684\u65e5\u5fd7\u6027\u80fd\u74f6\u9888\u95ee\u9898\uff09\uff0c\u7528\u597d JSON \u7c7b\u578b\uff0c\u5176\u5b9e\u5c31\u662f\u6253\u7834\u4e86\u5173\u7cfb\u578b\u6570\u636e\u5e93\u548c\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e4b\u95f4\u7684\u754c\u9650\uff0c\u4e3a\u6570\u636e\u6301\u4e45\u5316\u64cd\u4f5c\u5e26\u6765\u4e86\u66f4\u591a\u7684\u4fbf\u6377\u3002 JSON \u7c7b\u578b\u4e3b\u8981\u5206\u4e3a JSON \u5bf9\u8c61\u548c JSON\u6570\u7ec4\u4e24\u79cd\uff0c\u5982\u4e0b\u6240\u793a\u3002 JSON \u5bf9\u8c61 { \"name\" : \"\u9a86\u660a\" , \"tel\" : \"13122335566\" , \"QQ\" : \"957658\" } JSON \u6570\u7ec4 [ 1 , 2 , 3 ] [{ \"name\" : \"\u9a86\u660a\" , \"tel\" : \"13122335566\" }, { \"name\" : \"\u738b\u5927\u9524\" , \"QQ\" : \"123456\" }] \u54ea\u4e9b\u5730\u65b9\u9700\u8981\u7528\u5230JSON\u7c7b\u578b\u5462\uff1f\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u73b0\u5728\u5f88\u591a\u4ea7\u54c1\u7684\u7528\u6237\u767b\u5f55\u90fd\u652f\u6301\u591a\u79cd\u65b9\u5f0f\uff0c\u4f8b\u5982\u624b\u673a\u53f7\u3001\u5fae\u4fe1\u3001QQ\u3001\u65b0\u6d6a\u5fae\u535a\u7b49\uff0c\u4f46\u662f\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u53c8\u4e0d\u4f1a\u8981\u6c42\u7528\u6237\u63d0\u4f9b\u6240\u6709\u7684\u8fd9\u4e9b\u4fe1\u606f\uff0c\u90a3\u4e48\u7528\u4f20\u7edf\u7684\u8bbe\u8ba1\u65b9\u5f0f\uff0c\u5c31\u9700\u8981\u8bbe\u8ba1\u591a\u4e2a\u5217\u6765\u5bf9\u5e94\u591a\u79cd\u767b\u5f55\u65b9\u5f0f\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u5141\u8bb8\u8fd9\u4e9b\u5217\u5b58\u5728\u7a7a\u503c\uff0c\u8fd9\u663e\u7136\u4e0d\u662f\u5f88\u597d\u7684\u9009\u62e9\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u4ea7\u54c1\u53c8\u589e\u52a0\u4e86\u4e00\u79cd\u767b\u5f55\u65b9\u5f0f\uff0c\u90a3\u4e48\u5c31\u5fc5\u7136\u8981\u4fee\u6539\u4e4b\u524d\u7684\u8868\u7ed3\u6784\uff0c\u8fd9\u5c31\u66f4\u8ba9\u4eba\u75db\u82e6\u4e86\u3002\u4f46\u662f\uff0c\u6709\u4e86 JSON \u7c7b\u578b\uff0c\u521a\u624d\u7684\u95ee\u9898\u5c31\u8fce\u5203\u800c\u89e3\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u51fa\u5982\u4e0b\u6240\u793a\u7684\u8bbe\u8ba1\u3002 create table ` tb_test ` ( ` user_id ` bigint unsigned , ` login_info ` json , primary key ( ` user_id ` ) ) engine = innodb ; insert into ` tb_test ` values ( 1 , '{\"tel\": \"13122335566\", \"QQ\": \"654321\", \"wechat\": \"jackfrued\"}' ), ( 2 , '{\"tel\": \"13599876543\", \"weibo\": \"wangdachui123\"}' ); \u5982\u679c\u8981\u67e5\u8be2\u7528\u6237\u7684\u624b\u673a\u548c\u5fae\u4fe1\u53f7\uff0c\u53ef\u4ee5\u7528\u5982\u4e0b\u6240\u793a\u7684 SQL \u8bed\u53e5\u3002 select ` user_id ` , json_unquote ( json_extract ( ` login_info ` , '$.tel' )) as \u624b\u673a\u53f7 , json_unquote ( json_extract ( ` login_info ` , '$.wechat' )) as \u5fae\u4fe1 from ` tb_test ` ; +---------+-------------+-----------+ | user_id | \u624b\u673a\u53f7 | \u5fae\u4fe1 | +---------+-------------+-----------+ | 1 | 13122335566 | jackfrued | | 2 | 13599876543 | NULL | +---------+-------------+-----------+ \u56e0\u4e3a\u652f\u6301 JSON \u7c7b\u578b\uff0cMySQL \u4e5f\u63d0\u4f9b\u4e86\u914d\u5957\u7684\u5904\u7406 JSON \u6570\u636e\u7684\u51fd\u6570\uff0c\u5c31\u50cf\u4e0a\u9762\u7528\u5230\u7684 json_extract \u548c json_unquote \u3002\u5f53\u7136\uff0c\u4e0a\u9762\u7684 SQL \u8fd8\u6709\u66f4\u4e3a\u4fbf\u6377\u7684\u5199\u6cd5\uff0c\u5982\u4e0b\u6240\u793a\u3002 select ` user_id ` , ` login_info ` ->> '$.tel' as \u624b\u673a\u53f7 , ` login_info ` ->> '$.wechat' as \u5fae\u4fe1 from ` tb_test ` ; \u518d\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6211\u4eec\u7684\u4ea7\u54c1\u8981\u5b9e\u73b0\u7528\u6237\u753b\u50cf\u529f\u80fd\uff08\u7ed9\u7528\u6237\u6253\u6807\u7b7e\uff09\uff0c\u7136\u540e\u57fa\u4e8e\u7528\u6237\u753b\u50cf\u7ed9\u7528\u6237\u63a8\u8350\u5e73\u53f0\u7684\u670d\u52a1\u6216\u6d88\u8d39\u54c1\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 JSON \u7c7b\u578b\u6765\u4fdd\u5b58\u7528\u6237\u753b\u50cf\u6570\u636e\uff0c\u793a\u610f\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \u521b\u5efa\u753b\u50cf\u6807\u7b7e\u8868\u3002 create table ` tb_tags ` ( ` tag_id ` int unsigned not null comment '\u6807\u7b7eID' , ` tag_name ` varchar ( 20 ) not null comment '\u6807\u7b7e\u540d' , primary key ( ` tag_id ` ) ) engine = innodb ; insert into ` tb_tags ` ( ` tag_id ` , ` tag_name ` ) values ( 1 , '70\u540e' ), ( 2 , '80\u540e' ), ( 3 , '90\u540e' ), ( 4 , '00\u540e' ), ( 5 , '\u7231\u8fd0\u52a8' ), ( 6 , '\u9ad8\u5b66\u5386' ), ( 7 , '\u5c0f\u8d44' ), ( 8 , '\u6709\u623f' ), ( 9 , '\u6709\u8f66' ), ( 10 , '\u7231\u770b\u7535\u5f71' ), ( 11 , '\u7231\u7f51\u8d2d' ), ( 12 , '\u5e38\u70b9\u5916\u5356' ); \u4e3a\u7528\u6237\u6253\u6807\u7b7e\u3002 create table ` tb_users_tags ` ( ` user_id ` bigint unsigned not null comment '\u7528\u6237ID' , ` user_tags ` json not null comment '\u7528\u6237\u6807\u7b7e' ) engine = innodb ; insert into ` tb_users_tags ` values ( 1 , '[2, 6, 8, 10]' ), ( 2 , '[3, 10, 12]' ), ( 3 , '[3, 8, 9, 11]' ); \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u4e00\u7ec4\u67e5\u8be2\u6765\u4e86\u89e3 JSON \u7c7b\u578b\u7684\u5de7\u5999\u4e4b\u5904\u3002 \u67e5\u8be2\u7231\u770b\u7535\u5f71\uff08\u6709 10 \u8fd9\u4e2a\u6807\u7b7e\uff09\u7684\u7528\u6237ID\u3002 select ` user_id ` from ` tb_users_tags ` where 10 member of ( ` user_tags `-> '$' ); \u67e5\u8be2\u7231\u770b\u7535\u5f71\uff08\u6709 10 \u8fd9\u4e2a\u6807\u7b7e\uff09\u768480\u540e\uff08\u6709 2 \u8fd9\u4e2a\u6807\u7b7e\uff09\u7528\u6237ID\u3002 select ` user_id ` from ` tb_users_tags ` where json_contains ( ` user_tags `-> '$' , '[2, 10]' ); \u67e5\u8be2\u7231\u770b\u7535\u5f71\u621680\u540e\u621690\u540e\u7684\u7528\u6237ID\u3002 select ` user_id ` from ` tb_users_tags ` where json_overlaps ( user_tags -> '$' , '[2, 3, 10]' ); \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u67e5\u8be2\u7528\u5230\u4e86 member of \u8c13\u8bcd\u548c\u4e24\u4e2a JSON \u51fd\u6570\uff0c json_contains \u53ef\u4ee5\u68c0\u67e5 JSON \u6570\u7ec4\u662f\u5426\u5305\u542b\u4e86\u6307\u5b9a\u7684\u5143\u7d20\uff0c\u800c json_overlaps \u53ef\u4ee5\u68c0\u67e5 JSON \u6570\u7ec4\u662f\u5426\u4e0e\u6307\u5b9a\u7684\u6570\u7ec4\u6709\u91cd\u53e0\u90e8\u5206\u3002 \u7a97\u53e3\u51fd\u6570 MySQL \u4ece8.0\u5f00\u59cb\u652f\u6301\u7a97\u53e3\u51fd\u6570\uff0c\u5927\u591a\u6570\u5546\u4e1a\u6570\u636e\u5e93\u548c\u4e00\u4e9b\u5f00\u6e90\u6570\u636e\u5e93\u65e9\u5df2\u63d0\u4f9b\u4e86\u5bf9\u7a97\u53e3\u51fd\u6570\u7684\u652f\u6301\uff0c\u6709\u7684\u4e5f\u5c06\u5176\u79f0\u4e4b\u4e3a OLAP\uff08\u8054\u673a\u5206\u6790\u548c\u5904\u7406\uff09\u51fd\u6570\uff0c\u542c\u540d\u5b57\u5c31\u77e5\u9053\u8ddf\u7edf\u8ba1\u548c\u5206\u6790\u76f8\u5173\u3002\u4e3a\u4e86\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3\u7a97\u53e3\u51fd\u6570\uff0c\u6211\u4eec\u5148\u8bf4\u8bf4\u7a97\u53e3\u7684\u6982\u5ff5\u3002 \u7a97\u53e3\u53ef\u4ee5\u7406\u89e3\u4e3a\u8bb0\u5f55\u7684\u96c6\u5408\uff0c\u7a97\u53e3\u51fd\u6570\u4e5f\u5c31\u662f\u5728\u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u7684\u8bb0\u5f55\u96c6\u5408\u4e0a\u6267\u884c\u7684\u7279\u6b8a\u51fd\u6570\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8bb0\u5f55\u90fd\u8981\u5728\u6b64\u7a97\u53e3\u5185\u6267\u884c\u51fd\u6570\u3002\u7a97\u53e3\u51fd\u6570\u548c\u6211\u4eec\u4e0a\u9762\u8bb2\u5230\u7684\u805a\u5408\u51fd\u6570\u6bd4\u8f83\u5bb9\u6613\u6df7\u6dc6\uff0c\u4e8c\u8005\u7684\u533a\u522b\u4e3b\u8981\u5728\u4e8e\u805a\u5408\u51fd\u6570\u662f\u5c06\u591a\u6761\u8bb0\u5f55\u805a\u5408\u4e3a\u4e00\u6761\u8bb0\u5f55\uff0c\u7a97\u53e3\u51fd\u6570\u662f\u6bcf\u6761\u8bb0\u5f55\u90fd\u4f1a\u6267\u884c\uff0c\u6267\u884c\u540e\u8bb0\u5f55\u6761\u6570\u4e0d\u4f1a\u53d8\u3002\u7a97\u53e3\u51fd\u6570\u4e0d\u4ec5\u4ec5\u662f\u51e0\u4e2a\u51fd\u6570\uff0c\u5b83\u662f\u4e00\u5957\u5b8c\u6574\u7684\u8bed\u6cd5\uff0c\u51fd\u6570\u53ea\u662f\u8be5\u8bed\u6cd5\u7684\u4e00\u90e8\u5206\uff0c\u57fa\u672c\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a < \u7a97\u53e3\u51fd\u6570 > over ( partition by < \u7528\u4e8e\u5206\u7ec4\u7684\u5217\u540d > order by < \u7528\u6237\u6392\u5e8f\u7684\u5217\u540d > ) \u4e0a\u9762\u8bed\u6cd5\u4e2d\uff0c\u7a97\u53e3\u51fd\u6570\u7684\u4f4d\u7f6e\u53ef\u4ee5\u653e\u4ee5\u4e0b\u4e24\u79cd\u51fd\u6570\uff1a \u4e13\u7528\u7a97\u53e3\u51fd\u6570\uff0c\u5305\u62ec\uff1a lead \u3001 lag \u3001 first_value \u3001 last_value \u3001 rank \u3001 dense_rank \u548c row_number \u7b49\u3002 \u805a\u5408\u51fd\u6570\uff0c\u5305\u62ec\uff1a sum \u3001 avg \u3001 max \u3001 min \u548c count \u7b49\u3002 \u4e0b\u9762\u4e3a\u5927\u5bb6\u4e3e\u51e0\u4e2a\u4f7f\u7528\u7a97\u53e3\u51fd\u6570\u7684\u7b80\u5355\u4f8b\u5b50\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u4e0a\u4e00\u8bfe\u521b\u5efa\u7684 hrs \u6570\u636e\u5e93\u3002 \u4f8b\u5b501\uff1a\u67e5\u8be2\u6309\u6708\u85aa\u4ece\u9ad8\u5230\u4f4e\u6392\u5728\u7b2c4\u5230\u7b2c6\u540d\u7684\u5458\u5de5\u7684\u59d3\u540d\u548c\u6708\u85aa\u3002 select * from ( select ` ename ` , ` sal ` , row_number () over ( order by ` sal ` desc ) as ` rank ` from ` tb_emp ` ) ` temp ` where ` rank ` between 4 and 6 ; \u8bf4\u660e \uff1a\u4e0a\u9762\u4f7f\u7528\u7684\u51fd\u6570 row_number() \u53ef\u4ee5\u4e3a\u6bcf\u6761\u8bb0\u5f55\u751f\u6210\u4e00\u4e2a\u884c\u53f7\uff0c\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5c06\u5176\u66ff\u6362\u4e3a rank() \u6216 dense_rank() \u51fd\u6570\uff0c\u4e09\u8005\u7684\u533a\u522b\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\u6216\u9605\u8bfb \u300a\u901a\u4fd7\u6613\u61c2\u7684\u5b66\u4f1a\uff1aSQL\u7a97\u53e3\u51fd\u6570\u300b \u8fdb\u884c\u4e86\u89e3\u3002\u5728MySQL 8\u4ee5\u524d\u7684\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u5b8c\u6210\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002 select ` rank ` , ` ename ` , ` sal ` from ( select @ a : =@ a + 1 as ` rank ` , ` ename ` , ` sal ` from ` tb_emp ` , ( select @ a : = 0 ) as t1 order by ` sal ` desc ) as ` temp ` where ` rank ` between 4 and 6 ; \u4f8b\u5b502\uff1a\u67e5\u8be2\u6bcf\u4e2a\u90e8\u95e8\u6708\u85aa\u6700\u9ad8\u7684\u4e24\u540d\u7684\u5458\u5de5\u7684\u59d3\u540d\u548c\u90e8\u95e8\u540d\u79f0\u3002 select ` ename ` , ` sal ` , ` dname ` from ( select ` ename ` , ` sal ` , ` dno ` , rank () over ( partition by ` dno ` order by ` sal ` desc ) as ` rank ` from ` tb_emp ` ) as ` temp ` natural join ` tb_dept ` where ` rank `<= 2 ; \u8bf4\u660e\uff1a\u5728MySQL 8\u4ee5\u524d\u7684\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u5b8c\u6210\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002 SQL select `ename`, `sal`, `dname` from `tb_emp` as `t1` natural join `tb_dept` where ( select count(*) from `tb_emp` as `t2` where `t1`.`dno`=`t2`.`dno` and `t2`.`sal`>`t1`.`sal` )<2 order by `dno` asc, `sal` desc;","title":"\u7b2c47\u8bfe.MySQL\u65b0\u7279\u6027"},{"location":"%E7%AC%AC47%E8%AF%BE.MySQL%E6%96%B0%E7%89%B9%E6%80%A7/#mysql","text":"","title":"MySQL \u65b0\u7279\u6027"},{"location":"%E7%AC%AC47%E8%AF%BE.MySQL%E6%96%B0%E7%89%B9%E6%80%A7/#json","text":"\u5f88\u591a\u5f00\u53d1\u8005\u5728\u4f7f\u7528\u5173\u7cfb\u578b\u6570\u636e\u5e93\u505a\u6570\u636e\u6301\u4e45\u5316\u7684\u65f6\u5019\uff0c\u5e38\u5e38\u611f\u5230\u7ed3\u6784\u5316\u7684\u5b58\u50a8\u7f3a\u4e4f\u7075\u6d3b\u6027\uff0c\u56e0\u4e3a\u5fc5\u987b\u4e8b\u5148\u8bbe\u8ba1\u597d\u6240\u6709\u7684\u5217\u4ee5\u53ca\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b\u3002\u5728\u4e1a\u52a1\u53d1\u5c55\u548c\u53d8\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u9700\u8981\u4fee\u6539\u8868\u7ed3\u6784\uff0c\u8fd9\u7edd\u5bf9\u662f\u6bd4\u8f83\u9ebb\u70e6\u548c\u96be\u53d7\u7684\u4e8b\u60c5\u3002\u4ece MySQL 5.7 \u7248\u672c\u5f00\u59cb\uff0cMySQL\u5f15\u5165\u4e86\u5bf9 JSON \u6570\u636e\u7c7b\u578b\u7684\u652f\u6301\uff08MySQL 8.0 \u89e3\u51b3\u4e86 JSON \u7684\u65e5\u5fd7\u6027\u80fd\u74f6\u9888\u95ee\u9898\uff09\uff0c\u7528\u597d JSON \u7c7b\u578b\uff0c\u5176\u5b9e\u5c31\u662f\u6253\u7834\u4e86\u5173\u7cfb\u578b\u6570\u636e\u5e93\u548c\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e4b\u95f4\u7684\u754c\u9650\uff0c\u4e3a\u6570\u636e\u6301\u4e45\u5316\u64cd\u4f5c\u5e26\u6765\u4e86\u66f4\u591a\u7684\u4fbf\u6377\u3002 JSON \u7c7b\u578b\u4e3b\u8981\u5206\u4e3a JSON \u5bf9\u8c61\u548c JSON\u6570\u7ec4\u4e24\u79cd\uff0c\u5982\u4e0b\u6240\u793a\u3002 JSON \u5bf9\u8c61 { \"name\" : \"\u9a86\u660a\" , \"tel\" : \"13122335566\" , \"QQ\" : \"957658\" } JSON \u6570\u7ec4 [ 1 , 2 , 3 ] [{ \"name\" : \"\u9a86\u660a\" , \"tel\" : \"13122335566\" }, { \"name\" : \"\u738b\u5927\u9524\" , \"QQ\" : \"123456\" }] \u54ea\u4e9b\u5730\u65b9\u9700\u8981\u7528\u5230JSON\u7c7b\u578b\u5462\uff1f\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u73b0\u5728\u5f88\u591a\u4ea7\u54c1\u7684\u7528\u6237\u767b\u5f55\u90fd\u652f\u6301\u591a\u79cd\u65b9\u5f0f\uff0c\u4f8b\u5982\u624b\u673a\u53f7\u3001\u5fae\u4fe1\u3001QQ\u3001\u65b0\u6d6a\u5fae\u535a\u7b49\uff0c\u4f46\u662f\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u53c8\u4e0d\u4f1a\u8981\u6c42\u7528\u6237\u63d0\u4f9b\u6240\u6709\u7684\u8fd9\u4e9b\u4fe1\u606f\uff0c\u90a3\u4e48\u7528\u4f20\u7edf\u7684\u8bbe\u8ba1\u65b9\u5f0f\uff0c\u5c31\u9700\u8981\u8bbe\u8ba1\u591a\u4e2a\u5217\u6765\u5bf9\u5e94\u591a\u79cd\u767b\u5f55\u65b9\u5f0f\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u5141\u8bb8\u8fd9\u4e9b\u5217\u5b58\u5728\u7a7a\u503c\uff0c\u8fd9\u663e\u7136\u4e0d\u662f\u5f88\u597d\u7684\u9009\u62e9\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u4ea7\u54c1\u53c8\u589e\u52a0\u4e86\u4e00\u79cd\u767b\u5f55\u65b9\u5f0f\uff0c\u90a3\u4e48\u5c31\u5fc5\u7136\u8981\u4fee\u6539\u4e4b\u524d\u7684\u8868\u7ed3\u6784\uff0c\u8fd9\u5c31\u66f4\u8ba9\u4eba\u75db\u82e6\u4e86\u3002\u4f46\u662f\uff0c\u6709\u4e86 JSON \u7c7b\u578b\uff0c\u521a\u624d\u7684\u95ee\u9898\u5c31\u8fce\u5203\u800c\u89e3\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u51fa\u5982\u4e0b\u6240\u793a\u7684\u8bbe\u8ba1\u3002 create table ` tb_test ` ( ` user_id ` bigint unsigned , ` login_info ` json , primary key ( ` user_id ` ) ) engine = innodb ; insert into ` tb_test ` values ( 1 , '{\"tel\": \"13122335566\", \"QQ\": \"654321\", \"wechat\": \"jackfrued\"}' ), ( 2 , '{\"tel\": \"13599876543\", \"weibo\": \"wangdachui123\"}' ); \u5982\u679c\u8981\u67e5\u8be2\u7528\u6237\u7684\u624b\u673a\u548c\u5fae\u4fe1\u53f7\uff0c\u53ef\u4ee5\u7528\u5982\u4e0b\u6240\u793a\u7684 SQL \u8bed\u53e5\u3002 select ` user_id ` , json_unquote ( json_extract ( ` login_info ` , '$.tel' )) as \u624b\u673a\u53f7 , json_unquote ( json_extract ( ` login_info ` , '$.wechat' )) as \u5fae\u4fe1 from ` tb_test ` ; +---------+-------------+-----------+ | user_id | \u624b\u673a\u53f7 | \u5fae\u4fe1 | +---------+-------------+-----------+ | 1 | 13122335566 | jackfrued | | 2 | 13599876543 | NULL | +---------+-------------+-----------+ \u56e0\u4e3a\u652f\u6301 JSON \u7c7b\u578b\uff0cMySQL \u4e5f\u63d0\u4f9b\u4e86\u914d\u5957\u7684\u5904\u7406 JSON \u6570\u636e\u7684\u51fd\u6570\uff0c\u5c31\u50cf\u4e0a\u9762\u7528\u5230\u7684 json_extract \u548c json_unquote \u3002\u5f53\u7136\uff0c\u4e0a\u9762\u7684 SQL \u8fd8\u6709\u66f4\u4e3a\u4fbf\u6377\u7684\u5199\u6cd5\uff0c\u5982\u4e0b\u6240\u793a\u3002 select ` user_id ` , ` login_info ` ->> '$.tel' as \u624b\u673a\u53f7 , ` login_info ` ->> '$.wechat' as \u5fae\u4fe1 from ` tb_test ` ; \u518d\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6211\u4eec\u7684\u4ea7\u54c1\u8981\u5b9e\u73b0\u7528\u6237\u753b\u50cf\u529f\u80fd\uff08\u7ed9\u7528\u6237\u6253\u6807\u7b7e\uff09\uff0c\u7136\u540e\u57fa\u4e8e\u7528\u6237\u753b\u50cf\u7ed9\u7528\u6237\u63a8\u8350\u5e73\u53f0\u7684\u670d\u52a1\u6216\u6d88\u8d39\u54c1\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 JSON \u7c7b\u578b\u6765\u4fdd\u5b58\u7528\u6237\u753b\u50cf\u6570\u636e\uff0c\u793a\u610f\u4ee3\u7801\u5982\u4e0b\u6240\u793a\u3002 \u521b\u5efa\u753b\u50cf\u6807\u7b7e\u8868\u3002 create table ` tb_tags ` ( ` tag_id ` int unsigned not null comment '\u6807\u7b7eID' , ` tag_name ` varchar ( 20 ) not null comment '\u6807\u7b7e\u540d' , primary key ( ` tag_id ` ) ) engine = innodb ; insert into ` tb_tags ` ( ` tag_id ` , ` tag_name ` ) values ( 1 , '70\u540e' ), ( 2 , '80\u540e' ), ( 3 , '90\u540e' ), ( 4 , '00\u540e' ), ( 5 , '\u7231\u8fd0\u52a8' ), ( 6 , '\u9ad8\u5b66\u5386' ), ( 7 , '\u5c0f\u8d44' ), ( 8 , '\u6709\u623f' ), ( 9 , '\u6709\u8f66' ), ( 10 , '\u7231\u770b\u7535\u5f71' ), ( 11 , '\u7231\u7f51\u8d2d' ), ( 12 , '\u5e38\u70b9\u5916\u5356' ); \u4e3a\u7528\u6237\u6253\u6807\u7b7e\u3002 create table ` tb_users_tags ` ( ` user_id ` bigint unsigned not null comment '\u7528\u6237ID' , ` user_tags ` json not null comment '\u7528\u6237\u6807\u7b7e' ) engine = innodb ; insert into ` tb_users_tags ` values ( 1 , '[2, 6, 8, 10]' ), ( 2 , '[3, 10, 12]' ), ( 3 , '[3, 8, 9, 11]' ); \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u4e00\u7ec4\u67e5\u8be2\u6765\u4e86\u89e3 JSON \u7c7b\u578b\u7684\u5de7\u5999\u4e4b\u5904\u3002 \u67e5\u8be2\u7231\u770b\u7535\u5f71\uff08\u6709 10 \u8fd9\u4e2a\u6807\u7b7e\uff09\u7684\u7528\u6237ID\u3002 select ` user_id ` from ` tb_users_tags ` where 10 member of ( ` user_tags `-> '$' ); \u67e5\u8be2\u7231\u770b\u7535\u5f71\uff08\u6709 10 \u8fd9\u4e2a\u6807\u7b7e\uff09\u768480\u540e\uff08\u6709 2 \u8fd9\u4e2a\u6807\u7b7e\uff09\u7528\u6237ID\u3002 select ` user_id ` from ` tb_users_tags ` where json_contains ( ` user_tags `-> '$' , '[2, 10]' ); \u67e5\u8be2\u7231\u770b\u7535\u5f71\u621680\u540e\u621690\u540e\u7684\u7528\u6237ID\u3002 select ` user_id ` from ` tb_users_tags ` where json_overlaps ( user_tags -> '$' , '[2, 3, 10]' ); \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u67e5\u8be2\u7528\u5230\u4e86 member of \u8c13\u8bcd\u548c\u4e24\u4e2a JSON \u51fd\u6570\uff0c json_contains \u53ef\u4ee5\u68c0\u67e5 JSON \u6570\u7ec4\u662f\u5426\u5305\u542b\u4e86\u6307\u5b9a\u7684\u5143\u7d20\uff0c\u800c json_overlaps \u53ef\u4ee5\u68c0\u67e5 JSON \u6570\u7ec4\u662f\u5426\u4e0e\u6307\u5b9a\u7684\u6570\u7ec4\u6709\u91cd\u53e0\u90e8\u5206\u3002","title":"JSON\u7c7b\u578b"},{"location":"%E7%AC%AC47%E8%AF%BE.MySQL%E6%96%B0%E7%89%B9%E6%80%A7/#_1","text":"MySQL \u4ece8.0\u5f00\u59cb\u652f\u6301\u7a97\u53e3\u51fd\u6570\uff0c\u5927\u591a\u6570\u5546\u4e1a\u6570\u636e\u5e93\u548c\u4e00\u4e9b\u5f00\u6e90\u6570\u636e\u5e93\u65e9\u5df2\u63d0\u4f9b\u4e86\u5bf9\u7a97\u53e3\u51fd\u6570\u7684\u652f\u6301\uff0c\u6709\u7684\u4e5f\u5c06\u5176\u79f0\u4e4b\u4e3a OLAP\uff08\u8054\u673a\u5206\u6790\u548c\u5904\u7406\uff09\u51fd\u6570\uff0c\u542c\u540d\u5b57\u5c31\u77e5\u9053\u8ddf\u7edf\u8ba1\u548c\u5206\u6790\u76f8\u5173\u3002\u4e3a\u4e86\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3\u7a97\u53e3\u51fd\u6570\uff0c\u6211\u4eec\u5148\u8bf4\u8bf4\u7a97\u53e3\u7684\u6982\u5ff5\u3002 \u7a97\u53e3\u53ef\u4ee5\u7406\u89e3\u4e3a\u8bb0\u5f55\u7684\u96c6\u5408\uff0c\u7a97\u53e3\u51fd\u6570\u4e5f\u5c31\u662f\u5728\u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u7684\u8bb0\u5f55\u96c6\u5408\u4e0a\u6267\u884c\u7684\u7279\u6b8a\u51fd\u6570\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8bb0\u5f55\u90fd\u8981\u5728\u6b64\u7a97\u53e3\u5185\u6267\u884c\u51fd\u6570\u3002\u7a97\u53e3\u51fd\u6570\u548c\u6211\u4eec\u4e0a\u9762\u8bb2\u5230\u7684\u805a\u5408\u51fd\u6570\u6bd4\u8f83\u5bb9\u6613\u6df7\u6dc6\uff0c\u4e8c\u8005\u7684\u533a\u522b\u4e3b\u8981\u5728\u4e8e\u805a\u5408\u51fd\u6570\u662f\u5c06\u591a\u6761\u8bb0\u5f55\u805a\u5408\u4e3a\u4e00\u6761\u8bb0\u5f55\uff0c\u7a97\u53e3\u51fd\u6570\u662f\u6bcf\u6761\u8bb0\u5f55\u90fd\u4f1a\u6267\u884c\uff0c\u6267\u884c\u540e\u8bb0\u5f55\u6761\u6570\u4e0d\u4f1a\u53d8\u3002\u7a97\u53e3\u51fd\u6570\u4e0d\u4ec5\u4ec5\u662f\u51e0\u4e2a\u51fd\u6570\uff0c\u5b83\u662f\u4e00\u5957\u5b8c\u6574\u7684\u8bed\u6cd5\uff0c\u51fd\u6570\u53ea\u662f\u8be5\u8bed\u6cd5\u7684\u4e00\u90e8\u5206\uff0c\u57fa\u672c\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a < \u7a97\u53e3\u51fd\u6570 > over ( partition by < \u7528\u4e8e\u5206\u7ec4\u7684\u5217\u540d > order by < \u7528\u6237\u6392\u5e8f\u7684\u5217\u540d > ) \u4e0a\u9762\u8bed\u6cd5\u4e2d\uff0c\u7a97\u53e3\u51fd\u6570\u7684\u4f4d\u7f6e\u53ef\u4ee5\u653e\u4ee5\u4e0b\u4e24\u79cd\u51fd\u6570\uff1a \u4e13\u7528\u7a97\u53e3\u51fd\u6570\uff0c\u5305\u62ec\uff1a lead \u3001 lag \u3001 first_value \u3001 last_value \u3001 rank \u3001 dense_rank \u548c row_number \u7b49\u3002 \u805a\u5408\u51fd\u6570\uff0c\u5305\u62ec\uff1a sum \u3001 avg \u3001 max \u3001 min \u548c count \u7b49\u3002 \u4e0b\u9762\u4e3a\u5927\u5bb6\u4e3e\u51e0\u4e2a\u4f7f\u7528\u7a97\u53e3\u51fd\u6570\u7684\u7b80\u5355\u4f8b\u5b50\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u4e0a\u4e00\u8bfe\u521b\u5efa\u7684 hrs \u6570\u636e\u5e93\u3002 \u4f8b\u5b501\uff1a\u67e5\u8be2\u6309\u6708\u85aa\u4ece\u9ad8\u5230\u4f4e\u6392\u5728\u7b2c4\u5230\u7b2c6\u540d\u7684\u5458\u5de5\u7684\u59d3\u540d\u548c\u6708\u85aa\u3002 select * from ( select ` ename ` , ` sal ` , row_number () over ( order by ` sal ` desc ) as ` rank ` from ` tb_emp ` ) ` temp ` where ` rank ` between 4 and 6 ; \u8bf4\u660e \uff1a\u4e0a\u9762\u4f7f\u7528\u7684\u51fd\u6570 row_number() \u53ef\u4ee5\u4e3a\u6bcf\u6761\u8bb0\u5f55\u751f\u6210\u4e00\u4e2a\u884c\u53f7\uff0c\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5c06\u5176\u66ff\u6362\u4e3a rank() \u6216 dense_rank() \u51fd\u6570\uff0c\u4e09\u8005\u7684\u533a\u522b\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\u6216\u9605\u8bfb \u300a\u901a\u4fd7\u6613\u61c2\u7684\u5b66\u4f1a\uff1aSQL\u7a97\u53e3\u51fd\u6570\u300b \u8fdb\u884c\u4e86\u89e3\u3002\u5728MySQL 8\u4ee5\u524d\u7684\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u5b8c\u6210\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002 select ` rank ` , ` ename ` , ` sal ` from ( select @ a : =@ a + 1 as ` rank ` , ` ename ` , ` sal ` from ` tb_emp ` , ( select @ a : = 0 ) as t1 order by ` sal ` desc ) as ` temp ` where ` rank ` between 4 and 6 ; \u4f8b\u5b502\uff1a\u67e5\u8be2\u6bcf\u4e2a\u90e8\u95e8\u6708\u85aa\u6700\u9ad8\u7684\u4e24\u540d\u7684\u5458\u5de5\u7684\u59d3\u540d\u548c\u90e8\u95e8\u540d\u79f0\u3002 select ` ename ` , ` sal ` , ` dname ` from ( select ` ename ` , ` sal ` , ` dno ` , rank () over ( partition by ` dno ` order by ` sal ` desc ) as ` rank ` from ` tb_emp ` ) as ` temp ` natural join ` tb_dept ` where ` rank `<= 2 ; \u8bf4\u660e\uff1a\u5728MySQL 8\u4ee5\u524d\u7684\u7248\u672c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u65b9\u5f0f\u6765\u5b8c\u6210\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002 SQL select `ename`, `sal`, `dname` from `tb_emp` as `t1` natural join `tb_dept` where ( select count(*) from `tb_emp` as `t2` where `t1`.`dno`=`t2`.`dno` and `t2`.`sal`>`t1`.`sal` )<2 order by `dno` asc, `sal` desc;","title":"\u7a97\u53e3\u51fd\u6570"},{"location":"%E7%AC%AC48%E8%AF%BE.Python%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/","text":"Python\u7a0b\u5e8f\u63a5\u5165MySQL\u6570\u636e\u5e93 \u5728 Python3 \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 mysqlclient \u6216\u8005 pymysql \u4e09\u65b9\u5e93\u6765\u63a5\u5165 MySQL \u6570\u636e\u5e93\u5e76\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u64cd\u4f5c\u3002\u4e8c\u8005\u7684\u7528\u6cd5\u5b8c\u5168\u76f8\u540c\uff0c\u53ea\u662f\u5bfc\u5165\u7684\u6a21\u5757\u540d\u4e0d\u4e00\u6837\u3002\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u7eaf Python \u7684\u4e09\u65b9\u5e93 pymysql \uff0c\u56e0\u4e3a\u5b83\u66f4\u5bb9\u6613\u5b89\u88c5\u6210\u529f\u3002\u4e0b\u9762\u6211\u4eec\u4ecd\u7136\u4ee5\u4e4b\u524d\u521b\u5efa\u7684\u540d\u4e3a hrs \u7684\u6570\u636e\u5e93\u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u6f14\u793a\u5982\u4f55\u901a\u8fc7 Python \u7a0b\u5e8f\u64cd\u4f5c MySQL \u6570\u636e\u5e93\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u64cd\u4f5c\u3002 \u63a5\u5165MySQL \u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u6216\u8005 PyCharm \u7684\u7ec8\u7aef\u4e2d\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u5b89\u88c5 pymysql \uff0c\u5982\u679c\u9700\u8981\u63a5\u5165 MySQL 8\uff0c\u8fd8\u9700\u8981\u5b89\u88c5\u4e00\u4e2a\u540d\u4e3a cryptography \u7684\u4e09\u65b9\u5e93\u6765\u652f\u6301 MySQL 8 \u7684\u5bc6\u7801\u8ba4\u8bc1\u65b9\u5f0f\u3002 pip install pymysql cryptography \u4f7f\u7528 pymysql \u64cd\u4f5c MySQL \u7684\u6b65\u9aa4\u5982\u4e0b\u6240\u793a\uff1a \u521b\u5efa\u8fde\u63a5\u3002MySQL \u670d\u52a1\u5668\u542f\u52a8\u540e\uff0c\u63d0\u4f9b\u4e86\u57fa\u4e8e TCP \uff08\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u7684\u7f51\u7edc\u670d\u52a1\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 pymysql \u6a21\u5757\u7684 connect \u51fd\u6570\u8fde\u63a5 MySQL \u670d\u52a1\u5668\u3002\u5728\u8c03\u7528 connect \u51fd\u6570\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u4e3b\u673a\uff08 host \uff09\u3001\u7aef\u53e3\uff08 port \uff09\u3001\u7528\u6237\u540d\uff08 user \uff09\u3001\u53e3\u4ee4\uff08 password \uff09\u3001\u6570\u636e\u5e93\uff08 database \uff09\u3001\u5b57\u7b26\u96c6\uff08 charset \uff09\u7b49\u53c2\u6570\uff0c\u8be5\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a Connection \u5bf9\u8c61\u3002 \u83b7\u53d6\u6e38\u6807\u3002\u8fde\u63a5 MySQL \u670d\u52a1\u5668\u6210\u529f\u540e\uff0c\u63a5\u4e0b\u6765\u8981\u505a\u7684\u5c31\u662f\u5411\u6570\u636e\u5e93\u670d\u52a1\u5668\u53d1\u9001 SQL \u8bed\u53e5\uff0cMySQL \u4f1a\u6267\u884c\u63a5\u6536\u5230\u7684 SQL \u5e76\u5c06\u6267\u884c\u7ed3\u679c\u901a\u8fc7\u7f51\u7edc\u8fd4\u56de\u3002\u8981\u5b9e\u73b0\u8fd9\u9879\u64cd\u4f5c\uff0c\u9700\u8981\u5148\u901a\u8fc7\u8fde\u63a5\u5bf9\u8c61\u7684 cursor \u65b9\u6cd5\u83b7\u53d6\u6e38\u6807\uff08 Cursor \uff09\u5bf9\u8c61\u3002 \u53d1\u51fa SQL\u3002\u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u7684 execute \u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5411\u6570\u636e\u5e93\u53d1\u51fa SQL \u8bed\u53e5\u3002 \u5982\u679c\u6267\u884c insert \u3001 delete \u6216 update \u64cd\u4f5c\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u63d0\u4ea4\u6216\u56de\u6eda\u4e8b\u52a1\u3002\u56e0\u4e3a\u521b\u5efa\u8fde\u63a5\u65f6\uff0c\u9ed8\u8ba4\u5f00\u542f\u4e86\u4e8b\u52a1\u73af\u5883\uff0c\u5728\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u9700\u8981\u4f7f\u7528\u8fde\u63a5\u5bf9\u8c61\u7684 commit \u6216 rollback \u65b9\u6cd5\uff0c\u5b9e\u73b0\u4e8b\u52a1\u7684\u63d0\u4ea4\u6216\u56de\u6eda\uff0c rollback \u65b9\u6cd5\u901a\u5e38\u4f1a\u653e\u5728\u5f02\u5e38\u6355\u83b7\u4ee3\u7801\u5757 except \u4e2d\u3002\u5982\u679c\u6267\u884c select \u64cd\u4f5c\uff0c\u9700\u8981\u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u6293\u53d6\u67e5\u8be2\u7684\u7ed3\u679c\uff0c\u5bf9\u5e94\u7684\u65b9\u6cd5\u6709\u4e09\u4e2a\uff0c\u5206\u522b\u662f\uff1a fetchone \u3001 fetchmany \u548c fetchall \u3002\u5176\u4e2d fetchone \u65b9\u6cd5\u4f1a\u6293\u53d6\u5230\u4e00\u6761\u8bb0\u5f55\uff0c\u5e76\u4ee5\u5143\u7ec4\u6216\u5b57\u5178\u7684\u65b9\u5f0f\u8fd4\u56de\uff1b fetchmany \u548c fetchall \u65b9\u6cd5\u4f1a\u6293\u53d6\u5230\u591a\u6761\u8bb0\u5f55\uff0c\u4ee5\u5d4c\u5957\u5143\u7ec4\u6216\u5217\u8868\u88c5\u5b57\u5178\u7684\u65b9\u5f0f\u8fd4\u56de\u3002 \u5173\u95ed\u8fde\u63a5\u3002\u5728\u5b8c\u6210\u6301\u4e45\u5316\u64cd\u4f5c\u540e\uff0c\u8bf7\u4e0d\u8981\u5fd8\u8bb0\u5173\u95ed\u8fde\u63a5\uff0c\u91ca\u653e\u5916\u90e8\u8d44\u6e90\u3002\u6211\u4eec\u901a\u5e38\u4f1a\u5728 finally \u4ee3\u7801\u5757\u4e2d\u4f7f\u7528\u8fde\u63a5\u5bf9\u8c61\u7684 close \u65b9\u6cd5\u6765\u5173\u95ed\u8fde\u63a5\u3002 \u4ee3\u7801\u5b9e\u64cd \u4e0b\u9762\uff0c\u6211\u4eec\u901a\u8fc7\u4ee3\u7801\u5b9e\u64cd\u7684\u65b9\u5f0f\u4e3a\u5927\u5bb6\u6f14\u793a\u4e0a\u9762\u8bf4\u7684\u4e94\u4e2a\u6b65\u9aa4\u3002 \u63d2\u5165\u6570\u636e import pymysql no = int ( input ( '\u90e8\u95e8\u7f16\u53f7: ' )) name = input ( '\u90e8\u95e8\u540d\u79f0: ' ) location = input ( '\u90e8\u95e8\u6240\u5728\u5730: ' ) # 1. \u521b\u5efa\u8fde\u63a5\uff08Connection\uff09 conn = pymysql . connect ( host = '127.0.0.1' , port = 3306 , user = 'guest' , password = 'Guest.618' , database = 'hrs' , charset = 'utf8mb4' ) try : # 2. \u83b7\u53d6\u6e38\u6807\u5bf9\u8c61\uff08Cursor\uff09 with conn . cursor () as cursor : # 3. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u5411\u6570\u636e\u5e93\u670d\u52a1\u5668\u53d1\u51faSQL\u8bed\u53e5 affected_rows = cursor . execute ( 'insert into `tb_dept` values ( %s , %s , %s )' , ( no , name , location ) ) if affected_rows == 1 : print ( '\u65b0\u589e\u90e8\u95e8\u6210\u529f!!!' ) # 4. \u63d0\u4ea4\u4e8b\u52a1\uff08transaction\uff09 conn . commit () except pymysql . MySQLError as err : # 4. \u56de\u6eda\u4e8b\u52a1 conn . rollback () print ( type ( err ), err ) finally : # 5. \u5173\u95ed\u8fde\u63a5\u91ca\u653e\u8d44\u6e90 conn . close () \u8bf4\u660e \uff1a\u4e0a\u9762\u7684 127.0.0.1 \u79f0\u4e3a\u56de\u73af\u5730\u5740\uff0c\u5b83\u4ee3\u8868\u7684\u662f\u672c\u673a\u3002\u4e0b\u9762\u7684 guest \u662f\u6211\u63d0\u524d\u521b\u5efa\u597d\u7684\u7528\u6237\uff0c\u8be5\u7528\u6237\u62e5\u6709\u5bf9 hrs \u6570\u636e\u5e93\u7684 insert \u3001 delete \u3001 update \u548c select \u6743\u9650\u3002\u6211\u4eec\u4e0d\u5efa\u8bae\u5927\u5bb6\u5728\u9879\u76ee\u4e2d\u76f4\u63a5\u4f7f\u7528 root \u8d85\u7ea7\u7ba1\u7406\u5458\u8d26\u53f7\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u8fd9\u6837\u505a\u5b9e\u5728\u662f\u592a\u5371\u9669\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u521b\u5efa\u540d\u4e3a guest \u7684\u7528\u6237\u5e76\u4e3a\u5176\u6388\u6743\u3002 create user 'guest' @ '%' identified by 'Guest.618' ; grant insert , delete , update , select on ` hrs ` . * to 'guest' @ '%' ; \u5982\u679c\u8981\u63d2\u5165\u5927\u91cf\u6570\u636e\uff0c\u5efa\u8bae\u4f7f\u7528\u6e38\u6807\u5bf9\u8c61\u7684 executemany \u65b9\u6cd5\u505a\u6279\u5904\u7406\uff08\u4e00\u4e2a insert \u64cd\u4f5c\u540e\u9762\u8ddf\u4e0a\u591a\u7ec4\u6570\u636e\uff09\uff0c\u5927\u5bb6\u53ef\u4ee5\u5c1d\u8bd5\u5411\u4e00\u5f20\u8868\u63d2\u516510000\u6761\u8bb0\u5f55\uff0c\u7136\u540e\u770b\u770b\u4e0d\u4f7f\u7528\u6279\u5904\u7406\u4e00\u6761\u6761\u7684\u63d2\u5165\u548c\u4f7f\u7528\u6279\u5904\u7406\u6709\u4ec0\u4e48\u5dee\u522b\u3002\u6e38\u6807\u5bf9\u8c61\u7684 executemany \u65b9\u6cd5\u7b2c\u4e00\u4e2a\u53c2\u6570\u4ecd\u7136\u662f SQL \u8bed\u53e5\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ef\u4ee5\u662f\u5305\u542b\u591a\u7ec4\u6570\u636e\u7684\u5217\u8868\u6216\u5143\u7ec4\u3002 \u5220\u9664\u6570\u636e import pymysql no = int ( input ( '\u90e8\u95e8\u7f16\u53f7: ' )) # 1. \u521b\u5efa\u8fde\u63a5\uff08Connection\uff09 conn = pymysql . connect ( host = '127.0.0.1' , port = 3306 , user = 'guest' , password = 'Guest.618' , database = 'hrs' , charset = 'utf8mb4' , autocommit = True ) try : # 2. \u83b7\u53d6\u6e38\u6807\u5bf9\u8c61\uff08Cursor\uff09 with conn . cursor () as cursor : # 3. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u5411\u6570\u636e\u5e93\u670d\u52a1\u5668\u53d1\u51faSQL\u8bed\u53e5 affected_rows = cursor . execute ( 'delete from `tb_dept` where `dno`= %s ' , ( no , ) ) if affected_rows == 1 : print ( '\u5220\u9664\u90e8\u95e8\u6210\u529f!!!' ) finally : # 5. \u5173\u95ed\u8fde\u63a5\u91ca\u653e\u8d44\u6e90 conn . close () \u8bf4\u660e \uff1a\u5982\u679c\u4e0d\u5e0c\u671b\u6bcf\u6b21 SQL \u64cd\u4f5c\u4e4b\u540e\u624b\u52a8\u63d0\u4ea4\u6216\u56de\u6eda\u4e8b\u52a1\uff0c\u53ef\u4ee5 connect \u51fd\u6570\u4e2d\u52a0\u4e00\u4e2a\u540d\u4e3a autocommit \u7684\u53c2\u6570\u5e76\u5c06\u5b83\u7684\u503c\u8bbe\u7f6e\u4e3a True \uff0c\u8868\u793a\u6bcf\u6b21\u6267\u884c SQL \u6210\u529f\u540e\u81ea\u52a8\u63d0\u4ea4\u3002\u4f46\u662f\u6211\u4eec\u5efa\u8bae\u5927\u5bb6\u624b\u52a8\u63d0\u4ea4\u6216\u56de\u6eda\uff0c\u8fd9\u6837\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u4e1a\u52a1\u9700\u8981\u6765\u6784\u9020\u4e8b\u52a1\u73af\u5883\u3002\u5982\u679c\u4e0d\u613f\u610f\u6355\u83b7\u5f02\u5e38\u5e76\u8fdb\u884c\u5904\u7406\uff0c\u53ef\u4ee5\u5728 try \u4ee3\u7801\u5757\u540e\u76f4\u63a5\u8ddf finally \u5757\uff0c\u7701\u7565 except \u610f\u5473\u7740\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u4ee3\u7801\u4f1a\u76f4\u63a5\u5d29\u6e83\u5e76\u5c06\u5f02\u5e38\u6808\u663e\u793a\u5728\u7ec8\u7aef\u4e2d\u3002 \u66f4\u65b0\u6570\u636e import pymysql no = int ( input ( '\u90e8\u95e8\u7f16\u53f7: ' )) name = input ( '\u90e8\u95e8\u540d\u79f0: ' ) location = input ( '\u90e8\u95e8\u6240\u5728\u5730: ' ) # 1. \u521b\u5efa\u8fde\u63a5\uff08Connection\uff09 conn = pymysql . connect ( host = '127.0.0.1' , port = 3306 , user = 'guest' , password = 'Guest.618' , database = 'hrs' , charset = 'utf8mb4' ) try : # 2. \u83b7\u53d6\u6e38\u6807\u5bf9\u8c61\uff08Cursor\uff09 with conn . cursor () as cursor : # 3. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u5411\u6570\u636e\u5e93\u670d\u52a1\u5668\u53d1\u51faSQL\u8bed\u53e5 affected_rows = cursor . execute ( 'update `tb_dept` set `dname`= %s , `dloc`= %s where `dno`= %s ' , ( name , location , no ) ) if affected_rows == 1 : print ( '\u66f4\u65b0\u90e8\u95e8\u4fe1\u606f\u6210\u529f!!!' ) # 4. \u63d0\u4ea4\u4e8b\u52a1 conn . commit () except pymysql . MySQLError as err : # 4. \u56de\u6eda\u4e8b\u52a1 conn . rollback () print ( type ( err ), err ) finally : # 5. \u5173\u95ed\u8fde\u63a5\u91ca\u653e\u8d44\u6e90 conn . close () \u67e5\u8be2\u6570\u636e \u67e5\u8be2\u90e8\u95e8\u8868\u7684\u6570\u636e\u3002 import pymysql # 1. \u521b\u5efa\u8fde\u63a5\uff08Connection\uff09 conn = pymysql . connect ( host = '127.0.0.1' , port = 3306 , user = 'guest' , password = 'Guest.618' , database = 'hrs' , charset = 'utf8mb4' ) try : # 2. \u83b7\u53d6\u6e38\u6807\u5bf9\u8c61\uff08Cursor\uff09 with conn . cursor () as cursor : # 3. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u5411\u6570\u636e\u5e93\u670d\u52a1\u5668\u53d1\u51faSQL\u8bed\u53e5 cursor . execute ( 'select `dno`, `dname`, `dloc` from `tb_dept`' ) # 4. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u6293\u53d6\u6570\u636e row = cursor . fetchone () while row : print ( row ) row = cursor . fetchone () except pymysql . MySQLError as err : print ( type ( err ), err ) finally : # 5. \u5173\u95ed\u8fde\u63a5\u91ca\u653e\u8d44\u6e90 conn . close () \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u6784\u9020\u4e00\u4e2a while \u5faa\u73af\u5b9e\u73b0\u4e86\u9010\u884c\u6293\u53d6\u67e5\u8be2\u7ed3\u679c\u7684\u64cd\u4f5c\u3002\u8fd9\u79cd\u65b9\u5f0f\u7279\u522b\u9002\u5408\u67e5\u8be2\u7ed3\u679c\u6709\u975e\u5e38\u591a\u884c\u7684\u573a\u666f\u3002\u56e0\u4e3a\u5982\u679c\u4f7f\u7528 fetchall \u4e00\u6b21\u6027\u5c06\u6240\u6709\u8bb0\u5f55\u6293\u53d6\u5230\u4e00\u4e2a\u5d4c\u5957\u5143\u7ec4\u4e2d\uff0c\u4f1a\u9020\u6210\u975e\u5e38\u5927\u7684\u5185\u5b58\u5f00\u9500\uff0c\u8fd9\u5728\u5f88\u591a\u573a\u666f\u4e0b\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\u5982\u679c\u4e0d\u613f\u610f\u4f7f\u7528 while \u5faa\u73af\uff0c\u8fd8\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 iter \u51fd\u6570\u6784\u9020\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u9010\u884c\u6293\u53d6\u6570\u636e\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002 \u5206\u9875\u67e5\u8be2\u5458\u5de5\u8868\u7684\u6570\u636e\u3002 import pymysql page = int ( input ( '\u9875\u7801: ' )) size = int ( input ( '\u5927\u5c0f: ' )) # 1. \u521b\u5efa\u8fde\u63a5\uff08Connection\uff09 con = pymysql . connect ( host = '127.0.0.1' , port = 3306 , user = 'guest' , password = 'Guest.618' , database = 'hrs' , charset = 'utf8' ) try : # 2. \u83b7\u53d6\u6e38\u6807\u5bf9\u8c61\uff08Cursor\uff09 with con . cursor ( pymysql . cursors . DictCursor ) as cursor : # 3. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u5411\u6570\u636e\u5e93\u670d\u52a1\u5668\u53d1\u51faSQL\u8bed\u53e5 cursor . execute ( 'select `eno`, `ename`, `job`, `sal` from `tb_emp` order by `sal` desc limit %s , %s ' , (( page - 1 ) * size , size ) ) # 4. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u6293\u53d6\u6570\u636e for emp_dict in cursor . fetchall (): print ( emp_dict ) finally : # 5. \u5173\u95ed\u8fde\u63a5\u91ca\u653e\u8d44\u6e90 con . close () \u6848\u4f8b\u8bb2\u89e3 \u4e0b\u9762\u6211\u4eec\u4e3a\u5927\u5bb6\u8bb2\u89e3\u4e00\u4e2a\u5c06\u6570\u636e\u5e93\u8868\u6570\u636e\u5bfc\u51fa\u5230 Excel \u6587\u4ef6\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u9700\u8981\u5148\u5b89\u88c5 openpyxl \u4e09\u65b9\u5e93\uff0c\u547d\u4ee4\u5982\u4e0b\u6240\u793a\u3002 pip install openpyxl \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u5c06\u6570\u636e\u5e93 hrs \u4e2d\u6240\u6709\u5458\u5de5\u7684\u7f16\u53f7\u3001\u59d3\u540d\u3001\u804c\u4f4d\u3001\u6708\u85aa\u3001\u8865\u8d34\u548c\u90e8\u95e8\u540d\u79f0\u5bfc\u51fa\u5230\u4e00\u4e2a Excel \u6587\u4ef6\u4e2d\u3002 import openpyxl import pymysql # \u521b\u5efa\u5de5\u4f5c\u7c3f\u5bf9\u8c61 workbook = openpyxl . Workbook () # \u83b7\u5f97\u9ed8\u8ba4\u7684\u5de5\u4f5c\u8868 sheet = workbook . active # \u4fee\u6539\u5de5\u4f5c\u8868\u7684\u6807\u9898 sheet . title = '\u5458\u5de5\u57fa\u672c\u4fe1\u606f' # \u7ed9\u5de5\u4f5c\u8868\u6dfb\u52a0\u8868\u5934 sheet . append (( '\u5de5\u53f7' , '\u59d3\u540d' , '\u804c\u4f4d' , '\u6708\u85aa' , '\u8865\u8d34' , '\u90e8\u95e8' )) # \u521b\u5efa\u8fde\u63a5\uff08Connection\uff09 conn = pymysql . connect ( host = '127.0.0.1' , port = 3306 , user = 'guest' , password = 'Guest.618' , database = 'hrs' , charset = 'utf8mb4' ) try : # \u83b7\u53d6\u6e38\u6807\u5bf9\u8c61\uff08Cursor\uff09 with conn . cursor () as cursor : # \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u6267\u884cSQL\u8bed\u53e5 cursor . execute ( 'select `eno`, `ename`, `job`, `sal`, coalesce(`comm`, 0), `dname` ' 'from `tb_emp` natural join `tb_dept`' ) # \u901a\u8fc7\u6e38\u6807\u6293\u53d6\u6570\u636e row = cursor . fetchone () while row : # \u5c06\u6570\u636e\u9010\u884c\u5199\u5165\u5de5\u4f5c\u8868\u4e2d sheet . append ( row ) row = cursor . fetchone () # \u4fdd\u5b58\u5de5\u4f5c\u7c3f workbook . save ( 'hrs.xlsx' ) except pymysql . MySQLError as err : print ( err ) finally : # \u5173\u95ed\u8fde\u63a5\u91ca\u653e\u8d44\u6e90 conn . close () \u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u8bd5\u4e00\u8bd5\u628a Excel \u6587\u4ef6\u7684\u6570\u636e\u5bfc\u5165\u5230\u6307\u5b9a\u6570\u636e\u5e93\u7684\u6307\u5b9a\u8868\u4e2d\uff0c\u770b\u770b\u662f\u5426\u53ef\u4ee5\u6210\u529f\u3002","title":"\u7b2c48\u8bfe.Python\u7a0b\u5e8f\u63a5\u5165MySQL\u6570\u636e\u5e93"},{"location":"%E7%AC%AC48%E8%AF%BE.Python%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#pythonmysql","text":"\u5728 Python3 \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 mysqlclient \u6216\u8005 pymysql \u4e09\u65b9\u5e93\u6765\u63a5\u5165 MySQL \u6570\u636e\u5e93\u5e76\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u64cd\u4f5c\u3002\u4e8c\u8005\u7684\u7528\u6cd5\u5b8c\u5168\u76f8\u540c\uff0c\u53ea\u662f\u5bfc\u5165\u7684\u6a21\u5757\u540d\u4e0d\u4e00\u6837\u3002\u6211\u4eec\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u7eaf Python \u7684\u4e09\u65b9\u5e93 pymysql \uff0c\u56e0\u4e3a\u5b83\u66f4\u5bb9\u6613\u5b89\u88c5\u6210\u529f\u3002\u4e0b\u9762\u6211\u4eec\u4ecd\u7136\u4ee5\u4e4b\u524d\u521b\u5efa\u7684\u540d\u4e3a hrs \u7684\u6570\u636e\u5e93\u4e3a\u4f8b\uff0c\u4e3a\u5927\u5bb6\u6f14\u793a\u5982\u4f55\u901a\u8fc7 Python \u7a0b\u5e8f\u64cd\u4f5c MySQL \u6570\u636e\u5e93\u5b9e\u73b0\u6570\u636e\u6301\u4e45\u5316\u64cd\u4f5c\u3002","title":"Python\u7a0b\u5e8f\u63a5\u5165MySQL\u6570\u636e\u5e93"},{"location":"%E7%AC%AC48%E8%AF%BE.Python%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysql","text":"\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u6216\u8005 PyCharm \u7684\u7ec8\u7aef\u4e2d\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u5b89\u88c5 pymysql \uff0c\u5982\u679c\u9700\u8981\u63a5\u5165 MySQL 8\uff0c\u8fd8\u9700\u8981\u5b89\u88c5\u4e00\u4e2a\u540d\u4e3a cryptography \u7684\u4e09\u65b9\u5e93\u6765\u652f\u6301 MySQL 8 \u7684\u5bc6\u7801\u8ba4\u8bc1\u65b9\u5f0f\u3002 pip install pymysql cryptography \u4f7f\u7528 pymysql \u64cd\u4f5c MySQL \u7684\u6b65\u9aa4\u5982\u4e0b\u6240\u793a\uff1a \u521b\u5efa\u8fde\u63a5\u3002MySQL \u670d\u52a1\u5668\u542f\u52a8\u540e\uff0c\u63d0\u4f9b\u4e86\u57fa\u4e8e TCP \uff08\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff09\u7684\u7f51\u7edc\u670d\u52a1\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 pymysql \u6a21\u5757\u7684 connect \u51fd\u6570\u8fde\u63a5 MySQL \u670d\u52a1\u5668\u3002\u5728\u8c03\u7528 connect \u51fd\u6570\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u4e3b\u673a\uff08 host \uff09\u3001\u7aef\u53e3\uff08 port \uff09\u3001\u7528\u6237\u540d\uff08 user \uff09\u3001\u53e3\u4ee4\uff08 password \uff09\u3001\u6570\u636e\u5e93\uff08 database \uff09\u3001\u5b57\u7b26\u96c6\uff08 charset \uff09\u7b49\u53c2\u6570\uff0c\u8be5\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a Connection \u5bf9\u8c61\u3002 \u83b7\u53d6\u6e38\u6807\u3002\u8fde\u63a5 MySQL \u670d\u52a1\u5668\u6210\u529f\u540e\uff0c\u63a5\u4e0b\u6765\u8981\u505a\u7684\u5c31\u662f\u5411\u6570\u636e\u5e93\u670d\u52a1\u5668\u53d1\u9001 SQL \u8bed\u53e5\uff0cMySQL \u4f1a\u6267\u884c\u63a5\u6536\u5230\u7684 SQL \u5e76\u5c06\u6267\u884c\u7ed3\u679c\u901a\u8fc7\u7f51\u7edc\u8fd4\u56de\u3002\u8981\u5b9e\u73b0\u8fd9\u9879\u64cd\u4f5c\uff0c\u9700\u8981\u5148\u901a\u8fc7\u8fde\u63a5\u5bf9\u8c61\u7684 cursor \u65b9\u6cd5\u83b7\u53d6\u6e38\u6807\uff08 Cursor \uff09\u5bf9\u8c61\u3002 \u53d1\u51fa SQL\u3002\u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u7684 execute \u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5411\u6570\u636e\u5e93\u53d1\u51fa SQL \u8bed\u53e5\u3002 \u5982\u679c\u6267\u884c insert \u3001 delete \u6216 update \u64cd\u4f5c\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u63d0\u4ea4\u6216\u56de\u6eda\u4e8b\u52a1\u3002\u56e0\u4e3a\u521b\u5efa\u8fde\u63a5\u65f6\uff0c\u9ed8\u8ba4\u5f00\u542f\u4e86\u4e8b\u52a1\u73af\u5883\uff0c\u5728\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u9700\u8981\u4f7f\u7528\u8fde\u63a5\u5bf9\u8c61\u7684 commit \u6216 rollback \u65b9\u6cd5\uff0c\u5b9e\u73b0\u4e8b\u52a1\u7684\u63d0\u4ea4\u6216\u56de\u6eda\uff0c rollback \u65b9\u6cd5\u901a\u5e38\u4f1a\u653e\u5728\u5f02\u5e38\u6355\u83b7\u4ee3\u7801\u5757 except \u4e2d\u3002\u5982\u679c\u6267\u884c select \u64cd\u4f5c\uff0c\u9700\u8981\u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u6293\u53d6\u67e5\u8be2\u7684\u7ed3\u679c\uff0c\u5bf9\u5e94\u7684\u65b9\u6cd5\u6709\u4e09\u4e2a\uff0c\u5206\u522b\u662f\uff1a fetchone \u3001 fetchmany \u548c fetchall \u3002\u5176\u4e2d fetchone \u65b9\u6cd5\u4f1a\u6293\u53d6\u5230\u4e00\u6761\u8bb0\u5f55\uff0c\u5e76\u4ee5\u5143\u7ec4\u6216\u5b57\u5178\u7684\u65b9\u5f0f\u8fd4\u56de\uff1b fetchmany \u548c fetchall \u65b9\u6cd5\u4f1a\u6293\u53d6\u5230\u591a\u6761\u8bb0\u5f55\uff0c\u4ee5\u5d4c\u5957\u5143\u7ec4\u6216\u5217\u8868\u88c5\u5b57\u5178\u7684\u65b9\u5f0f\u8fd4\u56de\u3002 \u5173\u95ed\u8fde\u63a5\u3002\u5728\u5b8c\u6210\u6301\u4e45\u5316\u64cd\u4f5c\u540e\uff0c\u8bf7\u4e0d\u8981\u5fd8\u8bb0\u5173\u95ed\u8fde\u63a5\uff0c\u91ca\u653e\u5916\u90e8\u8d44\u6e90\u3002\u6211\u4eec\u901a\u5e38\u4f1a\u5728 finally \u4ee3\u7801\u5757\u4e2d\u4f7f\u7528\u8fde\u63a5\u5bf9\u8c61\u7684 close \u65b9\u6cd5\u6765\u5173\u95ed\u8fde\u63a5\u3002","title":"\u63a5\u5165MySQL"},{"location":"%E7%AC%AC48%E8%AF%BE.Python%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_1","text":"\u4e0b\u9762\uff0c\u6211\u4eec\u901a\u8fc7\u4ee3\u7801\u5b9e\u64cd\u7684\u65b9\u5f0f\u4e3a\u5927\u5bb6\u6f14\u793a\u4e0a\u9762\u8bf4\u7684\u4e94\u4e2a\u6b65\u9aa4\u3002","title":"\u4ee3\u7801\u5b9e\u64cd"},{"location":"%E7%AC%AC48%E8%AF%BE.Python%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_2","text":"import pymysql no = int ( input ( '\u90e8\u95e8\u7f16\u53f7: ' )) name = input ( '\u90e8\u95e8\u540d\u79f0: ' ) location = input ( '\u90e8\u95e8\u6240\u5728\u5730: ' ) # 1. \u521b\u5efa\u8fde\u63a5\uff08Connection\uff09 conn = pymysql . connect ( host = '127.0.0.1' , port = 3306 , user = 'guest' , password = 'Guest.618' , database = 'hrs' , charset = 'utf8mb4' ) try : # 2. \u83b7\u53d6\u6e38\u6807\u5bf9\u8c61\uff08Cursor\uff09 with conn . cursor () as cursor : # 3. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u5411\u6570\u636e\u5e93\u670d\u52a1\u5668\u53d1\u51faSQL\u8bed\u53e5 affected_rows = cursor . execute ( 'insert into `tb_dept` values ( %s , %s , %s )' , ( no , name , location ) ) if affected_rows == 1 : print ( '\u65b0\u589e\u90e8\u95e8\u6210\u529f!!!' ) # 4. \u63d0\u4ea4\u4e8b\u52a1\uff08transaction\uff09 conn . commit () except pymysql . MySQLError as err : # 4. \u56de\u6eda\u4e8b\u52a1 conn . rollback () print ( type ( err ), err ) finally : # 5. \u5173\u95ed\u8fde\u63a5\u91ca\u653e\u8d44\u6e90 conn . close () \u8bf4\u660e \uff1a\u4e0a\u9762\u7684 127.0.0.1 \u79f0\u4e3a\u56de\u73af\u5730\u5740\uff0c\u5b83\u4ee3\u8868\u7684\u662f\u672c\u673a\u3002\u4e0b\u9762\u7684 guest \u662f\u6211\u63d0\u524d\u521b\u5efa\u597d\u7684\u7528\u6237\uff0c\u8be5\u7528\u6237\u62e5\u6709\u5bf9 hrs \u6570\u636e\u5e93\u7684 insert \u3001 delete \u3001 update \u548c select \u6743\u9650\u3002\u6211\u4eec\u4e0d\u5efa\u8bae\u5927\u5bb6\u5728\u9879\u76ee\u4e2d\u76f4\u63a5\u4f7f\u7528 root \u8d85\u7ea7\u7ba1\u7406\u5458\u8d26\u53f7\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u8fd9\u6837\u505a\u5b9e\u5728\u662f\u592a\u5371\u9669\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u521b\u5efa\u540d\u4e3a guest \u7684\u7528\u6237\u5e76\u4e3a\u5176\u6388\u6743\u3002 create user 'guest' @ '%' identified by 'Guest.618' ; grant insert , delete , update , select on ` hrs ` . * to 'guest' @ '%' ; \u5982\u679c\u8981\u63d2\u5165\u5927\u91cf\u6570\u636e\uff0c\u5efa\u8bae\u4f7f\u7528\u6e38\u6807\u5bf9\u8c61\u7684 executemany \u65b9\u6cd5\u505a\u6279\u5904\u7406\uff08\u4e00\u4e2a insert \u64cd\u4f5c\u540e\u9762\u8ddf\u4e0a\u591a\u7ec4\u6570\u636e\uff09\uff0c\u5927\u5bb6\u53ef\u4ee5\u5c1d\u8bd5\u5411\u4e00\u5f20\u8868\u63d2\u516510000\u6761\u8bb0\u5f55\uff0c\u7136\u540e\u770b\u770b\u4e0d\u4f7f\u7528\u6279\u5904\u7406\u4e00\u6761\u6761\u7684\u63d2\u5165\u548c\u4f7f\u7528\u6279\u5904\u7406\u6709\u4ec0\u4e48\u5dee\u522b\u3002\u6e38\u6807\u5bf9\u8c61\u7684 executemany \u65b9\u6cd5\u7b2c\u4e00\u4e2a\u53c2\u6570\u4ecd\u7136\u662f SQL \u8bed\u53e5\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ef\u4ee5\u662f\u5305\u542b\u591a\u7ec4\u6570\u636e\u7684\u5217\u8868\u6216\u5143\u7ec4\u3002","title":"\u63d2\u5165\u6570\u636e"},{"location":"%E7%AC%AC48%E8%AF%BE.Python%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_3","text":"import pymysql no = int ( input ( '\u90e8\u95e8\u7f16\u53f7: ' )) # 1. \u521b\u5efa\u8fde\u63a5\uff08Connection\uff09 conn = pymysql . connect ( host = '127.0.0.1' , port = 3306 , user = 'guest' , password = 'Guest.618' , database = 'hrs' , charset = 'utf8mb4' , autocommit = True ) try : # 2. \u83b7\u53d6\u6e38\u6807\u5bf9\u8c61\uff08Cursor\uff09 with conn . cursor () as cursor : # 3. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u5411\u6570\u636e\u5e93\u670d\u52a1\u5668\u53d1\u51faSQL\u8bed\u53e5 affected_rows = cursor . execute ( 'delete from `tb_dept` where `dno`= %s ' , ( no , ) ) if affected_rows == 1 : print ( '\u5220\u9664\u90e8\u95e8\u6210\u529f!!!' ) finally : # 5. \u5173\u95ed\u8fde\u63a5\u91ca\u653e\u8d44\u6e90 conn . close () \u8bf4\u660e \uff1a\u5982\u679c\u4e0d\u5e0c\u671b\u6bcf\u6b21 SQL \u64cd\u4f5c\u4e4b\u540e\u624b\u52a8\u63d0\u4ea4\u6216\u56de\u6eda\u4e8b\u52a1\uff0c\u53ef\u4ee5 connect \u51fd\u6570\u4e2d\u52a0\u4e00\u4e2a\u540d\u4e3a autocommit \u7684\u53c2\u6570\u5e76\u5c06\u5b83\u7684\u503c\u8bbe\u7f6e\u4e3a True \uff0c\u8868\u793a\u6bcf\u6b21\u6267\u884c SQL \u6210\u529f\u540e\u81ea\u52a8\u63d0\u4ea4\u3002\u4f46\u662f\u6211\u4eec\u5efa\u8bae\u5927\u5bb6\u624b\u52a8\u63d0\u4ea4\u6216\u56de\u6eda\uff0c\u8fd9\u6837\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u4e1a\u52a1\u9700\u8981\u6765\u6784\u9020\u4e8b\u52a1\u73af\u5883\u3002\u5982\u679c\u4e0d\u613f\u610f\u6355\u83b7\u5f02\u5e38\u5e76\u8fdb\u884c\u5904\u7406\uff0c\u53ef\u4ee5\u5728 try \u4ee3\u7801\u5757\u540e\u76f4\u63a5\u8ddf finally \u5757\uff0c\u7701\u7565 except \u610f\u5473\u7740\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u4ee3\u7801\u4f1a\u76f4\u63a5\u5d29\u6e83\u5e76\u5c06\u5f02\u5e38\u6808\u663e\u793a\u5728\u7ec8\u7aef\u4e2d\u3002","title":"\u5220\u9664\u6570\u636e"},{"location":"%E7%AC%AC48%E8%AF%BE.Python%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_4","text":"import pymysql no = int ( input ( '\u90e8\u95e8\u7f16\u53f7: ' )) name = input ( '\u90e8\u95e8\u540d\u79f0: ' ) location = input ( '\u90e8\u95e8\u6240\u5728\u5730: ' ) # 1. \u521b\u5efa\u8fde\u63a5\uff08Connection\uff09 conn = pymysql . connect ( host = '127.0.0.1' , port = 3306 , user = 'guest' , password = 'Guest.618' , database = 'hrs' , charset = 'utf8mb4' ) try : # 2. \u83b7\u53d6\u6e38\u6807\u5bf9\u8c61\uff08Cursor\uff09 with conn . cursor () as cursor : # 3. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u5411\u6570\u636e\u5e93\u670d\u52a1\u5668\u53d1\u51faSQL\u8bed\u53e5 affected_rows = cursor . execute ( 'update `tb_dept` set `dname`= %s , `dloc`= %s where `dno`= %s ' , ( name , location , no ) ) if affected_rows == 1 : print ( '\u66f4\u65b0\u90e8\u95e8\u4fe1\u606f\u6210\u529f!!!' ) # 4. \u63d0\u4ea4\u4e8b\u52a1 conn . commit () except pymysql . MySQLError as err : # 4. \u56de\u6eda\u4e8b\u52a1 conn . rollback () print ( type ( err ), err ) finally : # 5. \u5173\u95ed\u8fde\u63a5\u91ca\u653e\u8d44\u6e90 conn . close ()","title":"\u66f4\u65b0\u6570\u636e"},{"location":"%E7%AC%AC48%E8%AF%BE.Python%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_5","text":"\u67e5\u8be2\u90e8\u95e8\u8868\u7684\u6570\u636e\u3002 import pymysql # 1. \u521b\u5efa\u8fde\u63a5\uff08Connection\uff09 conn = pymysql . connect ( host = '127.0.0.1' , port = 3306 , user = 'guest' , password = 'Guest.618' , database = 'hrs' , charset = 'utf8mb4' ) try : # 2. \u83b7\u53d6\u6e38\u6807\u5bf9\u8c61\uff08Cursor\uff09 with conn . cursor () as cursor : # 3. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u5411\u6570\u636e\u5e93\u670d\u52a1\u5668\u53d1\u51faSQL\u8bed\u53e5 cursor . execute ( 'select `dno`, `dname`, `dloc` from `tb_dept`' ) # 4. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u6293\u53d6\u6570\u636e row = cursor . fetchone () while row : print ( row ) row = cursor . fetchone () except pymysql . MySQLError as err : print ( type ( err ), err ) finally : # 5. \u5173\u95ed\u8fde\u63a5\u91ca\u653e\u8d44\u6e90 conn . close () \u8bf4\u660e \uff1a\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u6784\u9020\u4e00\u4e2a while \u5faa\u73af\u5b9e\u73b0\u4e86\u9010\u884c\u6293\u53d6\u67e5\u8be2\u7ed3\u679c\u7684\u64cd\u4f5c\u3002\u8fd9\u79cd\u65b9\u5f0f\u7279\u522b\u9002\u5408\u67e5\u8be2\u7ed3\u679c\u6709\u975e\u5e38\u591a\u884c\u7684\u573a\u666f\u3002\u56e0\u4e3a\u5982\u679c\u4f7f\u7528 fetchall \u4e00\u6b21\u6027\u5c06\u6240\u6709\u8bb0\u5f55\u6293\u53d6\u5230\u4e00\u4e2a\u5d4c\u5957\u5143\u7ec4\u4e2d\uff0c\u4f1a\u9020\u6210\u975e\u5e38\u5927\u7684\u5185\u5b58\u5f00\u9500\uff0c\u8fd9\u5728\u5f88\u591a\u573a\u666f\u4e0b\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\u5982\u679c\u4e0d\u613f\u610f\u4f7f\u7528 while \u5faa\u73af\uff0c\u8fd8\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 iter \u51fd\u6570\u6784\u9020\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u9010\u884c\u6293\u53d6\u6570\u636e\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u7814\u7a76\u3002 \u5206\u9875\u67e5\u8be2\u5458\u5de5\u8868\u7684\u6570\u636e\u3002 import pymysql page = int ( input ( '\u9875\u7801: ' )) size = int ( input ( '\u5927\u5c0f: ' )) # 1. \u521b\u5efa\u8fde\u63a5\uff08Connection\uff09 con = pymysql . connect ( host = '127.0.0.1' , port = 3306 , user = 'guest' , password = 'Guest.618' , database = 'hrs' , charset = 'utf8' ) try : # 2. \u83b7\u53d6\u6e38\u6807\u5bf9\u8c61\uff08Cursor\uff09 with con . cursor ( pymysql . cursors . DictCursor ) as cursor : # 3. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u5411\u6570\u636e\u5e93\u670d\u52a1\u5668\u53d1\u51faSQL\u8bed\u53e5 cursor . execute ( 'select `eno`, `ename`, `job`, `sal` from `tb_emp` order by `sal` desc limit %s , %s ' , (( page - 1 ) * size , size ) ) # 4. \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u6293\u53d6\u6570\u636e for emp_dict in cursor . fetchall (): print ( emp_dict ) finally : # 5. \u5173\u95ed\u8fde\u63a5\u91ca\u653e\u8d44\u6e90 con . close ()","title":"\u67e5\u8be2\u6570\u636e"},{"location":"%E7%AC%AC48%E8%AF%BE.Python%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_6","text":"\u4e0b\u9762\u6211\u4eec\u4e3a\u5927\u5bb6\u8bb2\u89e3\u4e00\u4e2a\u5c06\u6570\u636e\u5e93\u8868\u6570\u636e\u5bfc\u51fa\u5230 Excel \u6587\u4ef6\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u9700\u8981\u5148\u5b89\u88c5 openpyxl \u4e09\u65b9\u5e93\uff0c\u547d\u4ee4\u5982\u4e0b\u6240\u793a\u3002 pip install openpyxl \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u5c06\u6570\u636e\u5e93 hrs \u4e2d\u6240\u6709\u5458\u5de5\u7684\u7f16\u53f7\u3001\u59d3\u540d\u3001\u804c\u4f4d\u3001\u6708\u85aa\u3001\u8865\u8d34\u548c\u90e8\u95e8\u540d\u79f0\u5bfc\u51fa\u5230\u4e00\u4e2a Excel \u6587\u4ef6\u4e2d\u3002 import openpyxl import pymysql # \u521b\u5efa\u5de5\u4f5c\u7c3f\u5bf9\u8c61 workbook = openpyxl . Workbook () # \u83b7\u5f97\u9ed8\u8ba4\u7684\u5de5\u4f5c\u8868 sheet = workbook . active # \u4fee\u6539\u5de5\u4f5c\u8868\u7684\u6807\u9898 sheet . title = '\u5458\u5de5\u57fa\u672c\u4fe1\u606f' # \u7ed9\u5de5\u4f5c\u8868\u6dfb\u52a0\u8868\u5934 sheet . append (( '\u5de5\u53f7' , '\u59d3\u540d' , '\u804c\u4f4d' , '\u6708\u85aa' , '\u8865\u8d34' , '\u90e8\u95e8' )) # \u521b\u5efa\u8fde\u63a5\uff08Connection\uff09 conn = pymysql . connect ( host = '127.0.0.1' , port = 3306 , user = 'guest' , password = 'Guest.618' , database = 'hrs' , charset = 'utf8mb4' ) try : # \u83b7\u53d6\u6e38\u6807\u5bf9\u8c61\uff08Cursor\uff09 with conn . cursor () as cursor : # \u901a\u8fc7\u6e38\u6807\u5bf9\u8c61\u6267\u884cSQL\u8bed\u53e5 cursor . execute ( 'select `eno`, `ename`, `job`, `sal`, coalesce(`comm`, 0), `dname` ' 'from `tb_emp` natural join `tb_dept`' ) # \u901a\u8fc7\u6e38\u6807\u6293\u53d6\u6570\u636e row = cursor . fetchone () while row : # \u5c06\u6570\u636e\u9010\u884c\u5199\u5165\u5de5\u4f5c\u8868\u4e2d sheet . append ( row ) row = cursor . fetchone () # \u4fdd\u5b58\u5de5\u4f5c\u7c3f workbook . save ( 'hrs.xlsx' ) except pymysql . MySQLError as err : print ( err ) finally : # \u5173\u95ed\u8fde\u63a5\u91ca\u653e\u8d44\u6e90 conn . close () \u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u8bd5\u4e00\u8bd5\u628a Excel \u6587\u4ef6\u7684\u6570\u636e\u5bfc\u5165\u5230\u6307\u5b9a\u6570\u636e\u5e93\u7684\u6307\u5b9a\u8868\u4e2d\uff0c\u770b\u770b\u662f\u5426\u53ef\u4ee5\u6210\u529f\u3002","title":"\u6848\u4f8b\u8bb2\u89e3"}]}